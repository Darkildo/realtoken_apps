// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.4.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is the priority the
//    library should be loaded with as specified in the code via the
//    load-priority annotation (0: normal, 1: high).
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is the
//    priority the library should be loaded with as specified in the code via
//    the load-priority annotation (0: normal, 1: high).
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")));
    },
    JSArray_markFixedList(list) {
      list.fixed$length = Array;
      return list;
    },
    JSArray_markUnmodifiableList(list) {
      list.fixed$length = Array;
      list.immutable$list = Array;
      return list;
    },
    JSArray__compareAny(a, b) {
      return J.compareTo$1$ns(a, b);
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$ns(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$x(receiver) {
      if (receiver == null)
        return receiver;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$z(receiver) {
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$add$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$add(receiver);
    },
    get$current$z(receiver) {
      return J.getInterceptor$z(receiver).get$current(receiver);
    },
    get$elementSizeInBytes$x(receiver) {
      return J.getInterceptor$x(receiver).get$elementSizeInBytes(receiver);
    },
    get$entries$x(receiver) {
      return J.getInterceptor$x(receiver).get$entries(receiver);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$keys$x(receiver) {
      return J.getInterceptor$x(receiver).get$keys(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    get$single$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$single(receiver);
    },
    get$stream$z(receiver) {
      return J.getInterceptor$z(receiver).get$stream(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((Array.isArray(receiver) || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    allMatches$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
    },
    allMatches$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).allMatches$2(receiver, a0, a1);
    },
    cast$1$0$ax(receiver, $T1) {
      return J.getInterceptor$ax(receiver).cast$1$0(receiver, $T1);
    },
    cast$2$0$ax(receiver, $T1, $T2) {
      return J.getInterceptor$ax(receiver).cast$2$0(receiver, $T1, $T2);
    },
    close$0$x(receiver) {
      return J.getInterceptor$x(receiver).close$0(receiver);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    compareTo$1$ns(receiver, a0) {
      return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
    },
    complete$0$z(receiver) {
      return J.getInterceptor$z(receiver).complete$0(receiver);
    },
    contains$1$asx(receiver, a0) {
      return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
    },
    containsKey$1$x(receiver, a0) {
      return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    finish$0$z(receiver) {
      return J.getInterceptor$z(receiver).finish$0(receiver);
    },
    forEach$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
    },
    getRange$2$ax(receiver, a0, a1) {
      return J.getInterceptor$ax(receiver).getRange$2(receiver, a0, a1);
    },
    initialize$0$z(receiver) {
      return J.getInterceptor$z(receiver).initialize$0(receiver);
    },
    join$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).join$0(receiver);
    },
    join$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).join$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    matchAsPrefix$2$s(receiver, a0, a1) {
      return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
    },
    putIfAbsent$2$x(receiver, a0, a1) {
      return J.getInterceptor$x(receiver).putIfAbsent$2(receiver, a0, a1);
    },
    remove$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
    },
    removeLast$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).removeLast$0(receiver);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    sort$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).sort$1(receiver, a0);
    },
    split$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toList$0$ax(receiver) {
      return J.getInterceptor$ax(receiver).toList$0(receiver);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    trimLeft$0$s(receiver) {
      return J.getInterceptor$s(receiver).trimLeft$0(receiver);
    },
    where$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).where$1(receiver, a0);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _.__interceptors$_length = t1;
      _._index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {
    isChrome110OrOlder() {
      var chromeRegexp, match,
        t1 = $._cachedIsChrome110OrOlder;
      if (t1 != null)
        return t1;
      chromeRegexp = A.RegExp_RegExp("Chrom(e|ium)\\/([0-9]+)\\.", true, false);
      t1 = $.$get$browser().get$_userAgent();
      match = chromeRegexp.firstMatch$1(t1);
      if (match != null) {
        t1 = match._match[2];
        t1.toString;
        return $._cachedIsChrome110OrOlder = A.int_parse(t1, null) <= 110;
      }
      return $._cachedIsChrome110OrOlder = false;
    },
    _detectWebGLVersion() {
      var canvas = A.createDomCanvasElement(1, 1);
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl2", null) != null) {
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0)
          return 1;
        return 2;
      }
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl", null) != null)
        return 1;
      return -1;
    },
    browserSupportsCanvaskitChromium() {
      return self.Intl.v8BreakIterator != null && self.Intl.Segmenter != null;
    },
    canvasKit() {
      return $.__canvasKit._readField$0();
    },
    SkPaintExtension_setColorInt(_this, color) {
      return _this.setColorInt(color);
    },
    mallocFloat32List($length) {
      return type$.JavaScriptObject._as(self.window.flutterCanvasKit.Malloc(self.Float32Array, $length));
    },
    _populateSkColor(skColor, color) {
      var t1 = skColor.toTypedArray(),
        t2 = color.value;
      t1[0] = (t2 >>> 16 & 255) / 255;
      t1[1] = (t2 >>> 8 & 255) / 255;
      t1[2] = (t2 & 255) / 255;
      t1[3] = (t2 >>> 24 & 255) / 255;
      return t1;
    },
    toSkRect(rect) {
      var skRect = new Float32Array(4);
      skRect[0] = rect.left;
      skRect[1] = rect.top;
      skRect[2] = rect.right;
      skRect[3] = rect.bottom;
      return skRect;
    },
    fromSkRect(skRect) {
      return new A.Rect(skRect[0], skRect[1], skRect[2], skRect[3]);
    },
    SkParagraphBuilderNamespaceExtension_RequiresClientICU(_this) {
      if (!("RequiresClientICU" in _this))
        return false;
      return A._asBool(_this.RequiresClientICU());
    },
    SkTextStylePropertiesExtension_set_fontSize(_this, value) {
      _this.fontSize = value;
      return value;
    },
    SkTextStylePropertiesExtension_set_heightMultiplier(_this, value) {
      _this.heightMultiplier = value;
      return value;
    },
    SkTextStylePropertiesExtension_set_halfLeading(_this, value) {
      _this.halfLeading = value;
      return value;
    },
    SkTextStylePropertiesExtension_set_fontFamilies(_this, value) {
      var t1 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(value);
      _this.fontFamilies = t1;
      return t1;
    },
    SkStrutStylePropertiesExtension_set_halfLeading(_this, value) {
      _this.halfLeading = value;
      return value;
    },
    SkGlyphClusterInfoExtension_get__glyphInfo(_this) {
      var t2, t3,
        t1 = _this.graphemeLayoutBounds,
        list = B.JSArray_methods.cast$1$0(t1, type$.double);
      t1 = list._source;
      t2 = J.getInterceptor$asx(t1);
      t3 = list.$ti._rest[1];
      return new A.GlyphInfo(new A.Rect(t3._as(t2.$index(t1, 0)), t3._as(t2.$index(t1, 1)), t3._as(t2.$index(t1, 2)), t3._as(t2.$index(t1, 3))), new A.TextRange(B.JSNumber_methods.toInt$0(_this.graphemeClusterTextRange.start), B.JSNumber_methods.toInt$0(_this.graphemeClusterTextRange.end)), B.List_TextDirection_0_TextDirection_1[B.JSNumber_methods.toInt$0(_this.dir.value)]);
    },
    getCanvasKitJsFileNames(variant) {
      var t1,
        _s21_ = "chromium/canvaskit.js";
      switch (variant.index) {
        case 0:
          t1 = A._setArrayType([], type$.JSArray_String);
          if (A.browserSupportsCanvaskitChromium())
            t1.push(_s21_);
          t1.push("canvaskit.js");
          return t1;
        case 1:
          return A._setArrayType(["canvaskit.js"], type$.JSArray_String);
        case 2:
          return A._setArrayType([_s21_], type$.JSArray_String);
      }
    },
    _canvasKitJsUrls() {
      var variant,
        t1 = A.configuration()._configuration;
      if (t1 == null)
        variant = null;
      else {
        t1 = t1.canvasKitVariant;
        if (t1 == null)
          t1 = null;
        variant = t1;
      }
      t1 = A.getCanvasKitJsFileNames(A.EnumByName_byName(B.List_mfb, variant == null ? "auto" : variant));
      return new A.MappedListIterable(t1, new A._canvasKitJsUrls_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>"));
    },
    canvasKitWasmModuleUrl(file, canvasKitBase) {
      return canvasKitBase + file;
    },
    downloadCanvasKit() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, canvasKit, $async$temp1, $async$temp2;
      var $async$downloadCanvasKit = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JavaScriptObject;
              $async$temp1 = t1;
              $async$temp2 = A;
              $async$goto = 4;
              return A._asyncAwait(A._downloadOneOf(A._canvasKitJsUrls()), $async$downloadCanvasKit);
            case 4:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait($async$temp2.promiseToFuture($async$result.default(t1._as({locateFile: A._functionToJS2(A._engine__canvasKitWasmModuleUrl$closure())})), type$.Object), $async$downloadCanvasKit);
            case 3:
              // returning from await.
              canvasKit = $async$temp1._as($async$result);
              if (A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(canvasKit.ParagraphBuilder) && !A.browserSupportsCanvaskitChromium())
                throw A.wrapException(A.Exception_Exception("The CanvasKit variant you are using only works on Chromium browsers. Please use a different CanvasKit variant, or use a Chromium browser."));
              $async$returnValue = canvasKit;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$downloadCanvasKit, $async$completer);
    },
    _downloadOneOf(urls) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$handler = 2, $async$currentError, url, t1, t2, t3, exception, $async$exception;
      var $async$_downloadOneOf = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = urls.$ti, t2 = new A.ListIterator(urls, urls.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E");
            case 3:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              t3 = t2.__internal$_current;
              url = t3 == null ? t1._as(t3) : t3;
              $async$handler = 6;
              $async$goto = 9;
              return A._asyncAwait(A._downloadCanvasKitJs(url), $async$_downloadOneOf);
            case 9:
              // returning from await.
              t3 = $async$result;
              $async$returnValue = t3;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              // goto for condition
              $async$goto = 3;
              break;
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 8:
              // after finally
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              throw A.wrapException(A.Exception_Exception("Failed to download any of the following CanvasKit URLs: " + urls.toString$0(0)));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadOneOf, $async$completer);
    },
    _downloadCanvasKitJs(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, $async$temp1;
      var $async$_downloadCanvasKitJs = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = self.window.document.baseURI;
              if (t1 == null)
                t1 = null;
              t1 = t1 == null ? new self.URL(url) : new self.URL(url, t1);
              $async$temp1 = type$.JavaScriptObject;
              $async$goto = 3;
              return A._asyncAwait(A.promiseToFuture(import(A.createTrustedScriptUrl(t1.toString())), type$.JSObject), $async$_downloadCanvasKitJs);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadCanvasKitJs, $async$completer);
    },
    DisplayCanvasFactory$(createCanvas, $T) {
      var t1 = $T._eval$1("JSArray<0>");
      return new A.DisplayCanvasFactory(createCanvas, A._setArrayType([], t1), A._setArrayType([], t1), $T._eval$1("DisplayCanvasFactory<0>"));
    },
    RegisteredFont$(bytes, family, typeface) {
      var skFont = new self.window.flutterCanvasKit.Font(typeface),
        t1 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(A._setArrayType([0], type$.JSArray_int));
      skFont.getGlyphBounds(t1, null, null);
      return new A.RegisteredFont(family, bytes, typeface);
    },
    MultiSurfaceViewRasterizer$(view, rasterizer) {
      return new A.MultiSurfaceViewRasterizer(A.DisplayCanvasFactory$(new A.MultiSurfaceViewRasterizer_displayFactory_closure(), type$.Surface), view, new A.RenderQueue(), B.BitmapSize_0_0, new A.CompositorContext());
    },
    OffscreenCanvasViewRasterizer$(view, rasterizer) {
      return new A.OffscreenCanvasViewRasterizer(rasterizer, A.DisplayCanvasFactory$(new A.OffscreenCanvasViewRasterizer_displayFactory_closure(), type$.RenderCanvas), view, new A.RenderQueue(), B.BitmapSize_0_0, new A.CompositorContext());
    },
    computePlatformViewBounds(params) {
      var t1, t2, currentClipBounds, _i, mutator, t3, currentTransform0,
        currentTransform = A.Matrix4$identity();
      $label0$1:
        for (t1 = params.mutators._mutators, t2 = t1.length, currentClipBounds = B.Rect_tsf, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          mutator = t1[_i];
          switch (mutator.type.index) {
            case 0:
              t3 = mutator.rect;
              t3.toString;
              currentClipBounds = currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, t3));
              break;
            case 1:
              t3 = mutator.rrect;
              currentClipBounds = currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, new A.Rect(t3.left, t3.top, t3.right, t3.bottom)));
              break;
            case 2:
              t3 = mutator.path.__CkPath__ref_F;
              t3 === $ && A.throwUnnamedLateFieldNI();
              t3 = t3._nativeObject.getBounds();
              currentClipBounds.intersect$1(A.transformRectWithMatrix(currentTransform, new A.Rect(t3[0], t3[1], t3[2], t3[3])));
              break;
            case 3:
              t3 = mutator.matrix;
              t3.toString;
              currentTransform0 = new A.Matrix4(new Float32Array(16));
              currentTransform0.setFrom$1(currentTransform);
              currentTransform0.multiply$1(0, t3);
              currentTransform = currentTransform0;
              break;
            case 4:
              continue $label0$1;
          }
        }
      t1 = params.offset;
      t2 = t1._dx;
      t1 = t1._dy;
      t3 = params.size;
      return A.transformRectWithMatrix(currentTransform, new A.Rect(t2, t1, t2 + t3._dx, t1 + t3._dy)).intersect$1(currentClipBounds);
    },
    createOptimizedRendering(pictures, platformViews, paramsForViews) {
      var i, viewType, platformViewBounds, intersectsWithCurrentPictures, t5, _i, t6,
        t1 = A._setArrayType([], type$.JSArray_RenderingEntity),
        t2 = type$.JSArray_CkPicture,
        t3 = A._setArrayType([], t2),
        currentRenderCanvas = new A.RenderingRenderCanvas(t3),
        t4 = pictures[0].__CkPicture__ref_F;
      t4 === $ && A.throwUnnamedLateFieldNI();
      if (!A.fromSkRect(t4._nativeObject.cullRect()).get$isEmpty(0))
        t3.push(pictures[0]);
      for (i = 0; i < platformViews.length;) {
        t3 = platformViews[i];
        t4 = $.$get$PlatformViewManager_instance();
        viewType = t4._viewIdToType.$index(0, t3);
        if (!(viewType != null && t4._invisibleViews.contains$1(0, viewType))) {
          t4 = paramsForViews.$index(0, platformViews[i]);
          t4.toString;
          platformViewBounds = A.computePlatformViewBounds(t4);
          t4 = currentRenderCanvas.pictures;
          t5 = t4.length;
          _i = 0;
          while (true) {
            if (!(_i < t4.length)) {
              intersectsWithCurrentPictures = false;
              break;
            }
            t6 = t4[_i].__CkPicture__ref_F;
            t6 === $ && A.throwUnnamedLateFieldNI();
            t6 = t6._nativeObject.cullRect();
            if (new A.Rect(t6[0], t6[1], t6[2], t6[3]).overlaps$1(platformViewBounds)) {
              intersectsWithCurrentPictures = true;
              break;
            }
            t4.length === t5 || (0, A.throwConcurrentModificationError)(t4);
            ++_i;
          }
          if (intersectsWithCurrentPictures) {
            t1.push(currentRenderCanvas);
            currentRenderCanvas = new A.RenderingRenderCanvas(A._setArrayType([], t2));
          }
        }
        t1.push(new A.RenderingPlatformView(t3));
        ++i;
        t3 = pictures[i].__CkPicture__ref_F;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t3 = t3._nativeObject.cullRect();
        t4 = t3[0];
        t5 = t3[1];
        t6 = t3[2];
        t3 = t3[3];
        if (!(t4 >= t6 || t5 >= t3))
          currentRenderCanvas.pictures.push(pictures[i]);
      }
      if (currentRenderCanvas.pictures.length !== 0)
        t1.push(currentRenderCanvas);
      return new A.Rendering(t1);
    },
    CkPaint$() {
      var t3,
        t1 = new self.window.flutterCanvasKit.Paint(),
        t2 = new A.CkPaint(t1, B.BlendMode_3, B.PaintingStyle_0, B.StrokeCap_0, B.StrokeJoin_0, B.FilterQuality_0);
      t1.setAntiAlias(true);
      t1.setColorInt(4278190080);
      t3 = new A.UniqueRef("Paint", type$.UniqueRef_JavaScriptObject);
      t3.UniqueRef$3(t2, t1, "Paint", type$.JavaScriptObject);
      t2.__CkPaint__ref_F !== $ && A.throwUnnamedLateFieldAI();
      t2.__CkPaint__ref_F = t3;
      return t2;
    },
    CanvasKitRenderer__createRasterizer() {
      var t1, t2;
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1 || $.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        return new A.MultiSurfaceRasterizer(A.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.MultiSurfaceViewRasterizer));
      t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      t2 = $.$get$browserSupportsOffscreenCanvas() && $.$get$browser().get$browserEngine() !== B.BrowserEngine_1;
      return new A.OffscreenCanvasRasterizer(new A.Surface(t2, false, t1), A.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.OffscreenCanvasViewRasterizer));
    },
    Surface$(isDisplayCanvas) {
      var t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      return new A.Surface($.$get$browserSupportsOffscreenCanvas() && $.$get$browser().get$browserEngine() !== B.BrowserEngine_1 && !isDisplayCanvas, isDisplayCanvas, t1);
    },
    CkParagraphStyle_toSkStrutStyleProperties(value, paragraphHeightBehavior) {
      var skStrutStyle, t1, effectiveLeadingDistribution;
      type$.CkStrutStyle._as(value);
      skStrutStyle = type$.JavaScriptObject._as({});
      t1 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(A._computeCombinedFontFamilies(value._fontFamily, value.__engine$_fontFamilyFallback));
      skStrutStyle.fontFamilies = t1;
      t1 = value._fontSize;
      if (t1 != null)
        skStrutStyle.fontSize = t1;
      t1 = value.__engine$_height;
      if (t1 != null)
        skStrutStyle.heightMultiplier = t1;
      effectiveLeadingDistribution = value._leadingDistribution;
      if (effectiveLeadingDistribution == null)
        effectiveLeadingDistribution = paragraphHeightBehavior == null ? null : paragraphHeightBehavior.leadingDistribution;
      switch (effectiveLeadingDistribution) {
        case null:
        case void 0:
          break;
        case B.TextLeadingDistribution_1:
          A.SkStrutStylePropertiesExtension_set_halfLeading(skStrutStyle, true);
          break;
        case B.TextLeadingDistribution_0:
          A.SkStrutStylePropertiesExtension_set_halfLeading(skStrutStyle, false);
          break;
      }
      t1 = value._fontWeight;
      if (t1 != null)
        skStrutStyle.fontStyle = A.toSkFontStyle(t1, value._fontStyle);
      t1 = value._forceStrutHeight;
      if (t1 != null)
        skStrutStyle.forceStrutHeight = t1;
      skStrutStyle.strutEnabled = true;
      return skStrutStyle;
    },
    CkTextStyle$_(background, color, decoration, decorationColor, decorationStyle, decorationThickness, effectiveFontFamily, effectiveFontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, originalFontFamily, originalFontFamilyFallback, shadows, textBaseline, wordSpacing) {
      return new A.CkTextStyle(color, decoration, decorationColor, decorationStyle, decorationThickness, fontWeight, fontStyle, textBaseline, originalFontFamily, effectiveFontFamily, originalFontFamilyFallback, effectiveFontFamilyFallback, fontSize, letterSpacing, wordSpacing, height, leadingDistribution, locale, background, foreground, shadows, fontFeatures, fontVariations);
    },
    toSkFontStyle(fontWeight, fontStyle) {
      var style = type$.JavaScriptObject._as({});
      if (fontWeight != null)
        style.weight = $.$get$_skFontWeights()[fontWeight.index];
      return style;
    },
    _computeCombinedFontFamilies(fontFamily, fontFamilyFallback) {
      var fontFamilies = A._setArrayType([], type$.JSArray_String);
      if (fontFamily != null)
        fontFamilies.push(fontFamily);
      if (fontFamilyFallback != null && !B.JSArray_methods.every$1(fontFamilyFallback, new A._computeCombinedFontFamilies_closure(fontFamily)))
        B.JSArray_methods.addAll$1(fontFamilies, fontFamilyFallback);
      B.JSArray_methods.addAll$1(fontFamilies, $.$get$_renderer().get$fontCollection().get$fontFallbackManager().globalFontFallbacks);
      return fontFamilies;
    },
    SegmentationCacheExtensions_getCacheForText(_this, text) {
      var t1 = text.length;
      if (t1 <= 10)
        return _this._2;
      if (t1 <= 100)
        return _this._1;
      if (t1 <= 50000)
        return _this._0;
      return null;
    },
    fragmentUsingIntlSegmenter(text, granularity) {
      var t1,
        iterator = A.DomSegmentsExtension_iterator($.$get$_intlSegmenters().$index(0, granularity).segment(text)),
        breaks = A._setArrayType([], type$.JSArray_int);
      for (; iterator.moveNext$0();) {
        t1 = iterator.__DomIteratorWrapper__current_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        breaks.push(B.JSNumber_methods.toInt$0(t1.index));
      }
      breaks.push(text.length);
      return new Uint32Array(A._ensureNativeList(breaks));
    },
    fragmentUsingV8LineBreaker(text) {
      var i, fragment, uint32Index, t2,
        fragments = A.breakLinesUsingV8BreakIterator(text, text, $.$get$_v8LineBreaker()),
        t1 = fragments.length,
        typedArray = new Uint32Array((t1 + 1) * 2);
      typedArray[0] = 0;
      typedArray[1] = 0;
      for (i = 0; i < t1; ++i) {
        fragment = fragments[i];
        uint32Index = 2 + i * 2;
        typedArray[uint32Index] = fragment.end;
        t2 = fragment.type === B.LineBreakType_2 ? 1 : 0;
        typedArray[uint32Index + 1] = t2;
      }
      return typedArray;
    },
    CanvasKitError$(message) {
      return new A.CanvasKitError(message);
    },
    makeFreshSkColor(color) {
      var result = new Float32Array(4);
      result[0] = (color.get$value(color) >>> 16 & 255) / 255;
      result[1] = (color.get$value(color) >>> 8 & 255) / 255;
      result[2] = (color.get$value(color) & 255) / 255;
      result[3] = (color.get$value(color) >>> 24 & 255) / 255;
      return result;
    },
    CopyToClipboardStrategy_CopyToClipboardStrategy() {
      return self.window.navigator.clipboard != null ? new A.ClipboardAPICopyStrategy() : new A.ExecCommandCopyStrategy();
    },
    PasteFromClipboardStrategy_PasteFromClipboardStrategy() {
      return $.$get$browser().get$browserEngine() === B.BrowserEngine_2 || self.window.navigator.clipboard == null ? new A.ExecCommandPasteStrategy() : new A.ClipboardAPIPasteStrategy();
    },
    configuration() {
      var t2,
        t1 = $._configuration;
      if (t1 == null) {
        t1 = self.window.flutterConfiguration;
        t2 = new A.FlutterConfiguration();
        if (t1 != null)
          t2._configuration = t1;
        $._configuration = t2;
        t1 = t2;
      }
      return t1;
    },
    JsFlutterConfigurationExtension_get_nonce(_this) {
      var t1 = _this.nonce;
      return t1 == null ? null : t1;
    },
    ScreenOrientation__deviceOrientationToLockType(deviceOrientation) {
      switch (deviceOrientation) {
        case "DeviceOrientation.portraitUp":
          return "portrait-primary";
        case "DeviceOrientation.portraitDown":
          return "portrait-secondary";
        case "DeviceOrientation.landscapeLeft":
          return "landscape-primary";
        case "DeviceOrientation.landscapeRight":
          return "landscape-secondary";
        default:
          return null;
      }
    },
    ObjectToJSAnyExtension_get_toJSAnyShallow(_this) {
      $.$get$browser();
      return _this;
    },
    DomWindowExtension_get_innerHeight(_this) {
      var t1 = _this.innerHeight;
      return t1 == null ? null : t1;
    },
    DomWindowExtension_matchMedia(_this, query) {
      return _this.matchMedia(query);
    },
    DomWindowExtension_getComputedStyle(_this, elt) {
      return _this.getComputedStyle(elt);
    },
    DomConsoleExtension_get_warn(_this) {
      return new A.DomConsoleExtension_get_warn_closure(_this);
    },
    DomNavigatorExtension_get_languages(_this) {
      var t1 = _this.languages;
      if (t1 == null)
        t1 = null;
      else {
        t1 = B.JSArray_methods.map$1$1(t1, new A.DomNavigatorExtension_get_languages_closure(), type$.String);
        t1 = A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E"));
      }
      return t1;
    },
    DomDocumentExtension_createElement(_this, $name) {
      return _this.createElement($name);
    },
    DomEventTargetExtension_addEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.addEventListener(type, listener);
        else
          _this.addEventListener(type, listener, useCapture);
    },
    DomEventTargetExtension_removeEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.removeEventListener(type, listener);
        else
          _this.removeEventListener(type, listener, useCapture);
    },
    createDomEventListener(listener) {
      return A._functionToJS1(listener);
    },
    DomEventExtension_get_timeStamp(_this) {
      var t1 = _this.timeStamp;
      return t1 == null ? null : t1;
    },
    DomNodeExtension_set_text(_this, value) {
      _this.textContent = value;
      return value;
    },
    DomElementExtension_get_tagName(_this) {
      return _this.tagName;
    },
    DomElementExtension_set_tabIndex(_this, value) {
      _this.tabIndex = value;
      return value;
    },
    DomElementExtension_focus(_this, preventScroll) {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.bool);
      if (preventScroll != null)
        t1.$indexSet(0, "preventScroll", preventScroll);
      t1 = A.jsify(t1);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      _this.focus(t1);
    },
    DomElementExtension_clearChildren(_this) {
      var t1;
      for (; _this.firstChild != null;) {
        t1 = _this.firstChild;
        t1.toString;
        _this.removeChild(t1);
      }
    },
    DomCSSStyleDeclarationExtension_setProperty(_this, propertyName, value) {
      _this.setProperty(propertyName, value, "");
    },
    createDomCanvasElement(height, width) {
      var canvas;
      $.debugCanvasCount = $.debugCanvasCount + 1;
      canvas = A.DomDocumentExtension_createElement(self.window.document, "canvas");
      if (width != null)
        A.DomCanvasElementExtension_set_width(canvas, width);
      if (height != null)
        A.DomCanvasElementExtension_set_height(canvas, height);
      return canvas;
    },
    DomCanvasElementExtension_set_width(_this, value) {
      _this.width = value;
      return value;
    },
    DomCanvasElementExtension_set_height(_this, value) {
      _this.height = value;
      return value;
    },
    DomCanvasElementExtension_getContext(_this, contextType, attributes) {
      var t1;
      if (attributes == null)
        return _this.getContext(contextType);
      else {
        t1 = A.jsify(attributes);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        return _this.getContext(contextType, t1);
      }
    },
    DomCanvasElementExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomCanvasElementExtension_getContext(_this, "webgl", null);
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomCanvasElementExtension_getContext(_this, "webgl2", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    DomCanvasRenderingContext2DExtension_drawImage(_this, source, srcxOrDstX, srcyOrDstY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight) {
      if (srcWidth == null)
        return _this.drawImage(source, srcxOrDstX, srcyOrDstY);
      else {
        srcHeight.toString;
        dstX.toString;
        dstY.toString;
        dstWidth.toString;
        dstHeight.toString;
        return A.callMethod(_this, "drawImage", [source, srcxOrDstX, srcyOrDstY, srcWidth, srcHeight, dstX, dstY, dstWidth, dstHeight]);
      }
    },
    httpFetch(url) {
      return A.httpFetch$body(url);
    },
    httpFetch$body(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HttpFetchResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, domResponse, requestError, exception, $async$exception;
      var $async$httpFetch = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(self.window.fetch(url), type$.JavaScriptObject), $async$httpFetch);
            case 7:
              // returning from await.
              domResponse = $async$result;
              $async$returnValue = new A.HttpFetchResponseImpl(url, domResponse);
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              requestError = A.unwrapException($async$exception);
              throw A.wrapException(new A.HttpFetchError(url, requestError));
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$httpFetch, $async$completer);
    },
    httpFetchByteBuffer(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue;
      var $async$httpFetchByteBuffer = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.httpFetch(url), $async$httpFetchByteBuffer);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.get$payload().asByteBuffer$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$httpFetchByteBuffer, $async$completer);
    },
    DomVisualViewportExtension_get_height(_this) {
      var t1 = _this.height;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_set_value(_this, value) {
      var t1 = value == null ? null : value;
      _this.value = t1;
      return t1;
    },
    DomHTMLTextAreaElementExtension_get_selectionStart(_this) {
      var t1 = _this.selectionStart;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_get_selectionEnd(_this) {
      var t1 = _this.selectionEnd;
      return t1 == null ? null : t1;
    },
    DomHTMLTextAreaElementExtension_get_value(_this) {
      var t1 = _this.value;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_code(_this) {
      var t1 = _this.code;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_key(_this) {
      var t1 = _this.key;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_shiftKey(_this) {
      var t1 = _this.shiftKey;
      return t1 == null ? null : t1;
    },
    DomHistoryExtension_get_state(_this) {
      var t1 = _this.state;
      if (t1 == null)
        t1 = null;
      else {
        t1 = A.dartify(t1);
        t1.toString;
      }
      return t1;
    },
    DomMediaQueryListEventExtension_get_matches(_this) {
      var t1 = _this.matches;
      return t1 == null ? null : t1;
    },
    DomMouseEventExtension_get_buttons(_this) {
      var t1 = _this.buttons;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerId(_this) {
      var t1 = _this.pointerId;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerType(_this) {
      var t1 = _this.pointerType;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltX(_this) {
      var t1 = _this.tiltX;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltY(_this) {
      var t1 = _this.tiltY;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaX(_this) {
      var t1 = _this.wheelDeltaX;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaY(_this) {
      var t1 = _this.wheelDeltaY;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_set_type(_this, value) {
      _this.type = value;
      return value;
    },
    DomHTMLInputElementExtension_set_value(_this, v) {
      var t1 = v == null ? null : v;
      _this.value = t1;
      return t1;
    },
    DomHTMLInputElementExtension_get_value(_this) {
      var t1 = _this.value;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_get_selectionStart(_this) {
      var t1 = _this.selectionStart;
      return t1 == null ? null : t1;
    },
    DomHTMLInputElementExtension_get_selectionEnd(_this) {
      var t1 = _this.selectionEnd;
      return t1 == null ? null : t1;
    },
    DomOffscreenCanvasExtension_set_height(_this, value) {
      _this.height = value;
      return value;
    },
    DomOffscreenCanvasExtension_set_width(_this, value) {
      _this.width = value;
      return value;
    },
    DomOffscreenCanvasExtension_getContext(_this, contextType, attributes) {
      var t1;
      if (attributes == null)
        return _this.getContext(contextType);
      else {
        t1 = A.jsify(attributes);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        return _this.getContext(contextType, t1);
      }
    },
    DomOffscreenCanvasExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl", null);
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl2", null);
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    DomSubscription$(target, typeString, dartListener) {
      var t1 = A._functionToJS1(dartListener);
      target.addEventListener(typeString, t1);
      return new A.DomSubscription(typeString, target, t1);
    },
    createDomResizeObserver(fn) {
      return new self.ResizeObserver(A._functionToJS2(new A.createDomResizeObserver_closure(fn)));
    },
    createTrustedScriptUrl(url) {
      if (self.window.trustedTypes != null)
        return $.$get$_ttPolicy().createScriptURL(url);
      return url;
    },
    DomSegmentsExtension_iterator(_this) {
      return new A.DomIteratorWrapper(type$.JavaScriptObject._as(_this[self.Symbol.iterator]()), type$.DomIteratorWrapper_JavaScriptObject);
    },
    createIntlSegmenter(granularity) {
      var t1, t2;
      if (self.Intl.Segmenter == null)
        throw A.wrapException(A.UnimplementedError$("Intl.Segmenter() is not supported."));
      t1 = self.Intl.Segmenter;
      t2 = type$.String;
      t2 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["granularity", granularity], t2, t2));
      if (t2 == null)
        t2 = type$.Object._as(t2);
      return new t1([], t2);
    },
    createV8BreakIterator() {
      var t1, t2;
      if (self.Intl.v8BreakIterator == null)
        throw A.wrapException(A.UnimplementedError$("v8BreakIterator is not supported."));
      t1 = self.Intl.v8BreakIterator;
      t2 = A.jsify(B.Map_wEY7l);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      return new t1([], t2);
    },
    sendFontChangeMessage() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$sendFontChangeMessage = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (!$._fontChangeScheduled) {
                $._fontChangeScheduled = true;
                self.window.requestAnimationFrame(A._functionToJS1(new A.sendFontChangeMessage_closure()));
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$sendFontChangeMessage, $async$completer);
    },
    FontFallbackManager$_(registry, fallbackFonts) {
      var t1 = type$.int,
        t2 = A.Future_Future$value(null, type$.void),
        t3 = A._setArrayType(["Roboto"], type$.JSArray_String);
      t1 = new A.FontFallbackManager(registry, A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashSet_LinkedHashSet$_empty(t1), fallbackFonts, B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure()), B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure0()), B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure1()), B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure2()), B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure3()), B.JSArray_methods.singleWhere$1(fallbackFonts, new A.FontFallbackManager$__closure4()), t2, t3, A.LinkedHashSet_LinkedHashSet$_empty(t1));
      t3 = type$.NotoFont;
      t1.__FontFallbackManager_downloadQueue_F = new A.FallbackFontDownloadQueue(t1, A.LinkedHashSet_LinkedHashSet$_empty(t3), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, t3));
      return t1;
    },
    _UnicodePropertyLookup__UnicodePropertyLookup$fromPackedData(packedData, propertyEnumValues, $P) {
      var t1, start, prefix, size, i, code, prefix0, value,
        boundaries = A._setArrayType([], type$.JSArray_int),
        values = A._setArrayType([], $P._eval$1("JSArray<0>"));
      for (t1 = packedData.length, start = 0, prefix = 0, size = 1, i = 0; i < t1; ++i) {
        code = packedData.charCodeAt(i);
        prefix0 = 0;
        if (65 <= code && code < 91) {
          value = propertyEnumValues[prefix * 26 + (code - 65)];
          start += size;
          boundaries.push(start);
          values.push(value);
          prefix = prefix0;
          size = 1;
        } else if (97 <= code && code < 123) {
          size = prefix * 26 + (code - 97) + 2;
          prefix = prefix0;
        } else if (48 <= code && code < 58)
          prefix = prefix * 10 + (code - 48);
        else
          throw A.wrapException(A.StateError$("Unreachable"));
      }
      if (start !== 1114112)
        throw A.wrapException(A.StateError$("Bad map size: " + start));
      return new A._UnicodePropertyLookup(boundaries, values, $P._eval$1("_UnicodePropertyLookup<0>"));
    },
    fetchFontManifest(assetManager) {
      return A.fetchFontManifest$body(assetManager);
    },
    fetchFontManifest$body(assetManager) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontManifest),
        $async$returnValue, decoder, inputSink, t1, response, $async$temp1;
      var $async$fetchFontManifest = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 3;
              return A._asyncAwait(A.httpFetch(assetManager.getAssetUrl$1("FontManifest.json")), $async$fetchFontManifest);
            case 3:
              // returning from await.
              response = $async$temp1._as($async$result);
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font manifest does not exist at `" + response.url + "` - ignoring.");
                $async$returnValue = new A.FontManifest(A._setArrayType([], type$.JSArray_FontFamily));
                // goto return
                $async$goto = 1;
                break;
              }
              decoder = B.Utf8Decoder_false.super$Converter$fuse(B.JsonDecoder_null, type$.nullable_Object);
              t1.fontManifestJson = null;
              inputSink = decoder.startChunkedConversion$1(new A._SimpleCallbackSink(new A.fetchFontManifest_closure(t1), [], type$._SimpleCallbackSink_nullable_Object));
              $async$goto = 4;
              return A._asyncAwait(response.get$payload().read$1$1(0, new A.fetchFontManifest_closure0(inputSink), type$.NativeUint8List), $async$fetchFontManifest);
            case 4:
              // returning from await.
              inputSink.close$0(0);
              t1 = t1.fontManifestJson;
              if (t1 == null)
                throw A.wrapException(A.AssertionError$(string$.There_));
              t1 = J.map$1$1$ax(type$.List_dynamic._as(t1), new A.fetchFontManifest_closure1(), type$.FontFamily);
              $async$returnValue = new A.FontManifest(A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$fetchFontManifest, $async$completer);
    },
    FrameTimingRecorder__nowMicros() {
      return B.JSNumber_methods.toInt$0(self.window.performance.now() * 1000);
    },
    ensureResourceManagerInitialized(implicitView) {
      if ($.ResourceManager__instance != null)
        return;
      $.ResourceManager__instance = new A.ResourceManager(implicitView.get$dom());
    },
    initializeEngineServices(jsConfiguration) {
      return A.initializeEngineServices$body(jsConfiguration);
    },
    initializeEngineServices$body(jsConfiguration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t2, assetManager, t1;
      var $async$initializeEngineServices = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              if ($._initializationState !== B.DebugEngineInitializationState_0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_1;
              t2 = A.configuration();
              if (jsConfiguration != null)
                t2._configuration = jsConfiguration;
              A.registerExtension("ext.flutter.disassemble", new A.initializeEngineServices_closure());
              t1.waitingForAnimation = false;
              $.scheduleFrameCallback = new A.initializeEngineServices_closure0(t1);
              t1 = A.configuration()._configuration;
              if (t1 == null)
                t1 = null;
              else {
                t1 = t1.assetBase;
                if (t1 == null)
                  t1 = null;
              }
              assetManager = new A.AssetManager(t1);
              A._setAssetManager(assetManager);
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(A._setArrayType([new A.initializeEngineServices_initializeRendererCallback().call$0(), A._downloadAssetFonts()], type$.JSArray_Future_void), false, type$.void), $async$initializeEngineServices);
            case 3:
              // returning from await.
              $._initializationState = B.DebugEngineInitializationState_2;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineServices, $async$completer);
    },
    initializeEngineUi() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, t3;
      var $async$initializeEngineUi = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($._initializationState !== B.DebugEngineInitializationState_2) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_3;
              t1 = $.$get$browser().get$operatingSystem();
              if ($.RawKeyboard__instance == null)
                $.RawKeyboard__instance = A.RawKeyboard$_(t1 === B.OperatingSystem_4);
              if ($.KeyboardBinding__instance == null)
                $.KeyboardBinding__instance = A.KeyboardBinding$_();
              t1 = A.configuration()._configuration;
              if (t1 == null)
                t1 = null;
              else {
                t1 = t1.multiViewEnabled;
                if (t1 == null)
                  t1 = null;
              }
              if (t1 !== true) {
                t1 = A.configuration()._configuration;
                t1 = t1 == null ? null : t1.hostElement;
                if ($._window == null) {
                  t2 = $.$get$EnginePlatformDispatcher__instance();
                  t3 = new A.EngineFlutterWindow(A.Future_Future$value(null, type$.void), 0, t2, A.EmbeddingStrategy_EmbeddingStrategy$create(t1), null, B.ViewPadding_0_0_0_0, A.DimensionsProvider_DimensionsProvider$create(t1));
                  t3.EngineFlutterView$_$4$viewConstraints(0, t2, t1, null);
                  $._window = t3;
                  t1 = t2.get$viewManager();
                  t2 = $._window;
                  t2.toString;
                  t1.registerView$1(t2);
                }
                t1 = $._window;
                t1.toString;
                if ($.$get$_renderer() instanceof A.HtmlRenderer)
                  A.ensureResourceManagerInitialized(t1);
              }
              $._initializationState = B.DebugEngineInitializationState_4;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineUi, $async$completer);
    },
    _setAssetManager(assetManager) {
      if (assetManager === $._assetManager)
        return;
      $._assetManager = assetManager;
    },
    _downloadAssetFonts() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t2, t1, $async$temp1;
      var $async$_downloadAssetFonts = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$_renderer();
              t1.get$fontCollection().clear$0(0);
              t2 = $._assetManager;
              $async$goto = t2 != null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = t1.get$fontCollection();
              t2 = $._assetManager;
              t2.toString;
              $async$temp1 = t1;
              $async$goto = 5;
              return A._asyncAwait(A.fetchFontManifest(t2), $async$_downloadAssetFonts);
            case 5:
              // returning from await.
              $async$goto = 4;
              return A._asyncAwait($async$temp1.loadAssetFonts$1($async$result), $async$_downloadAssetFonts);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadAssetFonts, $async$completer);
    },
    FlutterApp__staticInteropFactoryStub(addView, removeView) {
      return type$.JavaScriptObject._as({addView: A._functionToJS1(addView), removeView: A._functionToJS1(new A.FlutterApp__staticInteropFactoryStub_closure(removeView))});
    },
    FlutterEngineInitializer__staticInteropFactoryStub(autoStart, initializeEngine) {
      var result,
        t1 = A._functionToJS1(new A.FlutterEngineInitializer__staticInteropFactoryStub_closure(initializeEngine)),
        t2 = new A.FlutterEngineInitializer__staticInteropFactoryStub_closure0(autoStart);
      if (typeof t2 == "function")
        A.throwExpression(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function() {
          return _call(f);
        };
      }(A._callDartFunctionFast0, t2);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = t2;
      return type$.JavaScriptObject._as({initializeEngine: t1, autoStart: result});
    },
    FlutterAppRunner__staticInteropFactoryStub(runApp) {
      return type$.JavaScriptObject._as({runApp: A._functionToJS1(new A.FlutterAppRunner__staticInteropFactoryStub_closure(runApp))});
    },
    futureToPromise(future, $T) {
      var t1 = A._functionToJS2(new A.futureToPromise_closure(future, $T));
      return new self.Promise(t1);
    },
    _eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(0, 0, B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms, 0, 0);
    },
    _cached(body, $T) {
      var t1 = {};
      t1.cache = null;
      return new A._cached_closure(t1, body, $T);
    },
    KeyboardBinding$_() {
      var t1 = new A.KeyboardBinding(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject));
      t1.KeyboardBinding$_$0();
      return t1;
    },
    KeyboardConverter__mappingFromPlatform(platform) {
      switch (platform.index) {
        case 0:
        case 4:
          return new A.LocaleKeymap(A.unmarshallMappingData("M,2\u201ew\u2211wa2\u03a9q\u2021qb2\u02dbx\u2248xc3 c\xd4j\u2206jd2\xfee\xb4ef2\xfeu\xa8ug2\xfe\xff\u02c6ih3 h\xce\xff\u2202di3 i\xc7c\xe7cj2\xd3h\u02d9hk2\u02c7\xff\u2020tl5 l@l\xfe\xff|l\u02dcnm1~mn3 n\u0131\xff\u222bbo2\xaer\u2030rp2\xacl\xd2lq2\xc6a\xe6ar3 r\u03c0p\u220fps3 s\xd8o\xf8ot2\xa5y\xc1yu3 u\xa9g\u02ddgv2\u02dak\uf8ffkw2\xc2z\xc5zx2\u0152q\u0153qy5 y\xcff\u0192f\u02c7z\u03a9zz5 z\xa5y\u2021y\u2039\xff\u203aw.2\u221av\u25cav;4\xb5m\xcds\xd3m\xdfs/2\xb8z\u03a9z"));
        case 3:
          return new A.LocaleKeymap(A.unmarshallMappingData(';b1{bc1&cf1[fg1]gm2<m?mn1}nq3/q@q\\qv1@vw3"w?w|wx2#x)xz2(z>y'));
        case 1:
        case 2:
        case 5:
          return new A.LocaleKeymap(A.unmarshallMappingData("8a2@q\u03a9qk1&kq3@q\xc6a\xe6aw2<z\xabzx1>xy2\xa5\xff\u2190\xffz5<z\xbby\u0141w\u0142w\u203ay;2\xb5m\xbam"));
      }
    },
    KeyboardConverter__getPhysicalCode(code) {
      var t1;
      if (code.length === 0)
        return 98784247808;
      t1 = B.Map_ntMYA.$index(0, code);
      return t1 == null ? B.JSString_methods.get$hashCode(code) + 98784247808 : t1;
    },
    createHistoryForExistingState(urlStrategy) {
      var state;
      if (urlStrategy != null) {
        state = urlStrategy.getState$0(0);
        if (A.SingleEntryBrowserHistory__isOriginEntry(state) || A.SingleEntryBrowserHistory__isFlutterEntry(state))
          return A.SingleEntryBrowserHistory$(urlStrategy);
      }
      return A.MultiEntriesBrowserHistory$(urlStrategy);
    },
    MultiEntriesBrowserHistory$(urlStrategy) {
      var t1 = new A.MultiEntriesBrowserHistory(urlStrategy);
      t1.MultiEntriesBrowserHistory$1$urlStrategy(urlStrategy);
      return t1;
    },
    SingleEntryBrowserHistory$(urlStrategy) {
      var t1 = new A.SingleEntryBrowserHistory(urlStrategy, A.LinkedHashMap_LinkedHashMap$_literal(["flutter", true], type$.String, type$.bool));
      t1.SingleEntryBrowserHistory$1$urlStrategy(urlStrategy);
      return t1;
    },
    SingleEntryBrowserHistory__isOriginEntry(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "origin"), true);
    },
    SingleEntryBrowserHistory__isFlutterEntry(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$eq$(J.$index$asx(state, "flutter"), true);
    },
    NotoFont$($name, url, enabled) {
      var t1 = $.NotoFont__index;
      $.NotoFont__index = t1 + 1;
      return new A.NotoFont($name, url, enabled, t1, A._setArrayType([], type$.JSArray_FallbackFontComponent));
    },
    EnginePlatformDispatcher$() {
      var t2, t3, t4,
        t1 = $.EngineSemantics__instance;
      t1 = (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).semanticsHelper._semanticsEnabler.prepareAccessibilityPlaceholder$0();
      t2 = A.EnginePlatformDispatcher_parseBrowserLanguages();
      t3 = A.findBrowserTextScaleFactor();
      if ($.$get$HighContrastSupport_instance()._highContrastMediaQuery.matches)
        t4 = 32;
      else
        t4 = 0;
      t2 = new A.EnginePlatformDispatcher(t1, new A.PlatformConfiguration(new A.EngineAccessibilityFeatures(t4), false, false, B.Brightness_1, t3, t2, "/", null), A._setArrayType([$.$get$EngineFlutterDisplay__instance()], type$.JSArray_EngineFlutterDisplay), A.DomWindowExtension_matchMedia(self.window, "(prefers-color-scheme: dark)"), B.C__RootZone);
      t2.EnginePlatformDispatcher$0();
      return t2;
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(callback) {
      return new A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure($.Zone__current, callback);
    },
    EnginePlatformDispatcher_parseBrowserLanguages() {
      var locales, t1, _i, language, parts,
        languages = A.DomNavigatorExtension_get_languages(self.window.navigator);
      if (languages == null || languages.length === 0)
        return B.List_Locale_en_US;
      locales = A._setArrayType([], type$.JSArray_Locale);
      for (t1 = languages.length, _i = 0; _i < languages.length; languages.length === t1 || (0, A.throwConcurrentModificationError)(languages), ++_i) {
        language = languages[_i];
        parts = J.split$1$s(language, "-");
        if (parts.length > 1)
          locales.push(new A.Locale(B.JSArray_methods.get$first(parts), B.JSArray_methods.get$last(parts)));
        else
          locales.push(new A.Locale(language, null));
      }
      return locales;
    },
    _handleWebTestEnd2EndMessage(codec, data) {
      var decoded = codec.decodeMethodCall$1(data),
        ratio = A.double_parse(A._asString(decoded.$arguments));
      switch (decoded.method) {
        case "setDevicePixelRatio":
          $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride = ratio;
          $.$get$EnginePlatformDispatcher__instance()._onMetricsChanged.call$0();
          return true;
      }
      return false;
    },
    invoke(callback, zone) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$0();
      else
        zone.runGuarded$1(callback);
    },
    invoke1(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    invoke2(callback, zone, arg1, arg2) {
      if (zone === $.Zone__current)
        callback.call$2(arg1, arg2);
      else
        zone.runGuarded$1(new A.invoke2_closure(callback, arg1, arg2));
    },
    findBrowserTextScaleFactor() {
      var fontSize, computedStyleMap, fontSizeObject,
        t1 = self.document.documentElement;
      t1.toString;
      fontSize = null;
      if ("computedStyleMap" in t1) {
        computedStyleMap = t1.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        }
      }
      if (fontSize == null)
        fontSize = A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, t1).getPropertyValue("font-size"));
      return (fontSize == null ? 16 : fontSize) / 16;
    },
    _defaultFactory(viewId, params) {
      var t1;
      params.toString;
      type$.Map_of_nullable_Object_and_nullable_Object._as(params);
      t1 = A.DomDocumentExtension_createElement(self.document, A._asString(J.$index$asx(params, "tagName")));
      A.DomCSSStyleDeclarationExtension_setProperty(t1.style, "width", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(t1.style, "height", "100%");
      return t1;
    },
    convertButtonToButtons(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return B.JSInt_methods.$shl(1, button);
      }
    },
    Listener_Listener$register($event, handler, passive, target) {
      var t1, t2,
        jsHandler = A._functionToJS1(handler);
      if (passive == null)
        A.DomEventTargetExtension_addEventListener(target, $event, jsHandler, null);
      else {
        t1 = type$.Object;
        t2 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["passive", passive], type$.String, t1));
        t1 = t2 == null ? t1._as(t2) : t2;
        target.addEventListener($event, jsHandler, t1);
      }
      return new A.Listener($event, target, jsHandler);
    },
    _BaseAdapter__eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(0, 0, B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms, 0, 0);
    },
    computeEventOffsetToTarget($event, view) {
      var t2, inputGeometry, transformedPoint, origin,
        actualTarget = view.get$dom().rootElement,
        t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled && $event.offsetX === 0 && $event.offsetY === 0)
        return A._computeOffsetForTalkbackEvent($event, actualTarget);
      t1 = view.get$dom();
      t2 = $event.target;
      t2.toString;
      if (t1.textEditingHost.contains(t2)) {
        t1 = $.$get$textEditing();
        inputGeometry = t1.get$strategy().geometry;
        if (inputGeometry != null) {
          $event.target.toString;
          t1.get$strategy().domElement.toString;
          transformedPoint = new A.Matrix4(inputGeometry.globalTransform).perspectiveTransform$3$x$y$z($event.offsetX, $event.offsetY, 0);
          return new A.Offset(transformedPoint._0, transformedPoint._1);
        }
      }
      if (!J.$eq$($event.target, actualTarget)) {
        origin = actualTarget.getBoundingClientRect();
        return new A.Offset($event.clientX - origin.x, $event.clientY - origin.y);
      }
      return new A.Offset($event.offsetX, $event.offsetY);
    },
    _computeOffsetForTalkbackEvent($event, actualTarget) {
      var $parent, t1,
        offsetX = $event.clientX,
        offsetY = $event.clientY;
      for ($parent = actualTarget; $parent.offsetParent != null; $parent = t1) {
        offsetX -= $parent.offsetLeft - $parent.scrollLeft;
        offsetY -= $parent.offsetTop - $parent.scrollTop;
        t1 = $parent.offsetParent;
        t1.toString;
      }
      return new A.Offset(offsetX, offsetY);
    },
    timeAction($name, action) {
      var t1 = action.call$0();
      return t1;
    },
    RawKeyboard$_(_onMacOs) {
      var t1 = new A.RawKeyboard(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Timer), _onMacOs);
      t1.RawKeyboard$_$1(_onMacOs);
      return t1;
    },
    _noopCallback(data) {
    },
    parseFloat(source) {
      var result = self.window.parseFloat(source);
      if (result == null || isNaN(result))
        return null;
      return result;
    },
    parseFontSize(element) {
      var computedStyleMap, fontSizeObject, fontSize = null;
      if ("computedStyleMap" in element) {
        computedStyleMap = element.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        }
      }
      return fontSize == null ? A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, element).getPropertyValue("font-size")) : fontSize;
    },
    AccessibilityAnnouncements__createElement(assertiveness) {
      var ariaLiveValue = assertiveness === B.Assertiveness_1 ? "assertive" : "polite",
        liveRegion = A.DomDocumentExtension_createElement(self.document, "flt-announcement-" + ariaLiveValue),
        t1 = liveRegion.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "fixed");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", "translate(-99999px, -99999px)");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      t1 = A.jsify(ariaLiveValue);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      liveRegion.setAttribute("aria-live", t1);
      return liveRegion;
    },
    EngineSemantics$_() {
      var politeElement, assertiveElement, t1,
        host = A.DomDocumentExtension_createElement(self.document, "flt-announcement-host");
      self.document.body.append(host);
      politeElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_0);
      assertiveElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_1);
      host.append(politeElement);
      host.append(assertiveElement);
      t1 = B.Set_2h4Ve.contains$1(0, $.$get$browser().get$operatingSystem()) ? new A.DesktopSemanticsEnabler() : new A.MobileSemanticsEnabler();
      return new A.EngineSemantics(new A.AccessibilityAnnouncements(politeElement, assertiveElement), new A.EngineSemantics__now_closure(), new A.SemanticsHelper(t1), B.GestureMode_1, A._setArrayType([], type$.JSArray_of_void_Function_GestureMode));
    },
    EngineSemanticsOwner$(semanticsHost) {
      var t1 = type$.int,
        t2 = type$.SemanticsObject;
      t2 = new A.EngineSemanticsOwner(semanticsHost, A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A._setArrayType([], type$.JSArray_SemanticsObject), A._setArrayType([], type$.JSArray_of_void_Function));
      t2.EngineSemanticsOwner$1(semanticsHost);
      return t2;
    },
    longestIncreasingSubsequence(list) {
      var longest, i, elem, hi, lo, mid, seq, k,
        len = list.length,
        t1 = type$.JSArray_int,
        predecessors = A._setArrayType([], t1),
        mins = A._setArrayType([0], t1);
      for (longest = 0, i = 0; i < len; ++i) {
        elem = list[i];
        for (hi = longest, lo = 1; lo <= hi;) {
          mid = B.JSInt_methods._tdivFast$1(lo + hi, 2);
          if (list[mins[mid]] < elem)
            lo = mid + 1;
          else
            hi = mid - 1;
        }
        predecessors.push(mins[lo - 1]);
        if (lo >= mins.length)
          mins.push(i);
        else
          mins[lo] = i;
        if (lo > longest)
          longest = lo;
      }
      seq = A.List_List$filled(longest, 0, false, type$.int);
      k = mins[longest];
      for (i = longest - 1; i >= 0; --i) {
        seq[i] = k;
        k = predecessors[k];
      }
      return seq;
    },
    SemanticsTextEditingStrategy_ensureInitialized(owner) {
      var t2,
        t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null)
        t2 = t1.owner === owner;
      else
        t2 = false;
      if (t2) {
        t1.toString;
        return t1;
      }
      return $.SemanticsTextEditingStrategy__instance = new A.SemanticsTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    WriteBuffer_WriteBuffer0() {
      var t1 = new Uint8Array(0),
        eightBytes = new DataView(new ArrayBuffer(8));
      return new A.WriteBuffer0(new A.Uint8Buffer(t1, 0), eightBytes, A.NativeUint8List_NativeUint8List$view(eightBytes.buffer, 0, null));
    },
    breakLinesUsingV8BreakIterator(text, jsText, iterator) {
      var t1, fragmentStart, fragmentEnd, i, trailingNewlines, trailingSpaces, codeUnit, type,
        breaks = A._setArrayType([], type$.JSArray_LineBreakFragment);
      iterator.adoptText(jsText);
      iterator.first();
      for (t1 = text.length, fragmentStart = 0; iterator.next() !== -1; fragmentStart = fragmentEnd) {
        fragmentEnd = B.JSNumber_methods.toInt$0(iterator.current());
        for (i = fragmentStart, trailingNewlines = 0, trailingSpaces = 0; i < fragmentEnd; ++i) {
          codeUnit = text.charCodeAt(i);
          if (B.Set_k2M5.contains$1(0, codeUnit)) {
            ++trailingNewlines;
            ++trailingSpaces;
          } else if (B.Set_GJovi.contains$1(0, codeUnit))
            ++trailingSpaces;
          else if (trailingSpaces > 0) {
            breaks.push(new A.LineBreakFragment(B.LineBreakType_0, trailingNewlines, trailingSpaces, fragmentStart, i));
            fragmentStart = i;
            trailingNewlines = 0;
            trailingSpaces = 0;
          }
        }
        if (trailingNewlines > 0)
          type = B.LineBreakType_2;
        else
          type = fragmentEnd === t1 ? B.LineBreakType_3 : B.LineBreakType_0;
        breaks.push(new A.LineBreakFragment(type, trailingNewlines, trailingSpaces, fragmentStart, fragmentEnd));
      }
      if (breaks.length === 0 || B.JSArray_methods.get$last(breaks).type === B.LineBreakType_2)
        breaks.push(new A.LineBreakFragment(B.LineBreakType_3, 0, 0, t1, t1));
      return breaks;
    },
    fontWeightIndexToCss(fontWeightIndex) {
      switch (fontWeightIndex) {
        case 0:
          return "100";
        case 1:
          return "200";
        case 2:
          return "300";
        case 3:
          return "normal";
        case 4:
          return "500";
        case 5:
          return "600";
        case 6:
          return "bold";
        case 7:
          return "800";
        case 8:
          return "900";
      }
      return "";
    },
    textAlignToCssValue(align, textDirection) {
      switch (align) {
        case B.TextAlign_0:
          return "left";
        case B.TextAlign_1:
          return "right";
        case B.TextAlign_2:
          return "center";
        case B.TextAlign_3:
          return "justify";
        case B.TextAlign_5:
          switch (textDirection.index) {
            case 1:
              return "end";
            case 0:
              return "left";
          }
          break;
        case B.TextAlign_4:
          switch (textDirection.index) {
            case 1:
              return "";
            case 0:
              return "right";
          }
          break;
        case null:
        case void 0:
          return "";
      }
    },
    EngineInputAction_fromName($name) {
      switch ($name) {
        case "TextInputAction.continueAction":
        case "TextInputAction.next":
          return B.C_NextInputAction;
        case "TextInputAction.previous":
          return B.C_PreviousInputAction;
        case "TextInputAction.done":
          return B.C_DoneInputAction;
        case "TextInputAction.go":
          return B.C_GoInputAction;
        case "TextInputAction.newline":
          return B.C_EnterInputAction;
        case "TextInputAction.search":
          return B.C_SearchInputAction;
        case "TextInputAction.send":
          return B.C_SendInputAction;
        case "TextInputAction.emergencyCall":
        case "TextInputAction.join":
        case "TextInputAction.none":
        case "TextInputAction.route":
        case "TextInputAction.unspecified":
        default:
          return B.C_NoInputAction;
      }
    },
    EngineInputType_fromName($name, isDecimal, isMultiline) {
      switch ($name) {
        case "TextInputType.number":
          return isDecimal ? B.C_DecimalInputType : B.C_NumberInputType;
        case "TextInputType.phone":
          return B.C_PhoneInputType;
        case "TextInputType.emailAddress":
          return B.C_EmailInputType;
        case "TextInputType.url":
          return B.C_UrlInputType;
        case "TextInputType.multiline":
          return B.C_MultilineInputType;
        case "TextInputType.none":
          return isMultiline ? B.C_MultilineNoTextInputType : B.C_NoTextInputType;
        case "TextInputType.text":
        default:
          return B.C_TextInputType;
      }
    },
    TextCapitalizationConfig$fromInputConfiguration(inputConfiguration) {
      var t1;
      if (inputConfiguration === "TextCapitalization.words")
        t1 = B.TextCapitalization_0;
      else if (inputConfiguration === "TextCapitalization.characters")
        t1 = B.TextCapitalization_2;
      else
        t1 = inputConfiguration === "TextCapitalization.sentences" ? B.TextCapitalization_1 : B.TextCapitalization_3;
      return new A.TextCapitalizationConfig(t1);
    },
    _emptyCallback(_) {
    },
    _styleAutofillElements(domElement, isOffScreen, shouldDisablePointerEvents, shouldHideElement) {
      var _s11_ = "transparent",
        _s4_ = "none",
        elementStyle = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "white-space", "pre-wrap");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "align-content", "center");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "padding", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "1");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "outline", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "border", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "resize", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "text-shadow", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "transform-origin", "0 0 0");
      if (isOffScreen) {
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", "-9999px");
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", "-9999px");
      }
      if (shouldHideElement) {
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "width", "0");
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "height", "0");
      }
      if (shouldDisablePointerEvents)
        A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "pointer-events", _s4_);
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_0 || $.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        domElement.classList.add("transparentTextEditing");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "caret-color", _s11_);
    },
    _ensureEditingElementInView(element, viewId) {
      var currentView,
        t1 = element.isConnected;
      if (t1 == null)
        t1 = null;
      if (t1 !== true)
        return;
      currentView = $.$get$EnginePlatformDispatcher__instance().get$viewManager().findViewForElement$1(element);
      if (currentView == null)
        return;
      if (currentView.viewId !== viewId)
        A._insertEditingElementInView(element, viewId);
    },
    _insertEditingElementInView(element, viewId) {
      $.$get$EnginePlatformDispatcher__instance().get$viewManager()._viewData.$index(0, viewId).get$dom().textEditingHost.append(element);
    },
    EngineAutofillForm_fromFrameworkMessage(viewId, focusedElementAutofill, fields) {
      var t1, elements, items, formElement, isSafariDesktopStrategy, ids, focusedElement, insertionReferenceNode, t2, t3, t4, t5, fieldIsFocusedElement, t6, t7, autofillInfo, t8, autofill, htmlElement, _i, id, formIdentifier, form, submitButton;
      if (focusedElementAutofill == null)
        return null;
      t1 = type$.String;
      elements = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject);
      items = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.AutofillInfo);
      formElement = A.DomDocumentExtension_createElement(self.document, "form");
      isSafariDesktopStrategy = $.$get$textEditing().get$strategy() instanceof A.SafariDesktopTextEditingStrategy;
      formElement.noValidate = true;
      formElement.method = "post";
      formElement.action = "#";
      A.DomEventTargetExtension_addEventListener(formElement, "submit", $.$get$preventDefaultListener(), null);
      A._styleAutofillElements(formElement, false, isSafariDesktopStrategy, true);
      ids = J.JSArray_JSArray$growable(0, t1);
      focusedElement = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(focusedElementAutofill, B.TextCapitalizationConfig_TextCapitalization_3);
      insertionReferenceNode = null;
      if (fields != null)
        for (t1 = type$.Map_String_dynamic, t2 = J.cast$1$0$ax(fields, t1), t3 = t2.$ti, t2 = new A.ListIterator(t2, t2.get$length(0), t3._eval$1("ListIterator<ListBase.E>")), t4 = focusedElement.uniqueIdentifier, t3 = t3._eval$1("ListBase.E"), t5 = !isSafariDesktopStrategy, fieldIsFocusedElement = false; t2.moveNext$0();) {
          t6 = t2.__internal$_current;
          if (t6 == null)
            t6 = t3._as(t6);
          t7 = J.getInterceptor$asx(t6);
          autofillInfo = t1._as(t7.$index(t6, "autofill"));
          t8 = A._asString(t7.$index(t6, "textCapitalization"));
          if (t8 === "TextCapitalization.words")
            t8 = B.TextCapitalization_0;
          else if (t8 === "TextCapitalization.characters")
            t8 = B.TextCapitalization_2;
          else
            t8 = t8 === "TextCapitalization.sentences" ? B.TextCapitalization_1 : B.TextCapitalization_3;
          autofill = A.AutofillInfo_AutofillInfo$fromFrameworkMessage(autofillInfo, new A.TextCapitalizationConfig(t8));
          t8 = autofill.uniqueIdentifier;
          ids.push(t8);
          if (t8 !== t4) {
            htmlElement = A.EngineInputType_fromName(A._asString(J.$index$asx(t1._as(t7.$index(t6, "inputType")), "name")), false, false).createDomElement$0();
            autofill.editingState.applyToDomElement$1(htmlElement);
            autofill.applyToDomElement$1(htmlElement);
            A._styleAutofillElements(htmlElement, false, isSafariDesktopStrategy, t5);
            items.$indexSet(0, t8, autofill);
            elements.$indexSet(0, t8, htmlElement);
            formElement.append(htmlElement);
            if (fieldIsFocusedElement) {
              insertionReferenceNode = htmlElement;
              fieldIsFocusedElement = false;
            }
          } else
            fieldIsFocusedElement = true;
        }
      else
        ids.push(focusedElement.uniqueIdentifier);
      B.JSArray_methods.sort$0(ids);
      for (t1 = ids.length, _i = 0, t2 = ""; _i < t1; ++_i) {
        id = ids[_i];
        t2 = (t2.length > 0 ? t2 + "*" : t2) + id;
      }
      formIdentifier = t2.charCodeAt(0) == 0 ? t2 : t2;
      form = $.formsOnTheDom.$index(0, formIdentifier);
      if (form != null)
        form.remove();
      submitButton = A.DomDocumentExtension_createElement(self.document, "input");
      A.DomElementExtension_set_tabIndex(submitButton, -1);
      A._styleAutofillElements(submitButton, true, false, true);
      submitButton.className = "submitBtn";
      A.DomHTMLInputElementExtension_set_type(submitButton, "submit");
      formElement.append(submitButton);
      return new A.EngineAutofillForm(formElement, elements, items, insertionReferenceNode == null ? submitButton : insertionReferenceNode, formIdentifier, viewId);
    },
    AutofillInfo_AutofillInfo$fromFrameworkMessage(autofill, textCapitalization) {
      var t2,
        t1 = J.getInterceptor$asx(autofill),
        uniqueIdentifier = A._asString(t1.$index(autofill, "uniqueIdentifier")),
        hintsList = type$.nullable_List_dynamic._as(t1.$index(autofill, "hints")),
        firstHint = hintsList == null || J.get$isEmpty$asx(hintsList) ? null : A._asString(J.get$first$ax(hintsList)),
        editingState = A.EditingState_EditingState$fromFrameworkMessage(type$.Map_String_dynamic._as(t1.$index(autofill, "editingValue")));
      if (firstHint != null) {
        t2 = $.$get$BrowserAutofillHints__singletonInstance()._flutterToEngineMap.$index(0, firstHint);
        if (t2 == null)
          t2 = firstHint;
      } else
        t2 = null;
      return new A.AutofillInfo(editingState, uniqueIdentifier, t2, A._asStringQ(t1.$index(autofill, "hintText")));
    },
    _replace(originalText, replacementText, replacedRange) {
      var t1 = replacedRange.start,
        t2 = replacedRange.end,
        t3 = Math.min(t1, t2);
      t2 = Math.max(t1, t2);
      return B.JSString_methods.substring$2(originalText, 0, t3) + replacementText + B.JSString_methods.substring$1(originalText, t2);
    },
    TextEditingDeltaState_inferDeltaState(newEditingState, lastEditingState, lastTextEditingDeltaState) {
      var previousSelectionWasCollapsed, t9, isTextBeingRemoved, isTextBeingChangedAtActiveSelection, deletedLength, isCurrentlyComposing, textAfterDelta, isPeriodInsertion, match, actualEnd, textAfterMatch,
        t1 = lastTextEditingDeltaState.oldText,
        t2 = lastTextEditingDeltaState.deltaText,
        t3 = lastTextEditingDeltaState.deltaStart,
        t4 = lastTextEditingDeltaState.deltaEnd,
        t5 = lastTextEditingDeltaState.baseOffset,
        t6 = lastTextEditingDeltaState.extentOffset,
        t7 = lastTextEditingDeltaState.composingOffset,
        t8 = lastTextEditingDeltaState.composingExtent,
        newTextEditingDeltaState = new A.TextEditingDeltaState(t1, t2, t3, t4, t5, t6, t7, t8);
      t5 = lastEditingState == null;
      t6 = t5 ? null : lastEditingState.baseOffset;
      previousSelectionWasCollapsed = t6 == (t5 ? null : lastEditingState.extentOffset);
      t6 = t2.length;
      t9 = t6 === 0;
      isTextBeingRemoved = t9 && t4 !== -1;
      t9 = !t9;
      isTextBeingChangedAtActiveSelection = t9 && !previousSelectionWasCollapsed;
      if (isTextBeingRemoved) {
        deletedLength = t1.length - newEditingState.text.length;
        t3 = newEditingState.baseOffset;
        if (t3 !== (t5 ? null : lastEditingState.baseOffset)) {
          t3 = t4 - deletedLength;
          newTextEditingDeltaState.deltaStart = t3;
        } else {
          newTextEditingDeltaState.deltaStart = t3;
          t4 = t3 + deletedLength;
          newTextEditingDeltaState.deltaEnd = t4;
        }
      } else if (isTextBeingChangedAtActiveSelection) {
        t3 = lastEditingState.baseOffset;
        t5 = lastEditingState.extentOffset;
        if (t3 > t5)
          t3 = t5;
        newTextEditingDeltaState.deltaStart = t3;
      }
      isCurrentlyComposing = t7 != null && t7 !== t8;
      if (t9 && previousSelectionWasCollapsed && isCurrentlyComposing) {
        t7.toString;
        t3 = newTextEditingDeltaState.deltaStart = t7;
      }
      if (!(t3 === -1 && t3 === t4)) {
        textAfterDelta = A._replace(t1, t2, new A.TextRange(t3, t4));
        t3 = newEditingState.text;
        t3.toString;
        if (textAfterDelta !== t3) {
          isPeriodInsertion = B.JSString_methods.contains$1(t2, ".");
          for (t4 = A.RegExp_RegExp(A.quoteStringForRegExp(t2), true, false).allMatches$1(0, t3), t4 = new A._AllMatchesIterator(t4._re, t4.__js_helper$_string, t4.__js_helper$_start), t5 = type$.RegExpMatch, t7 = t1.length; t4.moveNext$0();) {
            match = t4.__js_helper$_current;
            t8 = (match == null ? t5._as(match) : match)._match;
            t9 = t8.index;
            if (!(t9 >= 0 && t9 + t8[0].length <= t7)) {
              actualEnd = t9 + t6 - 1;
              textAfterMatch = A._replace(t1, t2, new A.TextRange(t9, actualEnd));
            } else {
              actualEnd = isPeriodInsertion ? t9 + t8[0].length - 1 : t9 + t8[0].length;
              textAfterMatch = A._replace(t1, t2, new A.TextRange(t9, actualEnd));
            }
            if (textAfterMatch === t3) {
              newTextEditingDeltaState.deltaStart = t9;
              newTextEditingDeltaState.deltaEnd = actualEnd;
              break;
            }
          }
        }
      }
      newTextEditingDeltaState.baseOffset = newEditingState.baseOffset;
      newTextEditingDeltaState.extentOffset = newEditingState.extentOffset;
      return newTextEditingDeltaState;
    },
    EditingState$(baseOffset, composingBaseOffset, composingExtentOffset, extentOffset, text) {
      var t2,
        t1 = baseOffset == null ? 0 : baseOffset;
      t1 = Math.max(0, t1);
      t2 = extentOffset == null ? 0 : extentOffset;
      return new A.EditingState(text, t1, Math.max(0, t2), composingBaseOffset, composingExtentOffset);
    },
    EditingState_EditingState$fromFrameworkMessage(flutterEditingState) {
      var t1 = J.getInterceptor$asx(flutterEditingState),
        text = A._asStringQ(t1.$index(flutterEditingState, "text")),
        selectionBase = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(flutterEditingState, "selectionBase"))),
        selectionExtent = B.JSNumber_methods.toInt$0(A._asNum(t1.$index(flutterEditingState, "selectionExtent"))),
        composingBase = A.JsonExtensions_tryInt(flutterEditingState, "composingBase"),
        composingExtent = A.JsonExtensions_tryInt(flutterEditingState, "composingExtent");
      t1 = composingBase == null ? -1 : composingBase;
      return A.EditingState$(selectionBase, t1, composingExtent == null ? -1 : composingExtent, selectionExtent, text);
    },
    EditingState_EditingState$fromDomElement(domElement) {
      var t1, t2, t3, _null = null,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        t1 = domElement.selectionDirection;
        if ((t1 == null ? _null : t1) === "backward") {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
        } else {
          t1 = A.DomHTMLInputElementExtension_get_value(domElement);
          t2 = A.DomHTMLInputElementExtension_get_selectionStart(domElement);
          t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
          t3 = A.DomHTMLInputElementExtension_get_selectionEnd(domElement);
          return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
        }
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          t1 = domElement.selectionDirection;
          if ((t1 == null ? _null : t1) === "backward") {
            t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
            t2 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
            t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
            t3 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
            return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
          } else {
            t1 = A.DomHTMLTextAreaElementExtension_get_value(domElement);
            t2 = A.DomHTMLTextAreaElementExtension_get_selectionStart(domElement);
            t2 = t2 == null ? _null : B.JSNumber_methods.toInt$0(t2);
            t3 = A.DomHTMLTextAreaElementExtension_get_selectionEnd(domElement);
            return A.EditingState$(t2, -1, -1, t3 == null ? _null : B.JSNumber_methods.toInt$0(t3), t1);
          }
        } else
          throw A.wrapException(A.UnsupportedError$("Initialized with unsupported input type"));
      }
    },
    InputConfiguration$fromFrameworkMessage(flutterInputConfiguration) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10,
        _s9_ = "inputType",
        _s8_ = "autofill",
        t1 = A.JsonExtensions_tryInt(flutterInputConfiguration, "viewId");
      if (t1 == null)
        t1 = 0;
      t2 = J.getInterceptor$asx(flutterInputConfiguration);
      t3 = type$.Map_String_dynamic;
      t4 = A._asString(J.$index$asx(t3._as(t2.$index(flutterInputConfiguration, _s9_)), "name"));
      t5 = A._asBoolQ(J.$index$asx(t3._as(t2.$index(flutterInputConfiguration, _s9_)), "decimal"));
      t6 = A._asBoolQ(J.$index$asx(t3._as(t2.$index(flutterInputConfiguration, _s9_)), "isMultiline"));
      t4 = A.EngineInputType_fromName(t4, t5 === true, t6 === true);
      t5 = A._asStringQ(t2.$index(flutterInputConfiguration, "inputAction"));
      if (t5 == null)
        t5 = "TextInputAction.done";
      t6 = A._asBoolQ(t2.$index(flutterInputConfiguration, "obscureText"));
      t7 = A._asBoolQ(t2.$index(flutterInputConfiguration, "readOnly"));
      t8 = A._asBoolQ(t2.$index(flutterInputConfiguration, "autocorrect"));
      t9 = A.TextCapitalizationConfig$fromInputConfiguration(A._asString(t2.$index(flutterInputConfiguration, "textCapitalization")));
      t3 = t2.containsKey$1(flutterInputConfiguration, _s8_) ? A.AutofillInfo_AutofillInfo$fromFrameworkMessage(t3._as(t2.$index(flutterInputConfiguration, _s8_)), B.TextCapitalizationConfig_TextCapitalization_3) : null;
      t10 = A.JsonExtensions_tryInt(flutterInputConfiguration, "viewId");
      if (t10 == null)
        t10 = 0;
      t10 = A.EngineAutofillForm_fromFrameworkMessage(t10, type$.nullable_Map_String_dynamic._as(t2.$index(flutterInputConfiguration, _s8_)), type$.nullable_List_dynamic._as(t2.$index(flutterInputConfiguration, "fields")));
      t2 = A._asBoolQ(t2.$index(flutterInputConfiguration, "enableDeltaModel"));
      return new A.InputConfiguration(t1, t4, t5, t7 === true, t6 === true, t8 !== false, t2 === true, t3, t10, t9);
    },
    GloballyPositionedTextEditingStrategy$(owner) {
      return new A.GloballyPositionedTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    DefaultTextEditingStrategy__moveFocusToFlutterView(element, view, removeElement) {
      A.Timer_Timer(B.Duration_0, new A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure(element, view, removeElement));
    },
    saveForms() {
      $.formsOnTheDom.forEach$1(0, new A.saveForms_closure());
    },
    cleanForms() {
      var t1, t2, t3;
      for (t1 = $.formsOnTheDom.get$values(0), t2 = A._instanceType(t1), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3.remove();
      }
      $.formsOnTheDom.clear$0(0);
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(encodedGeometry) {
      var t1 = J.getInterceptor$asx(encodedGeometry),
        transformList = A.List_List$from(J.map$1$1$ax(type$.List_dynamic._as(t1.$index(encodedGeometry, "transform")), new A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure(), type$.dynamic), true, type$.double);
      return new A.EditableTextGeometry(A._asNum(t1.$index(encodedGeometry, "width")), A._asNum(t1.$index(encodedGeometry, "height")), new Float32Array(A._ensureNativeList(transformList)));
    },
    float64ListToCssTransform(matrix) {
      var transformKind = A.transformKindOf(matrix);
      if (transformKind === B.TransformKind_1)
        return "matrix(" + A.S(matrix[0]) + "," + A.S(matrix[1]) + "," + A.S(matrix[4]) + "," + A.S(matrix[5]) + "," + A.S(matrix[12]) + "," + A.S(matrix[13]) + ")";
      else if (transformKind === B.TransformKind_2)
        return A.float64ListToCssTransform3d(matrix);
      else
        return "none";
    },
    transformKindOf(matrix) {
      if (!(matrix[15] === 1 && matrix[14] === 0 && matrix[11] === 0 && matrix[10] === 1 && matrix[9] === 0 && matrix[8] === 0 && matrix[7] === 0 && matrix[6] === 0 && matrix[3] === 0 && matrix[2] === 0))
        return B.TransformKind_2;
      if (matrix[0] === 1 && matrix[1] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[12] === 0 && matrix[13] === 0)
        return B.TransformKind_0;
      else
        return B.TransformKind_1;
    },
    float64ListToCssTransform3d(matrix) {
      var t1 = matrix[0];
      if (t1 === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 && matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 && matrix[14] === 0 && matrix[15] === 1)
        return "translate3d(" + A.S(matrix[12]) + "px, " + A.S(matrix[13]) + "px, 0px)";
      else
        return "matrix3d(" + A.S(t1) + "," + A.S(matrix[1]) + "," + A.S(matrix[2]) + "," + A.S(matrix[3]) + "," + A.S(matrix[4]) + "," + A.S(matrix[5]) + "," + A.S(matrix[6]) + "," + A.S(matrix[7]) + "," + A.S(matrix[8]) + "," + A.S(matrix[9]) + "," + A.S(matrix[10]) + "," + A.S(matrix[11]) + "," + A.S(matrix[12]) + "," + A.S(matrix[13]) + "," + A.S(matrix[14]) + "," + A.S(matrix[15]) + ")";
    },
    transformRectWithMatrix(transform, rect) {
      var t1 = $.$get$_tempRectData();
      t1[0] = rect.left;
      t1[1] = rect.top;
      t1[2] = rect.right;
      t1[3] = rect.bottom;
      A.transformLTRB(transform, t1);
      return new A.Rect(t1[0], t1[1], t1[2], t1[3]);
    },
    transformLTRB(transform, ltrb) {
      var t2, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, argStorage, w,
        t1 = $.$get$_tempPointData();
      t1[0] = ltrb[0];
      t1[4] = ltrb[1];
      t1[8] = 0;
      t1[12] = 1;
      t1[1] = ltrb[2];
      t1[5] = ltrb[1];
      t1[9] = 0;
      t1[13] = 1;
      t1[2] = ltrb[0];
      t1[6] = ltrb[3];
      t1[10] = 0;
      t1[14] = 1;
      t1[3] = ltrb[2];
      t1[7] = ltrb[3];
      t1[11] = 0;
      t1[15] = 1;
      t2 = $.$get$_tempPointMatrix()._m4storage;
      m00 = t2[0];
      m01 = t2[4];
      m02 = t2[8];
      m03 = t2[12];
      m10 = t2[1];
      m11 = t2[5];
      m12 = t2[9];
      m13 = t2[13];
      m20 = t2[2];
      m21 = t2[6];
      m22 = t2[10];
      m23 = t2[14];
      m30 = t2[3];
      m31 = t2[7];
      m32 = t2[11];
      m33 = t2[15];
      argStorage = transform._m4storage;
      t2[0] = m00 * argStorage[0] + m01 * argStorage[4] + m02 * argStorage[8] + m03 * argStorage[12];
      t2[4] = m00 * argStorage[1] + m01 * argStorage[5] + m02 * argStorage[9] + m03 * argStorage[13];
      t2[8] = m00 * argStorage[2] + m01 * argStorage[6] + m02 * argStorage[10] + m03 * argStorage[14];
      t2[12] = m00 * argStorage[3] + m01 * argStorage[7] + m02 * argStorage[11] + m03 * argStorage[15];
      t2[1] = m10 * argStorage[0] + m11 * argStorage[4] + m12 * argStorage[8] + m13 * argStorage[12];
      t2[5] = m10 * argStorage[1] + m11 * argStorage[5] + m12 * argStorage[9] + m13 * argStorage[13];
      t2[9] = m10 * argStorage[2] + m11 * argStorage[6] + m12 * argStorage[10] + m13 * argStorage[14];
      t2[13] = m10 * argStorage[3] + m11 * argStorage[7] + m12 * argStorage[11] + m13 * argStorage[15];
      t2[2] = m20 * argStorage[0] + m21 * argStorage[4] + m22 * argStorage[8] + m23 * argStorage[12];
      t2[6] = m20 * argStorage[1] + m21 * argStorage[5] + m22 * argStorage[9] + m23 * argStorage[13];
      t2[10] = m20 * argStorage[2] + m21 * argStorage[6] + m22 * argStorage[10] + m23 * argStorage[14];
      t2[14] = m20 * argStorage[3] + m21 * argStorage[7] + m22 * argStorage[11] + m23 * argStorage[15];
      t2[3] = m30 * argStorage[0] + m31 * argStorage[4] + m32 * argStorage[8] + m33 * argStorage[12];
      t2[7] = m30 * argStorage[1] + m31 * argStorage[5] + m32 * argStorage[9] + m33 * argStorage[13];
      t2[11] = m30 * argStorage[2] + m31 * argStorage[6] + m32 * argStorage[10] + m33 * argStorage[14];
      t2[15] = m30 * argStorage[3] + m31 * argStorage[7] + m32 * argStorage[11] + m33 * argStorage[15];
      w = argStorage[15];
      if (w === 0)
        w = 1;
      ltrb[0] = Math.min(Math.min(Math.min(t1[0], t1[1]), t1[2]), t1[3]) / w;
      ltrb[1] = Math.min(Math.min(Math.min(t1[4], t1[5]), t1[6]), t1[7]) / w;
      ltrb[2] = Math.max(Math.max(Math.max(t1[0], t1[1]), t1[2]), t1[3]) / w;
      ltrb[3] = Math.max(Math.max(Math.max(t1[4], t1[5]), t1[6]), t1[7]) / w;
    },
    colorValueToCssString(value) {
      var hexValue, t1;
      if (value === 4278190080)
        return "#000000";
      if ((value & 4278190080) >>> 0 === 4278190080) {
        hexValue = B.JSInt_methods.toRadixString$1(value & 16777215, 16);
        switch (hexValue.length) {
          case 1:
            return "#00000" + hexValue;
          case 2:
            return "#0000" + hexValue;
          case 3:
            return "#000" + hexValue;
          case 4:
            return "#00" + hexValue;
          case 5:
            return "#0" + hexValue;
          default:
            return "#" + hexValue;
        }
      } else {
        t1 = "" + "rgba(" + B.JSInt_methods.toString$0(value >>> 16 & 255) + "," + B.JSInt_methods.toString$0(value >>> 8 & 255) + "," + B.JSInt_methods.toString$0(value & 255) + "," + B.JSNumber_methods.toString$0((value >>> 24 & 255) / 255) + ")";
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    _fallbackFontFamily() {
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0) {
        var t1 = $.$get$browser().get$_userAgent();
        t1 = B.JSString_methods.contains$1(t1, "OS 15_");
      } else
        t1 = false;
      if (t1)
        return "BlinkMacSystemFont";
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 || $.$get$browser().get$operatingSystem() === B.OperatingSystem_4)
        return "-apple-system, BlinkMacSystemFont";
      return "Arial";
    },
    canonicalizeFontFamily(fontFamily) {
      if (B.Set_GbU0l.contains$1(0, fontFamily))
        return fontFamily;
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 || $.$get$browser().get$operatingSystem() === B.OperatingSystem_4)
        if (fontFamily === ".SF Pro Text" || fontFamily === ".SF Pro Display" || fontFamily === ".SF UI Text" || fontFamily === ".SF UI Display")
          return A._fallbackFontFamily();
      return '"' + A.S(fontFamily) + '", ' + A._fallbackFontFamily() + ", sans-serif";
    },
    listEquals(a, b) {
      var index;
      if (a == null)
        return b == null;
      if (b == null || a.length !== b.length)
        return false;
      for (index = 0; index < a.length; ++index)
        if (!J.$eq$(a[index], b[index]))
          return false;
      return true;
    },
    JsonExtensions_tryInt(_this, propertyName) {
      var t1 = A._asNumQ(J.$index$asx(_this, propertyName));
      return t1 == null ? null : B.JSNumber_methods.toInt$0(t1);
    },
    setElementStyle(element, $name, value) {
      A.DomCSSStyleDeclarationExtension_setProperty(element.style, $name, value);
    },
    setThemeColor(color) {
      var theme = self.document.querySelector("#flutterweb-theme");
      if (color != null) {
        if (theme == null) {
          theme = A.DomDocumentExtension_createElement(self.document, "meta");
          theme.id = "flutterweb-theme";
          theme.name = "theme-color";
          self.document.head.append(theme);
        }
        theme.content = A.colorValueToCssString(color.value);
      } else if (theme != null)
        theme.remove();
    },
    LruCache$(maximumSize, $K, $V) {
      var t1 = $K._eval$1("@<0>")._bind$1($V),
        t2 = new A._DoubleLinkedQueueSentinel(t1._eval$1("_DoubleLinkedQueueSentinel<+key,value(1,2)>"));
      t2._previousLink = t2;
      t2._nextLink = t2;
      return new A.LruCache(maximumSize, new A.DoubleLinkedQueue(t2, t1._eval$1("DoubleLinkedQueue<+key,value(1,2)>")), A.LinkedHashMap_LinkedHashMap$_empty($K, t1._eval$1("DoubleLinkedQueueEntry<+key,value(1,2)>")), t1._eval$1("LruCache<1,2>"));
    },
    Matrix4$identity() {
      var t1 = new Float32Array(16);
      t1[15] = 1;
      t1[0] = 1;
      t1[5] = 1;
      t1[10] = 1;
      return new A.Matrix4(t1);
    },
    Matrix4$fromFloat32List(_m4storage) {
      return new A.Matrix4(_m4storage);
    },
    CustomElementDimensionsProvider$(_hostElement, onDprChange) {
      var t1 = new A.CustomElementDimensionsProvider(_hostElement, new A._AsyncBroadcastStreamController(null, null, type$._AsyncBroadcastStreamController_nullable_Size));
      t1.CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange);
      return t1;
    },
    DimensionsProvider_DimensionsProvider$create(hostElement) {
      var t1, resizeEventTarget;
      if (hostElement != null) {
        t1 = $.$get$DisplayDprStream_instance()._dprStreamController;
        return A.CustomElementDimensionsProvider$(hostElement, new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")));
      } else {
        t1 = new A.FullPageDimensionsProvider(new A._AsyncBroadcastStreamController(null, null, type$._AsyncBroadcastStreamController_nullable_Size));
        resizeEventTarget = self.window.visualViewport;
        if (resizeEventTarget == null)
          resizeEventTarget = self.window;
        t1.__FullPageDimensionsProvider__domResizeSubscription_A = A.DomSubscription$(resizeEventTarget, "resize", t1.get$_onVisualViewportResize());
        return t1;
      }
    },
    EmbeddingStrategy_EmbeddingStrategy$create(hostElement) {
      var t1, t2, t3, _s1_ = "0", _s4_ = "none";
      if (hostElement != null) {
        A.DomElementExtension_clearChildren(hostElement);
        t1 = A.jsify("custom-element");
        if (t1 == null)
          t1 = type$.Object._as(t1);
        hostElement.setAttribute("flt-embedding", t1);
        return new A.CustomElementEmbeddingStrategy(hostElement);
      } else {
        t1 = self.document.body;
        t1.toString;
        t2 = new A.FullPageEmbeddingStrategy(t1);
        t3 = A.jsify("full-page");
        if (t3 == null)
          t3 = type$.Object._as(t3);
        t1.setAttribute("flt-embedding", t3);
        t2._applyViewportMeta$0();
        A.setElementStyle(t1, "position", "fixed");
        A.setElementStyle(t1, "top", _s1_);
        A.setElementStyle(t1, "right", _s1_);
        A.setElementStyle(t1, "bottom", _s1_);
        A.setElementStyle(t1, "left", _s1_);
        A.setElementStyle(t1, "overflow", "hidden");
        A.setElementStyle(t1, "padding", _s1_);
        A.setElementStyle(t1, "margin", _s1_);
        A.setElementStyle(t1, "user-select", _s4_);
        A.setElementStyle(t1, "-webkit-user-select", _s4_);
        A.setElementStyle(t1, "touch-action", _s4_);
        return t2;
      }
    },
    StyleManager_attachGlobalStyles(cssSelectorPrefix, node, styleId, styleNonce) {
      var style = A.DomDocumentExtension_createElement(self.document, "style");
      if (styleNonce != null)
        style.nonce = styleNonce;
      style.id = styleId;
      node.appendChild(style);
      A.applyGlobalCssRulesToSheet(style, cssSelectorPrefix, "normal normal 14px sans-serif");
    },
    applyGlobalCssRulesToSheet(styleElement, cssSelectorPrefix, defaultCssFont) {
      var e, t1, exception;
      styleElement.append(self.document.createTextNode(cssSelectorPrefix + " flt-scene-host {  font: " + defaultCssFont + ";}" + cssSelectorPrefix + " flt-semantics input[type=range] {  appearance: none;  -webkit-appearance: none;  width: 100%;  position: absolute;  border: none;  top: 0;  right: 0;  bottom: 0;  left: 0;}" + cssSelectorPrefix + " input::selection {  background-color: transparent;}" + cssSelectorPrefix + " textarea::selection {  background-color: transparent;}" + cssSelectorPrefix + " flt-semantics input," + cssSelectorPrefix + " flt-semantics textarea," + cssSelectorPrefix + ' flt-semantics [contentEditable="true"] {  caret-color: transparent;}' + cssSelectorPrefix + " .flt-text-editing::placeholder {  opacity: 0;}" + cssSelectorPrefix + ":focus { outline: none;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " * {  -webkit-tap-highlight-color: transparent;}" + cssSelectorPrefix + " flt-semantics input[type=range]::-webkit-slider-thumb {  -webkit-appearance: none;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " flt-paragraph," + cssSelectorPrefix + " flt-span {  line-height: 100%;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_0 || $.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:hover," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:focus," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:active {  opacity: 0 !important;}"));
      t1 = $.$get$browser().get$_userAgent();
      if (B.JSString_methods.contains$1(t1, "Edg/"))
        try {
          styleElement.append(self.document.createTextNode(cssSelectorPrefix + " input::-ms-reveal {  display: none;}"));
        } catch (exception) {
          t1 = A.unwrapException(exception);
          if (type$.JavaScriptObject._is(t1)) {
            e = t1;
            self.window.console.warn(J.toString$0$(e));
          } else
            throw exception;
        }
    },
    ViewConstraints_ViewConstraints$fromJs(constraints, currentLogicalSize) {
      var t1, t2, t3, t4, t5;
      if (constraints == null) {
        t1 = currentLogicalSize._dx;
        t2 = currentLogicalSize._dy;
        return new A.ViewConstraints(t1, t1, t2, t2);
      }
      t1 = constraints.minWidth;
      t2 = currentLogicalSize._dx;
      if (t1 == null)
        t1 = t2;
      t3 = constraints.minHeight;
      t4 = currentLogicalSize._dy;
      if (t3 == null)
        t3 = t4;
      t5 = constraints.maxWidth;
      t2 = t5 == null ? t2 : t5;
      t5 = constraints.maxHeight;
      return new A.ViewConstraints(t1, t2, t3, t5 == null ? t4 : t5);
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.callback = _._datetime = _._timer = null;
    },
    AppBootstrap: function AppBootstrap(t0, t1) {
      this._initializeEngine = t0;
      this._runApp = t1;
    },
    AppBootstrap_prepareEngineInitializer_closure: function AppBootstrap_prepareEngineInitializer_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap_prepareEngineInitializer_closure0: function AppBootstrap_prepareEngineInitializer_closure0(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareAppRunner_closure: function AppBootstrap__prepareAppRunner_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareFlutterApp_closure: function AppBootstrap__prepareFlutterApp_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareFlutterApp_closure0: function AppBootstrap__prepareFlutterApp_closure0(t0) {
      this.$this = t0;
    },
    CkCanvas: function CkCanvas(t0) {
      this.skCanvas = t0;
    },
    _canvasKitJsUrls_closure: function _canvasKitJsUrls_closure() {
    },
    DisplayCanvasFactory: function DisplayCanvasFactory(t0, t1, t2, t3) {
      var _ = this;
      _.createCanvas = t0;
      _.__DisplayCanvasFactory_baseCanvas_FI = $;
      _._liveCanvases = t1;
      _._cache = t2;
      _.$ti = t3;
    },
    HtmlViewEmbedder: function HtmlViewEmbedder(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.sceneHost = t0;
      _.rasterizer = t1;
      _._context = t2;
      _._currentCompositionParams = t3;
      _._viewClipChains = t4;
      _._viewsToRecomposite = t5;
      _._compositionOrder = t6;
      _._activeCompositionOrder = t7;
      _._activeRendering = t8;
      _.debugBoundsCanvas = null;
      _.__HtmlViewEmbedder__frameSize_A = $;
      _._clipPathCount = 0;
      _._svgPathDefs = null;
      _._svgClipDefs = t9;
    },
    HtmlViewEmbedder_getOverlayCanvases_closure: function HtmlViewEmbedder_getOverlayCanvases_closure() {
    },
    HtmlViewEmbedder__updateDomForNewRendering_closure: function HtmlViewEmbedder__updateDomForNewRendering_closure() {
    },
    HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay: function HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay(t0, t1) {
      this.$this = t0;
      this.indexMap = t1;
    },
    MutatorsStack: function MutatorsStack(t0) {
      this._mutators = t0;
    },
    EmbedderFrameContext: function EmbedderFrameContext(t0, t1) {
      this.pictureRecordersCreatedDuringPreroll = t0;
      this.pictureRecorders = t1;
      this.viewCount = 0;
    },
    SkiaFontCollection: function SkiaFontCollection(t0, t1, t2, t3, t4) {
      var _ = this;
      _._downloadedFontFamilies = t0;
      _.__SkiaFontCollection_fontFallbackManager_AI = $;
      _._unregisteredFonts = t1;
      _._registeredFonts = t2;
      _.registeredFallbackFonts = t3;
      _.familyToFontMap = t4;
      _.skFontCollection = _._fontProvider = null;
    },
    SkiaFontCollection__registerWithFontProvider_closure: function SkiaFontCollection__registerWithFontProvider_closure() {
    },
    SkiaFontCollection__registerWithFontProvider_closure0: function SkiaFontCollection__registerWithFontProvider_closure0() {
    },
    SkiaFontCollection_registerDownloadedFonts_makeRegisterFont: function SkiaFontCollection_registerDownloadedFonts_makeRegisterFont() {
    },
    RegisteredFont: function RegisteredFont(t0, t1, t2) {
      this.family = t0;
      this.bytes = t1;
      this.typeface = t2;
    },
    UnregisteredFont: function UnregisteredFont(t0, t1, t2) {
      this.bytes = t0;
      this.url = t1;
      this.family = t2;
    },
    FontDownloadResult: function FontDownloadResult(t0, t1, t2) {
      this.assetName = t0;
      this.font = t1;
      this.error = t2;
    },
    SkiaFallbackRegistry: function SkiaFallbackRegistry(t0) {
      this.fontCollection = t0;
    },
    Layer: function Layer() {
    },
    PrerollContext: function PrerollContext(t0, t1) {
      this.viewEmbedder = t0;
      this.mutatorsStack = t1;
    },
    PaintContext: function PaintContext(t0, t1, t2) {
      this.internalNodesCanvas = t0;
      this.leafNodesCanvas = t1;
      this.viewEmbedder = t2;
    },
    ContainerLayer: function ContainerLayer() {
    },
    RootLayer: function RootLayer(t0, t1) {
      this._layers = t0;
      this.parent = null;
      this.paintBounds = t1;
    },
    LayerScene: function LayerScene(t0) {
      this.layerTree = t0;
    },
    LayerSceneBuilder: function LayerSceneBuilder(t0) {
      this.rootLayer = t0;
      this.__LayerSceneBuilder_currentLayer_A = $;
    },
    LayerTree: function LayerTree(t0) {
      this.rootLayer = t0;
    },
    Frame: function Frame(t0, t1, t2) {
      this.canvas = t0;
      this.rasterCache = t1;
      this.viewEmbedder = t2;
    },
    Frame_raster_closure: function Frame_raster_closure(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    Frame_raster_closure0: function Frame_raster_closure0(t0, t1, t2) {
      this.$this = t0;
      this.layerTree = t1;
      this.ignoreRasterCache = t2;
    },
    CompositorContext: function CompositorContext() {
    },
    MultiSurfaceRasterizer: function MultiSurfaceRasterizer(t0) {
      this._viewRasterizers = t0;
    },
    MultiSurfaceRasterizer_createViewRasterizer_closure: function MultiSurfaceRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure: function MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure(t0) {
      this.bytes = t0;
    },
    MultiSurfaceViewRasterizer: function MultiSurfaceViewRasterizer(t0, t1, t2, t3, t4) {
      var _ = this;
      _.displayFactory = t0;
      _.view = t1;
      _.queue = t2;
      _.currentFrameSize = t3;
      _.context = t4;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    MultiSurfaceViewRasterizer_displayFactory_closure: function MultiSurfaceViewRasterizer_displayFactory_closure() {
    },
    CkNWayCanvas: function CkNWayCanvas(t0) {
      this._canvases = t0;
    },
    _finalizationRegistry_closure: function _finalizationRegistry_closure() {
    },
    NativeMemoryFinalizationRegistry: function NativeMemoryFinalizationRegistry() {
    },
    UniqueRef: function UniqueRef(t0, t1) {
      this._nativeObject = null;
      this._debugOwnerLabel = t0;
      this.$ti = t1;
    },
    OffscreenCanvasRasterizer: function OffscreenCanvasRasterizer(t0, t1) {
      this.offscreenSurface = t0;
      this._viewRasterizers = t1;
    },
    OffscreenCanvasRasterizer_createViewRasterizer_closure: function OffscreenCanvasRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    OffscreenCanvasViewRasterizer: function OffscreenCanvasViewRasterizer(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rasterizer = t0;
      _.displayFactory = t1;
      _.view = t2;
      _.queue = t3;
      _.currentFrameSize = t4;
      _.context = t5;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    OffscreenCanvasViewRasterizer_displayFactory_closure: function OffscreenCanvasViewRasterizer_displayFactory_closure() {
    },
    Rendering: function Rendering(t0) {
      this.entities = t0;
    },
    RenderingEntity: function RenderingEntity() {
    },
    RenderingRenderCanvas: function RenderingRenderCanvas(t0) {
      this.pictures = t0;
      this.displayCanvas = null;
    },
    RenderingPlatformView: function RenderingPlatformView(t0) {
      this.viewId = t0;
      this.debugComputedBounds = null;
    },
    CkPaint: function CkPaint(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.skiaObject = t0;
      _.__CkPaint__ref_F = $;
      _._imageFilter = null;
      _._blendMode = t1;
      _._style = t2;
      _._strokeWidth = 0;
      _._strokeCap = t3;
      _._strokeJoin = t4;
      _._isAntiAlias = true;
      _._color = 4278190080;
      _._invertColors = false;
      _._ckMaskFilter = _._maskFilter = _._shader = _._originalColorFilter = null;
      _._filterQuality = t5;
      _._effectiveColorFilter = _._engineColorFilter = null;
    },
    CkPicture: function CkPicture() {
      this.__CkPicture__ref_F = $;
    },
    CkPictureRecorder: function CkPictureRecorder() {
      this._recordingCanvas = this._skRecorder = null;
    },
    Rasterizer: function Rasterizer() {
    },
    ViewRasterizer: function ViewRasterizer() {
    },
    DisplayCanvas: function DisplayCanvas() {
    },
    RenderQueue: function RenderQueue() {
      this.next = this.current = null;
    },
    RenderCanvas: function RenderCanvas(t0, t1) {
      var _ = this;
      _.hostElement = t0;
      _.canvasElement = t1;
      _._pixelHeight = _._pixelWidth = 0;
      _.__RenderCanvas_renderContext2d_FI = _.__RenderCanvas_renderContext_FI = $;
      _._currentDevicePixelRatio = -1;
    },
    CanvasKitVariant: function CanvasKitVariant(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    CanvasKitRenderer: function CanvasKitRenderer(t0, t1, t2) {
      var _ = this;
      _._initialized = null;
      _.__CanvasKitRenderer__fontCollection_FI = $;
      _._rasterizer = t0;
      _.pictureToImageSurface = t1;
      _._onViewDisposedListener = _._onViewCreatedListener = null;
      _._rasterizers = t2;
    },
    CanvasKitRenderer_initialize_closure: function CanvasKitRenderer_initialize_closure(t0) {
      this.$this = t0;
    },
    Surface: function Surface(t0, t1, t2) {
      var _ = this;
      _._surface = null;
      _.useOffscreenCanvas = t0;
      _.isDisplayCanvas = t1;
      _._forceNewContext = true;
      _._canvasElement = _._offscreenCanvas = _._skiaCacheBytes = _._glContext = _._grContext = _._cachedContextRestoredListener = _._cachedContextLostListener = null;
      _.hostElement = t2;
      _._stencilBits = _._sampleCount = _._currentDevicePixelRatio = _._pixelHeight = _._pixelWidth = -1;
      _._currentSurfaceSize = _._currentCanvasPhysicalSize = null;
    },
    CkSurface: function CkSurface(t0, t1) {
      this.surface = t0;
      this._glContext = t1;
      this._isDisposed = false;
    },
    CkParagraphStyle: function CkParagraphStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.skParagraphStyle = t0;
      _.__engine$_textAlign = t1;
      _.__engine$_textDirection = t2;
      _._fontWeight = t3;
      _._fontStyle = t4;
      _.__engine$_maxLines = t5;
      _._originalFontFamily = t6;
      _._effectiveFontFamily = t7;
      _._fontSize = t8;
      _.__engine$_height = t9;
      _._textHeightBehavior = t10;
      _.__engine$_strutStyle = t11;
      _.__engine$_ellipsis = t12;
      _.__engine$_locale = t13;
    },
    CkTextStyle: function CkTextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22) {
      var _ = this;
      _.color = t0;
      _.decoration = t1;
      _.decorationColor = t2;
      _.decorationStyle = t3;
      _.decorationThickness = t4;
      _.fontWeight = t5;
      _.fontStyle = t6;
      _.textBaseline = t7;
      _.originalFontFamily = t8;
      _.effectiveFontFamily = t9;
      _.originalFontFamilyFallback = t10;
      _.effectiveFontFamilyFallback = t11;
      _.fontSize = t12;
      _.letterSpacing = t13;
      _.wordSpacing = t14;
      _.height = t15;
      _.leadingDistribution = t16;
      _.locale = t17;
      _.background = t18;
      _.foreground = t19;
      _.shadows = t20;
      _.fontFeatures = t21;
      _.fontVariations = t22;
      _.__CkTextStyle_skTextStyle_FI = _.__CkTextStyle_combinedFontFamilies_FI = $;
    },
    CkTextStyle_skTextStyle_closure: function CkTextStyle_skTextStyle_closure(t0) {
      this.$this = t0;
    },
    CkStrutStyle: function CkStrutStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _._fontFamily = t0;
      _.__engine$_fontFamilyFallback = t1;
      _._fontSize = t2;
      _.__engine$_height = t3;
      _._leading = t4;
      _._fontWeight = t5;
      _._fontStyle = t6;
      _._forceStrutHeight = t7;
      _._leadingDistribution = t8;
    },
    CkParagraph: function CkParagraph(t0) {
      var _ = this;
      _.__CkParagraph__ref_F = $;
      _._lastLayoutConstraints = -1 / 0;
      _._paragraphStyle = t0;
      _._alphabeticBaseline = 0;
      _._didExceedMaxLines = false;
      _.__engine$_width = _._minIntrinsicWidth = _._maxIntrinsicWidth = _._longestLine = _._ideographicBaseline = _.__engine$_height = 0;
      _.__CkParagraph__boxesForPlaceholders_A = $;
    },
    CkLineMetrics: function CkLineMetrics(t0) {
      this.skLineMetrics = t0;
    },
    CkParagraphBuilder: function CkParagraphBuilder(t0, t1, t2, t3) {
      var _ = this;
      _._paragraphBuilder = t0;
      _._style = t1;
      _._placeholderCount = 0;
      _._placeholderScales = t2;
      _._styleStack = t3;
    },
    _computeCombinedFontFamilies_closure: function _computeCombinedFontFamilies_closure(t0) {
      this.fontFamily = t0;
    },
    IntlSegmenterGranularity: function IntlSegmenterGranularity(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    CanvasKitError: function CanvasKitError(t0) {
      this.message = t0;
    },
    ClipboardMessageHandler: function ClipboardMessageHandler(t0, t1) {
      this._copyToClipboardStrategy = t0;
      this._pasteFromClipboardStrategy = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure: function ClipboardMessageHandler_setDataMethodCall_closure(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_setDataMethodCall_closure0: function ClipboardMessageHandler_setDataMethodCall_closure0(t0, t1) {
      this._box_0 = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall_closure: function ClipboardMessageHandler_getDataMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_getDataMethodCall_closure0: function ClipboardMessageHandler_getDataMethodCall_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    ClipboardMessageHandler_getDataMethodCall__closure: function ClipboardMessageHandler_getDataMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure: function ClipboardMessageHandler_hasStringsMethodCall_closure(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall_closure0: function ClipboardMessageHandler_hasStringsMethodCall_closure0(t0) {
      this.callback = t0;
    },
    ClipboardMessageHandler_hasStringsMethodCall__closure: function ClipboardMessageHandler_hasStringsMethodCall__closure(t0) {
      this.callback = t0;
    },
    ClipboardAPICopyStrategy: function ClipboardAPICopyStrategy() {
    },
    ClipboardAPIPasteStrategy: function ClipboardAPIPasteStrategy() {
    },
    ExecCommandCopyStrategy: function ExecCommandCopyStrategy() {
    },
    ExecCommandPasteStrategy: function ExecCommandPasteStrategy() {
    },
    FlutterConfiguration: function FlutterConfiguration() {
      this._configuration = null;
    },
    EngineFlutterDisplay: function EngineFlutterDisplay(t0) {
      this.size = t0;
      this._debugDevicePixelRatioOverride = null;
    },
    ScreenOrientation: function ScreenOrientation() {
    },
    DomConsoleExtension_get_warn_closure: function DomConsoleExtension_get_warn_closure(t0) {
      this._this = t0;
    },
    DomNavigatorExtension_get_languages_closure: function DomNavigatorExtension_get_languages_closure() {
    },
    HttpFetchResponseImpl: function HttpFetchResponseImpl(t0, t1) {
      this.url = t0;
      this._domResponse = t1;
    },
    HttpFetchPayloadImpl: function HttpFetchPayloadImpl(t0) {
      this._domResponse = t0;
    },
    HttpFetchNoPayloadError: function HttpFetchNoPayloadError(t0, t1) {
      this.url = t0;
      this.status = t1;
    },
    HttpFetchError: function HttpFetchError(t0, t1) {
      this.url = t0;
      this.requestError = t1;
    },
    DomSubscription: function DomSubscription(t0, t1, t2) {
      this.type = t0;
      this.target = t1;
      this.listener = t2;
    },
    DomPoint: function DomPoint(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    createDomResizeObserver_closure: function createDomResizeObserver_closure(t0) {
      this.fn = t0;
    },
    _ttPolicy_closure: function _ttPolicy_closure() {
    },
    _DomListIterator: function _DomListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomListWrapper: function _DomListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    _DomTouchListIterator: function _DomTouchListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomTouchListWrapper: function _DomTouchListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    DomIteratorWrapper: function DomIteratorWrapper(t0, t1) {
      this.__engine$_iterator = t0;
      this.__DomIteratorWrapper__current_A = $;
      this.$ti = t1;
    },
    sendFontChangeMessage_closure: function sendFontChangeMessage_closure() {
    },
    sendFontChangeMessage__closure: function sendFontChangeMessage__closure() {
    },
    FontFallbackManager: function FontFallbackManager(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12) {
      var _ = this;
      _.registry = t0;
      _.__FontFallbackManager_downloadQueue_F = $;
      _.codePointsWithNoKnownFont = t1;
      _.knownCoveredCodePoints = t2;
      _.fallbackFonts = t3;
      _._notoSansSC = t4;
      _._notoSansTC = t5;
      _._notoSansHK = t6;
      _._notoSansJP = t7;
      _._notoSansKR = t8;
      _._notoSymbols = t9;
      _._idleFuture = t10;
      _.globalFontFallbacks = t11;
      _._codePointsToCheckAgainstFallbackFonts = t12;
      _._scheduledCodePointCheck = false;
      _.__FontFallbackManager_codePointToComponents_FI = _.__FontFallbackManager_fontComponents_FI = $;
    },
    FontFallbackManager$__closure: function FontFallbackManager$__closure() {
    },
    FontFallbackManager$__closure0: function FontFallbackManager$__closure0() {
    },
    FontFallbackManager$__closure1: function FontFallbackManager$__closure1() {
    },
    FontFallbackManager$__closure2: function FontFallbackManager$__closure2() {
    },
    FontFallbackManager$__closure3: function FontFallbackManager$__closure3() {
    },
    FontFallbackManager$__closure4: function FontFallbackManager$__closure4() {
    },
    FontFallbackManager_addMissingCodePoints_closure: function FontFallbackManager_addMissingCodePoints_closure(t0) {
      this.$this = t0;
    },
    FontFallbackManager_findFontsForMissingCodePoints_closure: function FontFallbackManager_findFontsForMissingCodePoints_closure() {
    },
    FontFallbackManager__selectFont_closure: function FontFallbackManager__selectFont_closure(t0) {
      this.$this = t0;
    },
    _UnicodePropertyLookup: function _UnicodePropertyLookup(t0, t1, t2) {
      this._boundaries = t0;
      this.__engine$_values = t1;
      this.$ti = t2;
    },
    FallbackFontDownloadQueue: function FallbackFontDownloadQueue(t0, t1, t2) {
      var _ = this;
      _.fallbackManager = t0;
      _.downloadedFonts = t1;
      _.pendingFonts = t2;
      _._idleCompleter = null;
    },
    FallbackFontDownloadQueue_startDownloads_closure: function FallbackFontDownloadQueue_startDownloads_closure(t0, t1, t2) {
      this.$this = t0;
      this.font = t1;
      this.downloadedFontFamilies = t2;
    },
    FontAsset: function FontAsset(t0, t1) {
      this.asset = t0;
      this.descriptors = t1;
    },
    FontFamily: function FontFamily(t0, t1) {
      this.name = t0;
      this.fontAssets = t1;
    },
    FontManifest: function FontManifest(t0) {
      this.families = t0;
    },
    fetchFontManifest_closure: function fetchFontManifest_closure(t0) {
      this._box_0 = t0;
    },
    fetchFontManifest_closure0: function fetchFontManifest_closure0(t0) {
      this.inputSink = t0;
    },
    fetchFontManifest_closure1: function fetchFontManifest_closure1() {
    },
    fetchFontManifest__closure: function fetchFontManifest__closure() {
    },
    FontLoadError: function FontLoadError() {
    },
    FontNotFoundError: function FontNotFoundError() {
    },
    FontDownloadError: function FontDownloadError() {
    },
    FontInvalidDataError: function FontInvalidDataError() {
    },
    AssetFontsResult: function AssetFontsResult() {
    },
    FrameTimingRecorder: function FrameTimingRecorder(t0, t1) {
      var _ = this;
      _._vsyncStartMicros = t0;
      _._buildStartMicros = t1;
      _._rasterFinishMicros = _._rasterStartMicros = _._buildFinishMicros = null;
    },
    HtmlRenderer: function HtmlRenderer() {
    },
    ResourceManager: function ResourceManager(t0) {
      this._domManager = t0;
      this._resourcesHost = null;
    },
    DebugEngineInitializationState: function DebugEngineInitializationState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    initializeEngineServices_closure: function initializeEngineServices_closure() {
    },
    initializeEngineServices_closure0: function initializeEngineServices_closure0(t0) {
      this._box_0 = t0;
    },
    initializeEngineServices__closure: function initializeEngineServices__closure(t0) {
      this._box_0 = t0;
    },
    initializeEngineServices_initializeRendererCallback: function initializeEngineServices_initializeRendererCallback() {
    },
    FlutterApp__staticInteropFactoryStub_closure: function FlutterApp__staticInteropFactoryStub_closure(t0) {
      this.removeView = t0;
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure: function FlutterEngineInitializer__staticInteropFactoryStub_closure(t0) {
      this.initializeEngine = t0;
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure0: function FlutterEngineInitializer__staticInteropFactoryStub_closure0(t0) {
      this.autoStart = t0;
    },
    FlutterAppRunner__staticInteropFactoryStub_closure: function FlutterAppRunner__staticInteropFactoryStub_closure(t0) {
      this.runApp = t0;
    },
    futureToPromise_closure: function futureToPromise_closure(t0, t1) {
      this.future = t0;
      this.T = t1;
    },
    futureToPromise__closure: function futureToPromise__closure(t0, t1) {
      this.resolver = t0;
      this.T = t1;
    },
    futureToPromise__closure0: function futureToPromise__closure0(t0) {
      this.rejecter = t0;
    },
    _kLogicalKeyToModifierGetter_closure: function _kLogicalKeyToModifierGetter_closure() {
    },
    _kLogicalKeyToModifierGetter_closure0: function _kLogicalKeyToModifierGetter_closure0() {
    },
    _kLogicalKeyToModifierGetter_closure1: function _kLogicalKeyToModifierGetter_closure1() {
    },
    _kLogicalKeyToModifierGetter_closure2: function _kLogicalKeyToModifierGetter_closure2() {
    },
    _kLogicalKeyToModifierGetter_closure3: function _kLogicalKeyToModifierGetter_closure3() {
    },
    _kLogicalKeyToModifierGetter_closure4: function _kLogicalKeyToModifierGetter_closure4() {
    },
    _kLogicalKeyToModifierGetter_closure5: function _kLogicalKeyToModifierGetter_closure5() {
    },
    _kLogicalKeyToModifierGetter_closure6: function _kLogicalKeyToModifierGetter_closure6() {
    },
    _cached_closure: function _cached_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.body = t1;
      this.T = t2;
    },
    KeyboardBinding: function KeyboardBinding(t0) {
      this.__KeyboardBinding__converter_FI = $;
      this._listeners = t0;
    },
    KeyboardBinding$__closure: function KeyboardBinding$__closure(t0) {
      this.$this = t0;
    },
    KeyboardBinding$__closure0: function KeyboardBinding$__closure0(t0) {
      this.$this = t0;
    },
    KeyboardBinding__addEventListener_loggedHandler: function KeyboardBinding__addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    KeyboardBinding__onKeyData_closure: function KeyboardBinding__onKeyData_closure(t0) {
      this._box_0 = t0;
    },
    FlutterHtmlKeyboardEvent: function FlutterHtmlKeyboardEvent(t0) {
      this._event = t0;
    },
    KeyboardConverter: function KeyboardConverter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.performDispatchKeyData = t0;
      _.onDarwin = t1;
      _._mapping = t2;
      _._dispatchKeyData = null;
      _._disposed = false;
      _._pressingRecords = t3;
      _._keyGuards = t4;
    },
    KeyboardConverter__scheduleAsyncEvent_closure: function KeyboardConverter__scheduleAsyncEvent_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.callback = t2;
      _.getData = t3;
    },
    KeyboardConverter__scheduleAsyncEvent_closure0: function KeyboardConverter__scheduleAsyncEvent_closure0(t0) {
      this._box_0 = t0;
    },
    KeyboardConverter__startGuardingKey_closure: function KeyboardConverter__startGuardingKey_closure(t0, t1, t2) {
      this.currentTimeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__startGuardingKey_closure0: function KeyboardConverter__startGuardingKey_closure0(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure: function KeyboardConverter__handleEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.eventKey = t1;
      _.event = t2;
      _.logicalKeyIsCharacter = t3;
      _.physicalKey = t4;
    },
    KeyboardConverter__handleEvent_closure0: function KeyboardConverter__handleEvent_closure0(t0, t1, t2) {
      this.timeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__handleEvent_closure1: function KeyboardConverter__handleEvent_closure1(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure2: function KeyboardConverter__handleEvent_closure2(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.logicalKey = t1;
      _.event = t2;
      _.timeStamp = t3;
    },
    KeyboardConverter__handleEvent__closure: function KeyboardConverter__handleEvent__closure(t0, t1, t2) {
      this.$this = t0;
      this.testeeLogicalKey = t1;
      this.timeStamp = t2;
    },
    KeyboardConverter_handleEvent_closure: function KeyboardConverter_handleEvent_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    ContextMenu: function ContextMenu(t0) {
      this.element = t0;
      this._enabled = true;
    },
    MouseCursor: function MouseCursor() {
    },
    preventDefaultListener_closure: function preventDefaultListener_closure() {
    },
    BrowserHistory: function BrowserHistory() {
    },
    MultiEntriesBrowserHistory: function MultiEntriesBrowserHistory(t0) {
      var _ = this;
      _.urlStrategy = t0;
      _.__BrowserHistory__unsubscribe_A = _.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = $;
      _._isDisposed = _._isTornDown = false;
    },
    MultiEntriesBrowserHistory_onPopState_closure: function MultiEntriesBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory: function SingleEntryBrowserHistory(t0, t1) {
      var _ = this;
      _.urlStrategy = t0;
      _._flutterState = t1;
      _._userProvidedRouteName = null;
      _.__BrowserHistory__unsubscribe_A = $;
      _._isDisposed = _._isTornDown = false;
    },
    SingleEntryBrowserHistory_onPopState_closure: function SingleEntryBrowserHistory_onPopState_closure() {
    },
    SingleEntryBrowserHistory_onPopState_closure0: function SingleEntryBrowserHistory_onPopState_closure0() {
    },
    NotoFont: function NotoFont(t0, t1, t2, t3, t4) {
      var _ = this;
      _.name = t0;
      _.url = t1;
      _.enabled = t2;
      _.index = t3;
      _.coverCount = 0;
      _.coverComponents = t4;
    },
    FallbackFontComponent: function FallbackFontComponent(t0) {
      this._allFonts = t0;
      this.__FallbackFontComponent__activeFonts_FI = $;
      this.coverCount = 0;
    },
    FallbackFontComponent__activeFonts_closure: function FallbackFontComponent__activeFonts_closure() {
    },
    HighContrastSupport: function HighContrastSupport(t0, t1) {
      this._listeners = t0;
      this._highContrastMediaQuery = t1;
      this.__HighContrastSupport__onHighContrastChangeListener_FI = $;
    },
    EnginePlatformDispatcher: function EnginePlatformDispatcher(t0, t1, t2, t3, t4) {
      var _ = this;
      _.__EnginePlatformDispatcher__onViewDisposedListener_A = $;
      _.accessibilityPlaceholder = t0;
      _.configuration = t1;
      _.displays = t2;
      _.__EnginePlatformDispatcher__appLifecycleState_FI = _.__EnginePlatformDispatcher_viewManager_FI = $;
      _._onMetricsChangedZone = _._onMetricsChanged = null;
      _.__EnginePlatformDispatcher__viewFocusBinding_FI = $;
      _._onTextScaleFactorChangedZone = _._onTextScaleFactorChanged = _._fontSizeObserver = _._onLocaleChangedZone = _._onLocaleChanged = _._onLocaleChangedSubscription = _._onReportTimingsZone = _._onReportTimings = _._onKeyDataZone = _._onKeyData = _._onPointerDataPacketZone = _._onPointerDataPacket = _._onDrawFrameZone = _._onDrawFrame = _._onBeginFrameZone = _._onBeginFrame = _._viewsRenderedInCurrentFrame = _._onViewFocusChangeZone = _._onViewFocusChange = null;
      _._brightnessMediaQuery = t3;
      _._onSemanticsActionEvent = _._onSemanticsEnabledChangedZone = _._onSemanticsEnabledChanged = _._onPlatformBrightnessChangedZone = _._onPlatformBrightnessChanged = _._brightnessMediaQueryListener = null;
      _._onSemanticsActionEventZone = t4;
      _._defaultRouteName = null;
    },
    EnginePlatformDispatcher_closure: function EnginePlatformDispatcher_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher_invokeOnKeyData_closure: function EnginePlatformDispatcher_invokeOnKeyData_closure(t0, t1, t2) {
      this.callback = t0;
      this.onKeyData = t1;
      this.data = t2;
    },
    EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure: function EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure(t0, t1) {
      this.registrationZone = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure: function EnginePlatformDispatcher__sendPlatformMessage_closure(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure0: function EnginePlatformDispatcher__sendPlatformMessage_closure0(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__sendPlatformMessage_closure1: function EnginePlatformDispatcher__sendPlatformMessage_closure1(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    EnginePlatformDispatcher__addLocaleChangedListener_closure: function EnginePlatformDispatcher__addLocaleChangedListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addFontSizeObserver_closure: function EnginePlatformDispatcher__addFontSizeObserver_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__setAppLifecycleState_closure: function EnginePlatformDispatcher__setAppLifecycleState_closure() {
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher_replyToPlatformMessage_closure: function EnginePlatformDispatcher_replyToPlatformMessage_closure(t0, t1) {
      this.callback = t0;
      this.data = t1;
    },
    invoke2_closure: function invoke2_closure(t0, t1, t2) {
      this.callback = t0;
      this.arg1 = t1;
      this.arg2 = t2;
    },
    ViewConfiguration0: function ViewConfiguration0() {
    },
    PlatformConfiguration: function PlatformConfiguration(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.accessibilityFeatures = t0;
      _.alwaysUse24HourFormat = t1;
      _.semanticsEnabled = t2;
      _.platformBrightness = t3;
      _.textScaleFactor = t4;
      _.locales = t5;
      _.defaultRouteName = t6;
      _.systemFontFamily = t7;
    },
    AppLifecycleState0: function AppLifecycleState0() {
    },
    _BrowserAppLifecycleState: function _BrowserAppLifecycleState(t0, t1, t2, t3) {
      var _ = this;
      _._viewManager = t0;
      _._subscriptions = t1;
      _.___BrowserAppLifecycleState__visibilityChangeListener_FI = _.___BrowserAppLifecycleState__blurListener_FI = _.___BrowserAppLifecycleState__focusListener_FI = $;
      _._appLifecycleState = t2;
      _._listeners = t3;
    },
    _BrowserAppLifecycleState__focusListener_closure: function _BrowserAppLifecycleState__focusListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__blurListener_closure: function _BrowserAppLifecycleState__blurListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__visibilityChangeListener_closure: function _BrowserAppLifecycleState__visibilityChangeListener_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding: function ViewFocusBinding(t0, t1, t2) {
      var _ = this;
      _._viewManager = t0;
      _._onViewFocusChange = t1;
      _._lastViewId = null;
      _._viewFocusDirection = t2;
      _._onViewCreatedListener = null;
      _.__ViewFocusBinding__handleKeyUp_FI = _.__ViewFocusBinding__handleKeyDown_FI = _.__ViewFocusBinding__handleFocusout_FI = _.__ViewFocusBinding__handleFocusin_FI = $;
    },
    ViewFocusBinding__handleFocusin_closure: function ViewFocusBinding__handleFocusin_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleFocusout_closure: function ViewFocusBinding__handleFocusout_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyDown_closure: function ViewFocusBinding__handleKeyDown_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyUp_closure: function ViewFocusBinding__handleKeyUp_closure(t0) {
      this.$this = t0;
    },
    PlatformViewManager: function PlatformViewManager(t0, t1, t2, t3) {
      var _ = this;
      _._factories = t0;
      _.__engine$_contents = t1;
      _._invisibleViews = t2;
      _._viewIdToType = t3;
    },
    PlatformViewManager_renderContent_closure: function PlatformViewManager_renderContent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.viewId = t1;
      _.slotName = t2;
      _.viewType = t3;
      _.params = t4;
    },
    PlatformViewMessageHandler: function PlatformViewMessageHandler(t0) {
      this._contentManager = t0;
    },
    SafariPointerEventWorkaround: function SafariPointerEventWorkaround() {
      this._listener = null;
    },
    SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure: function SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure() {
    },
    PointerBinding: function PointerBinding(t0, t1, t2) {
      var _ = this;
      _._safariWorkaround = null;
      _.view = t0;
      _._pointerDataConverter = t1;
      _._keyboardConverter = t2;
      _.__PointerBinding__adapter_A = $;
    },
    ClickDebouncer: function ClickDebouncer() {
      this._lastSentPointerUpTimeStamp = this.__engine$_state = null;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    Listener: function Listener(t0, t1, t2) {
      this.event = t0;
      this.target = t1;
      this.handler = t2;
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_loggedHandler: function _BaseAdapter_addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _WheelEventListenerMixin__convertWheelEventToPointerData_closure: function _WheelEventListenerMixin__convertWheelEventToPointerData_closure(t0) {
      this.$this = t0;
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2) {
      var _ = this;
      _._sanitizers = t0;
      _._owner = t1;
      _._listeners = t2;
      _._lastWheelEvent = null;
      _._lastWheelEventAllowedDefault = _._lastWheelEventWasTrackpad = false;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup__closure: function _PointerAdapter_setup__closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure4: function _PointerAdapter_setup_closure4(t0) {
      this.$this = t0;
    },
    _PointerDeviceState: function _PointerDeviceState(t0, t1) {
      this._pointer = null;
      this.x = t0;
      this.y = t1;
    },
    _GlobalPointerState: function _GlobalPointerState(t0) {
      this.pointers = t0;
      this.activeButtons = 0;
    },
    _GlobalPointerState_ensurePointerDeviceState_closure: function _GlobalPointerState_ensurePointerDeviceState_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    PointerDataConverter: function PointerDataConverter() {
    },
    Profiler: function Profiler() {
    },
    RawKeyboard: function RawKeyboard(t0, t1) {
      this._keydownTimers = t0;
      this._lastMetaState = 0;
      this._onMacOs = t1;
    },
    RawKeyboard$__closure: function RawKeyboard$__closure(t0) {
      this.$this = t0;
    },
    RawKeyboard_handleHtmlEvent_closure: function RawKeyboard_handleHtmlEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.timerKey = t1;
      this.event = t2;
    },
    RawKeyboard_handleHtmlEvent_closure0: function RawKeyboard_handleHtmlEvent_closure0(t0) {
      this.event = t0;
    },
    Assertiveness: function Assertiveness(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements(t0, t1) {
      this._politeElement = t0;
      this._assertiveElement = t1;
      this._appendSpace = false;
    },
    AccessibilityAnnouncements_announce_closure: function AccessibilityAnnouncements_announce_closure(t0) {
      this.messageElement = t0;
    },
    EngineAccessibilityFeatures: function EngineAccessibilityFeatures(t0) {
      this.__engine$_index = t0;
    },
    SemanticsUpdate: function SemanticsUpdate(t0) {
      this.__engine$_nodeUpdates = t0;
    },
    AccessibilityMode: function AccessibilityMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GestureMode: function GestureMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    EngineSemantics: function EngineSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.accessibilityAnnouncements = t0;
      _._semanticsEnabled = false;
      _._now = t1;
      _.semanticsHelper = t2;
      _._gestureMode = t3;
      _._gestureModeClock = null;
      _._gestureModeListeners = t4;
    },
    EngineSemantics__now_closure: function EngineSemantics__now_closure() {
    },
    EngineSemantics__getGestureModeClock_closure: function EngineSemantics__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3, t4) {
      var _ = this;
      _.semanticsHost = t0;
      _._rootSemanticsElement = null;
      _._semanticsTree = t1;
      _._attachments = t2;
      _._detachments = t3;
      _._oneTimePostUpdateCallbacks = t4;
      _._hasNodeRequestingFocus = false;
    },
    EngineSemanticsOwner_closure: function EngineSemanticsOwner_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner__finalizeTree_closure: function EngineSemanticsOwner__finalizeTree_closure(t0, t1) {
      this.$this = t0;
      this.removals = t1;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      this._semanticsPlaceholder = null;
    },
    DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._queuedStyle = _.inputConfig = _.activeTextField = null;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    _TypedDataBuffer: function _TypedDataBuffer() {
    },
    _IntBuffer: function _IntBuffer() {
    },
    Uint8Buffer: function Uint8Buffer(t0, t1) {
      this.__engine$_buffer = t0;
      this.__engine$_length = t1;
    },
    MethodCall0: function MethodCall0(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    JSONMethodCodec: function JSONMethodCodec() {
    },
    StandardMessageCodec: function StandardMessageCodec() {
    },
    StandardMessageCodec_writeValue_closure0: function StandardMessageCodec_writeValue_closure0(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec: function StandardMethodCodec() {
    },
    WriteBuffer0: function WriteBuffer0(t0, t1, t2) {
      this.__engine$_buffer = t0;
      this.__engine$_eightBytes = t1;
      this.__engine$_eightBytesAsList = t2;
    },
    ReadBuffer0: function ReadBuffer0(t0) {
      this.data = t0;
      this.__engine$_position = 0;
    },
    TextFragment: function TextFragment() {
    },
    LineBreakType: function LineBreakType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    LineBreakFragment: function LineBreakFragment(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.trailingNewlines = t1;
      _.trailingSpaces = t2;
      _.start = t3;
      _.end = t4;
    },
    BrowserAutofillHints: function BrowserAutofillHints(t0) {
      this._flutterToEngineMap = t0;
    },
    CompositionAwareMixin: function CompositionAwareMixin() {
    },
    EngineInputAction: function EngineInputAction() {
    },
    NoInputAction: function NoInputAction() {
    },
    EnterInputAction: function EnterInputAction() {
    },
    DoneInputAction: function DoneInputAction() {
    },
    GoInputAction: function GoInputAction() {
    },
    NextInputAction: function NextInputAction() {
    },
    PreviousInputAction: function PreviousInputAction() {
    },
    SearchInputAction: function SearchInputAction() {
    },
    SendInputAction: function SendInputAction() {
    },
    EngineInputType: function EngineInputType() {
    },
    NoTextInputType: function NoTextInputType() {
    },
    MultilineNoTextInputType: function MultilineNoTextInputType() {
    },
    TextInputType0: function TextInputType0() {
    },
    NumberInputType: function NumberInputType() {
    },
    DecimalInputType: function DecimalInputType() {
    },
    PhoneInputType: function PhoneInputType() {
    },
    EmailInputType: function EmailInputType() {
    },
    UrlInputType: function UrlInputType() {
    },
    MultilineInputType: function MultilineInputType() {
    },
    TextCapitalization: function TextCapitalization(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextCapitalizationConfig: function TextCapitalizationConfig(t0) {
      this.textCapitalization = t0;
    },
    EngineAutofillForm: function EngineAutofillForm(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.formElement = t0;
      _.elements = t1;
      _.items = t2;
      _.insertionReferenceNode = t3;
      _.formIdentifier = t4;
      _.viewId = t5;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(t0, t1) {
      this.$this = t0;
      this.subscriptions = t1;
    },
    EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure: function EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t0, t1, t2) {
      this.$this = t0;
      this.key = t1;
      this.element = t2;
    },
    AutofillInfo: function AutofillInfo(t0, t1, t2, t3) {
      var _ = this;
      _.editingState = t0;
      _.uniqueIdentifier = t1;
      _.autofillHint = t2;
      _.placeholder = t3;
    },
    TextEditingDeltaState: function TextEditingDeltaState(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.oldText = t0;
      _.deltaText = t1;
      _.deltaStart = t2;
      _.deltaEnd = t3;
      _.baseOffset = t4;
      _.extentOffset = t5;
      _.composingOffset = t6;
      _.composingExtent = t7;
    },
    EditingState: function EditingState(t0, t1, t2, t3, t4) {
      var _ = this;
      _.text = t0;
      _.baseOffset = t1;
      _.extentOffset = t2;
      _.composingBaseOffset = t3;
      _.composingExtentOffset = t4;
    },
    InputConfiguration: function InputConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.viewId = t0;
      _.inputType = t1;
      _.inputAction = t2;
      _.readOnly = t3;
      _.obscureText = t4;
      _.autocorrect = t5;
      _.enableDeltaModel = t6;
      _.autofill = t7;
      _.autofillGroup = t8;
      _.textCapitalization = t9;
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    SafariDesktopTextEditingStrategy: function SafariDesktopTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0() {
    },
    DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1: function DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1() {
    },
    DefaultTextEditingStrategy__moveFocusToFlutterView_closure: function DefaultTextEditingStrategy__moveFocusToFlutterView_closure(t0, t1, t2) {
      this.element = t0;
      this.view = t1;
      this.removeElement = t2;
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._positionInputElementTimer = null;
      _._canPosition = true;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    IOSTextEditingStrategy_addEventHandlers_closure: function IOSTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__addTapListener_closure: function IOSTextEditingStrategy__addTapListener_closure(t0) {
      this.$this = t0;
    },
    IOSTextEditingStrategy__schedulePlacement_closure: function IOSTextEditingStrategy__schedulePlacement_closure(t0) {
      this.$this = t0;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.isEnabled = false;
      _.domElement = null;
      _.__DefaultTextEditingStrategy_inputConfiguration_A = $;
      _.onAction = _.onChange = _.geometry = _.style = _._editingDeltaState = _.lastEditingState = null;
      _.subscriptions = t1;
      _._appendedToForm = false;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy_addEventHandlers_closure: function FirefoxTextEditingStrategy_addEventHandlers_closure(t0) {
      this.$this = t0;
    },
    TextInputCommand: function TextInputCommand() {
    },
    TextInputSetClient: function TextInputSetClient(t0, t1) {
      this.clientId = t0;
      this.configuration = t1;
    },
    TextInputUpdateConfig: function TextInputUpdateConfig() {
    },
    TextInputSetEditingState: function TextInputSetEditingState(t0) {
      this.state = t0;
    },
    TextInputShow: function TextInputShow() {
    },
    TextInputSetEditableSizeAndTransform: function TextInputSetEditableSizeAndTransform(t0) {
      this.geometry = t0;
    },
    TextInputSetStyle: function TextInputSetStyle(t0) {
      this.style = t0;
    },
    TextInputClearClient: function TextInputClearClient() {
    },
    TextInputHide: function TextInputHide() {
    },
    TextInputSetMarkedTextRect: function TextInputSetMarkedTextRect() {
    },
    TextInputSetCaretRect: function TextInputSetCaretRect() {
    },
    TextInputRequestAutofill: function TextInputRequestAutofill() {
    },
    TextInputFinishAutofillContext: function TextInputFinishAutofillContext(t0) {
      this.saveForm = t0;
    },
    saveForms_closure: function saveForms_closure() {
    },
    TextEditingChannel: function TextEditingChannel(t0) {
      this.implementation = t0;
    },
    TextEditingChannel_handleTextInput_closure: function TextEditingChannel_handleTextInput_closure(t0) {
      this.callback = t0;
    },
    HybridTextEditing: function HybridTextEditing() {
      var _ = this;
      _.__HybridTextEditing_channel_FI = $;
      _._clientId = null;
      _.isEditing = false;
      _.configuration = null;
      _.__HybridTextEditing_strategy_FI = $;
    },
    HybridTextEditing__startEditing_closure0: function HybridTextEditing__startEditing_closure0(t0) {
      this.$this = t0;
    },
    HybridTextEditing__startEditing_closure: function HybridTextEditing__startEditing_closure(t0) {
      this.$this = t0;
    },
    EditableTextStyle: function EditableTextStyle(t0, t1, t2, t3, t4) {
      var _ = this;
      _.fontSize = t0;
      _.fontWeight = t1;
      _.fontFamily = t2;
      _.textAlign = t3;
      _.textDirection = t4;
    },
    EditableTextGeometry: function EditableTextGeometry(t0, t1, t2) {
      this.width = t0;
      this.height = t1;
      this.globalTransform = t2;
    },
    EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure: function EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure() {
    },
    TransformKind: function TransformKind(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    LruCache: function LruCache(t0, t1, t2, t3) {
      var _ = this;
      _.maximumSize = t0;
      _._itemQueue = t1;
      _._itemMap = t2;
      _.$ti = t3;
    },
    BitmapSize: function BitmapSize(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    Matrix4: function Matrix4(t0) {
      this._m4storage = t0;
    },
    CustomElementDimensionsProvider: function CustomElementDimensionsProvider(t0, t1) {
      var _ = this;
      _._hostElement = t0;
      _.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = _.__CustomElementDimensionsProvider__hostElementResizeObserver_A = $;
      _._onResizeStreamController = t1;
    },
    CustomElementDimensionsProvider_closure: function CustomElementDimensionsProvider_closure(t0) {
      this.$this = t0;
    },
    CustomElementDimensionsProvider_closure0: function CustomElementDimensionsProvider_closure0(t0) {
      this.$this = t0;
    },
    DimensionsProvider: function DimensionsProvider() {
    },
    FullPageDimensionsProvider: function FullPageDimensionsProvider(t0) {
      this.__FullPageDimensionsProvider__domResizeSubscription_A = $;
      this._onResizeStreamController = t0;
    },
    DisplayDprStream: function DisplayDprStream(t0, t1, t2) {
      var _ = this;
      _._display = t0;
      _._currentDpr = t1;
      _._dprStreamController = t2;
      _.__DisplayDprStream__dprMediaQuery_A = $;
    },
    DomManager: function DomManager(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.rootElement = t0;
      _.platformViewsHost = t1;
      _.renderingHost = t2;
      _.sceneHost = t3;
      _.textEditingHost = t4;
      _.semanticsHost = t5;
      _._lastSceneElement = null;
    },
    CustomElementEmbeddingStrategy: function CustomElementEmbeddingStrategy(t0) {
      this.hostElement = t0;
      this.__CustomElementEmbeddingStrategy__rootElement_F = $;
    },
    FullPageEmbeddingStrategy: function FullPageEmbeddingStrategy(t0) {
      this.hostElement = t0;
    },
    FlutterViewManager: function FlutterViewManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dispatcher = t0;
      _._viewData = t1;
      _._jsViewOptions = t2;
      _._onViewCreatedController = t3;
      _._onViewDisposedController = t4;
    },
    GlobalHtmlAttributes: function GlobalHtmlAttributes(t0, t1) {
      this.rootElement = t0;
      this.hostElement = t1;
    },
    _hotRestartCache_closure: function _hotRestartCache_closure() {
    },
    EngineFlutterView: function EngineFlutterView() {
    },
    _EngineFlutterViewImpl: function _EngineFlutterViewImpl(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.viewId = t0;
      _.platformDispatcher = t1;
      _.embeddingStrategy = t2;
      _.__EngineFlutterView__resizeSubscription_F = $;
      _.isDisposed = false;
      _.__EngineFlutterView_pointerBinding_F = _.__EngineFlutterView_dom_FI = _.__EngineFlutterView_contextMenu_FI = _.__EngineFlutterView_mouseCursor_FI = _.__EngineFlutterView__globalHtmlAttributes_FI = $;
      _._jsViewConstraints = t3;
      _.__EngineFlutterView_semantics_FI = $;
      _._physicalSize = null;
      _._viewInsets = t4;
      _.dimensionsProvider = t5;
    },
    EngineFlutterWindow: function EngineFlutterWindow(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._browserHistory = null;
      _._endOfTheLine = t0;
      _.viewId = t1;
      _.platformDispatcher = t2;
      _.embeddingStrategy = t3;
      _.__EngineFlutterView__resizeSubscription_F = $;
      _.isDisposed = false;
      _.__EngineFlutterView_pointerBinding_F = _.__EngineFlutterView_dom_FI = _.__EngineFlutterView_contextMenu_FI = _.__EngineFlutterView_mouseCursor_FI = _.__EngineFlutterView__globalHtmlAttributes_FI = $;
      _._jsViewConstraints = t4;
      _.__EngineFlutterView_semantics_FI = $;
      _._physicalSize = null;
      _._viewInsets = t5;
      _.dimensionsProvider = t6;
    },
    EngineFlutterWindow_handleNavigationMessage_closure: function EngineFlutterWindow_handleNavigationMessage_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    ViewPadding: function ViewPadding(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    ViewConstraints: function ViewConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    ViewConstraints_toString_describe: function ViewConstraints_toString_describe() {
    },
    _DefaultTextEditingStrategy_Object_CompositionAwareMixin: function _DefaultTextEditingStrategy_Object_CompositionAwareMixin() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    JS_CONST: function JS_CONST() {
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    LateError$localNI(localName) {
      return new A.LateError("Local '" + localName + "' has not been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    SystemHash_hash2(v1, v2, seed) {
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(seed, v1), v2));
    },
    SystemHash_hash4(v1, v2, v3, v4, seed) {
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(seed, v1), v2), v3), v4));
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    TakeIterable_TakeIterable(iterable, takeCount, $E) {
      var _s9_ = "takeCount";
      A.ArgumentError_checkNotNull(takeCount, _s9_);
      A.RangeError_checkNotNegative(takeCount, _s9_);
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthTakeIterable(iterable, takeCount, $E._eval$1("EfficientLengthTakeIterable<0>"));
      return new A.TakeIterable(iterable, takeCount, $E._eval$1("TakeIterable<0>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    FollowedByIterable_FollowedByIterable$firstEfficient(first, second, $E) {
      if ($E._eval$1("EfficientLengthIterable<0>")._is(second))
        return new A.EfficientLengthFollowedByIterable(first, second, $E._eval$1("EfficientLengthFollowedByIterable<0>"));
      return new A.FollowedByIterable(first, second, $E._eval$1("FollowedByIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooMany() {
      return new A.StateError("Too many elements");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap: function CastMap(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastMap_putIfAbsent_closure: function CastMap_putIfAbsent_closure(t0, t1) {
      this.$this = t0;
      this.ifAbsent = t1;
    },
    CastMap_forEach_closure: function CastMap_forEach_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    CastMap_entries_closure: function CastMap_entries_closure(t0) {
      this.$this = t0;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterable: function WhereIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    WhereIterator: function WhereIterator(t0, t1, t2) {
      this._iterator = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterable: function ExpandIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    ExpandIterator: function ExpandIterator(t0, t1, t2, t3) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._currentExpansion = t2;
      _.__internal$_current = null;
      _.$ti = t3;
    },
    TakeIterable: function TakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    EfficientLengthTakeIterable: function EfficientLengthTakeIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._takeCount = t1;
      this.$ti = t2;
    },
    TakeIterator: function TakeIterator(t0, t1, t2) {
      this._iterator = t0;
      this._remaining = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1, t2) {
      this._iterator = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipWhileIterable: function SkipWhileIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipWhileIterator: function SkipWhileIterator(t0, t1, t2) {
      var _ = this;
      _._iterator = t0;
      _._f = t1;
      _._hasSkipped = false;
      _.$ti = t2;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator(t0) {
      this.$ti = t0;
    },
    FollowedByIterable: function FollowedByIterable(t0, t1, t2) {
      this.__internal$_first = t0;
      this.__internal$_second = t1;
      this.$ti = t2;
    },
    EfficientLengthFollowedByIterable: function EfficientLengthFollowedByIterable(t0, t1, t2) {
      this.__internal$_first = t0;
      this.__internal$_second = t1;
      this.$ti = t2;
    },
    FollowedByIterator: function FollowedByIterator(t0, t1, t2) {
      this._currentIterator = t0;
      this._nextIterable = t1;
      this.$ti = t2;
    },
    WhereTypeIterable: function WhereTypeIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    WhereTypeIterator: function WhereTypeIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    ReversedListIterable: function ReversedListIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    Symbol: function Symbol() {
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    ConstantMap_ConstantMap$from(other, $K, $V) {
      var allStrings, k, object, index, index0, map,
        keys = A.List_List$from(new A.LinkedHashMapKeyIterable(other, A._instanceType(other)._eval$1("LinkedHashMapKeyIterable<1>")), true, $K),
        t1 = keys.length,
        _i = 0;
      while (true) {
        if (!(_i < t1)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k != "string" || "__proto__" === k) {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (index = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i, index = index0) {
          k = keys[_i];
          other.$index(0, k);
          index0 = index + 1;
          object[k] = index;
        }
        map = new A.ConstantStringMap(object, A.List_List$from(other.get$values(0), true, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantStringMap<1,2>"));
        map.$keys = keys;
        return map;
      }
      return new A.ConstantMapView(A.LinkedHashMap_LinkedHashMap$from(other, $K, $V), $K._eval$1("@<0>")._bind$1($V)._eval$1("ConstantMapView<1,2>"));
    },
    ConstantMap__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    ConstantSet__throwUnmodifiable() {
      throw A.wrapException(A.UnsupportedError$("Cannot modify constant Set"));
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives_dateNow() {
      return Date.now();
    },
    Primitives_initTicker() {
      var $window, performance;
      if ($.Primitives_timerFrequency !== 0)
        return;
      $.Primitives_timerFrequency = 1000;
      if (typeof window == "undefined")
        return;
      $window = window;
      if ($window == null)
        return;
      if (!!$window.dartUseDateNowForTicks)
        return;
      performance = $window.performance;
      if (performance == null)
        return;
      if (typeof performance.now != "function")
        return;
      $.Primitives_timerFrequency = 1000000;
      $.Primitives_timerTicks = new A.Primitives_initTicker_closure(performance);
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_extractStackTrace(error) {
      var jsError = error.$thrownJsError;
      if (jsError == null)
        return null;
      return A.getTraceFromException(jsError);
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index";
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, null, _s5_);
      return A.RangeError$value(index, _s5_);
    },
    diagnoseRangeError(start, end, $length) {
      if (start < 0 || start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(new Error(), ex);
    },
    initializeExceptionWrapper(wrapper, ex) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwExpressionWithWrapper(ex, wrapper) {
      throw A.initializeExceptionWrapper(wrapper, ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace)
        return A.saveStackTrace(ex, ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null)
            return A.saveStackTrace(ex, new A.NullError());
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A._Record)
        return key.get$hashCode(key);
      if (key instanceof A.Symbol)
        return key.get$hashCode(0);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    fillLiteralSet(values, result) {
      var index,
        $length = values.length;
      for (index = 0; index < $length; ++index)
        result.add$1(0, values[index]);
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function;
      if (closure == null)
        return null;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A._CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    staticInteropGlobalContext() {
      return self;
    },
    LinkedHashMapKeyIterator$(_map, _modifications, $E) {
      var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications, $E._eval$1("LinkedHashMapKeyIterator<0>"));
      t1._cell = _map._first;
      return t1;
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = $.alternateTagFunction.call$2(obj, tag);
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1;
      if (typeof other == "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else if (other instanceof A.JSSyntaxRegExp) {
        t1 = B.JSString_methods.substring$1(receiver, startIndex);
        return other._nativeRegExp.test(t1);
      } else
        return !J.allMatches$1$s(other, B.JSString_methods.substring$1(receiver, startIndex)).get$isEmpty(0);
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    stringReplaceFirstRE(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return A.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(0), replacement);
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var nativeRegexp;
      if (typeof pattern == "string")
        return A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      if (pattern instanceof A.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
      }
      return A.stringReplaceAllGeneral(receiver, pattern, replacement);
    },
    stringReplaceAllGeneral(receiver, pattern, replacement) {
      var t1, startIndex, t2, match;
      for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), startIndex = 0, t2 = ""; t1.moveNext$0();) {
        match = t1.get$current(t1);
        t2 = t2 + receiver.substring(startIndex, match.get$start(match)) + replacement;
        startIndex = match.get$end(match);
      }
      t1 = t2 + receiver.substring(startIndex);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    stringReplaceFirstUnchecked(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern == "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return A.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      if (pattern instanceof A.JSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, A.escapeReplacement(replacement)) : A.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      t1 = J.allMatches$2$s(pattern, receiver, startIndex);
      matches = t1.get$iterator(t1);
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current(matches);
      return B.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);
    },
    stringReplaceRangeUnchecked(receiver, start, end, replacement) {
      return receiver.substring(0, start) + replacement + receiver.substring(end);
    },
    _Record_2: function _Record_2(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_2_end_start: function _Record_2_end_start(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_2_key_value: function _Record_2_key_value(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_3_breaks_graphemes_words: function _Record_3_breaks_graphemes_words(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_completer_recorder_scene: function _Record_3_completer_recorder_scene(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_data_event_timeStamp: function _Record_3_data_event_timeStamp(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_large_medium_small: function _Record_3_large_medium_small(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_queue_target_timer: function _Record_3_queue_target_timer(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_x78_y_z: function _Record_3_x78_y_z(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    ConstantMapView: function ConstantMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1, t2) {
      var _ = this;
      _._elements = t0;
      _.__js_helper$_length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
      _.$ti = t2;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    ConstantSet: function ConstantSet() {
    },
    ConstantStringSet: function ConstantStringSet(t0, t1, t2) {
      this._jsIndex = t0;
      this.__js_helper$_length = t1;
      this.$ti = t2;
    },
    GeneralConstantSet: function GeneralConstantSet(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    Primitives_initTicker_closure: function Primitives_initTicker_closure(t0) {
      this.performance = t0;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    _CyclicInitializationError: function _CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_containsValue_closure: function JsLinkedHashMap_containsValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    JsLinkedHashMap_addAll_closure: function JsLinkedHashMap_addAll_closure(t0) {
      this.$this = t0;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
      _.$ti = t2;
    },
    JsIdentityLinkedHashMap: function JsIdentityLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _Record2: function _Record2() {
    },
    _Record3: function _Record3() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    _MatchImplementation: function _MatchImplementation(t0) {
      this._match = t0;
    },
    _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
      this._re = t0;
      this.__js_helper$_string = t1;
      this.__js_helper$_start = t2;
    },
    _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._regExp = t0;
      _.__js_helper$_string = t1;
      _._nextIndex = t2;
      _.__js_helper$_current = null;
    },
    StringMatch: function StringMatch(t0, t1) {
      this.start = t0;
      this.pattern = t1;
    },
    _StringAllMatchesIterable: function _StringAllMatchesIterable(t0, t1, t2) {
      this._input = t0;
      this._pattern = t1;
      this.__js_helper$_index = t2;
    },
    _StringAllMatchesIterator: function _StringAllMatchesIterator(t0, t1, t2) {
      var _ = this;
      _._input = t0;
      _._pattern = t1;
      _.__js_helper$_index = t2;
      _.__js_helper$_current = null;
    },
    throwLateFieldADI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + string$.x27_has_), new Error());
    },
    throwUnnamedLateFieldNI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has not been initialized."), new Error());
    },
    throwUnnamedLateFieldAI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has already been initialized."), new Error());
    },
    throwUnnamedLateFieldADI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has been assigned during initialization."), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1._value = t1;
    },
    _InitializedCell$named(_name, _initializer) {
      var t1 = new A._InitializedCell(_name, _initializer);
      return t1._value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this._value = null;
    },
    _InitializedCell: function _InitializedCell(t0, t1) {
      this.__late_helper$_name = t0;
      this._value = null;
      this._initializer = t1;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        result[i] = t1.$index(list, i);
      return result;
    },
    NativeByteData_NativeByteData($length) {
      return new DataView(new ArrayBuffer($length));
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new DataView(buffer, offsetInBytes) : new DataView(buffer, offsetInBytes, $length);
    },
    NativeFloat32List_NativeFloat32List($length) {
      return new Float32Array($length);
    },
    NativeFloat64List_NativeFloat64List($length) {
      return new Float64Array($length);
    },
    NativeFloat64List_NativeFloat64List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Float64Array(buffer, offsetInBytes, $length);
    },
    NativeInt32List_NativeInt32List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return new Int32Array(buffer, offsetInBytes, $length);
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List_NativeUint16List$fromList(list) {
      return new Uint16Array(A._ensureNativeList(list));
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (end == null)
          t1 = start > $length;
        else
          t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      if (end == null)
        return $length;
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = A._createRuntimeType(rti) : t1;
    },
    _createRuntimeType(rti) {
      var starErasedRti, t1,
        s = rti._canonicalRecipe,
        starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      t1 = starErasedRti._cachedRuntimeType;
      return t1 == null ? starErasedRti._cachedRuntimeType = A._createRuntimeType(starErasedRti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i)
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, unstarredKind, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isSoundTopType(testRti))
        t1 = testRti === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (t1 === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      unstarred = t1 === 6 ? testRti._primary : testRti;
      unstarredKind = unstarred._kind;
      if (unstarredKind === 8)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarredKind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isDefinitelyTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (unstarredKind === 11) {
        predicate = A.createRecordTypePredicate(unstarred._primary, unstarred._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isSoundTopType(testRti))
        t1 = testRti === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var kind = testRti._kind,
        t1 = true;
      if (!A.isSoundTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A._rtiToString(testRti, null))));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this,
        unstarred = testRti._kind === 6 ? testRti._primary : testRti;
      return unstarred._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, unstarred)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, offset, i, t1, t2, typeParametersText, typeSep, boundRti, kind, t3, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ", outerContextLength = null;
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null)
          genericContext = A._setArrayType([], type$.JSArray_String);
        else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            t3 = boundRti === t2;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else
        typeParametersText = "";
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6)
        return A._rtiToString(rti._primary, genericContext);
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isSoundTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        t1 = true;
        if (!A.isSoundTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isSoundTopType(baseType) || baseType === type$.Object || baseType === type$.legacy_Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 12:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var requiredPositional, returnType, parameters,
        t1 = parser.u,
        head = stack.pop(),
        optionalPositional = null, named = null;
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            break;
          case -2:
            named = stack.pop();
            break;
          default:
            stack.push(head);
            break;
        }
      else
        stack.push(head);
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null, false) ? 1 : 0;
        sCache.set(t, result);
      }
      if (0 === result)
        return false;
      if (1 === result)
        return true;
      return true;
    },
    _isSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var t1, sKind, leftTypeVariable, tKind, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isSoundTopType(t))
        t1 = t === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isSoundTopType(s))
        return false;
      t1 = s._kind;
      if (t1 === 1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv, false))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv, false);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv, false))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv, false);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv, false);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv, false))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv, false);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv, false);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      t2 = sKind === 11;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv, false) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv, false))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv, false);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (t2 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv, false);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv, false))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv, false))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv, false);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv, false);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv, isLegacy) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv, false))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv, false))
          return false;
      return true;
    },
    isNullable(t) {
      var kind = t._kind,
        t1 = true;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isSoundTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
      return t1;
    },
    isDefinitelyTopType(t) {
      var t1;
      if (!A.isSoundTopType(t))
        t1 = t === type$.legacy_Object;
      else
        t1 = true;
      return t1;
    },
    isSoundTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    heuristicMapper(code, key) {
      var charCode, t1;
      if (B.JSString_methods.startsWith$1(code, "Digit"))
        return code.charCodeAt(5);
      charCode = key.charCodeAt(0);
      if (key.length <= 1)
        t1 = !(charCode >= 32 && charCode <= 127);
      else
        t1 = true;
      if (t1) {
        t1 = B.Map_Am4V8.$index(0, code);
        return t1 == null ? null : t1.charCodeAt(0);
      }
      if (!(charCode >= $.$get$_kLowerA() && charCode <= $.$get$_kLowerZ()))
        t1 = charCode >= $.$get$_kUpperA() && charCode <= $.$get$_kUpperZ();
      else
        t1 = true;
      if (t1)
        return key.toLowerCase().charCodeAt(0);
      return null;
    },
    _StringStream$(_data) {
      var t1 = B.Map_Am4V8.get$entries(B.Map_Am4V8),
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.String);
      t2.addEntries$1(t2, t1.map$1$1(t1, new A._StringStream__goalToEventCode_closure(), type$.MapEntry_int_String));
      return new A._StringStream(_data, t2);
    },
    _unmarshallCodeMap(stream) {
      var t2, i, t3, t4,
        entryNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int);
      for (t2 = stream._data, i = 0; i < entryNum; ++i) {
        t3 = stream.readEventKey$0();
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t1.$indexSet(0, t3, t2.charCodeAt(t4));
      }
      return t1;
    },
    unmarshallMappingData(compressed) {
      var t2, t3, i, t4,
        stream = A._StringStream$(compressed),
        eventCodeNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Map_String_int);
      for (t2 = stream._data, t3 = stream._goalToEventCode, i = 0; i < eventCodeNum; ++i) {
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t4 = t3.$index(0, t2.charCodeAt(t4));
        t4.toString;
        t1.$indexSet(0, t4, A._unmarshallCodeMap(stream));
      }
      return t1;
    },
    _characterToLogicalKey(key) {
      if (key == null || key.length >= 2)
        return null;
      return key.toLowerCase().charCodeAt(0);
    },
    _StringStream: function _StringStream(t0, t1) {
      this._data = t0;
      this._goalToEventCode = t1;
      this.__web_locale_keymap$_offset = 0;
    },
    _StringStream__goalToEventCode_closure: function _StringStream__goalToEventCode_closure() {
    },
    LocaleKeymap: function LocaleKeymap(t0) {
      this.__web_locale_keymap$_mapping = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, callback);
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl(true);
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _TimerImpl$periodic(milliseconds, callback) {
      var t1 = new A._TimerImpl(false);
      t1._TimerImpl$periodic$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(0, object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (type$.Future_dynamic._is(object))
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new A._wrapJsFunctionForAsync_closure($protected));
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    Future_Future(computation, $T) {
      var result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(B.Duration_0, new A.Future_Future_closure(computation, result));
      return result;
    },
    Future_Future$value(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$error(error, stackTrace, $T) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_Future$delayed(duration, computation, $T) {
      var t1, result;
      if (computation == null)
        t1 = !$T._is(null);
      else
        t1 = false;
      if (t1)
        throw A.wrapException(A.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(computation, result, $T));
      return result;
    },
    Future_wait(futures, eagerError, $T) {
      var handleError, future, pos, e, st, t1, t2, exception, _box_0 = {}, cleanUp = null,
        _future = new A._Future($.Zone__current, $T._eval$1("_Future<List<0>>"));
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.stackTrace = _box_0.error = null;
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future);
      try {
        for (t1 = J.get$iterator$ax(futures), t2 = type$.Null; t1.moveNext$0();) {
          future = t1.get$current(t1);
          pos = _box_0.remaining;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, $T, cleanUp, eagerError), handleError, t2);
          ++_box_0.remaining;
        }
        t1 = _box_0.remaining;
        if (t1 === 0) {
          t1 = _future;
          t1._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t1;
        }
        _box_0.values = A.List_List$filled(t1, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError)
          return A.Future_Future$error(e, st, $T._eval$1("List<0>"));
        else {
          _box_0.error = e;
          _box_0.stackTrace = st;
        }
      }
      return _future;
    },
    _completeWithErrorCallback(result, error, stackTrace) {
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      result._completeError$2(error, stackTrace);
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFutureSync(source, target) {
      var t1, listeners;
      for (; t1 = source._state, (t1 & 4) !== 0;)
        source = source._resultOrListeners;
      if (source === target) {
        target._asyncCompleteError$2(new A.ArgumentError(true, source, null, "Cannot complete a future with itself"), A.StackTrace_current());
        return;
      }
      t1 |= target._state & 1;
      source._state = t1;
      if ((t1 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = target._resultOrListeners;
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__chainCoreFutureAsync(source, target) {
      var t2, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (; t2 = t1._state, (t2 & 4) !== 0;) {
        t1 = t1._resultOrListeners;
        _box_0.source = t1;
      }
      if (t1 === target) {
        target._asyncCompleteError$2(new A.ArgumentError(true, t1, null, "Cannot complete a future with itself"), A.StackTrace_current());
        return;
      }
      if ((t2 & 24) === 0) {
        listeners = target._resultOrListeners;
        target._setChained$1(t1);
        _box_0.source._prependListeners$1(listeners);
        return;
      }
      if ((t2 & 16) === 0 && target._resultOrListeners == null) {
        target._cloneResult$1(t1);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, new A._Future__chainCoreFutureAsync_closure(_box_0, target));
    },
    _Future__propagateToListeners(source, listeners) {
      var t2, _box_0, t3, t4, hasError, nextListener, nextListener0, sourceResult, t5, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (t2 = type$.Future_dynamic; true;) {
        _box_0 = {};
        t3 = t1._state;
        t4 = (t3 & 16) === 0;
        hasError = !t4;
        if (listeners == null) {
          if (hasError && (t3 & 1) === 0) {
            t1 = t1._resultOrListeners;
            A._rootHandleError(t1.error, t1.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t3 = _box_1.source;
        sourceResult = t3._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t4) {
          t5 = t1.state;
          t5 = (t5 & 1) !== 0 || (t5 & 15) === 8;
        } else
          t5 = true;
        if (t5) {
          zone = t1.result._zone;
          if (hasError) {
            t3 = t3._zone === zone;
            t3 = !(t3 || t3);
          } else
            t3 = false;
          if (t3) {
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t4) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t2._is(t1)) {
            t3 = _box_0.listener.$ti;
            t3 = t3._eval$1("Future<2>")._is(t1) || !t3._rest[1]._is(t1);
          } else
            t3 = false;
          if (t3) {
            result = _box_0.listener.result;
            if (t1 instanceof A._Future)
              if ((t1._state & 24) !== 0) {
                current = result._resultOrListeners;
                result._resultOrListeners = null;
                listeners = result._reverseListeners$1(current);
                result._state = t1._state & 30 | result._state & 1;
                result._resultOrListeners = t1._resultOrListeners;
                _box_1.source = t1;
                continue;
              } else
                A._Future__chainCoreFutureSync(t1, result);
            else
              result._chainForeignFuture$1(t1);
            return;
          }
        }
        result = _box_0.listener.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t3 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 8;
          result._resultOrListeners = t3;
        } else {
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t3;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    StreamIterator_StreamIterator(stream, $T) {
      return new A._StreamIterator(A.checkNotNullable(stream, "stream", type$.Object), $T._eval$1("_StreamIterator<0>"));
    },
    StreamController_StreamController(onCancel, onListen, onPause, onResume, sync, $T) {
      return sync ? new A._SyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_SyncStreamController<0>")) : new A._AsyncStreamController(onListen, onPause, onResume, onCancel, $T._eval$1("_AsyncStreamController<0>"));
    },
    StreamController_StreamController$broadcast(onCancel, onListen, sync, $T) {
      return sync ? new A._SyncBroadcastStreamController(onListen, onCancel, $T._eval$1("_SyncBroadcastStreamController<0>")) : new A._AsyncBroadcastStreamController(onListen, onCancel, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      var e, s, exception;
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    _ControllerSubscription$(_controller, onData, onError, onDone, cancelOnError, $T) {
      var t1 = $.Zone__current,
        t2 = cancelOnError ? 1 : 0,
        t3 = onError != null ? 32 : 0;
      return new A._ControllerSubscription(_controller, A._BufferingStreamSubscription__registerDataHandler(t1, onData), A._BufferingStreamSubscription__registerErrorHandler(t1, onError), A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2 | t3, $T._eval$1("_ControllerSubscription<0>"));
    },
    _BufferingStreamSubscription__registerDataHandler(zone, handleData) {
      return handleData == null ? A.async___nullDataHandler$closure() : handleData;
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$1(handleError);
      if (type$.void_Function_Object._is(handleError))
        return handleError;
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _BufferingStreamSubscription__registerDoneHandler(zone, handleDone) {
      return handleDone == null ? A.async___nullDoneHandler$closure() : handleDone;
    },
    _nullDataHandler(value) {
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    _DoneStreamSubscription$(onDone, $T) {
      var t1 = new A._DoneStreamSubscription($.Zone__current, $T._eval$1("_DoneStreamSubscription<0>"));
      A.scheduleMicrotask(t1.get$_onMicrotask());
      if (onDone != null)
        t1._onDone = onDone;
      return t1;
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, callback);
      return A.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    Timer_Timer$periodic(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createPeriodicTimer(duration, callback);
      return A.Timer__createPeriodicTimer(duration, t1.bindUnaryCallbackGuarded$1$1(callback, type$.Timer));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl(t0) {
      this._once = t0;
      this._handle = null;
      this._tick = 0;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _TimerImpl$periodic_closure: function _TimerImpl$periodic_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.milliseconds = t1;
      _.start = t2;
      _.callback = t3;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0, t1) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
      _.$ti = t1;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onData = t1;
      _._async$_onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._addStreamState = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_Future_closure: function Future_Future_closure(t0, t1) {
      this.computation = t0;
      this.result = t1;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.T = t3;
      _.cleanUp = t4;
      _.eagerError = t5;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFutureAsync_closure: function _Future__chainCoreFutureAsync_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _StreamController: function _StreamController() {
    },
    _StreamController__subscribe_closure: function _StreamController__subscribe_closure(t0) {
      this.$this = t0;
    },
    _StreamController__recordCancel_complete: function _StreamController__recordCancel_complete(t0) {
      this.$this = t0;
    },
    _SyncStreamControllerDispatch: function _SyncStreamControllerDispatch() {
    },
    _AsyncStreamControllerDispatch: function _AsyncStreamControllerDispatch() {
    },
    _AsyncStreamController: function _AsyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _SyncStreamController: function _SyncStreamController(t0, t1, t2, t3, t4) {
      var _ = this;
      _._varData = null;
      _._state = 0;
      _._doneFuture = null;
      _.onListen = t0;
      _.onPause = t1;
      _.onResume = t2;
      _.onCancel = t3;
      _.$ti = t4;
    },
    _ControllerStream: function _ControllerStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _ControllerSubscription: function _ControllerSubscription(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _._controller = t0;
      _._onData = t1;
      _._async$_onError = t2;
      _._onDone = t3;
      _._zone = t4;
      _._state = t5;
      _._pending = _._cancelFuture = null;
      _.$ti = t6;
    },
    _AddStreamState_cancel_closure: function _AddStreamState_cancel_closure(t0) {
      this.$this = t0;
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0, t1) {
      this.value = t0;
      this.next = null;
      this.$ti = t1;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents(t0) {
      var _ = this;
      _._state = 0;
      _.lastPendingEvent = _.firstPendingEvent = null;
      _.$ti = t0;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0, t1) {
      var _ = this;
      _._state = 1;
      _._zone = t0;
      _._onDone = null;
      _.$ti = t1;
    },
    _StreamIterator: function _StreamIterator(t0, t1) {
      var _ = this;
      _._subscription = null;
      _._stateData = t0;
      _._async$_hasValue = false;
      _.$ti = t1;
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindBinaryCallback_closure: function _RootZone_bindBinaryCallback_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T1 = t2;
      _.T2 = t3;
      _.R = t4;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _RootZone_bindUnaryCallbackGuarded_closure: function _RootZone_bindUnaryCallbackGuarded_closure(t0, t1, t2) {
      this.$this = t0;
      this.f = t1;
      this.T = t2;
    },
    HashMap_HashMap(equals, hashCode, isValidKey, $K, $V) {
      if (isValidKey == null)
        if (hashCode == null) {
          if (equals == null)
            return new A._HashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_HashMap<1,2>"));
          hashCode = A.collection___defaultHashCode$closure();
        } else {
          if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
            return new A._IdentityHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("_IdentityHashMap<1,2>"));
          if (equals == null)
            equals = A.collection___defaultEquals$closure();
        }
      else {
        if (hashCode == null)
          hashCode = A.collection___defaultHashCode$closure();
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._CustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    _CustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      var t1 = validKey != null ? validKey : new A._CustomHashMap_closure($K);
      return new A._CustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_CustomHashMap<1,2>"));
    },
    LinkedHashMap_LinkedHashMap(equals, hashCode, $K, $V) {
      if (hashCode == null) {
        if (equals == null)
          return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
        hashCode = A.collection___defaultHashCode$closure();
      } else {
        if (A.core__identityHashCode$closure() === hashCode && A.core__identical$closure() === equals)
          return new A.JsIdentityLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsIdentityLinkedHashMap<1,2>"));
        if (equals == null)
          equals = A.collection___defaultEquals$closure();
      }
      return A._LinkedCustomHashMap$(equals, hashCode, null, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
      return new A._LinkedCustomHashMap(_equals, _hashCode, new A._LinkedCustomHashMap_closure($K), $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
    },
    HashSet_HashSet($E) {
      return new A._HashSet($E._eval$1("_HashSet<0>"));
    },
    _HashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashSet_LinkedHashSet($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    LinkedHashSet_LinkedHashSet$_literal(values, $E) {
      return A.fillLiteralSet(values, new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>")));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    _defaultEquals(a, b) {
      return J.$eq$(a, b);
    },
    _defaultHashCode(a) {
      return J.get$hashCode$(a);
    },
    IterableExtensions_get_firstOrNull(_this) {
      var iterator = J.get$iterator$ax(_this);
      if (iterator.moveNext$0())
        return iterator.get$current(iterator);
      return null;
    },
    IterableExtensions_get_lastOrNull(_this) {
      var iterator, result;
      if (type$.EfficientLengthIterable_dynamic._is(_this)) {
        if (_this.length === 0)
          return null;
        return B.JSArray_methods.get$last(_this);
      }
      iterator = J.get$iterator$ax(_this);
      if (!iterator.moveNext$0())
        return null;
      do
        result = iterator.get$current(iterator);
      while (iterator.moveNext$0());
      return result;
    },
    LinkedHashMap_LinkedHashMap$from(other, $K, $V) {
      var result = A.LinkedHashMap_LinkedHashMap(null, null, $K, $V);
      J.forEach$1$ax(other, new A.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    LinkedHashMap_LinkedHashMap$of(other, $K, $V) {
      var t1 = A.LinkedHashMap_LinkedHashMap(null, null, $K, $V);
      t1.addAll$1(0, other);
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from(elements, $E) {
      var t1,
        result = A.LinkedHashSet_LinkedHashSet($E);
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        result.add$1(0, $E._as(t1.get$current(t1)));
      return result;
    },
    LinkedHashSet_LinkedHashSet$of(elements, $E) {
      var t1 = A.LinkedHashSet_LinkedHashSet($E);
      t1.addAll$1(0, elements);
      return t1;
    },
    _LinkedListIterator$(list, $E) {
      return new A._LinkedListIterator(list, list._modificationCount, list._collection$_first, $E._eval$1("_LinkedListIterator<0>"));
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        $.toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        J.forEach$1$ax(m, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$(initialCapacity, $E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      if (initialCapacity == null || initialCapacity < 8)
        return 8;
      else if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)
        return A.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__nextPowerOf2(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _HashMap: function _HashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _CustomHashMap: function _CustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t3;
    },
    _CustomHashMap_closure: function _CustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
      var _ = this;
      _._equals = t0;
      _._hashCode = t1;
      _._validKey = t2;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t3;
    },
    _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
      this.K = t0;
    },
    _HashSet: function _HashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_elements = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashSetIterator: function _HashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_elements = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    LinkedHashMap_LinkedHashMap$from_closure: function LinkedHashMap_LinkedHashMap$from_closure(t0, t1, t2) {
      this.result = t0;
      this.K = t1;
      this.V = t2;
    },
    _LinkedListIterator: function _LinkedListIterator(t0, t1, t2, t3) {
      var _ = this;
      _._collection$_list = t0;
      _._modificationCount = t1;
      _._collection$_current = null;
      _._collection$_next = t2;
      _._visitedFirst = false;
      _.$ti = t3;
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
    },
    MapView: function MapView() {
    },
    UnmodifiableMapView: function UnmodifiableMapView(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _DoubleLinkedQueueEntry: function _DoubleLinkedQueueEntry() {
    },
    _DoubleLinkedQueueElement: function _DoubleLinkedQueueElement(t0, t1, t2) {
      var _ = this;
      _._collection$_queue = t0;
      _.element = t1;
      _._nextLink = _._previousLink = null;
      _.$ti = t2;
    },
    _DoubleLinkedQueueSentinel: function _DoubleLinkedQueueSentinel(t0) {
      this._nextLink = this._previousLink = null;
      this.$ti = t0;
    },
    DoubleLinkedQueue: function DoubleLinkedQueue(t0, t1) {
      this._sentinel = t0;
      this._elementCount = 0;
      this.$ti = t1;
    },
    _DoubleLinkedQueueIterator: function _DoubleLinkedQueueIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_queue = t0;
      _._nextEntry = t1;
      _._collection$_current = null;
      _.$ti = t2;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._collection$_queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._collection$_position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (!Array.isArray(object))
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var t1, i, byteOr, byte, outputIndex0, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (t1 = J.getInterceptor$asx(bytes), i = start, byteOr = 0; i < end; ++i) {
        byte = t1.$index(bytes, i);
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 18 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits >>> 12 & 63);
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 6 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits & 63);
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (isLast && expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 2 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits << 4 & 63);
            output[outputIndex1] = 61;
            output[outputIndex1 + 1] = 61;
          } else {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 10 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits >>> 4 & 63);
            output[outputIndex1] = alphabet.charCodeAt(bits << 2 & 63);
            output[outputIndex1 + 1] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = t1.$index(bytes, i);
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(t1.$index(bytes, i), 16), null));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      var t1 = _toEncodable == null ? A.convert___defaultToEncodable$closure() : _toEncodable;
      return new A._JsonStringStringifier(_sink, [], t1);
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer("");
      A._JsonStringStringifier_printOn(object, output, toEncodable, indent);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonStringStringifier_printOn(object, output, toEncodable, indent) {
      var stringifier, t1;
      if (indent == null)
        stringifier = A._JsonStringStringifier$(output, toEncodable);
      else {
        t1 = toEncodable == null ? A.convert___defaultToEncodable$closure() : toEncodable;
        stringifier = new A._JsonStringStringifierPretty(indent, 0, output, [], t1);
      }
      stringifier.writeObject$1(object);
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._convert$_parent = t0;
    },
    _JsonDecoderSink: function _JsonDecoderSink(t0, t1, t2) {
      this._reviver = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _BufferCachingBase64Encoder: function _BufferCachingBase64Encoder(t0) {
      this.bufferCache = null;
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _AsciiBase64EncoderSink: function _AsciiBase64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    _ByteAdapterSink: function _ByteAdapterSink(t0) {
      this._sink = t0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    _SimpleCallbackSink: function _SimpleCallbackSink(t0, t1, t2) {
      this._convert$_callback = t0;
      this._accumulated = t1;
      this.$ti = t2;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter(t0, t1, t2) {
      this._convert$_first = t0;
      this._second = t1;
      this.$ti = t2;
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0, t1) {
      this.indent = t0;
      this._toEncodable = t1;
    },
    _JsonEncoderSink: function _JsonEncoderSink(t0, t1, t2) {
      var _ = this;
      _._indent = t0;
      _._toEncodable = t1;
      _._sink = t2;
      _._isDone = false;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonPrettyPrintMixin: function _JsonPrettyPrintMixin() {
    },
    _JsonPrettyPrintMixin_writeMap_closure: function _JsonPrettyPrintMixin_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    _JsonStringStringifierPretty: function _JsonStringStringifierPretty(t0, t1, t2, t3, t4) {
      var _ = this;
      _._indent = t0;
      _._JsonPrettyPrintMixin__indentLevel = t1;
      _._sink = t2;
      _._seen = t3;
      _._toEncodable = t4;
    },
    StringConversionSink: function StringConversionSink() {
    },
    _ClosableStringSink: function _ClosableStringSink(t0, t1) {
      this._convert$_callback = t0;
      this._sink = t1;
    },
    _StringConversionSinkAsStringSinkAdapter: function _StringConversionSinkAsStringSinkAdapter(t0, t1) {
      this._buffer = t0;
      this._chunkedSink = t1;
    },
    _StringSinkConversionSink: function _StringSinkConversionSink() {
    },
    _StringAdapterSink: function _StringAdapterSink(t0) {
      this._sink = t0;
    },
    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter(t0, t1, t2) {
      this._decoder = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    _Utf8ConversionSink: function _Utf8ConversionSink(t0, t1, t2) {
      this._decoder = t0;
      this._chunkedSink = t1;
      this._buffer = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._buffer = t0;
    },
    _Utf8EncoderSink: function _Utf8EncoderSink(t0, t1) {
      var _ = this;
      _._sink = t0;
      _._bufferIndex = _._carry = 0;
      _._buffer = t1;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin: function __JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin() {
    },
    __Utf8EncoderSink__Utf8Encoder_StringConversionSink: function __Utf8EncoderSink__Utf8Encoder_StringConversionSink() {
    },
    identityHashCode(object) {
      return A.objectHashCode(object);
    },
    Expando$($T) {
      return new A.Expando(new WeakMap(), $T._eval$1("Expando<0>"));
    },
    Expando__checkType(object) {
      if (A._isBool(object) || typeof object == "number" || typeof object == "string" || object instanceof A._Record)
        A.Expando__badExpandoKey(object);
    },
    Expando__badExpandoKey(object) {
      throw A.wrapException(A.ArgumentError$value(object, "object", "Expandos are not allowed on strings, numbers, bools, records or null"));
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    double_parse(source) {
      var value = A.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$("Invalid double", source, null));
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      if (growable)
        return list;
      return J.JSArray_markFixedList(list);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E));
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current(t1));
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      return J.JSArray_markUnmodifiableList(A.List_List$from(elements, false, $E));
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1, t2, maxLength, array, len;
      A.RangeError_checkNotNegative(start, "start");
      t1 = end == null;
      t2 = !t1;
      if (t2) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        if (t1)
          end = len;
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.String__stringFromUint8List(charCodes, start, end);
      if (t2)
        charCodes = J.take$1$ax(charCodes, end);
      if (start > 0)
        charCodes = J.skip$1$ax(charCodes, start);
      return A.Primitives_stringFromCharCodes(A.List_List$of(charCodes, true, type$.int));
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, caseSensitive, unicode) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, caseSensitive, unicode, false, false));
    },
    identical(a, b) {
      return a == null ? b == null : a === b;
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current(iterator));
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current(iterator));
      }
      return string;
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = encoding.encode$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    _Uri__makeQueryFromParameters(queryParameters) {
      var params, encoded, $length;
      if (!$.$get$_Uri__useURLSearchParams())
        return A._Uri__makeQueryFromParametersDefault(queryParameters);
      params = new URLSearchParams();
      queryParameters.forEach$1(0, new A._Uri__makeQueryFromParameters_closure(params));
      encoded = params.toString();
      $length = encoded.length;
      if ($length > 0 && encoded[$length - 1] === "=")
        encoded = B.JSString_methods.substring$2(encoded, 0, $length - 1);
      return encoded.replace(/=&|\*|%7E/g, m => m === "=&" ? "&" : m === "*" ? "%2A" : "~");
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime__validate(millisecondsSinceEpoch, microsecond, isUtc) {
      var _s11_ = "microsecond";
      if (microsecond < 0 || microsecond > 999)
        throw A.wrapException(A.RangeError$range(microsecond, 0, 999, _s11_, null));
      if (millisecondsSinceEpoch < -864e13 || millisecondsSinceEpoch > 864e13)
        throw A.wrapException(A.RangeError$range(millisecondsSinceEpoch, -864e13, 864e13, "millisecondsSinceEpoch", null));
      if (millisecondsSinceEpoch === 864e13 && microsecond !== 0)
        throw A.wrapException(A.ArgumentError$value(microsecond, _s11_, "Time including microseconds is outside valid range"));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return millisecondsSinceEpoch;
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$(days, hours, microseconds, milliseconds, minutes, seconds) {
      return new A.Duration(microseconds + 1000 * milliseconds + 1000000 * seconds + 60000000 * minutes + 3600000000 * hours + 864e8 * days);
    },
    EnumByName_byName(_this, $name) {
      var _i, value;
      for (_i = 0; _i < 3; ++_i) {
        value = _this[_i];
        if (value._name === $name)
          return value;
      }
      throw A.wrapException(A.ArgumentError$value($name, "name", "No enum value with that name"));
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError$notNull($name) {
      return new A.ArgumentError(false, null, $name, "Must not be null");
    },
    ArgumentError_checkNotNull(argument, $name) {
      return argument == null ? A.throwExpression(A.ArgumentError$notNull($name)) : argument;
    },
    RangeError$value(value, $name) {
      return new A.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValueInInterval(value, minValue, maxValue, $name) {
      if (value < minValue || value > maxValue)
        throw A.wrapException(A.RangeError$range(value, minValue, maxValue, $name, null));
      return value;
    },
    RangeError_checkValidRange(start, end, $length, startName, endName) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, startName == null ? "start" : startName, null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, endName == null ? "end" : endName, null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$(invalidValue, indexable, $name, message, $length) {
      var t1 = $length == null ? indexable.get$length(indexable) : $length;
      return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    IndexError_check(index, $length, indexable, message, $name) {
      if (0 > index || index >= $length)
        throw A.wrapException(A.IndexError$withLength(index, $length, indexable, message, $name == null ? "index" : $name));
      return index;
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      $.toStringVisiting.push(iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      $.toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = J.get$iterator$ax(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current(it));
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    Map_castFrom(source, $K, $V, K2, V2) {
      return new A.CastMap(source, $K._eval$1("@<0>")._bind$1($V)._bind$1(K2)._bind$1(V2)._eval$1("CastMap<1,2,3,4>"));
    },
    Object_hash(object1, object2, object3, object4, object5, object6, object7, object8, object9, object10, object11, object12, object13, object14, object15, object16, object17, object18, object19, object20) {
      var t1;
      if (B.C_SentinelValue === object3)
        return A.SystemHash_hash2(J.get$hashCode$(object1), J.get$hashCode$(object2), $.$get$_hashSeed());
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      if (B.C_SentinelValue === object5)
        return A.SystemHash_hash4(J.get$hashCode$(object1), J.get$hashCode$(object2), J.get$hashCode$(object3), J.get$hashCode$(object4), $.$get$_hashSeed());
      if (B.C_SentinelValue === object6) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5));
      }
      if (B.C_SentinelValue === object7) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6));
      }
      if (B.C_SentinelValue === object8) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7));
      }
      if (B.C_SentinelValue === object9) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8));
      }
      if (B.C_SentinelValue === object10) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9));
      }
      if (B.C_SentinelValue === object11) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10));
      }
      if (B.C_SentinelValue === object12) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11));
      }
      if (B.C_SentinelValue === object13) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12));
      }
      if (B.C_SentinelValue === object14) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13));
      }
      if (B.C_SentinelValue === object15) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14));
      }
      if (B.C_SentinelValue === object16) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15));
      }
      if (B.C_SentinelValue === object17) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16));
      }
      if (B.C_SentinelValue === object18) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17));
      }
      if (B.C_SentinelValue === object19) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        object18 = J.get$hashCode$(object18);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18));
      }
      if (B.C_SentinelValue === object20) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        object4 = J.get$hashCode$(object4);
        object5 = J.get$hashCode$(object5);
        object6 = J.get$hashCode$(object6);
        object7 = J.get$hashCode$(object7);
        object8 = J.get$hashCode$(object8);
        object9 = J.get$hashCode$(object9);
        object10 = J.get$hashCode$(object10);
        object11 = J.get$hashCode$(object11);
        object12 = J.get$hashCode$(object12);
        object13 = J.get$hashCode$(object13);
        object14 = J.get$hashCode$(object14);
        object15 = J.get$hashCode$(object15);
        object16 = J.get$hashCode$(object16);
        object17 = J.get$hashCode$(object17);
        object18 = J.get$hashCode$(object18);
        object19 = J.get$hashCode$(object19);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18), object19));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object5 = J.get$hashCode$(object5);
      object6 = J.get$hashCode$(object6);
      object7 = J.get$hashCode$(object7);
      object8 = J.get$hashCode$(object8);
      object9 = J.get$hashCode$(object9);
      object10 = J.get$hashCode$(object10);
      object11 = J.get$hashCode$(object11);
      object12 = J.get$hashCode$(object12);
      object13 = J.get$hashCode$(object13);
      object14 = J.get$hashCode$(object14);
      object15 = J.get$hashCode$(object15);
      object16 = J.get$hashCode$(object16);
      object17 = J.get$hashCode$(object17);
      object18 = J.get$hashCode$(object18);
      object19 = J.get$hashCode$(object19);
      object20 = J.get$hashCode$(object20);
      return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4), object5), object6), object7), object8), object9), object10), object11), object12), object13), object14), object15), object16), object17), object18), object19), object20));
    },
    Object_hashAll(objects) {
      var t1,
        hash = $.$get$_hashSeed();
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        hash = A.SystemHash_combine(hash, J.get$hashCode$(t1.get$current(t1)));
      return A.SystemHash_finish(hash);
    },
    print(object) {
      A.printString(A.S(object));
    },
    Stopwatch$() {
      $.$get$Stopwatch__frequency();
      return new A.Stopwatch();
    },
    _combineSurrogatePair(start, end) {
      return 65536 + ((start & 1023) << 10) + (end & 1023);
    },
    Uri_parse(uri, start, end) {
      var t1, delta, indices, t2, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, start0, t3, schemeAuth, port, userInfoStart, userInfo, host, portNumber, path, query, _null = null;
      end = uri.length;
      t1 = start + 5;
      if (end >= t1) {
        delta = ((uri.charCodeAt(start + 4) ^ 58) * 3 | uri.charCodeAt(start) ^ 100 | uri.charCodeAt(start + 1) ^ 97 | uri.charCodeAt(start + 2) ^ 116 | uri.charCodeAt(start + 3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(start > 0 || end < end ? B.JSString_methods.substring$2(uri, start, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, t1, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      indices[0] = 0;
      t2 = start - 1;
      indices[1] = t2;
      indices[2] = t2;
      indices[7] = t2;
      indices[3] = start;
      indices[4] = start;
      indices[5] = end;
      indices[6] = end;
      if (A._scan(uri, start, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= start)
        if (A._scan(uri, start, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < start;
      scheme = _null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t2 = portStart > start;
          start0 = 0;
          if (!(t2 && portStart + 1 === pathStart)) {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > start)
                t3 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t3 = false;
            else
              t3 = true;
            if (!t3) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t3 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t3 = true;
              if (!t3)
                if (schemeEnd === start + 4) {
                  if (B.JSString_methods.startsWith$2(uri, "file", start)) {
                    if (hostStart <= start) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= start;
                      t1 = delta - start;
                      queryStart += t1;
                      fragmentStart += t1;
                      end = uri.length;
                      start = start0;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      t1 = start === 0;
                      t1;
                      if (t1) {
                        uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                        ++queryStart;
                        ++fragmentStart;
                        ++end;
                      } else {
                        uri = B.JSString_methods.substring$2(uri, start, pathStart) + "/" + B.JSString_methods.substring$2(uri, queryStart, end);
                        schemeEnd -= start;
                        hostStart -= start;
                        portStart -= start;
                        pathStart -= start;
                        t1 = 1 - start;
                        queryStart += t1;
                        fragmentStart += t1;
                        end = uri.length;
                        start = start0;
                      }
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", start)) {
                    if (t2 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      t1 = start === 0;
                      t1;
                      if (t1) {
                        uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                        pathStart -= 3;
                        queryStart -= 3;
                        fragmentStart -= 3;
                        end -= 3;
                      } else {
                        uri = B.JSString_methods.substring$2(uri, start, portStart) + B.JSString_methods.substring$2(uri, pathStart, end);
                        schemeEnd -= start;
                        hostStart -= start;
                        portStart -= start;
                        t1 = 3 + start;
                        pathStart -= t1;
                        queryStart -= t1;
                        fragmentStart -= t1;
                        end = uri.length;
                        start = start0;
                      }
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === t1 && B.JSString_methods.startsWith$2(uri, "https", start)) {
                  if (t2 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    t1 = start === 0;
                    t1;
                    if (t1) {
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      pathStart -= 4;
                      queryStart -= 4;
                      fragmentStart -= 4;
                      end -= 3;
                    } else {
                      uri = B.JSString_methods.substring$2(uri, start, portStart) + B.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= start;
                      hostStart -= start;
                      portStart -= start;
                      t1 = 4 + start;
                      pathStart -= t1;
                      queryStart -= t1;
                      fragmentStart -= t1;
                      end = uri.length;
                      start = start0;
                    }
                  }
                  scheme = "https";
                }
              isSimple = !t3;
            }
          }
        }
      }
      if (isSimple) {
        if (start > 0 || end < uri.length) {
          uri = B.JSString_methods.substring$2(uri, start, end);
          schemeEnd -= start;
          hostStart -= start;
          portStart -= start;
          pathStart -= start;
          queryStart -= start;
          fragmentStart -= start;
        }
        return new A._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      if (scheme == null)
        if (schemeEnd > start)
          scheme = A._Uri__makeScheme(uri, start, schemeEnd);
        else {
          if (schemeEnd === start)
            A._Uri__fail(uri, start, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > start) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = B.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__Uri(fragment, host, path, port, queryParameters) {
      var query, t1, hasAuthority,
        userInfo = A._Uri__makeUserInfo(null, 0, 0);
      host = A._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
      query = A._Uri__makeQuery(null, 0, 0, queryParameters);
      fragment = A._Uri__makeFragment(fragment, 0, fragment == null ? 0 : fragment.length);
      port = A._Uri__makePort(port, "");
      if (host == null)
        if (userInfo.length === 0)
          t1 = port != null;
        else
          t1 = true;
      else
        t1 = false;
      if (t1)
        host = "";
      t1 = host == null;
      hasAuthority = !t1;
      path = A._Uri__makePath(path, 0, path == null ? 0 : path.length, null, "", hasAuthority);
      if (t1 && !B.JSString_methods.startsWith$1(path, "/"))
        path = A._Uri__normalizeRelativePath(path, hasAuthority);
      else
        path = A._Uri__removeDotSegments(path);
      return A._Uri$_internal("", userInfo, t1 && B.JSString_methods.startsWith$1(path, "//") ? "" : host, port, path, query, fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__computeQueryParametersAll(query) {
      var queryParameterLists;
      if (query.length === 0)
        return B.Map_empty;
      queryParameterLists = A._Uri__splitQueryStringAll(query);
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    _Uri__makePort(port, scheme) {
      if (port != null && port === A._Uri__defaultPort(scheme))
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (host == null)
        return null;
      if (start === end)
        return "";
      if (host.charCodeAt(start) === 91) {
        t1 = end - 1;
        if (host.charCodeAt(t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, sourceLength, tail, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_piR[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          t2 = buffer._contents += slice;
          sourceLength = 3;
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_4AN[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (B.List_VOY[char >>> 4] & 1 << (char & 15)) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        if (!isNormalized)
          slice = slice.toLowerCase();
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (B.List_GVy[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      if (userInfo == null)
        return "";
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_2jN, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var result,
        isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority;
      if (path == null)
        return isFile ? "/" : "";
      else
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_M2I, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      if (query != null) {
        if (queryParameters != null)
          throw A.wrapException(A.ArgumentError$("Both query and queryParameters specified", null));
        return A._Uri__normalizeOrSubstring(query, start, end, B.List_42A, true, false);
      }
      if (queryParameters == null)
        return null;
      return A._Uri__makeQueryFromParameters(queryParameters);
    },
    _Uri__makeQueryFromParametersDefault(queryParameters) {
      var t1 = {},
        result = new A.StringBuffer("");
      t1.separator = "";
      queryParameters.forEach$1(0, new A._Uri__makeQueryFromParametersDefault_closure(new A._Uri__makeQueryFromParametersDefault_writeParameter(t1, result)));
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeFragment(fragment, start, end) {
      if (fragment == null)
        return null;
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_42A, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = source.charCodeAt(index + 1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (B.List_piR[B.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = _s16_.charCodeAt(char >>> 4);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = new Uint8Array(3 * encodedBytes);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = _s16_.charCodeAt(byte >>> 4);
          codeUnits[index + 2] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, index, sectionStart, buffer, char, sourceLength, replacement, t2, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = component.charCodeAt(index);
        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && char <= 93 && (B.List_VOY[char >>> 4] & 1 << (char & 15)) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = component.charCodeAt(t2);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end) {
        t1 = B.JSString_methods.substring$2(component, sectionStart, end);
        buffer._contents += t1;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      if (appendSlash)
        output.push("");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment) {
          appendSlash = output.length !== 0 && B.JSArray_methods.get$last(output) !== "..";
          if (appendSlash)
            output.pop();
          else
            output.push("..");
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = A._Uri__escapeScheme(output[0]);
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (B.List_GVy[char >>> 4] & 1 << (char & 15)) === 0)
            break;
        }
      return path;
    },
    _Uri__createList() {
      return A._setArrayType([], type$.JSArray_String);
    },
    _Uri__splitQueryStringAll(query) {
      var t1, i, start, equalsIndex, char,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.List_String),
        parsePair = new A._Uri__splitQueryStringAll_parsePair(query, B.C_Utf8Codec, result);
      for (t1 = query.length, i = 0, start = 0, equalsIndex = -1; i < t1;) {
        char = query.charCodeAt(i);
        if (char === 61) {
          if (equalsIndex < 0)
            equalsIndex = i;
        } else if (char === 38) {
          parsePair.call$3(start, equalsIndex, i);
          start = i + 1;
          equalsIndex = -1;
        }
        ++i;
      }
      parsePair.call$3(start, equalsIndex, i);
      return result;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = s.charCodeAt(pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = text.charCodeAt(i);
        t1 = true;
        if (codeUnit <= 127)
          if (codeUnit !== 37)
            t1 = plusToSpace && codeUnit === 43;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (B.C_Utf8Codec === encoding)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            bytes.push(A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else if (plusToSpace && codeUnit === 43)
            bytes.push(32);
          else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(0, bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(0, text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_42A, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _createTables() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = J.JSArray_JSArray$allocateGrowable(22, type$.Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 227);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        table = tables[state];
        char = uri.charCodeAt(i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    _toUnmodifiableStringList(key, list) {
      return A.List_List$unmodifiable(list, type$.String);
    },
    _Uri__makeQueryFromParameters_closure: function _Uri__makeQueryFromParameters_closure(t0) {
      this.params = t0;
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._core$_value = t0;
      this._microsecond = t1;
      this.isUtc = t2;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    Stopwatch: function Stopwatch() {
      this._stop = this._core$_start = 0;
    },
    RuneIterator: function RuneIterator(t0) {
      var _ = this;
      _.string = t0;
      _._nextPosition = _._core$_position = 0;
      _._currentCodePoint = -1;
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    _Uri__makeQueryFromParametersDefault_writeParameter: function _Uri__makeQueryFromParametersDefault_writeParameter(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _Uri__makeQueryFromParametersDefault_closure: function _Uri__makeQueryFromParametersDefault_closure(t0) {
      this.writeParameter = t0;
    },
    _Uri__splitQueryStringAll_parsePair: function _Uri__splitQueryStringAll_parsePair(t0, t1, t2) {
      this.query = t0;
      this.encoding = t1;
      this.result = t2;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_queryParametersAll_FI = _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    Expando: function Expando(t0, t1) {
      this._jsWeakMap = t0;
      this.$ti = t1;
    },
    _getNextTaskId() {
      var t1 = $._taskId;
      $._taskId = t1 + 1;
      return t1;
    },
    _createEventName(isBeginEvent, isEndEvent, $name, taskId) {
      if (isBeginEvent)
        return "" + taskId + "-" + $name + "-begin";
      if (isEndEvent)
        return "" + taskId + "-" + $name + "-end";
      return $name;
    },
    _postfixWithCount(eventName) {
      var count = $._eventNameToCount.$index(0, eventName);
      if (count == null)
        return eventName;
      return eventName + "-" + A.S(count);
    },
    _decrementEventCount(eventName) {
      var t1, newCount;
      if (!$._eventNameToCount.containsKey$1(0, eventName))
        return;
      t1 = $._eventNameToCount.$index(0, eventName);
      t1.toString;
      newCount = t1 - 1;
      t1 = $._eventNameToCount;
      if (newCount <= 0)
        t1.remove$1(0, eventName);
      else
        t1.$indexSet(0, eventName, newCount);
    },
    _reportTaskEvent(taskId, flowId, type, $name, argumentsAsJson) {
      var isBeginEvent, isEndEvent, currentEventName, currentCount, t1, beginEventName;
      if (type === 9 || type === 11 || type === 10)
        return;
      isBeginEvent = type === 1 || type === 5;
      isEndEvent = type === 2 || type === 7;
      currentEventName = A._createEventName(isBeginEvent, isEndEvent, $name, taskId);
      if (isBeginEvent) {
        currentCount = $._eventNameToCount.$index(0, currentEventName);
        if (currentCount == null)
          currentCount = 0;
        $._eventNameToCount.$indexSet(0, currentEventName, currentCount + 1);
        currentEventName = A._postfixWithCount(currentEventName);
      }
      t1 = $.$get$_performance();
      t1.toString;
      t1.mark(currentEventName, $.$get$_json().parse(argumentsAsJson));
      if (isEndEvent) {
        beginEventName = A._createEventName(true, false, $name, taskId);
        t1 = $.$get$_performance();
        t1.toString;
        t1.measure($name, A._postfixWithCount(beginEventName), currentEventName);
        A._decrementEventCount(beginEventName);
      }
    },
    _FakeUserTag__FakeUserTag(label) {
      var t1,
        existingTag = $._FakeUserTag__instances.$index(0, label);
      if (existingTag != null)
        return existingTag;
      if ($._FakeUserTag__instances.__js_helper$_length === 64)
        throw A.wrapException(A.UnsupportedError$("UserTag instance limit (64) reached."));
      t1 = new A._FakeUserTag();
      $._FakeUserTag__instances.$indexSet(0, label, t1);
      return t1;
    },
    ServiceExtensionResponse$result(result) {
      A.checkNotNullable(result, "result", type$.String);
      return new A.ServiceExtensionResponse();
    },
    ServiceExtensionResponse__validateErrorCode(errorCode) {
      var _s9_ = "errorCode";
      A.checkNotNullable(errorCode, _s9_, type$.int);
      if (errorCode === -32602)
        return;
      if (errorCode >= -32016 && errorCode <= -32000)
        return;
      throw A.wrapException(A.ArgumentError$value(errorCode, _s9_, "Out of range"));
    },
    registerExtension(method, handler) {
      var t1 = type$.String;
      A.checkNotNullable(method, "method", t1);
      if (!B.JSString_methods.startsWith$1(method, "ext."))
        throw A.wrapException(A.ArgumentError$value(method, "method", "Must begin with ext."));
      if ($._extensions.$index(0, method) != null)
        throw A.wrapException(A.ArgumentError$("Extension already registered: " + method, null));
      A.checkNotNullable(handler, "handler", type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
      $._extensions.$indexSet(0, method, $.Zone__current.bindBinaryCallback$3$1(handler, type$.Future_ServiceExtensionResponse, t1, type$.Map_String_String));
    },
    postEvent(eventKind, eventData) {
      var _s9_ = "Extension";
      if (B.JSArray_methods.contains$1(A._setArrayType(["VM", "Isolate", "Debug", "GC", "_Echo", "HeapSnapshot", "Logging", "Timeline", "Profiler"], type$.JSArray_String), _s9_))
        throw A.wrapException(A.ArgumentError$value(_s9_, "stream", "Cannot be a protected stream."));
      else if (B.JSString_methods.startsWith$1(_s9_, "_"))
        throw A.wrapException(A.ArgumentError$value(_s9_, "stream", "Cannot start with an underscore."));
      return;
    },
    Timeline_startSync($name, $arguments, flow) {
      var t1, block;
      A.ArgumentError_checkNotNull($name, "name");
      if ($.$get$_performance() == null) {
        $.Timeline__stack.push(null);
        return;
      }
      t1 = A._getNextTaskId();
      block = new A._SyncBlock($name, t1, $arguments, flow);
      $.Timeline__stack.push(block);
      A._reportTaskEvent(t1, -1, 1, $name, block.get$_jsonArguments());
    },
    Timeline_finishSync() {
      if ($.Timeline__stack.length === 0)
        throw A.wrapException(A.StateError$("Uneven calls to startSync and finishSync"));
      var block = $.Timeline__stack.pop();
      if (block == null)
        return;
      A._reportTaskEvent(block.taskId, -1, 2, block.name, block.get$_jsonArguments());
    },
    Timeline_instantSync($name, $arguments) {
      A.ArgumentError_checkNotNull($name, "name");
      if ($.$get$_performance() == null)
        return;
      A._reportTaskEvent(0, -1, 4, $name, A._argumentsAsJson($arguments));
    },
    _argumentsAsJson($arguments) {
      if ($arguments == null || $arguments.__js_helper$_length === 0)
        return "{}";
      return B.C_JsonCodec.encode$1($arguments);
    },
    _performance_closure: function _performance_closure() {
    },
    _json_closure: function _json_closure() {
    },
    _FakeUserTag: function _FakeUserTag() {
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    TimelineTask: function TimelineTask(t0, t1, t2, t3) {
      var _ = this;
      _._developer$_parent = t0;
      _._filterKey = t1;
      _._taskId = t2;
      _._stack = t3;
    },
    _AsyncBlock: function _AsyncBlock(t0, t1) {
      this.name = t0;
      this._taskId = t1;
    },
    _SyncBlock: function _SyncBlock(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.taskId = t1;
      _.$arguments = t2;
      _.flow = t3;
      _.___SyncBlock__jsonArguments_FI = $;
    },
    HtmlElement: function HtmlElement() {
    },
    AccessibleNodeList: function AccessibleNodeList() {
    },
    AnchorElement: function AnchorElement() {
    },
    AreaElement: function AreaElement() {
    },
    Blob: function Blob() {
    },
    CharacterData: function CharacterData() {
    },
    CssPerspective: function CssPerspective() {
    },
    CssRule: function CssRule() {
    },
    CssStyleDeclaration: function CssStyleDeclaration() {
    },
    CssStyleDeclarationBase: function CssStyleDeclarationBase() {
    },
    CssStyleValue: function CssStyleValue() {
    },
    CssTransformComponent: function CssTransformComponent() {
    },
    CssTransformValue: function CssTransformValue() {
    },
    CssUnparsedValue: function CssUnparsedValue() {
    },
    DataTransferItemList: function DataTransferItemList() {
    },
    DomException0: function DomException0() {
    },
    DomRectList: function DomRectList() {
    },
    DomRectReadOnly0: function DomRectReadOnly0() {
    },
    DomStringList: function DomStringList() {
    },
    DomTokenList0: function DomTokenList0() {
    },
    Element: function Element() {
    },
    EventTarget: function EventTarget() {
    },
    File: function File() {
    },
    FileList: function FileList() {
    },
    FileWriter: function FileWriter() {
    },
    FormElement: function FormElement() {
    },
    Gamepad: function Gamepad() {
    },
    History: function History() {
    },
    HtmlCollection: function HtmlCollection() {
    },
    Location: function Location() {
    },
    MediaList: function MediaList() {
    },
    MidiInputMap: function MidiInputMap() {
    },
    MidiInputMap_keys_closure: function MidiInputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MidiOutputMap: function MidiOutputMap() {
    },
    MidiOutputMap_keys_closure: function MidiOutputMap_keys_closure(t0) {
      this.keys = t0;
    },
    MimeType: function MimeType() {
    },
    MimeTypeArray: function MimeTypeArray() {
    },
    Node: function Node() {
    },
    NodeList: function NodeList() {
    },
    Plugin: function Plugin() {
    },
    PluginArray: function PluginArray() {
    },
    RtcStatsReport: function RtcStatsReport() {
    },
    RtcStatsReport_keys_closure: function RtcStatsReport_keys_closure(t0) {
      this.keys = t0;
    },
    SelectElement: function SelectElement() {
    },
    SourceBuffer: function SourceBuffer() {
    },
    SourceBufferList: function SourceBufferList() {
    },
    SpeechGrammar: function SpeechGrammar() {
    },
    SpeechGrammarList: function SpeechGrammarList() {
    },
    SpeechRecognitionResult: function SpeechRecognitionResult() {
    },
    Storage: function Storage() {
    },
    Storage_keys_closure: function Storage_keys_closure(t0) {
      this.keys = t0;
    },
    StyleSheet: function StyleSheet() {
    },
    TextTrack: function TextTrack() {
    },
    TextTrackCue: function TextTrackCue() {
    },
    TextTrackCueList: function TextTrackCueList() {
    },
    TextTrackList: function TextTrackList() {
    },
    TimeRanges: function TimeRanges() {
    },
    Touch: function Touch() {
    },
    TouchList: function TouchList() {
    },
    TrackDefaultList: function TrackDefaultList() {
    },
    Url: function Url() {
    },
    VideoTrackList: function VideoTrackList() {
    },
    _CssRuleList: function _CssRuleList() {
    },
    _DomRect: function _DomRect() {
    },
    _GamepadList: function _GamepadList() {
    },
    _NamedNodeMap: function _NamedNodeMap() {
    },
    _SpeechRecognitionResultList: function _SpeechRecognitionResultList() {
    },
    _StyleSheetList: function _StyleSheetList() {
    },
    ImmutableListMixin: function ImmutableListMixin() {
    },
    FixedSizeListIterator: function FixedSizeListIterator(t0, t1, t2) {
      var _ = this;
      _._array = t0;
      _._length = t1;
      _._position = -1;
      _._current = null;
      _.$ti = t2;
    },
    _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase: function _CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase() {
    },
    _DomRectList_JavaScriptObject_ListMixin: function _DomRectList_JavaScriptObject_ListMixin() {
    },
    _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin: function _DomStringList_JavaScriptObject_ListMixin() {
    },
    _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin: function _FileList_JavaScriptObject_ListMixin() {
    },
    _FileList_JavaScriptObject_ListMixin_ImmutableListMixin: function _FileList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin: function _HtmlCollection_JavaScriptObject_ListMixin() {
    },
    _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin: function _HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _MidiInputMap_JavaScriptObject_MapMixin: function _MidiInputMap_JavaScriptObject_MapMixin() {
    },
    _MidiOutputMap_JavaScriptObject_MapMixin: function _MidiOutputMap_JavaScriptObject_MapMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin() {
    },
    _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin: function _NodeList_JavaScriptObject_ListMixin() {
    },
    _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NodeList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin: function _PluginArray_JavaScriptObject_ListMixin() {
    },
    _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin: function _PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _RtcStatsReport_JavaScriptObject_MapMixin: function _RtcStatsReport_JavaScriptObject_MapMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin: function _SourceBufferList_EventTarget_ListMixin() {
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: function _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin() {
    },
    _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin: function _SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _Storage_JavaScriptObject_MapMixin: function _Storage_JavaScriptObject_MapMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin() {
    },
    _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin: function _TextTrackList_EventTarget_ListMixin() {
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: function _TextTrackList_EventTarget_ListMixin_ImmutableListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin: function _TouchList_JavaScriptObject_ListMixin() {
    },
    _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TouchList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin: function __CssRuleList_JavaScriptObject_ListMixin() {
    },
    __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin: function __CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin: function __GamepadList_JavaScriptObject_ListMixin() {
    },
    __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin: function __GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin() {
    },
    __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin: function __NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin() {
    },
    __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin: function __SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin: function __StyleSheetList_JavaScriptObject_ListMixin() {
    },
    __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin: function __StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _functionToJS1(f) {
      var result;
      if (typeof f == "function")
        throw A.wrapException(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1) {
          return _call(f, arg1, arguments.length);
        };
      }(A._callDartFunctionFast1, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _functionToJS2(f) {
      var result;
      if (typeof f == "function")
        throw A.wrapException(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1, arg2) {
          return _call(f, arg1, arg2, arguments.length);
        };
      }(A._callDartFunctionFast2, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _callDartFunctionFast0(callback) {
      return callback.call$0();
    },
    _callDartFunctionFast1(callback, arg1, $length) {
      if ($length >= 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _callDartFunctionFast2(callback, arg1, arg2, $length) {
      if ($length >= 2)
        return callback.call$2(arg1, arg2);
      if ($length === 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _noJsifyRequired(o) {
      return o == null || A._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      if (A._noJsifyRequired(object))
        return object;
      return new A.jsify__convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(object);
    },
    getProperty(o, $name) {
      return o[$name];
    },
    _getPropertyTrustType(o, $name) {
      return o[$name];
    },
    callMethod(o, method, args) {
      return o[method].apply(o, args);
    },
    _callMethodUnchecked2(o, method, arg1, arg2) {
      return o[method](arg1, arg2);
    },
    _callConstructorUnchecked0(constr) {
      return new constr();
    },
    _callConstructorUnchecked1(constr, arg1) {
      return new constr(arg1);
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    _noDartifyRequired(o) {
      return o == null || typeof o === "boolean" || typeof o === "number" || typeof o === "string" || o instanceof Int8Array || o instanceof Uint8Array || o instanceof Uint8ClampedArray || o instanceof Int16Array || o instanceof Uint16Array || o instanceof Int32Array || o instanceof Uint32Array || o instanceof Float32Array || o instanceof Float64Array || o instanceof ArrayBuffer || o instanceof DataView;
    },
    dartify(o) {
      if (A._noDartifyRequired(o))
        return o;
      return new A.dartify_convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(o);
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0) {
      this.completer = t0;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    dartify_convert: function dartify_convert(t0) {
      this._convertedObjects = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    Random_Random$secure() {
      return $.$get$Random__secureRandom();
    },
    _JSSecureRandom: function _JSSecureRandom(t0) {
      this._math$_buffer = t0;
    },
    Length: function Length() {
    },
    LengthList: function LengthList() {
    },
    Number: function Number() {
    },
    NumberList: function NumberList() {
    },
    PointList: function PointList() {
    },
    StringList: function StringList() {
    },
    Transform: function Transform() {
    },
    TransformList: function TransformList() {
    },
    _LengthList_JavaScriptObject_ListMixin: function _LengthList_JavaScriptObject_ListMixin() {
    },
    _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin: function _LengthList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin: function _NumberList_JavaScriptObject_ListMixin() {
    },
    _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin: function _NumberList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin: function _StringList_JavaScriptObject_ListMixin() {
    },
    _StringList_JavaScriptObject_ListMixin_ImmutableListMixin: function _StringList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin: function _TransformList_JavaScriptObject_ListMixin() {
    },
    _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin: function _TransformList_JavaScriptObject_ListMixin_ImmutableListMixin() {
    },
    ByteData_ByteData$view(buffer, offsetInBytes, $length) {
      return A.NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length);
    },
    ByteData_ByteData$sublistView(data) {
      var elementSize = data.BYTES_PER_ELEMENT,
        end = A.RangeError_checkValidRange(0, null, B.JSInt_methods.$tdiv(data.byteLength, elementSize), null, null);
      return A.NativeByteData_NativeByteData$view(data.buffer, data.byteOffset + 0 * elementSize, end * elementSize);
    },
    Uint8List_Uint8List$sublistView(data, start, end) {
      var elementSize = J.get$elementSizeInBytes$x(data);
      end = A.RangeError_checkValidRange(start, end, B.JSInt_methods.$tdiv(data.byteLength, elementSize), null, null);
      return A.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset + start * elementSize, (end - start) * elementSize);
    },
    Endian: function Endian() {
    },
    Size$(width, height) {
      return new A.Size(width, height);
    },
    Rect$fromCenter(center, height, width) {
      var t1 = center._dx,
        t2 = width / 2,
        t3 = center._dy,
        t4 = height / 2;
      return new A.Rect(t1 - t2, t3 - t4, t1 + t2, t3 + t4);
    },
    Rect$fromPoints(a, b) {
      var t1 = a._dx,
        t2 = b._dx,
        t3 = a._dy,
        t4 = b._dy;
      return new A.Rect(Math.min(t1, t2), Math.min(t3, t4), Math.max(t1, t2), Math.max(t3, t4));
    },
    lerpDouble(a, b, t) {
      var t1;
      if (a != b) {
        t1 = a == null ? null : isNaN(a);
        if (t1 === true) {
          t1 = b == null ? null : isNaN(b);
          t1 = t1 === true;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1)
        return a == null ? null : a;
      if (a == null)
        a = 0;
      if (b == null)
        b = 0;
      return a * (1 - t) + b * t;
    },
    clampDouble(x, min, max) {
      if (x < min)
        return min;
      if (x > max)
        return max;
      if (isNaN(x))
        return max;
      return x;
    },
    PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerData(viewId, timeStamp, change, kind, signalKind, device, pointerIdentifier, physicalX, physicalY, physicalDeltaX, physicalDeltaY, buttons, false, synthesized, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, scrollDeltaX, scrollDeltaY, scale, onRespond);
    },
    TextStyle_TextStyle(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      return $.$get$_renderer().createTextStyle$21$background$color$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing);
    },
    ParagraphStyle_ParagraphStyle(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      return $.$get$_renderer().createParagraphStyle$12$ellipsis$fontFamily$fontSize$fontStyle$fontWeight$height$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior);
    },
    _ChannelCallbackRecord: function _ChannelCallbackRecord(t0, t1) {
      this._callback = t0;
      this._ui$_zone = t1;
    },
    _StoredMessage: function _StoredMessage(t0, t1, t2) {
      this.data = t0;
      this._callback = t1;
      this._ui$_zone = t2;
    },
    _Channel: function _Channel(t0, t1) {
      var _ = this;
      _._queue = t0;
      _._capacity = t1;
      _._draining = false;
      _._channelCallbackRecord = null;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_push_closure: function ChannelBuffers_push_closure() {
    },
    ChannelBuffers_setListener_closure: function ChannelBuffers_setListener_closure() {
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Rect: function Rect(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    KeyEventType: function KeyEventType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    KeyEventDeviceType: function KeyEventDeviceType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    KeyData: function KeyData(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.timeStamp = t0;
      _.type = t1;
      _.physical = t2;
      _.logical = t3;
      _.character = t4;
      _.synthesized = t5;
    },
    KeyData__logicalToString_closure: function KeyData__logicalToString_closure(t0) {
      this.planeNum = t0;
    },
    KeyData__quotedCharCode_closure: function KeyData__quotedCharCode_closure() {
    },
    Color: function Color(t0) {
      this.value = t0;
    },
    StrokeCap: function StrokeCap(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    StrokeJoin: function StrokeJoin(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PaintingStyle: function PaintingStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BlendMode: function BlendMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FilterQuality: function FilterQuality(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PlatformDispatcher: function PlatformDispatcher() {
    },
    FrameTiming: function FrameTiming(t0) {
      this._ui$_data = t0;
    },
    AppLifecycleState: function AppLifecycleState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AppExitResponse: function AppExitResponse(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Locale: function Locale(t0, t1) {
      this._languageCode = t0;
      this._countryCode = t1;
    },
    SemanticsActionEvent: function SemanticsActionEvent(t0, t1, t2, t3) {
      var _ = this;
      _.type = t0;
      _.viewId = t1;
      _.nodeId = t2;
      _.$arguments = t3;
    },
    ViewFocusState: function ViewFocusState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ViewFocusDirection: function ViewFocusDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PointerChange: function PointerChange(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PointerDeviceKind: function PointerDeviceKind(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PointerSignalKind: function PointerSignalKind(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PointerData: function PointerData(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.viewId = t0;
      _.timeStamp = t1;
      _.change = t2;
      _.kind = t3;
      _.signalKind = t4;
      _.device = t5;
      _.pointerIdentifier = t6;
      _.physicalX = t7;
      _.physicalY = t8;
      _.physicalDeltaX = t9;
      _.physicalDeltaY = t10;
      _.buttons = t11;
      _.obscured = t12;
      _.synthesized = t13;
      _.pressure = t14;
      _.pressureMin = t15;
      _.pressureMax = t16;
      _.distance = t17;
      _.distanceMax = t18;
      _.size = t19;
      _.radiusMajor = t20;
      _.radiusMinor = t21;
      _.radiusMin = t22;
      _.radiusMax = t23;
      _.orientation = t24;
      _.tilt = t25;
      _.platformData = t26;
      _.scrollDeltaX = t27;
      _.scrollDeltaY = t28;
      _.scale = t29;
      _._ui$_onRespond = t30;
    },
    PointerDataPacket: function PointerDataPacket(t0) {
      this.data = t0;
    },
    SemanticsAction: function SemanticsAction(t0, t1) {
      this.index = t0;
      this.name = t1;
    },
    SemanticsUpdateBuilder: function SemanticsUpdateBuilder(t0) {
      this._nodeUpdates = t0;
    },
    PlaceholderAlignment: function PlaceholderAlignment(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GlyphInfo: function GlyphInfo(t0, t1, t2) {
      this.graphemeClusterLayoutBounds = t0;
      this.graphemeClusterCodeUnitRange = t1;
      this.writingDirection = t2;
    },
    TextAlign: function TextAlign(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextDecoration: function TextDecoration(t0) {
      this._mask = t0;
    },
    TextLeadingDistribution: function TextLeadingDistribution(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextHeightBehavior: function TextHeightBehavior(t0) {
      this.leadingDistribution = t0;
    },
    TextDirection: function TextDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextBox: function TextBox(t0, t1, t2, t3, t4) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
      _.direction = t4;
    },
    TextAffinity: function TextAffinity(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextPosition: function TextPosition(t0, t1) {
      this.offset = t0;
      this.affinity = t1;
    },
    TextRange: function TextRange(t0, t1) {
      this.start = t0;
      this.end = t1;
    },
    ParagraphConstraints: function ParagraphConstraints(t0) {
      this.width = t0;
    },
    BoxHeightStyle: function BoxHeightStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BoxWidthStyle: function BoxWidthStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Display: function Display() {
    },
    Brightness: function Brightness(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    GestureSettings: function GestureSettings() {
    },
    bootstrapEngine(registerPlugins, runApp) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        bootstrap, t1, loader;
      var $async$bootstrapEngine = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              bootstrap = new A.AppBootstrap(new A.bootstrapEngine_closure(), new A.bootstrapEngine_closure0(registerPlugins, runApp));
              t1 = self._flutter;
              loader = t1 == null ? null : t1.loader;
              $async$goto = loader == null || !("didCreateEngineInitializer" in loader) ? 2 : 4;
              break;
            case 2:
              // then
              $async$goto = 5;
              return A._asyncAwait(bootstrap.autoStart$0(), $async$bootstrapEngine);
            case 5:
              // returning from await.
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              loader.didCreateEngineInitializer(bootstrap.prepareEngineInitializer$0());
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$bootstrapEngine, $async$completer);
    },
    AssetManager: function AssetManager(t0) {
      this._assetBase = t0;
    },
    BrowserEngine: function BrowserEngine(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    OperatingSystem: function OperatingSystem(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    BrowserDetection: function BrowserDetection() {
      this.__BrowserDetection__operatingSystem_FI = this.__BrowserDetection__browserEngine_FI = this.__BrowserDetection__userAgent_FI = $;
    },
    bootstrapEngine_closure: function bootstrapEngine_closure() {
    },
    bootstrapEngine_closure0: function bootstrapEngine_closure0(t0, t1) {
      this.registerPlugins = t0;
      this.runApp = t1;
    },
    BrowserPlatformLocation: function BrowserPlatformLocation() {
    },
    BrowserPlatformLocation_getOrCreateDomEventListener_closure: function BrowserPlatformLocation_getOrCreateDomEventListener_closure(t0) {
      this.fn = t0;
    },
    HashUrlStrategy: function HashUrlStrategy() {
    },
    HashUrlStrategy_addPopStateListener_wrappedFn: function HashUrlStrategy_addPopStateListener_wrappedFn(t0) {
      this.fn = t0;
    },
    HashUrlStrategy_addPopStateListener_closure: function HashUrlStrategy_addPopStateListener_closure(t0, t1) {
      this.$this = t0;
      this.wrappedFn = t1;
    },
    HashUrlStrategy__waitForPopState_closure: function HashUrlStrategy__waitForPopState_closure(t0, t1) {
      this.unsubscribe = t0;
      this.completer = t1;
    },
    PlatformViewRegistry: function PlatformViewRegistry() {
    },
    AudioBuffer: function AudioBuffer() {
    },
    AudioParamMap: function AudioParamMap() {
    },
    AudioParamMap_keys_closure: function AudioParamMap_keys_closure(t0) {
      this.keys = t0;
    },
    AudioTrackList: function AudioTrackList() {
    },
    BaseAudioContext: function BaseAudioContext() {
    },
    OfflineAudioContext: function OfflineAudioContext() {
    },
    _AudioParamMap_JavaScriptObject_MapMixin: function _AudioParamMap_JavaScriptObject_MapMixin() {
    },
    _indexOf(source, pattern, start, end) {
      var realEnd, index, t1,
        patternLength = pattern.length;
      if (patternLength === 0)
        return start;
      realEnd = end - patternLength;
      if (realEnd < start)
        return -1;
      if (source.length - realEnd <= (realEnd - start) * 2) {
        index = 0;
        while (true) {
          if (start < realEnd) {
            index = B.JSString_methods.indexOf$2(source, pattern, start);
            t1 = index >= 0;
          } else
            t1 = false;
          if (!t1)
            break;
          if (index > realEnd)
            return -1;
          if (A.isGraphemeClusterBoundary(source, start, end, index) && A.isGraphemeClusterBoundary(source, start, end, index + patternLength))
            return index;
          start = index + 1;
        }
        return -1;
      }
      return A._gcIndexOf(source, pattern, start, end);
    },
    _gcIndexOf(source, pattern, start, end) {
      var t1, index, endIndex,
        breaks = new A.Breaks(source, end, start, 0);
      for (t1 = pattern.length; index = breaks.nextBreak$0(), index >= 0;) {
        endIndex = index + t1;
        if (endIndex > end)
          break;
        if (B.JSString_methods.startsWith$2(source, pattern, index) && A.isGraphemeClusterBoundary(source, start, end, endIndex))
          return index;
      }
      return -1;
    },
    StringCharacters: function StringCharacters(t0) {
      this.string = t0;
    },
    StringCharacterRange: function StringCharacterRange(t0, t1, t2) {
      var _ = this;
      _._characters_impl$_string = t0;
      _._characters_impl$_start = t1;
      _._characters_impl$_end = t2;
      _._currentCache = null;
    },
    lookAhead(base, start, cursor, state) {
      if (state === 208)
        return A.lookAheadRegional(base, start, cursor);
      if (state === 224) {
        if (A.lookAheadPictorgraphicExtend(base, start, cursor) >= 0)
          return 145;
        return 64;
      }
      throw A.wrapException(A.StateError$("Unexpected state: " + B.JSInt_methods.toRadixString$1(state, 16)));
    },
    lookAheadRegional(base, start, cursor) {
      var index, count, index0, tail, lead;
      for (index = cursor, count = 0; index0 = index - 2, index0 >= start; index = index0) {
        tail = base.charCodeAt(index - 1);
        if ((tail & 64512) !== 56320)
          break;
        lead = base.charCodeAt(index0);
        if ((lead & 64512) !== 55296)
          break;
        if (A.high(lead, tail) !== 6)
          break;
        count ^= 1;
      }
      if (count === 0)
        return 193;
      else
        return 144;
    },
    lookAheadPictorgraphicExtend(base, start, cursor) {
      var index, char, category, prevChar, t1;
      for (index = cursor; index > start;) {
        --index;
        char = base.charCodeAt(index);
        if ((char & 64512) !== 56320)
          category = A.low(char);
        else {
          if (index > start) {
            --index;
            prevChar = base.charCodeAt(index);
            t1 = (prevChar & 64512) === 55296;
          } else {
            prevChar = 0;
            t1 = false;
          }
          if (t1)
            category = A.high(prevChar, char);
          else
            break;
        }
        if (category === 7)
          return index;
        if (category !== 4)
          break;
      }
      return -1;
    },
    isGraphemeClusterBoundary(text, start, end, index) {
      var char, index0, prevChar, catAfter, t1, nextChar, catBefore, prevPrevChar, state,
        _s208_ = string$.x10__0__;
      if (start < index && index < end) {
        char = text.charCodeAt(index);
        index0 = index - 1;
        prevChar = text.charCodeAt(index0);
        if ((char & 63488) !== 55296)
          catAfter = A.low(char);
        else if ((char & 64512) === 55296) {
          t1 = index + 1;
          if (t1 >= end)
            return true;
          nextChar = text.charCodeAt(t1);
          if ((nextChar & 64512) !== 56320)
            return true;
          catAfter = A.high(char, nextChar);
        } else
          return (prevChar & 64512) !== 55296;
        if ((prevChar & 64512) !== 56320) {
          catBefore = A.low(prevChar);
          index = index0;
        } else {
          index -= 2;
          if (start <= index) {
            prevPrevChar = text.charCodeAt(index);
            if ((prevPrevChar & 64512) !== 55296)
              return true;
            catBefore = A.high(prevPrevChar, prevChar);
          } else
            return true;
        }
        state = _s208_.charCodeAt(_s208_.charCodeAt(catAfter | 176) & 240 | catBefore);
        return ((state >= 208 ? A.lookAhead(text, start, index, state) : state) & 1) === 0;
      }
      return start !== end;
    },
    Breaks: function Breaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.end = t1;
      _.cursor = t2;
      _.state = t3;
    },
    BackBreaks: function BackBreaks(t0, t1, t2, t3) {
      var _ = this;
      _.base = t0;
      _.start = t1;
      _.cursor = t2;
      _.state = t3;
    },
    DefaultEquality: function DefaultEquality(t0) {
      this.$ti = t0;
    },
    _MapEntry: function _MapEntry(t0, t1, t2) {
      this.equality = t0;
      this.key = t1;
      this.value = t2;
    },
    MapEquality: function MapEquality(t0, t1, t2) {
      this._keyEquality = t0;
      this._valueEquality = t1;
      this.$ti = t2;
    },
    HeapPriorityQueue$(comparison, $E) {
      var t1 = A.List_List$filled(7, null, false, $E._eval$1("0?"));
      return new A.HeapPriorityQueue(comparison, t1, $E._eval$1("HeapPriorityQueue<0>"));
    },
    HeapPriorityQueue: function HeapPriorityQueue(t0, t1, t2) {
      var _ = this;
      _.comparison = t0;
      _._priority_queue$_queue = t1;
      _._priority_queue$_modificationCount = _._priority_queue$_length = 0;
      _.$ti = t2;
    },
    FilePickerWeb: function FilePickerWeb() {
      this.__FilePickerWeb__target_A = $;
    },
    FilePicker: function FilePicker() {
    },
    FirebaseAnalyticsPlatform: function FirebaseAnalyticsPlatform() {
    },
    FirebaseAnalyticsWeb: function FirebaseAnalyticsWeb() {
    },
    Firebase_initializeApp(options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FirebaseApp),
        $async$returnValue, t1, app;
      var $async$Firebase_initializeApp = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.Firebase_delegatePackingProperty;
              $async$goto = 3;
              return A._asyncAwait((t1 == null ? $.Firebase_delegatePackingProperty = $.$get$FirebasePlatform__instance() : t1).initializeApp$2$name$options(null, options), $async$Firebase_initializeApp);
            case 3:
              // returning from await.
              app = $async$result;
              A.PlatformInterface__verify(app, $.$get$FirebaseAppPlatform__token(), true);
              $async$returnValue = new A.FirebaseApp(app);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$Firebase_initializeApp, $async$completer);
    },
    FirebaseApp: function FirebaseApp(t0) {
      this._delegate = t0;
    },
    duplicateApp(appName) {
      return A.FirebaseException$("duplicate-app", 'A Firebase App named "' + appName + '" already exists', "core");
    },
    coreNotInitialized() {
      return A.FirebaseException$("not-initialized", "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.google.com/docs/flutter/setup\n    ", "core");
    },
    FirebaseException$(code, message, plugin) {
      return new A.FirebaseException(plugin, message, code);
    },
    FirebaseOptions$fromPigeon(options) {
      return new A.FirebaseOptions(options.apiKey, options.appId, options.messagingSenderId, options.projectId, options.authDomain, options.databaseURL, options.storageBucket, options.measurementId, options.trackingId, options.deepLinkURLScheme, options.androidClientId, options.iosClientId, options.iosBundleId, options.appGroupId);
    },
    FirebaseException: function FirebaseException(t0, t1, t2) {
      this.plugin = t0;
      this.message = t1;
      this.code = t2;
    },
    FirebaseOptions: function FirebaseOptions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.apiKey = t0;
      _.appId = t1;
      _.messagingSenderId = t2;
      _.projectId = t3;
      _.authDomain = t4;
      _.databaseURL = t5;
      _.storageBucket = t6;
      _.measurementId = t7;
      _.trackingId = t8;
      _.deepLinkURLScheme = t9;
      _.androidClientId = t10;
      _.iosClientId = t11;
      _.iosBundleId = t12;
      _.appGroupId = t13;
    },
    MethodChannelFirebase: function MethodChannelFirebase() {
    },
    MethodChannelFirebase__initializeCore_closure: function MethodChannelFirebase__initializeCore_closure() {
    },
    MethodChannelFirebaseApp: function MethodChannelFirebaseApp(t0, t1, t2) {
      this._api = t0;
      this.name = t1;
      this.options = t2;
    },
    FirebasePlatform: function FirebasePlatform() {
    },
    FirebaseAppPlatform: function FirebaseAppPlatform() {
    },
    PigeonFirebaseOptions_decode(result) {
      var t1, t2, t3, t4, t5;
      type$.List_nullable_Object._as(result);
      t1 = J.getInterceptor$asx(result);
      t2 = t1.$index(result, 0);
      t2.toString;
      A._asString(t2);
      t3 = t1.$index(result, 1);
      t3.toString;
      A._asString(t3);
      t4 = t1.$index(result, 2);
      t4.toString;
      A._asString(t4);
      t5 = t1.$index(result, 3);
      t5.toString;
      return new A.PigeonFirebaseOptions(t2, t3, t4, A._asString(t5), A._asStringQ(t1.$index(result, 4)), A._asStringQ(t1.$index(result, 5)), A._asStringQ(t1.$index(result, 6)), A._asStringQ(t1.$index(result, 7)), A._asStringQ(t1.$index(result, 8)), A._asStringQ(t1.$index(result, 9)), A._asStringQ(t1.$index(result, 10)), A._asStringQ(t1.$index(result, 11)), A._asStringQ(t1.$index(result, 12)), A._asStringQ(t1.$index(result, 13)));
    },
    PigeonFirebaseOptions: function PigeonFirebaseOptions(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13) {
      var _ = this;
      _.apiKey = t0;
      _.appId = t1;
      _.messagingSenderId = t2;
      _.projectId = t3;
      _.authDomain = t4;
      _.databaseURL = t5;
      _.storageBucket = t6;
      _.measurementId = t7;
      _.trackingId = t8;
      _.deepLinkURLScheme = t9;
      _.androidClientId = t10;
      _.iosClientId = t11;
      _.iosBundleId = t12;
      _.appGroupId = t13;
    },
    PigeonInitializeResponse: function PigeonInitializeResponse(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.options = t1;
      _.isAutomaticDataCollectionEnabled = t2;
      _.pluginConstants = t3;
    },
    _FirebaseCoreHostApiCodec: function _FirebaseCoreHostApiCodec() {
    },
    FirebaseCoreHostApi: function FirebaseCoreHostApi() {
    },
    FirebaseAppHostApi: function FirebaseAppHostApi() {
    },
    FirebaseWebService$_($name, ensurePluginInitialized, override) {
      return new A.FirebaseWebService($name, override, ensurePluginInitialized);
    },
    FirebaseCoreWeb_registerService(service) {
      $.$get$FirebaseCoreWeb__services().putIfAbsent$2(0, service, new A.FirebaseCoreWeb_registerService_closure(service, null, null));
    },
    _handleException(exception, stackTrace) {
      if (B.JSString_methods.contains$1(J.toString$0$(exception), "of undefined"))
        throw A.wrapException(A.coreNotInitialized());
      A.Error_throwWithStackTrace(exception, stackTrace);
    },
    guardNotInitialized(cb, $R) {
      var value, error, stackTrace, t1, exception;
      try {
        value = cb.call$0();
        if (type$.Future_dynamic._is(value)) {
          t1 = $R._as(value.catchError$1(A.firebase_core_web___handleException$closure()));
          return t1;
        }
        return value;
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        A._handleException(error, stackTrace);
      }
    },
    FirebaseAppWeb: function FirebaseAppWeb(t0, t1) {
      this.name = t0;
      this.options = t1;
    },
    FirebaseWebService: function FirebaseWebService(t0, t1, t2) {
      this.name = t0;
      this.override = t1;
      this.ensurePluginInitialized = t2;
    },
    FirebaseCoreWeb: function FirebaseCoreWeb() {
    },
    FirebaseCoreWeb_registerService_closure: function FirebaseCoreWeb_registerService_closure(t0, t1, t2) {
      this.service = t0;
      this.productNameOverride = t1;
      this.ensurePluginInitialized = t2;
    },
    FirebaseCoreWeb__ignoredServiceScripts_closure: function FirebaseCoreWeb__ignoredServiceScripts_closure() {
    },
    FirebaseCoreWeb_injectSrcScript_closure: function FirebaseCoreWeb_injectSrcScript_closure(t0) {
      this.src = t0;
    },
    FirebaseCoreWeb_injectSrcScript_closure0: function FirebaseCoreWeb_injectSrcScript_closure0() {
    },
    FirebaseCoreWeb_injectSrcScript_closure1: function FirebaseCoreWeb_injectSrcScript_closure1(t0, t1) {
      this.windowVar = t0;
      this.completer = t1;
    },
    FirebaseCoreWeb__initializeCore_closure: function FirebaseCoreWeb__initializeCore_closure(t0, t1, t2) {
      this.$this = t0;
      this.ignored = t1;
      this.version = t2;
    },
    FirebaseCoreWeb_initializeApp_closure: function FirebaseCoreWeb_initializeApp_closure() {
    },
    FirebaseCoreWeb_initializeApp_closure0: function FirebaseCoreWeb_initializeApp_closure0(t0) {
      this._box_0 = t0;
    },
    TrustedTypesException: function TrustedTypesException(t0) {
      this.message = t0;
    },
    App_getInstance(jsObject) {
      var t2,
        t1 = $.$get$App__expando();
      A.Expando__checkType(jsObject);
      t2 = t1._jsWeakMap.get(jsObject);
      if (t2 == null) {
        t2 = new A.App(jsObject);
        t1.$indexSet(0, jsObject, t2);
        t1 = t2;
      } else
        t1 = t2;
      return t1;
    },
    App: function App(t0) {
      this.jsObject = t0;
    },
    JsObjectWrapper: function JsObjectWrapper() {
    },
    AnimationStatus: function AnimationStatus(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Animation0: function Animation0() {
    },
    AnimationController$(debugLabel, duration, reverseDuration, value, vsync) {
      var t1 = new A.AnimationController(0, 1, B.AnimationBehavior_0, duration, reverseDuration, B._AnimationDirection_0, B.AnimationStatus_0, new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function_AnimationStatus), type$.ObserverList_of_void_Function_AnimationStatus), new A.ObserverList(A._setArrayType([], type$.JSArray_of_void_Function), type$.ObserverList_of_void_Function));
      t1._ticker = vsync.createTicker$1(t1.get$_animation_controller$_tick());
      t1._internalSetValue$1(value == null ? 0 : value);
      return t1;
    },
    _AnimationDirection: function _AnimationDirection(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AnimationBehavior: function AnimationBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    AnimationController: function AnimationController(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.lowerBound = t0;
      _.upperBound = t1;
      _.animationBehavior = t2;
      _.duration = t3;
      _.reverseDuration = t4;
      _._simulation = _._ticker = null;
      _.__AnimationController__value_A = $;
      _._lastElapsedDuration = null;
      _._direction = t5;
      _.__AnimationController__status_A = $;
      _._lastReportedStatus = t6;
      _.AnimationLocalStatusListenersMixin__statusListeners = t7;
      _.AnimationLocalListenersMixin__listeners = t8;
    },
    _InterpolationSimulation: function _InterpolationSimulation(t0, t1, t2, t3, t4) {
      var _ = this;
      _._durationInSeconds = t0;
      _._begin = t1;
      _._animation_controller$_end = t2;
      _._curve = t3;
      _.tolerance = t4;
    },
    _AnimationController_Animation_AnimationEagerListenerMixin: function _AnimationController_Animation_AnimationEagerListenerMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin() {
    },
    _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin: function _AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin() {
    },
    ParametricCurve: function ParametricCurve() {
    },
    Curve: function Curve() {
    },
    _Linear: function _Linear() {
    },
    Cubic: function Cubic(t0, t1, t2, t3) {
      var _ = this;
      _.a = t0;
      _.b = t1;
      _.c = t2;
      _.d = t3;
    },
    _DecelerateCurve: function _DecelerateCurve() {
    },
    AnimationEagerListenerMixin: function AnimationEagerListenerMixin() {
    },
    AnimationLocalListenersMixin: function AnimationLocalListenersMixin() {
    },
    AnimationLocalStatusListenersMixin: function AnimationLocalStatusListenersMixin() {
    },
    ErrorDescription$(message) {
      var _null = null,
        t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorDescription(_null, true, _null, _null, _null, false, t1, true, _null, B.DiagnosticLevel_3, _null, _null, false, false, _null, B.DiagnosticsTreeStyle_7);
    },
    ErrorSummary$(message) {
      var _null = null,
        t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorSummary(_null, true, _null, _null, _null, false, t1, true, _null, B.DiagnosticLevel_6, _null, _null, false, false, _null, B.DiagnosticsTreeStyle_7);
    },
    ErrorHint$(message) {
      var _null = null,
        t1 = A._setArrayType([message], type$.JSArray_Object);
      return new A.ErrorHint(_null, true, _null, _null, _null, false, t1, true, _null, B.DiagnosticLevel_5, _null, _null, false, false, _null, B.DiagnosticsTreeStyle_7);
    },
    ErrorSpacer$() {
      var _null = null;
      return new A.ErrorSpacer("", true, _null, _null, _null, false, _null, true, B.C__NoDefaultValue, B.DiagnosticLevel_3, _null, "", true, false, _null, B.DiagnosticsTreeStyle_8);
    },
    FlutterError_FlutterError(message) {
      var lines = A._setArrayType(message.split("\n"), type$.JSArray_String),
        t1 = A._setArrayType([A.ErrorSummary$(B.JSArray_methods.get$first(lines))], type$.JSArray_DiagnosticsNode),
        t2 = A.SubListIterable$(lines, 1, null, type$.String);
      B.JSArray_methods.addAll$1(t1, new A.MappedListIterable(t2, new A.FlutterError_FlutterError_closure(), t2.$ti._eval$1("MappedListIterable<ListIterable.E,DiagnosticsNode>")));
      return new A.FlutterError(t1);
    },
    FlutterError$fromParts(diagnostics) {
      return new A.FlutterError(diagnostics);
    },
    FlutterError__defaultStackTraceDemangler(stackTrace) {
      return stackTrace;
    },
    FlutterError_dumpErrorToConsole(details, forceReport) {
      var t1;
      if (details.silent)
        return;
      t1 = $.FlutterError__errorCount;
      if (t1 === 0)
        A.debugPrintStack(J.toString$0$(details.exception), 100, details.stack);
      else
        A.print__debugPrintThrottled$closure().call$1("Another exception was thrown: " + details.get$summary().toString$0(0));
      $.FlutterError__errorCount = $.FlutterError__errorCount + 1;
    },
    FlutterError_defaultStackFilter($frames) {
      var skipped, index, t1, frame, className, $package, reasons, _i, result, resultLine, t2, t3,
        removedPackagesAndClasses = A.LinkedHashMap_LinkedHashMap$_literal(["dart:async-patch", 0, "dart:async", 0, "package:stack_trace", 0, "class _AssertionError", 0, "class _FakeAsync", 0, "class _FrameCallbackEntry", 0, "class _Timer", 0, "class _RawReceivePortImpl", 0], type$.String, type$.int),
        parsedFrames = A.StackFrame_fromStackString(J.join$1$ax($frames, "\n"));
      for (skipped = 0, index = 0; t1 = parsedFrames.length, index < t1; ++index) {
        frame = parsedFrames[index];
        className = "class " + frame.className;
        $package = frame.packageScheme + ":" + frame.$package;
        if (removedPackagesAndClasses.containsKey$1(0, className)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, className, new A.FlutterError_defaultStackFilter_closure());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        } else if (removedPackagesAndClasses.containsKey$1(0, $package)) {
          ++skipped;
          removedPackagesAndClasses.update$2(removedPackagesAndClasses, $package, new A.FlutterError_defaultStackFilter_closure0());
          B.JSArray_methods.removeAt$1(parsedFrames, index);
          --index;
        }
      }
      reasons = A.List_List$filled(t1, null, false, type$.nullable_String);
      for (_i = 0; false; ++_i)
        $.FlutterError__stackFilters[_i].filter$2(0, parsedFrames, reasons);
      t1 = type$.JSArray_String;
      result = A._setArrayType([], t1);
      for (index = 0; index < parsedFrames.length; ++index) {
        while (true) {
          if (!false)
            break;
          ++index;
        }
        resultLine = parsedFrames[index].source;
        result.push(resultLine);
      }
      t1 = A._setArrayType([], t1);
      for (t2 = removedPackagesAndClasses.get$entries(removedPackagesAndClasses), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        if (t3.value > 0)
          t1.push(t3.key);
      }
      B.JSArray_methods.sort$0(t1);
      if (skipped === 1)
        result.push("(elided one frame from " + B.JSArray_methods.get$single(t1) + ")");
      else if (skipped > 1) {
        t2 = t1.length;
        if (t2 > 1)
          t1[t2 - 1] = "and " + B.JSArray_methods.get$last(t1);
        t2 = "(elided " + skipped;
        if (t1.length > 2)
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, ", ") + ")");
        else
          result.push(t2 + " frames from " + B.JSArray_methods.join$1(t1, " ") + ")");
      }
      return result;
    },
    FlutterError_reportError(details) {
      var t1 = $.FlutterError_onError;
      if (t1 != null)
        t1.call$1(details);
    },
    debugPrintStack(label, maxFrames, stackTrace) {
      var lines, t1;
      A.print__debugPrintThrottled$closure().call$1(label);
      lines = A._setArrayType(B.JSString_methods.trimRight$0(J.toString$0$(stackTrace == null ? A.StackTrace_current() : A.FlutterError__defaultStackTraceDemangler(stackTrace))).split("\n"), type$.JSArray_String);
      t1 = lines.length;
      lines = J.take$1$ax(t1 !== 0 ? new A.SkipWhileIterable(lines, new A.debugPrintStack_closure(), type$.SkipWhileIterable_String) : lines, maxFrames);
      A.print__debugPrintThrottled$closure().call$1(B.JSArray_methods.join$1(A.FlutterError_defaultStackFilter(lines), "\n"));
    },
    DiagnosticsStackTrace$($name, stack, stackFilter) {
      var t1 = A.DiagnosticsStackTrace__applyStackFilter(stack, stackFilter);
      return new A.DiagnosticsStackTrace(B.List_empty1, t1, "", stack, true, $name, true, true, null, B.DiagnosticsTreeStyle_7);
    },
    DiagnosticsStackTrace__applyStackFilter(stack, stackFilter) {
      if (stack == null)
        return A._setArrayType([], type$.JSArray_DiagnosticsNode);
      return J.map$1$1$ax(A.FlutterError_defaultStackFilter(A._setArrayType(B.JSString_methods.trimRight$0(A.S(A.FlutterError__defaultStackTraceDemangler(stack))).split("\n"), type$.JSArray_String)), A.assertions_DiagnosticsStackTrace__createStackFrame$closure(), type$.DiagnosticsNode).toList$0(0);
    },
    DiagnosticsStackTrace__createStackFrame(frame) {
      return A.DiagnosticsNode_DiagnosticsNode$message(frame, false, B.DiagnosticsTreeStyle_8);
    },
    _FlutterErrorDetailsNode$($name, style, value) {
      return new A._FlutterErrorDetailsNode(value, $name, true, true, null, style);
    },
    _ErrorDiagnostic: function _ErrorDiagnostic() {
    },
    ErrorDescription: function ErrorDescription(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = t7;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _._computeValue = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
    },
    ErrorSummary: function ErrorSummary(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = t7;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _._computeValue = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
    },
    ErrorHint: function ErrorHint(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = t7;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _._computeValue = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
    },
    ErrorSpacer: function ErrorSpacer(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = t7;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _._computeValue = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
    },
    FlutterErrorDetails: function FlutterErrorDetails(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    FlutterErrorDetails_summary_formatException: function FlutterErrorDetails_summary_formatException(t0) {
      this.$this = t0;
    },
    FlutterErrorDetails_summary_closure: function FlutterErrorDetails_summary_closure() {
    },
    FlutterErrorDetails_summary_closure0: function FlutterErrorDetails_summary_closure0() {
    },
    FlutterErrorDetails_debugFillProperties_closure: function FlutterErrorDetails_debugFillProperties_closure() {
    },
    FlutterError: function FlutterError(t0) {
      this.diagnostics = t0;
    },
    FlutterError_FlutterError_closure: function FlutterError_FlutterError_closure() {
    },
    FlutterError_defaultStackFilter_closure: function FlutterError_defaultStackFilter_closure() {
    },
    FlutterError_defaultStackFilter_closure0: function FlutterError_defaultStackFilter_closure0() {
    },
    FlutterError_toString_closure: function FlutterError_toString_closure(t0) {
      this.renderer = t0;
    },
    debugPrintStack_closure: function debugPrintStack_closure() {
    },
    DiagnosticsStackTrace: function DiagnosticsStackTrace(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _._diagnostics$_children = t0;
      _._properties = t1;
      _._description = t2;
      _.value = t3;
      _.allowTruncate = t4;
      _.name = t5;
      _.showSeparator = t6;
      _.showName = t7;
      _.linePrefix = t8;
      _.style = t9;
    },
    _FlutterErrorDetailsNode: function _FlutterErrorDetailsNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    _FlutterError_Error_DiagnosticableTreeMixin: function _FlutterError_Error_DiagnosticableTreeMixin() {
    },
    _FlutterErrorDetails_Object_Diagnosticable: function _FlutterErrorDetails_Object_Diagnosticable() {
    },
    BindingBase: function BindingBase() {
    },
    BindingBase_initServiceExtensions_closure: function BindingBase_initServiceExtensions_closure() {
    },
    BindingBase_initServiceExtensions_closure0: function BindingBase_initServiceExtensions_closure0() {
    },
    BindingBase_initServiceExtensions_closure1: function BindingBase_initServiceExtensions_closure1() {
    },
    BindingBase_initServiceExtensions_closure2: function BindingBase_initServiceExtensions_closure2() {
    },
    BindingBase_registerBoolServiceExtension_closure: function BindingBase_registerBoolServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.setter = t1;
      _.name = t2;
      _.getter = t3;
    },
    BindingBase_registerNumericServiceExtension_closure: function BindingBase_registerNumericServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.name = t1;
      _.setter = t2;
      _.getter = t3;
    },
    BindingBase_registerStringServiceExtension_closure: function BindingBase_registerStringServiceExtension_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.setter = t1;
      _.name = t2;
      _.getter = t3;
    },
    BindingBase_registerServiceExtension_closure: function BindingBase_registerServiceExtension_closure(t0) {
      this.callback = t0;
    },
    BindingBase_registerServiceExtension__closure: function BindingBase_registerServiceExtension__closure() {
    },
    Listenable: function Listenable() {
    },
    ChangeNotifier: function ChangeNotifier() {
    },
    ChangeNotifier_notifyListeners_closure: function ChangeNotifier_notifyListeners_closure(t0) {
      this.$this = t0;
    },
    ValueNotifier: function ValueNotifier(t0, t1, t2) {
      var _ = this;
      _._change_notifier$_value = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
      _.$ti = t2;
    },
    TextTreeConfiguration$(addBlankLineIfNoChildren, afterDescriptionIfBody, afterName, afterProperties, beforeName, beforeProperties, bodyIndent, footer, isBlankLineBetweenPropertiesAndChildren, isNameOnOwnLine, lineBreak, lineBreakProperties, linkCharacter, mandatoryFooter, prefixLastChildLineOne, prefixLineOne, prefixOtherLines, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, propertySeparator, showChildren, suffixLineOne) {
      return new A.TextTreeConfiguration(prefixLineOne, suffixLineOne, prefixOtherLines, prefixLastChildLineOne, prefixOtherLinesRootNode, propertyPrefixIfChildren, propertyPrefixNoChildren, linkCharacter, B.JSString_methods.$mul(" ", linkCharacter.length), lineBreak, lineBreakProperties, beforeName, afterName, afterDescriptionIfBody, beforeProperties, afterProperties, propertySeparator, bodyIndent, showChildren, addBlankLineIfNoChildren, isNameOnOwnLine, footer, mandatoryFooter, isBlankLineBetweenPropertiesAndChildren);
    },
    _PrefixedStringBuilder__wordWrapLine(message, wrapRanges, width, otherLineOffset, startOffset) {
      var wrappedLine, startForLengthCalculations, lastWordStart, noWrap, t2, index, mode, lastWordEnd, start, t3, _box_0 = {},
        t1 = message.length;
      if (t1 + startOffset < width)
        return A._setArrayType([message], type$.JSArray_String);
      wrappedLine = A._setArrayType([], type$.JSArray_String);
      startForLengthCalculations = -startOffset;
      lastWordStart = A._Cell$named("lastWordStart");
      _box_0.currentChunk = 0;
      noWrap = new A._PrefixedStringBuilder__wordWrapLine_noWrap(_box_0, wrapRanges);
      for (t2 = lastWordStart.__late_helper$_name, index = 0, mode = B._WordWrapParseMode_0, lastWordEnd = null, start = 0; true;)
        switch (mode.index) {
          case 0:
            while (true) {
              if (!(index < t1 && message[index] === " "))
                break;
              ++index;
            }
            lastWordStart._value = index;
            mode = B._WordWrapParseMode_1;
            break;
          case 1:
            while (true) {
              if (index < t1)
                t3 = message[index] !== " " || noWrap.call$1(index);
              else
                t3 = false;
              if (!t3)
                break;
              ++index;
            }
            mode = B._WordWrapParseMode_2;
            break;
          case 2:
            t3 = index - startForLengthCalculations;
            if (t3 > width || index === t1) {
              if (t3 <= width || lastWordEnd == null)
                lastWordEnd = index;
              wrappedLine.push(B.JSString_methods.substring$2(message, start, lastWordEnd));
              if (lastWordEnd >= t1)
                return wrappedLine;
              if (lastWordEnd === index) {
                while (true) {
                  if (!(index < t1 && message[index] === " "))
                    break;
                  ++index;
                }
                start = index;
                mode = B._WordWrapParseMode_1;
              } else {
                start = lastWordStart._value;
                if (start === lastWordStart)
                  A.throwExpression(A.LateError$localNI(t2));
                mode = B._WordWrapParseMode_2;
              }
              startForLengthCalculations = start - otherLineOffset;
              lastWordEnd = null;
            } else {
              lastWordEnd = index;
              mode = B._WordWrapParseMode_0;
            }
            break;
        }
    },
    DiagnosticsNode_DiagnosticsNode$message(message, allowWrap, style) {
      var _null = null;
      return A.DiagnosticsProperty$("", _null, allowWrap, B.C__NoDefaultValue, message, _null, _null, B.DiagnosticLevel_3, false, false, true, style, _null, type$.void);
    },
    DiagnosticsProperty$($name, value, allowWrap, defaultValue, description, ifEmpty, ifNull, level, missingIfNull, showName, showSeparator, style, tooltip, $T) {
      var t1;
      if (ifNull == null)
        t1 = missingIfNull ? "MISSING" : null;
      else
        t1 = ifNull;
      return new A.DiagnosticsProperty(description, allowWrap, t1, ifEmpty, tooltip, missingIfNull, value, true, defaultValue, level, null, $name, showSeparator, showName, null, style, $T._eval$1("DiagnosticsProperty<0>"));
    },
    DiagnosticableTreeNode$($name, style, value) {
      return new A.DiagnosticableTreeNode(value, $name, true, true, null, style);
    },
    shortHash(object) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(J.get$hashCode$(object) & 1048575, 16), 5, "0");
    },
    DiagnosticLevel: function DiagnosticLevel(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    DiagnosticsTreeStyle: function DiagnosticsTreeStyle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextTreeConfiguration: function TextTreeConfiguration(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23) {
      var _ = this;
      _.prefixLineOne = t0;
      _.suffixLineOne = t1;
      _.prefixOtherLines = t2;
      _.prefixLastChildLineOne = t3;
      _.prefixOtherLinesRootNode = t4;
      _.propertyPrefixIfChildren = t5;
      _.propertyPrefixNoChildren = t6;
      _.linkCharacter = t7;
      _.childLinkSpace = t8;
      _.lineBreak = t9;
      _.lineBreakProperties = t10;
      _.beforeName = t11;
      _.afterName = t12;
      _.afterDescriptionIfBody = t13;
      _.beforeProperties = t14;
      _.afterProperties = t15;
      _.propertySeparator = t16;
      _.bodyIndent = t17;
      _.showChildren = t18;
      _.addBlankLineIfNoChildren = t19;
      _.isNameOnOwnLine = t20;
      _.footer = t21;
      _.mandatoryFooter = t22;
      _.isBlankLineBetweenPropertiesAndChildren = t23;
    },
    _WordWrapParseMode: function _WordWrapParseMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _PrefixedStringBuilder: function _PrefixedStringBuilder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.prefixLineOne = t0;
      _._prefixOtherLines = t1;
      _._nextPrefixOtherLines = null;
      _.wrapWidth = t2;
      _._diagnostics$_buffer = t3;
      _._currentLine = t4;
      _._wrappableRanges = t5;
      _._numLines = 0;
    },
    _PrefixedStringBuilder__wordWrapLine_noWrap: function _PrefixedStringBuilder__wordWrapLine_noWrap(t0, t1) {
      this._box_0 = t0;
      this.wrapRanges = t1;
    },
    _NoDefaultValue: function _NoDefaultValue() {
    },
    TextTreeRenderer: function TextTreeRenderer(t0, t1, t2) {
      this._wrapWidth = t0;
      this._wrapWidthProperties = t1;
      this._maxDescendentsTruncatableNode = t2;
    },
    TextTreeRenderer__debugRender_visitor: function TextTreeRenderer__debugRender_visitor(t0, t1) {
      this._box_0 = t0;
      this.descendants = t1;
    },
    TextTreeRenderer__debugRender_closure: function TextTreeRenderer__debugRender_closure(t0) {
      this.$this = t0;
    },
    DiagnosticsNode: function DiagnosticsNode() {
    },
    DiagnosticsProperty: function DiagnosticsProperty(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16) {
      var _ = this;
      _._description = t0;
      _.allowWrap = t1;
      _.ifNull = t2;
      _.ifEmpty = t3;
      _.tooltip = t4;
      _.missingIfNull = t5;
      _._diagnostics$_value = t6;
      _._valueComputed = t7;
      _._diagnostics$_exception = null;
      _.defaultValue = t8;
      _._defaultLevel = t9;
      _._computeValue = t10;
      _.name = t11;
      _.showSeparator = t12;
      _.showName = t13;
      _.linePrefix = t14;
      _.style = t15;
      _.$ti = t16;
    },
    DiagnosticableNode: function DiagnosticableNode() {
    },
    DiagnosticableTreeNode: function DiagnosticableTreeNode(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.value = t0;
      _.name = t1;
      _.showSeparator = t2;
      _.showName = t3;
      _.linePrefix = t4;
      _.style = t5;
    },
    DiagnosticPropertiesBuilder: function DiagnosticPropertiesBuilder(t0, t1) {
      this.properties = t0;
      this.defaultDiagnosticsTreeStyle = t1;
    },
    Diagnosticable: function Diagnosticable() {
    },
    DiagnosticableTree: function DiagnosticableTree() {
    },
    DiagnosticableTreeMixin: function DiagnosticableTreeMixin() {
    },
    DiagnosticsBlock: function DiagnosticsBlock() {
    },
    _DiagnosticableTree_Object_Diagnosticable: function _DiagnosticableTree_Object_Diagnosticable() {
    },
    Key: function Key() {
    },
    LicenseEntry: function LicenseEntry() {
    },
    LicenseEntryWithLineBreaks: function LicenseEntryWithLineBreaks() {
    },
    ObserverList: function ObserverList(t0, t1) {
      var _ = this;
      _._list = t0;
      _._isDirty = false;
      _.__ObserverList__set_FI = $;
      _.$ti = t1;
    },
    HashedObserverList: function HashedObserverList(t0, t1) {
      this._observer_list$_map = t0;
      this.$ti = t1;
    },
    TargetPlatform: function TargetPlatform(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    WriteBuffer_WriteBuffer(startCapacity) {
      var eightBytes = new DataView(new ArrayBuffer(8)),
        eightBytesAsList = A.NativeUint8List_NativeUint8List$view(eightBytes.buffer, 0, null);
      return new A.WriteBuffer(new Uint8Array(startCapacity), eightBytes, eightBytesAsList);
    },
    WriteBuffer: function WriteBuffer(t0, t1, t2) {
      var _ = this;
      _._serialization$_buffer = t0;
      _._currentSize = 0;
      _._serialization$_isDone = false;
      _._eightBytes = t1;
      _._eightBytesAsList = t2;
    },
    ReadBuffer: function ReadBuffer(t0) {
      this.data = t0;
      this._serialization$_position = 0;
    },
    StackFrame_fromStackString(stack) {
      var t1 = type$.WhereTypeIterable_StackFrame;
      return A.List_List$of(new A.WhereTypeIterable(new A.MappedIterable(new A.WhereIterable(A._setArrayType(B.JSString_methods.trim$0(stack).split("\n"), type$.JSArray_String), new A.StackFrame_fromStackString_closure(), type$.WhereIterable_String), A.stack_frame_StackFrame_fromStackTraceLine$closure(), type$.MappedIterable_of_String_and_nullable_StackFrame), t1), true, t1._eval$1("Iterable.E"));
    },
    StackFrame__tryParseWebNonDebugFrame(line) {
      var classAndMethod, className,
        _s9_ = "<unknown>",
        match = $.$get$StackFrame__webNonDebugFramePattern().firstMatch$1(line);
      if (match == null)
        return null;
      classAndMethod = A._setArrayType(match._match[1].split("."), type$.JSArray_String);
      className = classAndMethod.length > 1 ? B.JSArray_methods.get$first(classAndMethod) : _s9_;
      return new A.StackFrame(line, -1, _s9_, _s9_, _s9_, -1, -1, className, classAndMethod.length > 1 ? A.SubListIterable$(classAndMethod, 1, null, type$.String).join$1(0, ".") : B.JSArray_methods.get$single(classAndMethod));
    },
    StackFrame_fromStackTraceLine(line) {
      var t1, t2, method, className, parts, packageUri, packagePath, $package, t3, t4, _null = null,
        _s9_ = "<unknown>";
      if (line === "<asynchronous suspension>")
        return B.StackFrame_DV7;
      else if (line === "...")
        return B.StackFrame_cg9;
      if (!B.JSString_methods.startsWith$1(line, "#"))
        return A.StackFrame__tryParseWebNonDebugFrame(line);
      t1 = A.RegExp_RegExp("^#(\\d+) +(.+) \\((.+?):?(\\d+){0,1}:?(\\d+){0,1}\\)$", true, false).firstMatch$1(line)._match;
      t2 = t1[2];
      t2.toString;
      method = A.stringReplaceAllUnchecked(t2, ".<anonymous closure>", "");
      if (B.JSString_methods.startsWith$1(method, "new")) {
        className = method.split(" ").length > 1 ? method.split(" ")[1] : _s9_;
        if (B.JSString_methods.contains$1(className, ".")) {
          parts = className.split(".");
          className = parts[0];
          method = parts[1];
        } else
          method = "";
      } else if (B.JSString_methods.contains$1(method, ".")) {
        parts = method.split(".");
        className = parts[0];
        method = parts[1];
      } else
        className = "";
      t2 = t1[3];
      t2.toString;
      packageUri = A.Uri_parse(t2, 0, _null);
      packagePath = packageUri.get$path(packageUri);
      if (packageUri.get$scheme() === "dart" || packageUri.get$scheme() === "package") {
        $package = packageUri.get$pathSegments()[0];
        packagePath = B.JSString_methods.replaceFirst$2(packageUri.get$path(packageUri), A.S(packageUri.get$pathSegments()[0]) + "/", "");
      } else
        $package = _s9_;
      t2 = t1[1];
      t2.toString;
      t2 = A.int_parse(t2, _null);
      t3 = packageUri.get$scheme();
      t4 = t1[4];
      if (t4 == null)
        t4 = -1;
      else {
        t4 = t4;
        t4.toString;
        t4 = A.int_parse(t4, _null);
      }
      t1 = t1[5];
      if (t1 == null)
        t1 = -1;
      else {
        t1 = t1;
        t1.toString;
        t1 = A.int_parse(t1, _null);
      }
      return new A.StackFrame(line, t2, t3, $package, packagePath, t4, t1, className, method);
    },
    StackFrame: function StackFrame(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.source = t0;
      _.number = t1;
      _.packageScheme = t2;
      _.$package = t3;
      _.packagePath = t4;
      _.line = t5;
      _.column = t6;
      _.className = t7;
      _.method = t8;
    },
    StackFrame_fromStackString_closure: function StackFrame_fromStackString_closure() {
    },
    GestureArenaManager: function GestureArenaManager(t0) {
      this._arenas = t0;
    },
    GestureArenaManager__tryToResolveArena_closure: function GestureArenaManager__tryToResolveArena_closure(t0, t1, t2) {
      this.$this = t0;
      this.pointer = t1;
      this.state = t2;
    },
    FlutterErrorDetailsForPointerEventDispatcher$(context, $event, exception, hitTestEntry, informationCollector, library, stack) {
      return new A.FlutterErrorDetailsForPointerEventDispatcher(exception, stack, library, context, informationCollector, false);
    },
    _Resampler: function _Resampler(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._resamplers = t0;
      _._frameCallbackScheduled = false;
      _._frameTime = t1;
      _._frameTimeAge = t2;
      _._handlePointerEvent = t3;
      _._handleSampleTimeChanged = t4;
      _._samplingInterval = t5;
      _._binding3$_timer = null;
    },
    GestureBinding: function GestureBinding() {
    },
    GestureBinding_dispatchEvent_closure: function GestureBinding_dispatchEvent_closure(t0) {
      this.event = t0;
    },
    GestureBinding_dispatchEvent_closure0: function GestureBinding_dispatchEvent_closure0(t0, t1) {
      this.event = t0;
      this.entry = t1;
    },
    FlutterErrorDetailsForPointerEventDispatcher: function FlutterErrorDetailsForPointerEventDispatcher(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.exception = t0;
      _.stack = t1;
      _.library = t2;
      _.context = t3;
      _.informationCollector = t4;
      _.silent = t5;
    },
    _synthesiseDownButtons(buttons, kind) {
      switch (kind.index) {
        case 1:
        case 4:
          return buttons;
        case 0:
        case 2:
        case 3:
          return buttons === 0 ? 1 : buttons;
        case 5:
          return buttons === 0 ? 1 : buttons;
      }
    },
    PointerEventConverter_expand(data, devicePixelRatioForView) {
      var t1 = A._arrayInstanceType(data);
      return new A.WhereTypeIterable(new A.MappedIterable(new A.WhereIterable(data, new A.PointerEventConverter_expand_closure(), t1._eval$1("WhereIterable<1>")), new A.PointerEventConverter_expand_closure0(devicePixelRatioForView), t1._eval$1("MappedIterable<1,PointerEvent?>")), type$.WhereTypeIterable_PointerEvent);
    },
    PointerEventConverter_expand_closure: function PointerEventConverter_expand_closure() {
    },
    PointerEventConverter_expand_closure0: function PointerEventConverter_expand_closure0(t0) {
      this.devicePixelRatioForView = t0;
    },
    PointerAddedEvent$(device, distance, distanceMax, embedderId, kind, obscured, orientation, position, pressureMax, pressureMin, radiusMax, radiusMin, tilt, timeStamp, viewId) {
      return new A.PointerAddedEvent(viewId, embedderId, timeStamp, 0, kind, device, position, B.Offset_0_0, 0, false, false, 0, pressureMin, pressureMax, distance, distanceMax, 0, 0, 0, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerRemovedEvent$(device, distanceMax, embedderId, kind, obscured, position, pressureMax, pressureMin, radiusMax, radiusMin, timeStamp, viewId) {
      return new A.PointerRemovedEvent(viewId, embedderId, timeStamp, 0, kind, device, position, B.Offset_0_0, 0, false, false, 0, pressureMin, pressureMax, 0, distanceMax, 0, 0, 0, radiusMin, radiusMax, 0, 0, 0, false, null, null);
    },
    PointerHoverEvent$(buttons, delta, device, distance, distanceMax, embedderId, kind, obscured, orientation, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerHoverEvent(viewId, embedderId, timeStamp, 0, kind, device, position, delta, buttons, false, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerEnterEvent$(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerEnterEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerExitEvent$(buttons, delta, device, distance, distanceMax, down, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerExitEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, delta, buttons, down, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, synthesized, null, null);
    },
    PointerDownEvent$(buttons, device, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, viewId) {
      return new A.PointerDownEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, B.Offset_0_0, buttons, true, false, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerMoveEvent$(buttons, delta, device, distanceMax, embedderId, kind, obscured, orientation, platformData, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerMoveEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, delta, buttons, true, false, pressure, pressureMin, pressureMax, 0, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, platformData, synthesized, null, null);
    },
    PointerUpEvent$(buttons, device, distance, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, viewId) {
      return new A.PointerUpEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, B.Offset_0_0, buttons, false, false, pressure, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerScrollEvent$(device, embedderId, kind, onRespond, position, scrollDelta, timeStamp, viewId) {
      return new A.PointerScrollEvent(scrollDelta, onRespond, viewId, embedderId, timeStamp, 0, kind, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, null, null);
    },
    PointerScrollInertiaCancelEvent$(device, embedderId, kind, position, timeStamp, viewId) {
      return new A.PointerScrollInertiaCancelEvent(viewId, embedderId, timeStamp, 0, kind, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, null, null);
    },
    PointerScaleEvent$(device, embedderId, kind, position, scale, timeStamp, viewId) {
      return new A.PointerScaleEvent(scale, viewId, embedderId, timeStamp, 0, kind, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, false, null, null);
    },
    PointerPanZoomStartEvent$(device, embedderId, pointer, position, synthesized, timeStamp, viewId) {
      return new A.PointerPanZoomStartEvent(viewId, embedderId, timeStamp, pointer, B.PointerDeviceKind_4, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, synthesized, null, null);
    },
    PointerPanZoomUpdateEvent$(device, embedderId, pan, panDelta, pointer, position, rotation, scale, synthesized, timeStamp, viewId) {
      return new A.PointerPanZoomUpdateEvent(pan, panDelta, scale, rotation, viewId, embedderId, timeStamp, pointer, B.PointerDeviceKind_4, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, synthesized, null, null);
    },
    PointerPanZoomEndEvent$(device, embedderId, pointer, position, synthesized, timeStamp, viewId) {
      return new A.PointerPanZoomEndEvent(viewId, embedderId, timeStamp, pointer, B.PointerDeviceKind_4, device, position, B.Offset_0_0, 0, false, false, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, synthesized, null, null);
    },
    PointerCancelEvent$(buttons, device, distance, distanceMax, embedderId, kind, obscured, orientation, pointer, position, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, size, tilt, timeStamp, viewId) {
      return new A.PointerCancelEvent(viewId, embedderId, timeStamp, pointer, kind, device, position, B.Offset_0_0, buttons, false, false, 0, pressureMin, pressureMax, distance, distanceMax, size, radiusMajor, radiusMinor, radiusMin, radiusMax, orientation, tilt, 0, false, null, null);
    },
    PointerEvent: function PointerEvent() {
    },
    _PointerEventDescription: function _PointerEventDescription() {
    },
    _AbstractPointerEvent: function _AbstractPointerEvent() {
    },
    _TransformedPointerEvent: function _TransformedPointerEvent() {
    },
    _CopyPointerAddedEvent: function _CopyPointerAddedEvent() {
    },
    PointerAddedEvent: function PointerAddedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerAddedEvent: function _TransformedPointerAddedEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerRemovedEvent: function _CopyPointerRemovedEvent() {
    },
    PointerRemovedEvent: function PointerRemovedEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerRemovedEvent: function _TransformedPointerRemovedEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerHoverEvent: function _CopyPointerHoverEvent() {
    },
    PointerHoverEvent: function PointerHoverEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerHoverEvent: function _TransformedPointerHoverEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerEnterEvent: function _CopyPointerEnterEvent() {
    },
    PointerEnterEvent: function PointerEnterEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerEnterEvent: function _TransformedPointerEnterEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerExitEvent: function _CopyPointerExitEvent() {
    },
    PointerExitEvent: function PointerExitEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerExitEvent: function _TransformedPointerExitEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerDownEvent: function _CopyPointerDownEvent() {
    },
    PointerDownEvent: function PointerDownEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerDownEvent: function _TransformedPointerDownEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerMoveEvent: function _CopyPointerMoveEvent() {
    },
    PointerMoveEvent: function PointerMoveEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerMoveEvent: function _TransformedPointerMoveEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerUpEvent: function _CopyPointerUpEvent() {
    },
    PointerUpEvent: function PointerUpEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerUpEvent: function _TransformedPointerUpEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    PointerSignalEvent: function PointerSignalEvent() {
    },
    _RespondablePointerEvent: function _RespondablePointerEvent() {
    },
    _CopyPointerScrollEvent: function _CopyPointerScrollEvent() {
    },
    PointerScrollEvent: function PointerScrollEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28) {
      var _ = this;
      _.scrollDelta = t0;
      _._onRespond = t1;
      _.viewId = t2;
      _.embedderId = t3;
      _.timeStamp = t4;
      _.pointer = t5;
      _.kind = t6;
      _.device = t7;
      _.position = t8;
      _.delta = t9;
      _.buttons = t10;
      _.down = t11;
      _.obscured = t12;
      _.pressure = t13;
      _.pressureMin = t14;
      _.pressureMax = t15;
      _.distance = t16;
      _.distanceMax = t17;
      _.size = t18;
      _.radiusMajor = t19;
      _.radiusMinor = t20;
      _.radiusMin = t21;
      _.radiusMax = t22;
      _.orientation = t23;
      _.tilt = t24;
      _.platformData = t25;
      _.synthesized = t26;
      _.transform = t27;
      _.original = t28;
    },
    _TransformedPointerScrollEvent: function _TransformedPointerScrollEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerScrollInertiaCancelEvent: function _CopyPointerScrollInertiaCancelEvent() {
    },
    PointerScrollInertiaCancelEvent: function PointerScrollInertiaCancelEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerScrollInertiaCancelEvent: function _TransformedPointerScrollInertiaCancelEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerScaleEvent: function _CopyPointerScaleEvent() {
    },
    PointerScaleEvent: function PointerScaleEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27) {
      var _ = this;
      _.scale = t0;
      _.viewId = t1;
      _.embedderId = t2;
      _.timeStamp = t3;
      _.pointer = t4;
      _.kind = t5;
      _.device = t6;
      _.position = t7;
      _.delta = t8;
      _.buttons = t9;
      _.down = t10;
      _.obscured = t11;
      _.pressure = t12;
      _.pressureMin = t13;
      _.pressureMax = t14;
      _.distance = t15;
      _.distanceMax = t16;
      _.size = t17;
      _.radiusMajor = t18;
      _.radiusMinor = t19;
      _.radiusMin = t20;
      _.radiusMax = t21;
      _.orientation = t22;
      _.tilt = t23;
      _.platformData = t24;
      _.synthesized = t25;
      _.transform = t26;
      _.original = t27;
    },
    _TransformedPointerScaleEvent: function _TransformedPointerScaleEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerPanZoomStartEvent: function _CopyPointerPanZoomStartEvent() {
    },
    PointerPanZoomStartEvent: function PointerPanZoomStartEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerPanZoomStartEvent: function _TransformedPointerPanZoomStartEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerPanZoomUpdateEvent: function _CopyPointerPanZoomUpdateEvent() {
    },
    PointerPanZoomUpdateEvent: function PointerPanZoomUpdateEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30) {
      var _ = this;
      _.pan = t0;
      _.panDelta = t1;
      _.scale = t2;
      _.rotation = t3;
      _.viewId = t4;
      _.embedderId = t5;
      _.timeStamp = t6;
      _.pointer = t7;
      _.kind = t8;
      _.device = t9;
      _.position = t10;
      _.delta = t11;
      _.buttons = t12;
      _.down = t13;
      _.obscured = t14;
      _.pressure = t15;
      _.pressureMin = t16;
      _.pressureMax = t17;
      _.distance = t18;
      _.distanceMax = t19;
      _.size = t20;
      _.radiusMajor = t21;
      _.radiusMinor = t22;
      _.radiusMin = t23;
      _.radiusMax = t24;
      _.orientation = t25;
      _.tilt = t26;
      _.platformData = t27;
      _.synthesized = t28;
      _.transform = t29;
      _.original = t30;
    },
    _TransformedPointerPanZoomUpdateEvent: function _TransformedPointerPanZoomUpdateEvent(t0, t1) {
      var _ = this;
      _.___TransformedPointerPanZoomUpdateEvent_localPanDelta_FI = _.___TransformedPointerPanZoomUpdateEvent_localPan_FI = $;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerPanZoomEndEvent: function _CopyPointerPanZoomEndEvent() {
    },
    PointerPanZoomEndEvent: function PointerPanZoomEndEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerPanZoomEndEvent: function _TransformedPointerPanZoomEndEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _CopyPointerCancelEvent: function _CopyPointerCancelEvent() {
    },
    PointerCancelEvent: function PointerCancelEvent(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26) {
      var _ = this;
      _.viewId = t0;
      _.embedderId = t1;
      _.timeStamp = t2;
      _.pointer = t3;
      _.kind = t4;
      _.device = t5;
      _.position = t6;
      _.delta = t7;
      _.buttons = t8;
      _.down = t9;
      _.obscured = t10;
      _.pressure = t11;
      _.pressureMin = t12;
      _.pressureMax = t13;
      _.distance = t14;
      _.distanceMax = t15;
      _.size = t16;
      _.radiusMajor = t17;
      _.radiusMinor = t18;
      _.radiusMin = t19;
      _.radiusMax = t20;
      _.orientation = t21;
      _.tilt = t22;
      _.platformData = t23;
      _.synthesized = t24;
      _.transform = t25;
      _.original = t26;
    },
    _TransformedPointerCancelEvent: function _TransformedPointerCancelEvent(t0, t1) {
      var _ = this;
      _.original = t0;
      _.transform = t1;
      _.___TransformedPointerEvent_localDelta_FI = _.___TransformedPointerEvent_localPosition_FI = $;
    },
    _PointerAddedEvent_PointerEvent__PointerEventDescription: function _PointerAddedEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent: function _PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent() {
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription: function _PointerCancelEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent: function _PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent() {
    },
    _PointerDownEvent_PointerEvent__PointerEventDescription: function _PointerDownEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent: function _PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription: function _PointerEnterEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent: function _PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent() {
    },
    _PointerEvent_Object_Diagnosticable: function _PointerEvent_Object_Diagnosticable() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription: function _PointerExitEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent: function _PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent() {
    },
    _PointerHoverEvent_PointerEvent__PointerEventDescription: function _PointerHoverEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent: function _PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent() {
    },
    _PointerMoveEvent_PointerEvent__PointerEventDescription: function _PointerMoveEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent: function _PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent() {
    },
    _PointerPanZoomEndEvent_PointerEvent__PointerEventDescription: function _PointerPanZoomEndEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent: function _PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent() {
    },
    _PointerPanZoomStartEvent_PointerEvent__PointerEventDescription: function _PointerPanZoomStartEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent: function _PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent() {
    },
    _PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription: function _PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent: function _PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent() {
    },
    _PointerRemovedEvent_PointerEvent__PointerEventDescription: function _PointerRemovedEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent: function _PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent() {
    },
    _PointerScaleEvent_PointerSignalEvent__PointerEventDescription: function _PointerScaleEvent_PointerSignalEvent__PointerEventDescription() {
    },
    _PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent: function _PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent() {
    },
    _PointerScrollEvent_PointerSignalEvent__PointerEventDescription: function _PointerScrollEvent_PointerSignalEvent__PointerEventDescription() {
    },
    _PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent: function _PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent() {
    },
    _PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription: function _PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription() {
    },
    _PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent: function _PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent() {
    },
    _PointerSignalEvent_PointerEvent__RespondablePointerEvent: function _PointerSignalEvent_PointerEvent__RespondablePointerEvent() {
    },
    _PointerUpEvent_PointerEvent__PointerEventDescription: function _PointerUpEvent_PointerEvent__PointerEventDescription() {
    },
    _PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent: function _PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent() {
    },
    __TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent: function __TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent() {
    },
    __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent: function __TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent() {
    },
    __TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent: function __TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent() {
    },
    __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent: function __TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable() {
    },
    __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription: function __TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription() {
    },
    __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent: function __TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent() {
    },
    __TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent: function __TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent() {
    },
    __TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent: function __TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent() {
    },
    __TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent: function __TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent() {
    },
    __TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent: function __TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent() {
    },
    __TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent: function __TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent() {
    },
    __TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent: function __TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent() {
    },
    __TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent: function __TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent() {
    },
    __TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent: function __TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent() {
    },
    __TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent: function __TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent() {
    },
    __TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent: function __TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent() {
    },
    __TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent: function __TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent() {
    },
    __TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent: function __TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent() {
    },
    HitTestResult$() {
      var t1 = A._setArrayType([], type$.JSArray_HitTestEntry_HitTestTarget),
        t2 = new A.Matrix40(new Float64Array(16));
      t2.setIdentity$0();
      return new A.HitTestResult(t1, A._setArrayType([t2], type$.JSArray_Matrix4), A._setArrayType([], type$.JSArray__TransformPart));
    },
    HitTestEntry: function HitTestEntry(t0, t1) {
      this.target = t0;
      this._transform = null;
      this.$ti = t1;
    },
    HitTestResult: function HitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    PointerRouter: function PointerRouter(t0, t1) {
      this._routeMap = t0;
      this._globalRoutes = t1;
    },
    PointerRouter__dispatchEventToRoutes_closure: function PointerRouter__dispatchEventToRoutes_closure(t0, t1, t2) {
      this.$this = t0;
      this.referenceRoutes = t1;
      this.event = t2;
    },
    PointerSignalResolver: function PointerSignalResolver() {
      this._currentEvent = this._firstRegisteredCallback = null;
    },
    DragStartBehavior: function DragStartBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Axis: function Axis(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PaintingBinding: function PaintingBinding() {
    },
    _SystemFontsNotifier: function _SystemFontsNotifier(t0) {
      this._systemFontsCallbacks = t0;
    },
    ClipContext: function ClipContext() {
    },
    EdgeInsets_lerp(a, b, t) {
      var t1, t2, t3, t4;
      if (a == b)
        return a;
      if (a == null)
        return b.$mul(0, t);
      if (b == null)
        return a.$mul(0, 1 - t);
      t1 = A.lerpDouble(a.left, b.left, t);
      t1.toString;
      t2 = A.lerpDouble(a.top, b.top, t);
      t2.toString;
      t3 = A.lerpDouble(a.right, b.right, t);
      t3.toString;
      t4 = A.lerpDouble(a.bottom, b.bottom, t);
      t4.toString;
      return new A.EdgeInsets(t1, t2, t3, t4);
    },
    EdgeInsetsGeometry: function EdgeInsetsGeometry() {
    },
    EdgeInsets: function EdgeInsets(t0, t1, t2, t3) {
      var _ = this;
      _.left = t0;
      _.top = t1;
      _.right = t2;
      _.bottom = t3;
    },
    ImageCache: function ImageCache(t0, t1, t2) {
      var _ = this;
      _._pendingImages = t0;
      _._image_cache$_cache = t1;
      _._liveImages = t2;
      _._currentSizeBytes = 0;
    },
    _CachedImageBase_dispose_closure: function _CachedImageBase_dispose_closure(t0) {
      this.$this = t0;
    },
    InlineSpan: function InlineSpan() {
    },
    PlaceholderSpan: function PlaceholderSpan() {
    },
    WordBoundary__isNewline(codePoint) {
      var t1;
      $label0$0: {
        t1 = 10 === codePoint || 133 === codePoint || 11 === codePoint || 12 === codePoint || 8232 === codePoint || 8233 === codePoint;
        if (t1)
          break $label0$0;
        break $label0$0;
      }
      return t1;
    },
    TextPainter__computePaintOffsetFraction(textAlign, textDirection) {
      var t1, _0_10, t2, _0_12_isSet, _0_12, _0_14_isSet, _0_14, _0_4, _0_16_isSet, _0_16, _0_4_isSet, _0_18, _null = null;
      $label0$0: {
        t1 = 0;
        if (B.TextAlign_0 === textAlign)
          break $label0$0;
        if (B.TextAlign_1 === textAlign) {
          t1 = 1;
          break $label0$0;
        }
        if (B.TextAlign_2 === textAlign) {
          t1 = 0.5;
          break $label0$0;
        }
        _0_10 = B.TextAlign_4 === textAlign;
        t2 = _0_10;
        _0_12_isSet = !t2;
        _0_12 = _null;
        if (_0_12_isSet) {
          _0_12 = B.TextAlign_3 === textAlign;
          _0_14_isSet = _0_12;
        } else
          _0_14_isSet = true;
        _0_14 = _null;
        _0_4 = _null;
        if (_0_14_isSet) {
          _0_14 = B.TextDirection_1 === textDirection;
          t2 = _0_14;
          _0_4 = textDirection;
        } else
          t2 = false;
        if (t2)
          break $label0$0;
        if (!_0_10)
          if (_0_12_isSet)
            _0_16_isSet = _0_12;
          else {
            _0_12 = B.TextAlign_3 === textAlign;
            _0_16_isSet = _0_12;
          }
        else
          _0_16_isSet = true;
        _0_16 = _null;
        if (_0_16_isSet) {
          if (_0_14_isSet) {
            t2 = _0_4;
            _0_4_isSet = _0_14_isSet;
          } else {
            t2 = textDirection;
            _0_4 = t2;
            _0_4_isSet = true;
          }
          _0_16 = B.TextDirection_0 === t2;
          t2 = _0_16;
        } else {
          _0_4_isSet = _0_14_isSet;
          t2 = false;
        }
        if (t2) {
          t1 = 1;
          break $label0$0;
        }
        _0_18 = B.TextAlign_5 === textAlign;
        t2 = _0_18;
        if (t2)
          if (_0_14_isSet)
            t2 = _0_14;
          else {
            if (_0_4_isSet)
              t2 = _0_4;
            else {
              t2 = textDirection;
              _0_4 = t2;
              _0_4_isSet = true;
            }
            _0_14 = B.TextDirection_1 === t2;
            t2 = _0_14;
          }
        else
          t2 = false;
        if (t2) {
          t1 = 1;
          break $label0$0;
        }
        if (_0_18)
          if (_0_16_isSet)
            t2 = _0_16;
          else {
            _0_16 = B.TextDirection_0 === (_0_4_isSet ? _0_4 : textDirection);
            t2 = _0_16;
          }
        else
          t2 = false;
        if (t2)
          break $label0$0;
        t1 = _null;
      }
      return t1;
    },
    TextPainter__shiftTextBox(box, offset) {
      var t1 = offset._dx,
        t2 = offset._dy;
      return new A.TextBox(box.left + t1, box.top + t2, box.right + t1, box.bottom + t2, box.direction);
    },
    _TextLayout: function _TextLayout(t0, t1, t2) {
      var _ = this;
      _.writingDirection = t0;
      _._painter = t1;
      _._paragraph = t2;
      _.___TextLayout__endOfTextCaretMetrics_FI = $;
    },
    _TextLayout__computeEndOfTextCaretAnchorOffset_closure: function _TextLayout__computeEndOfTextCaretAnchorOffset_closure(t0, t1) {
      this.$this = t0;
      this.rawString = t1;
    },
    _TextPainterLayoutCacheWithOffset: function _TextPainterLayoutCacheWithOffset(t0, t1, t2, t3) {
      var _ = this;
      _.layout = t0;
      _.layoutMaxWidth = t1;
      _.contentWidth = t2;
      _.textAlignment = t3;
      _._previousCaretPositionKey = _._cachedLineMetrics = _._cachedInlinePlaceholderBoxes = null;
    },
    _LineCaretMetrics: function _LineCaretMetrics(t0, t1) {
      this.offset = t0;
      this.writingDirection = t1;
    },
    TextPainter_getBoxesForSelection_closure: function TextPainter_getBoxesForSelection_closure(t0) {
      this.offset = t0;
    },
    _LinearTextScaler: function _LinearTextScaler(t0) {
      this.textScaleFactor = t0;
    },
    TextSpan$(children, style, text) {
      return new A.TextSpan(text, children, B.C__DeferringMouseCursor, style);
    },
    TextSpan: function TextSpan(t0, t1, t2, t3) {
      var _ = this;
      _.text = t0;
      _.children = t1;
      _.mouseCursor = t2;
      _.style = t3;
    },
    TextSpan_debugDescribeChildren_closure: function TextSpan_debugDescribeChildren_closure() {
    },
    TextStyle$(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, inherit, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      return new A.TextStyle(inherit, color, backgroundColor, fontFamily, fontFamilyFallback, $package, fontSize, fontWeight, fontStyle, letterSpacing, wordSpacing, textBaseline, height, leadingDistribution, locale, foreground, background, decoration, decorationColor, decorationStyle, decorationThickness, debugLabel, shadows, fontFeatures, fontVariations, overflow);
    },
    TextStyle: function TextStyle(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25) {
      var _ = this;
      _.inherit = t0;
      _.color = t1;
      _.backgroundColor = t2;
      _.fontFamily = t3;
      _._fontFamilyFallback = t4;
      _._package = t5;
      _.fontSize = t6;
      _.fontWeight = t7;
      _.fontStyle = t8;
      _.letterSpacing = t9;
      _.wordSpacing = t10;
      _.textBaseline = t11;
      _.height = t12;
      _.leadingDistribution = t13;
      _.locale = t14;
      _.foreground = t15;
      _.background = t16;
      _.decoration = t17;
      _.decorationColor = t18;
      _.decorationStyle = t19;
      _.decorationThickness = t20;
      _.debugLabel = t21;
      _.shadows = t22;
      _.fontFeatures = t23;
      _.fontVariations = t24;
      _.overflow = t25;
    },
    _TextStyle_Object_Diagnosticable: function _TextStyle_Object_Diagnosticable() {
    },
    Simulation: function Simulation() {
    },
    Tolerance: function Tolerance(t0, t1) {
      this.distance = t0;
      this.velocity = t1;
    },
    _debugCollectRenderTrees() {
      var t1, t2, t3, t4;
      if (J.get$isEmpty$asx($.RendererBinding__instance.RendererBinding__viewIdToRenderView.get$values(0).__internal$_iterable))
        return string$.No_ren;
      t1 = A._setArrayType([], type$.JSArray_String);
      for (t2 = $.RendererBinding__instance.RendererBinding__viewIdToRenderView.get$values(0), t3 = A._instanceType(t2), t2 = new A.MappedIterator(J.get$iterator$ax(t2.__internal$_iterable), t2._f, t3._eval$1("MappedIterator<1,2>")), t3 = t3._rest[1]; t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        t1.push((t4 == null ? t3._as(t4) : t4).toStringDeep$0());
      }
      return B.JSArray_methods.join$1(t1, "\n\n");
    },
    _debugCollectSemanticsTrees(childOrder) {
      var trees, t1, t2, printedExplanation, t3, tree, message;
      if (J.get$isEmpty$asx($.RendererBinding__instance.RendererBinding__viewIdToRenderView.get$values(0).__internal$_iterable))
        return string$.No_ren;
      trees = A._setArrayType([], type$.JSArray_String);
      for (t1 = $.RendererBinding__instance.RendererBinding__viewIdToRenderView.get$values(0), t2 = A._instanceType(t1), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1], printedExplanation = false; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        tree = t3.get$debugSemantics() == null ? null : "";
        if (tree != null)
          trees.push(tree);
        else {
          message = "Semantics not generated for " + t3.toString$0(0) + ".";
          if (!printedExplanation) {
            message += "\nFor performance reasons, the framework only generates semantics when asked to do so by the platform.\nUsually, platforms only ask for semantics when assistive technologies (like screen readers) are running.\nTo generate semantics, try turning on an assistive technology (like VoiceOver or TalkBack) on your device.";
            printedExplanation = true;
          }
          trees.push(message);
        }
      }
      return B.JSArray_methods.join$1(trees, "\n\n");
    },
    _DefaultRootPipelineOwner__onSemanticsUpdate(_) {
    },
    RendererBinding: function RendererBinding() {
    },
    RendererBinding_initMouseTracker_closure: function RendererBinding_initMouseTracker_closure(t0) {
      this.$this = t0;
    },
    RendererBinding__scheduleMouseTrackerUpdate_closure: function RendererBinding__scheduleMouseTrackerUpdate_closure(t0) {
      this.$this = t0;
    },
    _BindingPipelineManifold: function _BindingPipelineManifold(t0, t1) {
      var _ = this;
      _._binding = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _DefaultRootPipelineOwner: function _DefaultRootPipelineOwner(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.onSemanticsOwnerCreated = t0;
      _.onSemanticsUpdate = t1;
      _.onSemanticsOwnerDisposed = t2;
      _._rootNode = null;
      _._shouldMergeDirtyNodes = false;
      _._nodesNeedingLayout = t3;
      _._nodesNeedingCompositingBitsUpdate = t4;
      _._nodesNeedingPaint = t5;
      _._semanticsOwner = null;
      _._nodesNeedingSemantics = t6;
      _._children = t7;
      _._debugParent = _._manifold = null;
    },
    BoxHitTestResult$wrap(result) {
      return new A.BoxHitTestResult(result._path, result._transforms, result._localTransforms);
    },
    BoxConstraints: function BoxConstraints(t0, t1, t2, t3) {
      var _ = this;
      _.minWidth = t0;
      _.maxWidth = t1;
      _.minHeight = t2;
      _.maxHeight = t3;
    },
    BoxConstraints_toString_describe: function BoxConstraints_toString_describe() {
    },
    BoxHitTestResult: function BoxHitTestResult(t0, t1, t2) {
      this._path = t0;
      this._transforms = t1;
      this._localTransforms = t2;
    },
    RenderEditable__calculateAdjustedCursorOffset(offset, boundingRects) {
      return new A.Offset(A.clampDouble(offset._dx, boundingRects.left, boundingRects.right), A.clampDouble(offset._dy, boundingRects.top, boundingRects.bottom));
    },
    TextSelectionPoint: function TextSelectionPoint(t0, t1) {
      this.point = t0;
      this.direction = t1;
    },
    RenderEditable_getBoxesForSelection_closure: function RenderEditable_getBoxesForSelection_closure(t0) {
      this.$this = t0;
    },
    RenderEditable_getRectForComposingRange_closure: function RenderEditable_getRectForComposingRange_closure() {
    },
    RenderEditablePainter: function RenderEditablePainter() {
    },
    _CaretPainter: function _CaretPainter(t0, t1, t2) {
      var _ = this;
      _._shouldPaint = true;
      _.showRegularCaret = false;
      _.caretPaint = t0;
      _.___CaretPainter_floatingCursorPaint_FI = $;
      _._cursorRadius = _._caretColor = null;
      _._cursorOffset = t1;
      _._floatingCursorRect = _._backgroundCursorColor = null;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t2;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    AnnotationResult: function AnnotationResult(t0, t1) {
      this._layer$_entries = t0;
      this.$ti = t1;
    },
    MouseTracker__shouldMarkStateDirty(state, $event) {
      var lastEvent;
      if (state == null)
        return true;
      lastEvent = state._latestEvent;
      if (type$.PointerSignalEvent._is($event))
        return false;
      return type$.PointerAddedEvent._is(lastEvent) || type$.PointerRemovedEvent._is($event) || !lastEvent.get$position(lastEvent).$eq(0, $event.get$position($event));
    },
    MouseTracker__handleDeviceUpdateMouseEvents(details) {
      var lastAnnotations, nextAnnotations, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, enteringAnnotations, baseEnterEvent,
        result = details.triggeringEvent;
      if (result == null)
        result = details.previousEvent;
      lastAnnotations = details.lastAnnotations;
      nextAnnotations = details.nextAnnotations;
      t1 = result.get$viewId();
      t2 = result.get$timeStamp(result);
      t3 = result.get$pointer();
      t4 = result.get$kind(result);
      t5 = result.get$device(result);
      t6 = result.get$position(result);
      t7 = result.get$delta();
      t8 = result.get$buttons(result);
      result.get$obscured();
      t9 = result.get$pressureMin();
      t10 = result.get$pressureMax();
      t11 = result.get$distance();
      t12 = result.get$distanceMax();
      t13 = result.get$size(result);
      t14 = result.get$radiusMajor();
      t15 = result.get$radiusMinor();
      t16 = result.get$radiusMin();
      t17 = result.get$radiusMax();
      t18 = result.get$orientation(result);
      t19 = result.get$tilt();
      lastAnnotations.forEach$1(0, new A.MouseTracker__handleDeviceUpdateMouseEvents_closure(nextAnnotations, A.PointerExitEvent$(t8, t7, t5, t11, t12, result.get$down(), 0, t4, false, t18, t3, t6, t10, t9, t14, t17, t16, t15, t13, result.get$synthesized(), t19, t2, t1).transformed$1(result.get$transform(result)), lastAnnotations));
      t1 = A._instanceType(nextAnnotations)._eval$1("LinkedHashMapKeyIterable<1>");
      t2 = t1._eval$1("WhereIterable<Iterable.E>");
      enteringAnnotations = A.List_List$of(new A.WhereIterable(new A.LinkedHashMapKeyIterable(nextAnnotations, t1), new A.MouseTracker__handleDeviceUpdateMouseEvents_closure0(lastAnnotations), t2), true, t2._eval$1("Iterable.E"));
      t2 = result.get$viewId();
      t1 = result.get$timeStamp(result);
      t19 = result.get$pointer();
      t13 = result.get$kind(result);
      t15 = result.get$device(result);
      t16 = result.get$position(result);
      t17 = result.get$delta();
      t14 = result.get$buttons(result);
      result.get$obscured();
      t9 = result.get$pressureMin();
      t10 = result.get$pressureMax();
      t6 = result.get$distance();
      t3 = result.get$distanceMax();
      t18 = result.get$size(result);
      t4 = result.get$radiusMajor();
      t12 = result.get$radiusMinor();
      t11 = result.get$radiusMin();
      t5 = result.get$radiusMax();
      t7 = result.get$orientation(result);
      t8 = result.get$tilt();
      baseEnterEvent = A.PointerEnterEvent$(t14, t17, t15, t6, t3, result.get$down(), 0, t13, false, t7, t19, t16, t10, t9, t4, t5, t11, t12, t18, result.get$synthesized(), t8, t1, t2).transformed$1(result.get$transform(result));
      for (t1 = A._arrayInstanceType(enteringAnnotations)._eval$1("ReversedListIterable<1>"), t2 = new A.ReversedListIterable(enteringAnnotations, t1), t2 = new A.ListIterator(t2, t2.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        if (t3.get$validForMouseTracker()) {
          t4 = t3.get$onEnter(t3);
          if (t4 != null)
            t4.call$1(baseEnterEvent.transformed$1(nextAnnotations.$index(0, t3)));
        }
      }
    },
    _MouseState: function _MouseState(t0, t1) {
      this._annotations = t0;
      this._latestEvent = t1;
    },
    _MouseTrackerUpdateDetails: function _MouseTrackerUpdateDetails(t0, t1, t2, t3) {
      var _ = this;
      _.lastAnnotations = t0;
      _.nextAnnotations = t1;
      _.previousEvent = t2;
      _.triggeringEvent = t3;
    },
    MouseTracker: function MouseTracker(t0, t1, t2, t3) {
      var _ = this;
      _._hitTestInView = t0;
      _._mouseCursorMixin = t1;
      _._mouseStates = t2;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t3;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    MouseTracker__handleDeviceUpdate_closure: function MouseTracker__handleDeviceUpdate_closure() {
    },
    MouseTracker_updateWithEvent_closure: function MouseTracker_updateWithEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.existingState = t2;
      _.event = t3;
      _.device = t4;
    },
    MouseTracker_updateWithEvent__closure: function MouseTracker_updateWithEvent__closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.existingState = t2;
      _.event = t3;
      _.device = t4;
    },
    MouseTracker_updateAllDevices_closure: function MouseTracker_updateAllDevices_closure(t0) {
      this.$this = t0;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure: function MouseTracker__handleDeviceUpdateMouseEvents_closure(t0, t1, t2) {
      this.nextAnnotations = t0;
      this.baseExitEvent = t1;
      this.lastAnnotations = t2;
    },
    MouseTracker__handleDeviceUpdateMouseEvents_closure0: function MouseTracker__handleDeviceUpdateMouseEvents_closure0(t0) {
      this.lastAnnotations = t0;
    },
    __MouseTrackerUpdateDetails_Object_Diagnosticable: function __MouseTrackerUpdateDetails_Object_Diagnosticable() {
    },
    PaintingContext__repaintCompositedChild(child, debugAlsoPaintedParent) {
      var layer, childContext,
        t1 = child._layerHandle,
        childLayer = type$.nullable_OffsetLayer._as(t1._layer);
      if (childLayer == null) {
        layer = child.updateCompositedLayer$1$oldLayer(null);
        t1.set$layer(0, layer);
        childLayer = layer;
      } else {
        childLayer.removeAllChildren$0();
        child.updateCompositedLayer$1$oldLayer(childLayer);
      }
      child._needsCompositedLayerUpdate = false;
      childContext = new A.PaintingContext(childLayer, child.get$paintBounds());
      child._paintWithContext$2(childContext, B.Offset_0_0);
      childContext.stopRecordingIfNeeded$0();
    },
    PaintingContext: function PaintingContext(t0, t1) {
      var _ = this;
      _._containerLayer = t0;
      _.estimatedBounds = t1;
      _._canvas = _._recorder = _._currentLayer = null;
    },
    Constraints: function Constraints() {
    },
    PipelineOwner: function PipelineOwner() {
    },
    PipelineOwner_flushLayout_closure: function PipelineOwner_flushLayout_closure() {
    },
    PipelineOwner_flushCompositingBits_closure: function PipelineOwner_flushCompositingBits_closure() {
    },
    PipelineOwner_flushPaint_closure: function PipelineOwner_flushPaint_closure() {
    },
    PipelineOwner_flushSemantics_closure: function PipelineOwner_flushSemantics_closure() {
    },
    RenderObject__reportException_closure: function RenderObject__reportException_closure(t0) {
      this.$this = t0;
    },
    RenderObject__updateCompositingBits_closure: function RenderObject__updateCompositingBits_closure(t0) {
      this.$this = t0;
    },
    RenderObject_toStringDeep_closure: function RenderObject_toStringDeep_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.prefixLineOne = t1;
      _.prefixOtherLines = t2;
      _.minLevel = t3;
    },
    _PipelineOwner_Object_DiagnosticableTreeMixin: function _PipelineOwner_Object_DiagnosticableTreeMixin() {
    },
    HitTestBehavior: function HitTestBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextSelectionHandleType: function TextSelectionHandleType(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ViewConfiguration: function ViewConfiguration(t0, t1, t2) {
      this.logicalConstraints = t0;
      this.physicalConstraints = t1;
      this.devicePixelRatio = t2;
    },
    RevealedOffset: function RevealedOffset(t0, t1) {
      this.offset = t0;
      this.rect = t1;
    },
    timeDilation(value) {
      var t1;
      if ($._timeDilation === value)
        return;
      t1 = $.SchedulerBinding__instance;
      if (t1 != null)
        t1.resetEpoch$0();
      $._timeDilation = value;
    },
    SchedulerBinding__taskSorter(e1, e2) {
      return e1.get$priority().compareTo$1(0, e2.get$priority()).$negate(0);
    },
    defaultSchedulingStrategy(priority, scheduler) {
      if (scheduler.SchedulerBinding__transientCallbacks.__js_helper$_length > 0)
        return priority.$ge(0, 100000);
      return true;
    },
    _FrameCallbackEntry: function _FrameCallbackEntry(t0) {
      this.callback = t0;
    },
    SchedulerPhase: function SchedulerPhase(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    SchedulerBinding: function SchedulerBinding() {
    },
    SchedulerBinding__handleDrawFrame_closure: function SchedulerBinding__handleDrawFrame_closure(t0) {
      this.$this = t0;
    },
    SchedulerBinding_handleBeginFrame_closure: function SchedulerBinding_handleBeginFrame_closure(t0) {
      this.$this = t0;
    },
    TickerFuture$complete() {
      var t1 = new A.TickerFuture(new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void));
      t1._ticker$_complete$0();
      return t1;
    },
    TickerFuture: function TickerFuture(t0) {
      this._primaryCompleter = t0;
      this._completed = this._secondaryCompleter = null;
    },
    TickerCanceled: function TickerCanceled(t0) {
      this.ticker = t0;
    },
    SemanticsBinding: function SemanticsBinding() {
    },
    SemanticsHandle: function SemanticsHandle(t0) {
      this._onDispose = t0;
    },
    _SemanticsDiagnosticableNode: function _SemanticsDiagnosticableNode(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.childOrder = t0;
      _.value = t1;
      _.name = t2;
      _.showSeparator = t3;
      _.showName = t4;
      _.linePrefix = t5;
      _.style = t6;
    },
    SemanticsOwner: function SemanticsOwner(t0, t1, t2, t3, t4) {
      var _ = this;
      _.onSemanticsUpdate = t0;
      _._semantics$_dirtyNodes = t1;
      _._nodes = t2;
      _._detachedNodes = t3;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure: function SemanticsOwner_sendSemanticsUpdate_closure(t0) {
      this.$this = t0;
    },
    SemanticsOwner_sendSemanticsUpdate_closure0: function SemanticsOwner_sendSemanticsUpdate_closure0() {
    },
    SemanticsOwner_sendSemanticsUpdate_closure1: function SemanticsOwner_sendSemanticsUpdate_closure1() {
    },
    SemanticsOwner__getSemanticsActionHandlerForId_closure: function SemanticsOwner__getSemanticsActionHandlerForId_closure(t0, t1) {
      this._box_0 = t0;
      this.action = t1;
    },
    DebugSemanticsDumpOrder: function DebugSemanticsDumpOrder(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _errorSummaryWithKey(key) {
      return A.ErrorSummary$('Unable to load asset: "' + key + '".');
    },
    AssetBundle: function AssetBundle() {
    },
    CachingAssetBundle: function CachingAssetBundle() {
    },
    CachingAssetBundle_loadString_closure: function CachingAssetBundle_loadString_closure(t0, t1) {
      this.$this = t0;
      this.key = t1;
    },
    PlatformAssetBundle: function PlatformAssetBundle(t0, t1, t2) {
      this._stringCache = t0;
      this._structuredDataCache = t1;
      this._structuredBinaryDataCache = t2;
    },
    PlatformAssetBundle_load_closure: function PlatformAssetBundle_load_closure(t0) {
      this.key = t0;
    },
    BinaryMessenger: function BinaryMessenger() {
    },
    ServicesBinding__parseLicenses(rawLicenses) {
      var t3, _i, license, t4, _0_0, t5,
        t1 = B.JSString_methods.$mul("-", 80),
        t2 = A._setArrayType([], type$.JSArray_LicenseEntry);
      for (t1 = rawLicenses.split("\n" + t1 + "\n"), t3 = t1.length, _i = 0; _i < t3; ++_i) {
        license = t1[_i];
        t4 = J.getInterceptor$asx(license);
        _0_0 = t4.indexOf$1(license, "\n\n");
        t5 = _0_0 >= 0;
        if (t5) {
          t4.substring$2(license, 0, _0_0).split("\n");
          t4.substring$1(license, _0_0 + 2);
          t2.push(new A.LicenseEntryWithLineBreaks());
        } else
          t2.push(new A.LicenseEntryWithLineBreaks());
      }
      return t2;
    },
    ServicesBinding__parseAppLifecycleMessage(message) {
      var t1;
      $label0$0: {
        if ("AppLifecycleState.resumed" === message) {
          t1 = B.AppLifecycleState_1;
          break $label0$0;
        }
        if ("AppLifecycleState.inactive" === message) {
          t1 = B.AppLifecycleState_2;
          break $label0$0;
        }
        if ("AppLifecycleState.hidden" === message) {
          t1 = B.AppLifecycleState_3;
          break $label0$0;
        }
        if ("AppLifecycleState.paused" === message) {
          t1 = B.AppLifecycleState_4;
          break $label0$0;
        }
        if ("AppLifecycleState.detached" === message) {
          t1 = B.AppLifecycleState_0;
          break $label0$0;
        }
        t1 = null;
        break $label0$0;
      }
      return t1;
    },
    ServicesBinding: function ServicesBinding() {
    },
    ServicesBinding__initKeyboard_closure: function ServicesBinding__initKeyboard_closure(t0) {
      this.$this = t0;
    },
    ServicesBinding__addLicenses_closure: function ServicesBinding__addLicenses_closure(t0) {
      this.controller = t0;
    },
    _DefaultBinaryMessenger: function _DefaultBinaryMessenger() {
    },
    _DefaultBinaryMessenger_send_closure: function _DefaultBinaryMessenger_send_closure(t0) {
      this.completer = t0;
    },
    _DefaultBinaryMessenger_setMessageHandler_closure: function _DefaultBinaryMessenger_setMessageHandler_closure(t0) {
      this.handler = t0;
    },
    BrowserContextMenu: function BrowserContextMenu() {
    },
    KeyUpEvent$(deviceType, logicalKey, physicalKey, synthesized, timeStamp) {
      return new A.KeyUpEvent(physicalKey, logicalKey, null, timeStamp, synthesized);
    },
    KeyRepeatEvent$(character, deviceType, logicalKey, physicalKey, timeStamp) {
      return new A.KeyRepeatEvent(physicalKey, logicalKey, character, timeStamp, false);
    },
    KeyEventManager__eventFromData(keyData) {
      var logicalKey, timeStamp,
        t1 = keyData.physical,
        physicalKey = B.Map_arCny.$index(0, t1);
      if (physicalKey == null)
        physicalKey = new A.PhysicalKeyboardKey(t1);
      t1 = keyData.logical;
      logicalKey = B.Map_2bMtF.$index(0, t1);
      if (logicalKey == null)
        logicalKey = new A.LogicalKeyboardKey(t1);
      timeStamp = keyData.timeStamp;
      switch (keyData.type.index) {
        case 0:
          return new A.KeyDownEvent(physicalKey, logicalKey, keyData.character, timeStamp, keyData.synthesized);
        case 1:
          return A.KeyUpEvent$(B.KeyEventDeviceType_0, logicalKey, physicalKey, keyData.synthesized, timeStamp);
        case 2:
          return A.KeyRepeatEvent$(keyData.character, B.KeyEventDeviceType_0, logicalKey, physicalKey, timeStamp);
      }
    },
    KeyboardLockMode: function KeyboardLockMode(t0, t1, t2) {
      this.logicalKey = t0;
      this.index = t1;
      this._name = t2;
    },
    KeyEvent: function KeyEvent() {
    },
    KeyDownEvent: function KeyDownEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    KeyUpEvent: function KeyUpEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    KeyRepeatEvent: function KeyRepeatEvent(t0, t1, t2, t3, t4) {
      var _ = this;
      _.physicalKey = t0;
      _.logicalKey = t1;
      _.character = t2;
      _.timeStamp = t3;
      _.synthesized = t4;
    },
    HardwareKeyboard: function HardwareKeyboard(t0, t1, t2) {
      var _ = this;
      _._pressedKeys = t0;
      _._lockModes = t1;
      _._handlers = t2;
      _._duringDispatch = false;
      _._modifiedHandlers = null;
    },
    KeyDataTransitMode: function KeyDataTransitMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    KeyMessage: function KeyMessage(t0, t1) {
      this.events = t0;
      this.rawEvent = t1;
    },
    KeyEventManager: function KeyEventManager(t0, t1, t2, t3) {
      var _ = this;
      _.keyMessageHandler = null;
      _._hardwareKeyboard = t0;
      _._rawKeyboard = t1;
      _._transitMode = null;
      _._keyEventsSinceLastMessage = t2;
      _._skippedRawKeysPressed = t3;
    },
    _KeyEvent_Object_Diagnosticable: function _KeyEvent_Object_Diagnosticable() {
    },
    KeyboardInsertedContent: function KeyboardInsertedContent(t0, t1, t2) {
      this.mimeType = t0;
      this.uri = t1;
      this.data = t2;
    },
    KeyboardKey: function KeyboardKey() {
    },
    LogicalKeyboardKey: function LogicalKeyboardKey(t0) {
      this.keyId = t0;
    },
    PhysicalKeyboardKey: function PhysicalKeyboardKey(t0) {
      this.usbHidUsage = t0;
    },
    _KeyboardKey_Object_Diagnosticable: function _KeyboardKey_Object_Diagnosticable() {
    },
    PlatformException$(code, details, message, stacktrace) {
      return new A.PlatformException(code, message, details, stacktrace);
    },
    MissingPluginException$(message) {
      return new A.MissingPluginException(message);
    },
    MethodCall: function MethodCall(t0, t1) {
      this.method = t0;
      this.$arguments = t1;
    },
    PlatformException: function PlatformException(t0, t1, t2, t3) {
      var _ = this;
      _.code = t0;
      _.message = t1;
      _.details = t2;
      _.stacktrace = t3;
    },
    MissingPluginException: function MissingPluginException(t0) {
      this.message = t0;
    },
    StringCodec: function StringCodec() {
    },
    JSONMessageCodec0: function JSONMessageCodec0() {
    },
    JSONMethodCodec0: function JSONMethodCodec0() {
    },
    StandardMessageCodec0: function StandardMessageCodec0() {
    },
    StandardMessageCodec_writeValue_closure: function StandardMessageCodec_writeValue_closure(t0, t1) {
      this.$this = t0;
      this.buffer = t1;
    },
    StandardMethodCodec0: function StandardMethodCodec0() {
    },
    _DeferringMouseCursor_firstNonDeferred(cursors) {
      var t1, t2, t3;
      for (t1 = A._instanceType(cursors), t2 = new A.MappedIterator(J.get$iterator$ax(cursors.__internal$_iterable), cursors._f, t1._eval$1("MappedIterator<1,2>")), t1 = t1._rest[1]; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        if (!t3.$eq(0, B.C__DeferringMouseCursor))
          return t3;
      }
      return null;
    },
    MouseCursorManager: function MouseCursorManager(t0, t1) {
      this.fallbackMouseCursor = t0;
      this._lastSession = t1;
    },
    MouseCursorSession: function MouseCursorSession() {
    },
    MouseCursor0: function MouseCursor0() {
    },
    _DeferringMouseCursor: function _DeferringMouseCursor() {
    },
    _SystemMouseCursorSession: function _SystemMouseCursorSession(t0, t1) {
      this.cursor = t0;
      this.device = t1;
    },
    SystemMouseCursor: function SystemMouseCursor(t0) {
      this.kind = t0;
    },
    _MouseCursor_Object_Diagnosticable: function _MouseCursor_Object_Diagnosticable() {
    },
    _debugLaunchProfilePlatformChannels() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t1, t2, allStats, _i, stats, t3, t4, t5, t6, t7, t8;
      var $async$_debugLaunchProfilePlatformChannels = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !$._profilePlatformChannelsIsRunning ? 2 : 3;
              break;
            case 2:
              // then
              $._profilePlatformChannelsIsRunning = true;
              $async$goto = 4;
              return A._asyncAwait(A.Future_Future$delayed(B.Duration_1000000, null, type$.dynamic), $async$_debugLaunchProfilePlatformChannels);
            case 4:
              // returning from await.
              $._profilePlatformChannelsIsRunning = false;
              t1 = "" + "Platform Channel Stats:\n";
              t2 = $._profilePlatformChannelsStats.get$values(0);
              allStats = A.List_List$of(t2, true, A._instanceType(t2)._eval$1("Iterable.E"));
              B.JSArray_methods.sort$1(allStats, new A._debugLaunchProfilePlatformChannels_closure());
              for (t2 = allStats.length, _i = 0; _i < allStats.length; allStats.length === t2 || (0, A.throwConcurrentModificationError)(allStats), ++_i, t1 = t8) {
                stats = allStats[_i];
                t3 = stats.channel;
                t4 = stats.type;
                t5 = stats.codec;
                t6 = stats._upBytes;
                t7 = B.JSNumber_methods.toStringAsFixed$1(t6 / stats._upCount, 1);
                t8 = stats._downBytes;
                t8 = t1 + ('  (name:"' + t3 + '" type:"' + t4 + '" codec:"' + t5 + '" upBytes:' + t6 + " upBytes_avg:" + t7 + " downBytes:" + t8 + " downBytes_avg:" + B.JSNumber_methods.toStringAsFixed$1(t8 / stats._downCount, 1) + ")\n");
              }
              A.print__debugPrintThrottled$closure().call$1(t1.charCodeAt(0) == 0 ? t1 : t1);
              $._profilePlatformChannelsStats.clear$0(0);
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_debugLaunchProfilePlatformChannels, $async$completer);
    },
    _ProfiledBinaryMessenger: function _ProfiledBinaryMessenger(t0, t1, t2) {
      this.proxy = t0;
      this.channelTypeName = t1;
      this.codecTypeName = t2;
    },
    _PlatformChannelStats: function _PlatformChannelStats(t0, t1, t2) {
      var _ = this;
      _.channel = t0;
      _.codec = t1;
      _.type = t2;
      _._downBytes = _._downCount = _._upBytes = _._upCount = 0;
    },
    _debugLaunchProfilePlatformChannels_closure: function _debugLaunchProfilePlatformChannels_closure() {
    },
    BasicMessageChannel: function BasicMessageChannel(t0, t1, t2, t3) {
      var _ = this;
      _.name = t0;
      _.codec = t1;
      _._binaryMessenger = t2;
      _.$ti = t3;
    },
    BasicMessageChannel_setMessageHandler_closure: function BasicMessageChannel_setMessageHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    MethodChannel: function MethodChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this._binaryMessenger = t2;
    },
    MethodChannel_setMethodCallHandler_closure: function MethodChannel_setMethodCallHandler_closure(t0, t1) {
      this.$this = t0;
      this.handler = t1;
    },
    OptionalMethodChannel: function OptionalMethodChannel(t0, t1, t2) {
      this.name = t0;
      this.codec = t1;
      this._binaryMessenger = t2;
    },
    EventChannel: function EventChannel() {
    },
    PredictiveBackEvent_PredictiveBackEvent$fromMap(map) {
      var t1, t2, t3,
        touchOffset = type$.nullable_List_nullable_Object._as(map.$index(0, "touchOffset"));
      if (touchOffset == null)
        t1 = null;
      else {
        t1 = J.getInterceptor$asx(touchOffset);
        t2 = t1.$index(touchOffset, 0);
        t2.toString;
        A._asNum(t2);
        t1 = t1.$index(touchOffset, 1);
        t1.toString;
        t1 = new A.Offset(t2, A._asNum(t1));
      }
      t2 = map.$index(0, "progress");
      t2.toString;
      A._asNum(t2);
      t3 = map.$index(0, "swipeEdge");
      t3.toString;
      return new A.PredictiveBackEvent(t1, t2, B.List_SwipeEdge_0_SwipeEdge_1[A._asInt(t3)]);
    },
    SwipeEdge: function SwipeEdge(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    PredictiveBackEvent: function PredictiveBackEvent(t0, t1, t2) {
      this.touchOffset = t0;
      this.progress = t1;
      this.swipeEdge = t2;
    },
    RawKeyEvent_RawKeyEvent$fromMessage(message) {
      var data, t1, t2, repeat, _box_0 = {};
      _box_0.character = null;
      data = new A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb(_box_0, message).call$0();
      t1 = $.$get$RawKeyboard_instance()._keysPressed;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      repeat = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeyIterable(t1, t2), t2._eval$1("Iterable.E")).contains$1(0, data.get$physicalKey());
      t2 = J.$index$asx(message, "type");
      t2.toString;
      A._asString(t2);
      $label0$0: {
        if ("keydown" === t2) {
          t1 = new A.RawKeyDownEvent(_box_0.character, repeat, data);
          break $label0$0;
        }
        if ("keyup" === t2) {
          t1 = new A.RawKeyUpEvent(null, false, data);
          break $label0$0;
        }
        t1 = A.throwExpression(A.FlutterError_FlutterError("Unknown key event type: " + t2));
      }
      return t1;
    },
    KeyboardSide: function KeyboardSide(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    ModifierKey: function ModifierKey(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RawKeyEventData: function RawKeyEventData() {
    },
    RawKeyEvent: function RawKeyEvent() {
    },
    RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb: function RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb(t0, t1) {
      this._box_0 = t0;
      this.message = t1;
    },
    RawKeyDownEvent: function RawKeyDownEvent(t0, t1, t2) {
      this.character = t0;
      this.repeat = t1;
      this.data = t2;
    },
    RawKeyUpEvent: function RawKeyUpEvent(t0, t1, t2) {
      this.character = t0;
      this.repeat = t1;
      this.data = t2;
    },
    RawKeyboard0: function RawKeyboard0(t0, t1) {
      this._raw_keyboard$_listeners = t0;
      this._keysPressed = t1;
    },
    _ModifierSidePair: function _ModifierSidePair(t0, t1) {
      this.modifier = t0;
      this.side = t1;
    },
    _RawKeyEvent_Object_Diagnosticable: function _RawKeyEvent_Object_Diagnosticable() {
    },
    _RawKeyEventData_Object_Diagnosticable: function _RawKeyEventData_Object_Diagnosticable() {
    },
    RawKeyEventDataWeb: function RawKeyEventDataWeb(t0, t1, t2, t3, t4) {
      var _ = this;
      _.code = t0;
      _.key = t1;
      _.location = t2;
      _.metaState = t3;
      _.keyCode = t4;
    },
    RestorationManager: function RestorationManager(t0, t1) {
      var _ = this;
      _._pendingRootBucket = _._rootBucket = null;
      _._serializationScheduled = _._isReplacing = _._rootBucketIsValid = false;
      _._bucketsNeedingSerialization = t0;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t1;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    RestorationManager_handleRestorationUpdateFromEngine_closure: function RestorationManager_handleRestorationUpdateFromEngine_closure(t0) {
      this.$this = t0;
    },
    RestorationManager_scheduleSerializationFor_closure: function RestorationManager_scheduleSerializationFor_closure(t0) {
      this.$this = t0;
    },
    RestorationBucket: function RestorationBucket(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._rawData = t0;
      _._restoration$_manager = t1;
      _._restoration$_parent = t2;
      _._restorationId = t3;
      _._claimedChildren = t4;
      _._childrenToAdd = t5;
      _._needsSerialization = false;
    },
    RestorationBucket__rawChildren_closure: function RestorationBucket__rawChildren_closure() {
    },
    RestorationBucket__visitChildren_closure: function RestorationBucket__visitChildren_closure() {
    },
    DefaultSpellCheckService_mergeResults(oldResults, newResults) {
      var oldSpan, newSpan, t2, t3,
        mergedResults = A._setArrayType([], type$.JSArray_SuggestionSpan),
        t1 = J.getInterceptor$asx(oldResults),
        oldSpanPointer = 0, newSpanPointer = 0;
      while (true) {
        if (!(oldSpanPointer < t1.get$length(oldResults) && newSpanPointer < newResults.length))
          break;
        oldSpan = t1.$index(oldResults, oldSpanPointer);
        newSpan = newResults[newSpanPointer];
        t2 = oldSpan.range.start;
        t3 = newSpan.range.start;
        if (t2 === t3) {
          mergedResults.push(oldSpan);
          ++oldSpanPointer;
          ++newSpanPointer;
        } else if (t2 < t3) {
          mergedResults.push(oldSpan);
          ++oldSpanPointer;
        } else {
          mergedResults.push(newSpan);
          ++newSpanPointer;
        }
      }
      B.JSArray_methods.addAll$1(mergedResults, t1.sublist$1(oldResults, oldSpanPointer));
      B.JSArray_methods.addAll$1(mergedResults, B.JSArray_methods.sublist$1(newResults, newSpanPointer));
      return mergedResults;
    },
    SuggestionSpan: function SuggestionSpan(t0, t1) {
      this.range = t0;
      this.suggestions = t1;
    },
    SpellCheckResults: function SpellCheckResults(t0, t1) {
      this.spellCheckedText = t0;
      this.suggestionSpans = t1;
    },
    SystemChrome_setSystemUIOverlayStyle(style) {
      if ($.SystemChrome__pendingStyle != null) {
        $.SystemChrome__pendingStyle = style;
        return;
      }
      if (style.$eq(0, $.SystemChrome__latestStyle))
        return;
      $.SystemChrome__pendingStyle = style;
      A.scheduleMicrotask(new A.SystemChrome_setSystemUIOverlayStyle_closure());
    },
    SystemUiOverlayStyle: function SystemUiOverlayStyle(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.systemNavigationBarColor = t0;
      _.systemNavigationBarDividerColor = t1;
      _.systemNavigationBarIconBrightness = t2;
      _.systemNavigationBarContrastEnforced = t3;
      _.statusBarColor = t4;
      _.statusBarBrightness = t5;
      _.statusBarIconBrightness = t6;
      _.systemStatusBarContrastEnforced = t7;
    },
    SystemChrome_setSystemUIOverlayStyle_closure: function SystemChrome_setSystemUIOverlayStyle_closure() {
    },
    TextSelection$(affinity, baseOffset, extentOffset, isDirectional) {
      var t1 = baseOffset < extentOffset,
        t2 = t1 ? baseOffset : extentOffset;
      return new A.TextSelection(baseOffset, extentOffset, affinity, isDirectional, t2, t1 ? extentOffset : baseOffset);
    },
    TextSelection$fromPosition(position) {
      var t1 = position.offset;
      return new A.TextSelection(t1, t1, position.affinity, false, t1, t1);
    },
    TextSelection: function TextSelection(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.baseOffset = t0;
      _.extentOffset = t1;
      _.affinity = t2;
      _.isDirectional = t3;
      _.start = t4;
      _.end = t5;
    },
    _toTextAffinity(affinity) {
      var t1;
      $label0$0: {
        if ("TextAffinity.downstream" === affinity) {
          t1 = B.TextAffinity_1;
          break $label0$0;
        }
        if ("TextAffinity.upstream" === affinity) {
          t1 = B.TextAffinity_0;
          break $label0$0;
        }
        t1 = null;
        break $label0$0;
      }
      return t1;
    },
    TextEditingDelta_TextEditingDelta$fromJSON(encoded) {
      var t3, newComposing, t4, newSelection, newText, isDeletionGreaterThanOne, isDeletingByReplacingWithEmpty, isReplacedByShorter, isReplacedBySame, isInsertingInsideComposingRegion, isDeletingInsideComposingRegion, newComposingText, originalComposingText, isReplaced,
        t1 = J.getInterceptor$asx(encoded),
        oldText = A._asString(t1.$index(encoded, "oldText")),
        replacementDestinationStart = A._asInt(t1.$index(encoded, "deltaStart")),
        replacementDestinationEnd = A._asInt(t1.$index(encoded, "deltaEnd")),
        replacementSource = A._asString(t1.$index(encoded, "deltaText")),
        replacementSourceEnd = replacementSource.length,
        isNonTextUpdate = replacementDestinationStart === -1 && replacementDestinationStart === replacementDestinationEnd,
        t2 = A._asIntQ(t1.$index(encoded, "composingBase"));
      if (t2 == null)
        t2 = -1;
      t3 = A._asIntQ(t1.$index(encoded, "composingExtent"));
      newComposing = new A.TextRange(t2, t3 == null ? -1 : t3);
      t2 = A._asIntQ(t1.$index(encoded, "selectionBase"));
      if (t2 == null)
        t2 = -1;
      t3 = A._asIntQ(t1.$index(encoded, "selectionExtent"));
      if (t3 == null)
        t3 = -1;
      t4 = A._toTextAffinity(A._asStringQ(t1.$index(encoded, "selectionAffinity")));
      if (t4 == null)
        t4 = B.TextAffinity_1;
      t1 = A._asBoolQ(t1.$index(encoded, "selectionIsDirectional"));
      newSelection = A.TextSelection$(t4, t2, t3, t1 === true);
      if (isNonTextUpdate)
        return new A.TextEditingDeltaNonTextUpdate(oldText, newSelection, newComposing);
      newText = B.JSString_methods.replaceRange$3(oldText, replacementDestinationStart, replacementDestinationEnd, replacementSource);
      t1 = replacementDestinationEnd - replacementDestinationStart;
      isDeletionGreaterThanOne = t1 - replacementSourceEnd > 1;
      if (replacementSourceEnd === 0)
        isDeletingByReplacingWithEmpty = 0 === replacementSourceEnd;
      else
        isDeletingByReplacingWithEmpty = false;
      isReplacedByShorter = isDeletionGreaterThanOne && replacementSourceEnd < t1;
      isReplacedBySame = replacementSourceEnd === t1;
      t2 = replacementDestinationStart + replacementSourceEnd;
      isInsertingInsideComposingRegion = t2 > replacementDestinationEnd;
      t3 = !isReplacedByShorter;
      isDeletingInsideComposingRegion = t3 && !isDeletingByReplacingWithEmpty && t2 < replacementDestinationEnd;
      t4 = !isDeletingByReplacingWithEmpty;
      if (!t4 || isDeletingInsideComposingRegion || isReplacedByShorter) {
        newComposingText = B.JSString_methods.substring$2(replacementSource, 0, replacementSourceEnd);
        originalComposingText = B.JSString_methods.substring$2(oldText, replacementDestinationStart, t2);
      } else {
        newComposingText = B.JSString_methods.substring$2(replacementSource, 0, t1);
        originalComposingText = B.JSString_methods.substring$2(oldText, replacementDestinationStart, replacementDestinationEnd);
      }
      t2 = originalComposingText === newComposingText;
      isReplaced = !t2 || replacementSourceEnd > t1 || !t3 || isReplacedBySame;
      if (oldText === newText)
        return new A.TextEditingDeltaNonTextUpdate(oldText, newSelection, newComposing);
      else if ((!t4 || isDeletingInsideComposingRegion) && t2)
        return new A.TextEditingDeltaDeletion(new A.TextRange(!isDeletionGreaterThanOne ? replacementDestinationEnd - 1 : replacementDestinationStart, replacementDestinationEnd), oldText, newSelection, newComposing);
      else if ((replacementDestinationStart === replacementDestinationEnd || isInsertingInsideComposingRegion) && t2)
        return new A.TextEditingDeltaInsertion(B.JSString_methods.substring$2(replacementSource, t1, t1 + (replacementSourceEnd - t1)), replacementDestinationEnd, oldText, newSelection, newComposing);
      else if (isReplaced)
        return new A.TextEditingDeltaReplacement(replacementSource, new A.TextRange(replacementDestinationStart, replacementDestinationEnd), oldText, newSelection, newComposing);
      return new A.TextEditingDeltaNonTextUpdate(oldText, newSelection, newComposing);
    },
    TextEditingDelta: function TextEditingDelta() {
    },
    TextEditingDeltaInsertion: function TextEditingDeltaInsertion(t0, t1, t2, t3, t4) {
      var _ = this;
      _.textInserted = t0;
      _.insertionOffset = t1;
      _.oldText = t2;
      _.selection = t3;
      _.composing = t4;
    },
    TextEditingDeltaDeletion: function TextEditingDeltaDeletion(t0, t1, t2, t3) {
      var _ = this;
      _.deletedRange = t0;
      _.oldText = t1;
      _.selection = t2;
      _.composing = t3;
    },
    TextEditingDeltaReplacement: function TextEditingDeltaReplacement(t0, t1, t2, t3, t4) {
      var _ = this;
      _.replacementText = t0;
      _.replacedRange = t1;
      _.oldText = t2;
      _.selection = t3;
      _.composing = t4;
    },
    TextEditingDeltaNonTextUpdate: function TextEditingDeltaNonTextUpdate(t0, t1, t2) {
      this.oldText = t0;
      this.selection = t1;
      this.composing = t2;
    },
    _TextEditingDelta_Object_Diagnosticable: function _TextEditingDelta_Object_Diagnosticable() {
    },
    _toTextAffinity0(affinity) {
      var t1;
      $label0$0: {
        if ("TextAffinity.downstream" === affinity) {
          t1 = B.TextAffinity_1;
          break $label0$0;
        }
        if ("TextAffinity.upstream" === affinity) {
          t1 = B.TextAffinity_0;
          break $label0$0;
        }
        t1 = null;
        break $label0$0;
      }
      return t1;
    },
    TextEditingValue_TextEditingValue$fromJSON(encoded) {
      var t3, t4, t5, selection,
        t1 = J.getInterceptor$asx(encoded),
        text = A._asString(t1.$index(encoded, "text")),
        t2 = A._asIntQ(t1.$index(encoded, "selectionBase"));
      if (t2 == null)
        t2 = -1;
      t3 = A._asIntQ(t1.$index(encoded, "selectionExtent"));
      if (t3 == null)
        t3 = -1;
      t4 = A._toTextAffinity0(A._asStringQ(t1.$index(encoded, "selectionAffinity")));
      if (t4 == null)
        t4 = B.TextAffinity_1;
      t5 = A._asBoolQ(t1.$index(encoded, "selectionIsDirectional"));
      selection = A.TextSelection$(t4, t2, t3, t5 === true);
      t2 = A._asIntQ(t1.$index(encoded, "composingBase"));
      if (t2 == null)
        t2 = -1;
      t1 = A._asIntQ(t1.$index(encoded, "composingExtent"));
      return new A.TextEditingValue(text, selection, new A.TextRange(t2, t1 == null ? -1 : t1));
    },
    TextInputConnection$_(_client) {
      var t1 = A._setArrayType([], type$.JSArray_SelectionRect),
        t2 = $.TextInputConnection__nextId;
      $.TextInputConnection__nextId = t2 + 1;
      return new A.TextInputConnection(t1, t2, _client);
    },
    _toTextInputAction(action) {
      var t1;
      $label0$0: {
        if ("TextInputAction.none" === action) {
          t1 = B.TextInputAction_0;
          break $label0$0;
        }
        if ("TextInputAction.unspecified" === action) {
          t1 = B.TextInputAction_1;
          break $label0$0;
        }
        if ("TextInputAction.go" === action) {
          t1 = B.TextInputAction_3;
          break $label0$0;
        }
        if ("TextInputAction.search" === action) {
          t1 = B.TextInputAction_4;
          break $label0$0;
        }
        if ("TextInputAction.send" === action) {
          t1 = B.TextInputAction_5;
          break $label0$0;
        }
        if ("TextInputAction.next" === action) {
          t1 = B.TextInputAction_6;
          break $label0$0;
        }
        if ("TextInputAction.previous" === action) {
          t1 = B.TextInputAction_7;
          break $label0$0;
        }
        if ("TextInputAction.continueAction" === action) {
          t1 = B.TextInputAction_8;
          break $label0$0;
        }
        if ("TextInputAction.join" === action) {
          t1 = B.TextInputAction_9;
          break $label0$0;
        }
        if ("TextInputAction.route" === action) {
          t1 = B.TextInputAction_10;
          break $label0$0;
        }
        if ("TextInputAction.emergencyCall" === action) {
          t1 = B.TextInputAction_11;
          break $label0$0;
        }
        if ("TextInputAction.done" === action) {
          t1 = B.TextInputAction_2;
          break $label0$0;
        }
        if ("TextInputAction.newline" === action) {
          t1 = B.TextInputAction_12;
          break $label0$0;
        }
        t1 = A.throwExpression(A.FlutterError$fromParts(A._setArrayType([A.ErrorSummary$("Unknown text input action: " + action)], type$.JSArray_DiagnosticsNode)));
      }
      return t1;
    },
    _toTextCursorAction(state) {
      var t1;
      $label0$0: {
        if ("FloatingCursorDragState.start" === state) {
          t1 = B.FloatingCursorDragState_0;
          break $label0$0;
        }
        if ("FloatingCursorDragState.update" === state) {
          t1 = B.FloatingCursorDragState_1;
          break $label0$0;
        }
        if ("FloatingCursorDragState.end" === state) {
          t1 = B.FloatingCursorDragState_2;
          break $label0$0;
        }
        t1 = A.throwExpression(A.FlutterError$fromParts(A._setArrayType([A.ErrorSummary$("Unknown text cursor action: " + state)], type$.JSArray_DiagnosticsNode)));
      }
      return t1;
    },
    TextInputType: function TextInputType(t0, t1, t2) {
      this.index = t0;
      this.signed = t1;
      this.decimal = t2;
    },
    TextInputAction: function TextInputAction(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FloatingCursorDragState: function FloatingCursorDragState(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    RawFloatingCursorPoint: function RawFloatingCursorPoint(t0, t1, t2) {
      this.offset = t0;
      this.startLocation = t1;
      this.state = t2;
    },
    TextEditingValue: function TextEditingValue(t0, t1, t2) {
      this.text = t0;
      this.selection = t1;
      this.composing = t2;
    },
    SelectionChangedCause: function SelectionChangedCause(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    TextInputConnection: function TextInputConnection(t0, t1, t2) {
      var _ = this;
      _._cachedCaretRect = _._cachedRect = _._cachedTransform = _._cachedSize = null;
      _._cachedSelectionRects = t0;
      _._id = t1;
      _._client = t2;
    },
    TextInput: function TextInput(t0, t1, t2) {
      var _ = this;
      _._currentControl = t0;
      _._inputControls = t1;
      _.__TextInput__channel_A = $;
      _._currentConnection = null;
      _.__TextInput__currentConfiguration_A = $;
      _._scribbleClients = t2;
      _._hidePending = _._scribbleInProgress = false;
    },
    TextInput__loudlyHandleTextInputInvocation_closure: function TextInput__loudlyHandleTextInputInvocation_closure(t0) {
      this.$call = t0;
    },
    TextInput__handleTextInputInvocation_closure0: function TextInput__handleTextInputInvocation_closure0() {
    },
    TextInput__handleTextInputInvocation_closure: function TextInput__handleTextInputInvocation_closure(t0, t1) {
      this.$this = t0;
      this.args = t1;
    },
    TextInput__handleTextInputInvocation_closure1: function TextInput__handleTextInputInvocation_closure1(t0) {
      this.$this = t0;
    },
    TextInputControl: function TextInputControl() {
    },
    _PlatformTextInputControl: function _PlatformTextInputControl() {
    },
    __PlatformTextInputControl_Object_TextInputControl: function __PlatformTextInputControl_Object_TextInputControl() {
    },
    _getParent(context) {
      var $parent = A._Cell$named("parent");
      context.visitAncestorElements$1(new A._getParent_closure($parent));
      return $parent._readLocal$0();
    },
    Actions__visitActionsAncestors(context, visitor) {
      var t1, actionsElement, t2;
      if (context._widget == null)
        return false;
      t1 = type$._ActionsScope;
      actionsElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; t2 = actionsElement != null, t2;) {
        if (visitor.call$1(actionsElement))
          break;
        actionsElement = A._getParent(actionsElement).getElementForInheritedWidgetOfExactType$1$0(t1);
      }
      return t2;
    },
    Actions__findDispatcher(context) {
      var t1 = {};
      t1.dispatcher = null;
      A.Actions__visitActionsAncestors(context, new A.Actions__findDispatcher_closure(t1));
      return B.C_ActionDispatcher;
    },
    Actions__castAction(actionsMarker, intent, $T) {
      var mappedAction,
        t1 = intent == null ? null : A.getRuntimeTypeOfDartObject(intent);
      if (t1 == null)
        t1 = A.createRuntimeType($T);
      mappedAction = actionsMarker.actions.$index(0, t1);
      if ($T._eval$1("Action<0>?")._is(mappedAction))
        return mappedAction;
      else
        return null;
    },
    Actions_maybeInvoke(context, intent, $T) {
      var t1 = {};
      t1.returnValue = null;
      A.Actions__visitActionsAncestors(context, new A.Actions_maybeInvoke_closure(t1, intent, context, $T));
      return t1.returnValue;
    },
    _getParent_closure: function _getParent_closure(t0) {
      this.parent = t0;
    },
    ActionDispatcher: function ActionDispatcher() {
    },
    Actions__findDispatcher_closure: function Actions__findDispatcher_closure(t0) {
      this._box_0 = t0;
    },
    Actions_maybeInvoke_closure: function Actions_maybeInvoke_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.intent = t1;
      _.context = t2;
      _.T = t3;
    },
    _ActionDispatcher_Object_Diagnosticable: function _ActionDispatcher_Object_Diagnosticable() {
    },
    SizedBox: function SizedBox(t0, t1, t2, t3) {
      var _ = this;
      _.width = t0;
      _.height = t1;
      _.child = t2;
      _.key = t3;
    },
    ExcludeSemantics: function ExcludeSemantics(t0, t1, t2) {
      this.excluding = t0;
      this.child = t1;
      this.key = t2;
    },
    Builder: function Builder(t0, t1) {
      this.builder = t0;
      this.key = t1;
    },
    WidgetsFlutterBinding$() {
      var t10, _null = null,
        t1 = A._setArrayType([], type$.JSArray_WidgetsBindingObserver),
        t2 = $.Zone__current,
        t3 = $.$get$ChangeNotifier__emptyListeners(),
        t4 = A._setArrayType([], type$.JSArray_of_void_Function_List_FrameTiming),
        t5 = A.HeapPriorityQueue$(A.binding_SchedulerBinding__taskSorter$closure(), type$._TaskEntry_dynamic),
        t6 = type$.int,
        t7 = A.HashSet_HashSet(t6),
        t8 = type$.JSArray_of_void_Function_Duration,
        t9 = A._setArrayType([], t8);
      t8 = A._setArrayType([], t8);
      t10 = A._setArrayType([], type$.JSArray_nullable__AsyncBlock);
      t6 = new A.WidgetsFlutterBinding(_null, _null, $, t1, _null, true, new A._AsyncCompleter(new A._Future(t2, type$._Future_void), type$._AsyncCompleter_void), false, _null, false, $, _null, $, $, $, A.LinkedHashMap_LinkedHashMap$_empty(type$.Object, type$.RenderView), false, 0, false, $, 0, _null, $, $, new A._SystemFontsNotifier(A.LinkedHashSet_LinkedHashSet$_empty(type$.void_Function)), $, $, $, new A.ValueNotifier(_null, t3, type$.ValueNotifier_nullable_int), $, _null, A.LinkedHashSet_LinkedHashSet$_empty(type$.SystemContextMenuClient), t4, _null, A.binding__defaultSchedulingStrategy$closure(), t5, false, 0, A.LinkedHashMap_LinkedHashMap$_empty(t6, type$._FrameCallbackEntry), t7, t9, t8, _null, false, B.SchedulerPhase_0, true, false, _null, B.Duration_0, B.Duration_0, _null, 0, _null, false, new A.TimelineTask(_null, _null, A._getNextTaskId(), t10), _null, 0, A.ListQueue$(_null, type$.PointerEvent), new A.PointerRouter(A.LinkedHashMap_LinkedHashMap$_empty(t6, type$.Map_of_void_Function_PointerEvent_and_nullable_Matrix4), A.LinkedHashMap_LinkedHashMap$_empty(type$.void_Function_PointerEvent, type$.nullable_Matrix4)), new A.GestureArenaManager(A.LinkedHashMap_LinkedHashMap$_empty(t6, type$._GestureArena)), new A.PointerSignalResolver(), A.LinkedHashMap_LinkedHashMap$_empty(t6, type$.HitTestResult), $, false, B.Duration_m38000);
      t6.BindingBase$0();
      return t6;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure4: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure4() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure5: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure5() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure0(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure0() {
    },
    WidgetsBindingObserver: function WidgetsBindingObserver() {
    },
    WidgetsBinding: function WidgetsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(t0) {
      this.$this = t0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure5: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure5() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure6: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure6() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    WidgetsFlutterBinding: function WidgetsFlutterBinding(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64) {
      var _ = this;
      _.WidgetsBinding__debugShowWidgetInspectorOverrideNotifierObject = t0;
      _.WidgetsBinding__buildOwner = t1;
      _.WidgetsBinding___WidgetsBinding_platformMenuDelegate_A = t2;
      _.WidgetsBinding__observers = t3;
      _.WidgetsBinding__backGestureObserver = t4;
      _.WidgetsBinding__needToReportFirstFrame = t5;
      _.WidgetsBinding__firstFrameCompleter = t6;
      _.WidgetsBinding_debugBuildingDirtyElements = t7;
      _.WidgetsBinding__rootElement = t8;
      _.WidgetsBinding__readyToProduceFrames = t9;
      _.RendererBinding___RendererBinding__manifold_FI = t10;
      _.RendererBinding__mouseTracker = t11;
      _.RendererBinding___RendererBinding_pipelineOwner_FI = t12;
      _.RendererBinding___RendererBinding_renderView_FI = t13;
      _.RendererBinding___RendererBinding__rootPipelineOwner_A = t14;
      _.RendererBinding__viewIdToRenderView = t15;
      _.RendererBinding__debugMouseTrackerUpdateScheduled = t16;
      _.RendererBinding__firstFrameDeferredCount = t17;
      _.RendererBinding__firstFrameSent = t18;
      _.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI = t19;
      _.SemanticsBinding__outstandingHandles = t20;
      _.SemanticsBinding__semanticsHandle = t21;
      _.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A = t22;
      _.PaintingBinding___PaintingBinding__imageCache_A = t23;
      _.PaintingBinding__systemFonts = t24;
      _.ServicesBinding___ServicesBinding__keyboard_F = t25;
      _.ServicesBinding___ServicesBinding__keyEventManager_F = t26;
      _.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F = t27;
      _.ServicesBinding_accessibilityFocus = t28;
      _.ServicesBinding___ServicesBinding__restorationManager_A = t29;
      _.ServicesBinding__systemUiChangeCallback = t30;
      _.ServicesBinding__systemContextMenuClients = t31;
      _.SchedulerBinding__timingsCallbacks = t32;
      _.SchedulerBinding__lifecycleState = t33;
      _.SchedulerBinding_schedulingStrategy = t34;
      _.SchedulerBinding__taskQueue = t35;
      _.SchedulerBinding__hasRequestedAnEventLoopCallback = t36;
      _.SchedulerBinding__nextFrameCallbackId = t37;
      _.SchedulerBinding__transientCallbacks = t38;
      _.SchedulerBinding__removedIds = t39;
      _.SchedulerBinding__persistentCallbacks = t40;
      _.SchedulerBinding__postFrameCallbacks = t41;
      _.SchedulerBinding__nextFrameCompleter = t42;
      _.SchedulerBinding__hasScheduledFrame = t43;
      _.SchedulerBinding__schedulerPhase = t44;
      _.SchedulerBinding__framesEnabled = t45;
      _.SchedulerBinding__warmUpFrame = t46;
      _.SchedulerBinding__firstRawTimeStampInEpoch = t47;
      _.SchedulerBinding__epochStart = t48;
      _.SchedulerBinding__lastRawTimeStamp = t49;
      _.SchedulerBinding__currentFrameTimeStamp = t50;
      _.SchedulerBinding__debugFrameNumber = t51;
      _.SchedulerBinding__debugBanner = t52;
      _.SchedulerBinding__rescheduleAfterWarmUpFrame = t53;
      _.SchedulerBinding__frameTimelineTask = t54;
      _.SchedulerBinding__performanceMode = t55;
      _.SchedulerBinding__numPerformanceModeRequests = t56;
      _.GestureBinding__pendingPointerEvents = t57;
      _.GestureBinding_pointerRouter = t58;
      _.GestureBinding_gestureArena = t59;
      _.GestureBinding_pointerSignalResolver = t60;
      _.GestureBinding__hitTests = t61;
      _.GestureBinding___GestureBinding__resampler_FI = t62;
      _.GestureBinding_resamplingEnabled = t63;
      _.GestureBinding_samplingOffset = t64;
      _._lockCount = 0;
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding() {
    },
    _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding: function _WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding() {
    },
    ContextMenuController_removeAny() {
      var t1 = $.ContextMenuController__menuOverlayEntry;
      if (t1 != null)
        t1.remove$0(0);
      t1 = $.ContextMenuController__menuOverlayEntry;
      if (t1 != null)
        t1.dispose$0();
      $.ContextMenuController__menuOverlayEntry = null;
      if ($.ContextMenuController__shownInstance != null)
        $.ContextMenuController__shownInstance = null;
    },
    ContextMenuController: function ContextMenuController() {
    },
    ContextMenuController_show_closure: function ContextMenuController_show_closure(t0, t1) {
      this.capturedThemes = t0;
      this.contextMenuBuilder = t1;
    },
    _KeyFrame: function _KeyFrame(t0, t1) {
      this.time = t0;
      this.value = t1;
    },
    _DiscreteKeyFrameSimulation: function _DiscreteKeyFrameSimulation(t0, t1, t2) {
      var _ = this;
      _.maxDuration = t0;
      _._keyFrames = t1;
      _._lastKeyFrameIndex = 0;
      _.tolerance = t2;
    },
    EditableTextState__scheduleShowCaretOnScreen_closure: function EditableTextState__scheduleShowCaretOnScreen_closure(t0, t1) {
      this.$this = t0;
      this.withAnimation = t1;
    },
    EditableTextState__formatAndSetValue_closure: function EditableTextState__formatAndSetValue_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__startCursorBlink_closure: function EditableTextState__startCursorBlink_closure(t0) {
      this.$this = t0;
    },
    EditableTextState__onCursorTick_closure: function EditableTextState__onCursorTick_closure() {
    },
    EditableTextState__onCursorTick_closure0: function EditableTextState__onCursorTick_closure0(t0) {
      this.$this = t0;
    },
    EditableTextState__onCursorTick_closure1: function EditableTextState__onCursorTick_closure1(t0) {
      this.$this = t0;
    },
    EditableTextState_insertTextPlaceholder_closure: function EditableTextState_insertTextPlaceholder_closure(t0) {
      this.$this = t0;
    },
    EditableTextState_removeTextPlaceholder_closure: function EditableTextState_removeTextPlaceholder_closure(t0) {
      this.$this = t0;
    },
    EditableTextState_showAutocorrectionPromptRect_closure: function EditableTextState_showAutocorrectionPromptRect_closure(t0, t1, t2) {
      this.$this = t0;
      this.start = t1;
      this.end = t2;
    },
    _ScribbleFocusableState_isInScribbleRect_closure: function _ScribbleFocusableState_isInScribbleRect_closure(t0) {
      this.$this = t0;
    },
    _ScribblePlaceholder: function _ScribblePlaceholder(t0, t1, t2, t3, t4) {
      var _ = this;
      _.size = t0;
      _.child = t1;
      _.alignment = t2;
      _.baseline = t3;
      _.style = t4;
    },
    combineKeyEventResults(results) {
      var t1, hasSkipRemainingHandlers, _i;
      for (t1 = results.length, hasSkipRemainingHandlers = false, _i = 0; _i < t1; ++_i)
        switch (results[_i].index) {
          case 0:
            return B.KeyEventResult_0;
          case 2:
            hasSkipRemainingHandlers = true;
            break;
          case 1:
            break;
        }
      return hasSkipRemainingHandlers ? B.KeyEventResult_2 : B.KeyEventResult_1;
    },
    FocusNode__allowDescendantsToBeFocused(ancestor) {
      return ancestor.get$descendantsAreFocusable();
    },
    FocusScopeNode$(canRequestFocus, debugLabel, skipTraversal) {
      var t1 = type$.JSArray_FocusNode;
      return new A.FocusScopeNode(B.TraversalEdgeBehavior_0, A._setArrayType([], t1), skipTraversal, canRequestFocus, true, true, null, null, A._setArrayType([], t1), $.$get$ChangeNotifier__emptyListeners());
    },
    _HighlightModeManager__defaultModeForPlatform() {
      switch (A.defaultTargetPlatform().index) {
        case 0:
        case 1:
        case 2:
          if ($.WidgetsBinding__instance.RendererBinding__mouseTracker._mouseStates.__js_helper$_length !== 0)
            return B.FocusHighlightMode_1;
          return B.FocusHighlightMode_0;
        case 3:
        case 4:
        case 5:
          return B.FocusHighlightMode_1;
      }
    },
    KeyEventResult: function KeyEventResult(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    UnfocusDisposition: function UnfocusDisposition(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusNode: function FocusNode() {
    },
    FocusNode_debugDescribeChildren_closure: function FocusNode_debugDescribeChildren_closure(t0) {
      this._box_0 = t0;
    },
    FocusScopeNode: function FocusScopeNode(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) {
      var _ = this;
      _.traversalEdgeBehavior = t0;
      _._focusedChildren = t1;
      _._skipTraversal = t2;
      _._canRequestFocus = t3;
      _._descendantsAreFocusable = t4;
      _._descendantsAreTraversable = t5;
      _._focus_manager$_context = null;
      _.onKey = t6;
      _.onKeyEvent = t7;
      _._descendants = _._ancestors = _._manager = null;
      _._hasKeyboardToken = false;
      _._focus_manager$_parent = null;
      _._focus_manager$_children = t8;
      _._enclosingScope = _._attachment = null;
      _._requestFocusWhenReparented = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t9;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    FocusHighlightMode: function FocusHighlightMode(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusHighlightStrategy: function FocusHighlightStrategy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _AppLifecycleListener: function _AppLifecycleListener(t0) {
      this.onLifecycleStateChanged = t0;
    },
    FocusManager: function FocusManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _._highlightManager = t0;
      _.rootScope = t1;
      _._primaryFocus = null;
      _._dirtyNodes = t2;
      _._markedForFocus = _._suspendedNode = _._appLifecycleListener = null;
      _._pendingAutofocuses = t3;
      _._haveScheduledUpdate = false;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t4;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    _HighlightModeManager: function _HighlightModeManager(t0, t1, t2) {
      var _ = this;
      _._highlightMode = _._lastInteractionWasTouch = null;
      _._earlyKeyEventHandlers = t0;
      _._lateKeyEventHandlers = t1;
      _._focus_manager$_listeners = t2;
    },
    _FocusManager_Object_DiagnosticableTreeMixin: function _FocusManager_Object_DiagnosticableTreeMixin() {
    },
    _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin: function _FocusNode_Object_DiagnosticableTreeMixin() {
    },
    _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier: function _FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier() {
    },
    _getAncestor(context) {
      var count, t1 = {};
      t1.count = count;
      t1.count = 1;
      t1.target = null;
      context.visitAncestorElements$1(new A._getAncestor_closure(t1));
      return t1.target;
    },
    _FocusTraversalGroupInfo$(group, defaultPolicy, members) {
      var t1 = group == null ? null : group.policy;
      if (t1 == null)
        t1 = defaultPolicy;
      return new A._FocusTraversalGroupInfo(t1, members);
    },
    FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, alignment, alignmentPolicy, curve, duration) {
      var t1;
      node.requestFocus$0();
      t1 = node._focus_manager$_context;
      t1.toString;
      A.Scrollable_ensureVisible(t1, 1, alignmentPolicy, B.Cubic_WKj, B.Duration_0);
    },
    FocusTraversalPolicy__getDescendantsWithoutExpandingScope(node) {
      var t1, t2, _i, child,
        result = A._setArrayType([], type$.JSArray_FocusNode);
      for (t1 = node._focus_manager$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        result.push(child);
        if (!(child instanceof A.FocusScopeNode))
          B.JSArray_methods.addAll$1(result, A.FocusTraversalPolicy__getDescendantsWithoutExpandingScope(child));
      }
      return result;
    },
    FocusTraversalPolicy__findGroups(scope, scopeGroupNode, currentNode) {
      var groups, t1, t2, t3, _i, node, groupNode, t4, parentGroup,
        defaultPolicy = scopeGroupNode == null ? null : scopeGroupNode.policy;
      if (defaultPolicy == null)
        defaultPolicy = A.ReadingOrderTraversalPolicy$();
      groups = A.LinkedHashMap_LinkedHashMap$_empty(type$.nullable_FocusNode, type$._FocusTraversalGroupInfo);
      for (t1 = A.FocusTraversalPolicy__getDescendantsWithoutExpandingScope(scope), t2 = t1.length, t3 = type$.JSArray_FocusNode, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        groupNode = A.FocusTraversalGroup__getGroupNode(node);
        t4 = J.getInterceptor$(node);
        if (t4.$eq(node, groupNode)) {
          t4 = groupNode._focus_manager$_parent;
          t4.toString;
          parentGroup = A.FocusTraversalGroup__getGroupNode(t4);
          if (groups.$index(0, parentGroup) == null)
            groups.$indexSet(0, parentGroup, A._FocusTraversalGroupInfo$(parentGroup, defaultPolicy, A._setArrayType([], t3)));
          groups.$index(0, parentGroup).members.push(groupNode);
          continue;
        }
        if (!t4.$eq(node, currentNode))
          t4 = node._canRequestFocus && B.JSArray_methods.every$1(node.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()) && !node.get$skipTraversal();
        else
          t4 = true;
        if (t4) {
          if (groups.$index(0, groupNode) == null)
            groups.$indexSet(0, groupNode, A._FocusTraversalGroupInfo$(groupNode, defaultPolicy, A._setArrayType([], t3)));
          groups.$index(0, groupNode).members.push(node);
        }
      }
      return groups;
    },
    FocusTraversalPolicy__sortAllDescendants(scope, currentNode) {
      var t1, t2, t3, sortedDescendants,
        scopeGroupNode = A.FocusTraversalGroup__getGroupNode(scope),
        groups = A.FocusTraversalPolicy__findGroups(scope, scopeGroupNode, currentNode);
      for (t1 = A.LinkedHashMapKeyIterator$(groups, groups._modifications, A._instanceType(groups)._precomputed1); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        t3 = groups.$index(0, t2).policy.sortDescendants$2(groups.$index(0, t2).members, currentNode);
        t3 = A._setArrayType(t3.slice(0), A._arrayInstanceType(t3));
        B.JSArray_methods.clear$0(groups.$index(0, t2).members);
        B.JSArray_methods.addAll$1(groups.$index(0, t2).members, t3);
      }
      sortedDescendants = A._setArrayType([], type$.JSArray_FocusNode);
      if (groups.__js_helper$_length !== 0 && groups.containsKey$1(0, scopeGroupNode)) {
        t1 = groups.$index(0, scopeGroupNode);
        t1.toString;
        new A.FocusTraversalPolicy__sortAllDescendants_visitGroups(groups, sortedDescendants).call$1(t1);
      }
      if (!!sortedDescendants.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeWhere"));
      B.JSArray_methods._removeWhere$2(sortedDescendants, new A.FocusTraversalPolicy__sortAllDescendants_closure(currentNode), true);
      return sortedDescendants;
    },
    _ReadingOrderSortData_commonDirectionalityOf(list) {
      var t2, common, t3, common0,
        t1 = A._arrayInstanceType(list)._eval$1("MappedListIterable<1,Set<Directionality>>"),
        allAncestors = new A.MappedListIterable(list, new A._ReadingOrderSortData_commonDirectionalityOf_closure(), t1);
      for (t2 = new A.ListIterator(allAncestors, allAncestors.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E"), common = null; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        common0 = t3 == null ? t1._as(t3) : t3;
        common = (common == null ? common0 : common).intersection$1(0, common0);
      }
      if (common.get$isEmpty(common))
        return B.JSArray_methods.get$first(list).directionality;
      return B.JSArray_methods.firstWhere$1(B.JSArray_methods.get$first(list).get$directionalAncestors(), common.get$contains(common)).textDirection;
    },
    _ReadingOrderSortData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderSortData_sortWithDirectionality_closure(directionality), type$._ReadingOrderSortData);
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality(list, directionality) {
      A.mergeSort(list, new A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(directionality), type$._ReadingOrderDirectionalGroupData);
    },
    ReadingOrderTraversalPolicy$() {
      return new A.ReadingOrderTraversalPolicy(A.LinkedHashMap_LinkedHashMap$_empty(type$.FocusScopeNode, type$._DirectionalPolicyData), A.focus_traversal_FocusTraversalPolicy_defaultTraversalRequestFocusCallback$closure());
    },
    FocusTraversalGroup__getGroupNode(node) {
      var node0;
      for (; node0 = node._focus_manager$_parent, node0 != null; node = node0) {
        if (node._focus_manager$_context == null)
          return null;
        if (node instanceof A._FocusTraversalGroupNode)
          return node;
      }
      return null;
    },
    FocusTraversalGroup_maybeOf(context) {
      var t1,
        node = A.Focus_maybeOf(context, false, true);
      if (node == null)
        return null;
      t1 = A.FocusTraversalGroup__getGroupNode(node);
      return t1 == null ? null : t1.policy;
    },
    _getAncestor_closure: function _getAncestor_closure(t0) {
      this._box_0 = t0;
    },
    _FocusTraversalGroupInfo: function _FocusTraversalGroupInfo(t0, t1) {
      this.policy = t0;
      this.members = t1;
    },
    TraversalEdgeBehavior: function TraversalEdgeBehavior(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    FocusTraversalPolicy: function FocusTraversalPolicy() {
    },
    FocusTraversalPolicy__findInitialFocus_closure: function FocusTraversalPolicy__findInitialFocus_closure() {
    },
    FocusTraversalPolicy__sortAllDescendants_visitGroups: function FocusTraversalPolicy__sortAllDescendants_visitGroups(t0, t1) {
      this.groups = t0;
      this.sortedDescendants = t1;
    },
    FocusTraversalPolicy__sortAllDescendants_closure: function FocusTraversalPolicy__sortAllDescendants_closure(t0) {
      this.currentNode = t0;
    },
    DirectionalFocusTraversalPolicyMixin: function DirectionalFocusTraversalPolicyMixin() {
    },
    _ReadingOrderSortData: function _ReadingOrderSortData(t0, t1, t2) {
      var _ = this;
      _.directionality = t0;
      _.rect = t1;
      _.node = t2;
      _._directionalAncestors = null;
    },
    _ReadingOrderSortData_commonDirectionalityOf_closure: function _ReadingOrderSortData_commonDirectionalityOf_closure() {
    },
    _ReadingOrderSortData_sortWithDirectionality_closure: function _ReadingOrderSortData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors: function _ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors() {
    },
    _ReadingOrderDirectionalGroupData: function _ReadingOrderDirectionalGroupData(t0) {
      this.members = t0;
      this._rect = null;
    },
    _ReadingOrderDirectionalGroupData_rect_closure: function _ReadingOrderDirectionalGroupData_rect_closure() {
    },
    _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure: function _ReadingOrderDirectionalGroupData_sortWithDirectionality_closure(t0) {
      this.directionality = t0;
    },
    ReadingOrderTraversalPolicy: function ReadingOrderTraversalPolicy(t0, t1) {
      this.DirectionalFocusTraversalPolicyMixin__policyData = t0;
      this.requestFocusCallback = t1;
    },
    ReadingOrderTraversalPolicy__pickNext_closure: function ReadingOrderTraversalPolicy__pickNext_closure() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand: function ReadingOrderTraversalPolicy__pickNext_inBand() {
    },
    ReadingOrderTraversalPolicy__pickNext_inBand_closure: function ReadingOrderTraversalPolicy__pickNext_inBand_closure(t0) {
      this.band = t0;
    },
    _FocusTraversalGroupNode: function _FocusTraversalGroupNode() {
    },
    _FocusTraversalPolicy_Object_Diagnosticable: function _FocusTraversalPolicy_Object_Diagnosticable() {
    },
    _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin: function _ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin() {
    },
    __ReadingOrderDirectionalGroupData_Object_Diagnosticable: function __ReadingOrderDirectionalGroupData_Object_Diagnosticable() {
    },
    __ReadingOrderSortData_Object_Diagnosticable: function __ReadingOrderSortData_Object_Diagnosticable() {
    },
    Element__sort(a, b) {
      var t2, diff, isBDirty,
        t1 = a.__Element__depth_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = b.__Element__depth_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      diff = t1 - t2;
      if (diff !== 0)
        return diff;
      isBDirty = b._dirty;
      if (a._dirty !== isBDirty)
        return isBDirty ? -1 : 1;
      return 0;
    },
    _reportException(context, exception, stack, informationCollector) {
      var details = new A.FlutterErrorDetails(exception, stack, "widgets library", context, informationCollector, false);
      A.FlutterError_reportError(details);
      return details;
    },
    GlobalKey: function GlobalKey() {
    },
    LabeledGlobalKey: function LabeledGlobalKey(t0, t1) {
      this._debugLabel = t0;
      this.$ti = t1;
    },
    Widget: function Widget() {
    },
    StatelessWidget: function StatelessWidget() {
    },
    StatefulWidget: function StatefulWidget() {
    },
    RenderObjectWidget: function RenderObjectWidget() {
    },
    SingleChildRenderObjectWidget: function SingleChildRenderObjectWidget() {
    },
    _ElementLifecycle: function _ElementLifecycle(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    _InactiveElements: function _InactiveElements(t0) {
      this._framework$_elements = t0;
    },
    _InactiveElements__unmount_closure: function _InactiveElements__unmount_closure(t0) {
      this.$this = t0;
    },
    BuildOwner: function BuildOwner(t0, t1, t2) {
      var _ = this;
      _.onBuildScheduled = null;
      _._inactiveElements = t0;
      _._scheduledFlushDirtyElements = false;
      _.focusManager = t1;
      _._globalKeyRegistry = t2;
    },
    StatefulElement: function StatefulElement() {
    },
    InheritedElement: function InheritedElement() {
    },
    RenderObjectElement: function RenderObjectElement() {
    },
    InheritedTheme_capture(from, to) {
      var themes;
      if (from.$eq(0, to))
        return new A.CapturedThemes(B.List_empty4);
      themes = A._setArrayType([], type$.JSArray_InheritedTheme);
      A._Cell$named("debugDidFindAncestor");
      from.visitAncestorElements$1(new A.InheritedTheme_capture_closure(to, A.LinkedHashSet_LinkedHashSet$_empty(type$.Type), themes));
      return new A.CapturedThemes(themes);
    },
    InheritedTheme: function InheritedTheme() {
    },
    InheritedTheme_capture_closure: function InheritedTheme_capture_closure(t0, t1, t2) {
      this.to = t0;
      this.themeTypes = t1;
      this.themes = t2;
    },
    CapturedThemes: function CapturedThemes(t0) {
      this._themes = t0;
    },
    _CaptureAll: function _CaptureAll(t0, t1, t2) {
      this.themes = t0;
      this.child = t1;
      this.key = t2;
    },
    LookupBoundary_dependOnInheritedWidgetOfExactType(context, $T) {
      var candidate;
      context.dependOnInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      candidate = A.LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T);
      if (candidate == null)
        return null;
      context.super$Element$dependOnInheritedElement(candidate, null);
      return $T._as(candidate.get$widget());
    },
    LookupBoundary_getElementForInheritedWidgetOfExactType(context, $T) {
      var boundary, t1, t2,
        candidate = context.getElementForInheritedWidgetOfExactType$1$0($T);
      if (candidate == null)
        return null;
      boundary = context.getElementForInheritedWidgetOfExactType$1$0(type$.LookupBoundary);
      if (boundary != null) {
        t1 = boundary.__Element__depth_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t2 = candidate.__Element__depth_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t1 > t2;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        return null;
      return candidate;
    },
    LookupBoundary_findRootAncestorStateOfType(context, $T) {
      var t1 = {};
      t1.target = null;
      context.visitAncestorElements$1(new A.LookupBoundary_findRootAncestorStateOfType_closure(t1, $T));
      t1 = t1.target;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1._framework$_state;
        t1.toString;
      }
      return $T._eval$1("0?")._as(t1);
    },
    LookupBoundary_findRootAncestorStateOfType_closure: function LookupBoundary_findRootAncestorStateOfType_closure(t0, t1) {
      this._box_0 = t0;
      this.T = t1;
    },
    MagnifierInfo: function MagnifierInfo(t0, t1, t2, t3) {
      var _ = this;
      _.globalGesturePosition = t0;
      _.currentLineBoundaries = t1;
      _.caretRect = t2;
      _.fieldBounds = t3;
    },
    MagnifierController: function MagnifierController() {
      this._overlayEntry = this.animationController = null;
    },
    MagnifierController_show_closure: function MagnifierController_show_closure(t0, t1) {
      this.capturedThemes = t0;
      this.builder = t1;
    },
    Navigator_maybeOf(context) {
      var $navigator,
        t1 = context._framework$_state;
      t1.toString;
      if (t1 instanceof A.NavigatorState)
        $navigator = t1;
      else
        $navigator = null;
      if ($navigator == null)
        $navigator = context.findAncestorStateOfType$1$0(type$.NavigatorState);
      return $navigator;
    },
    NavigatorState: function NavigatorState() {
    },
    OverlayEntry$(builder, canSizeOverlay, maintainState) {
      return new A.OverlayEntry(builder, maintainState, canSizeOverlay, new A.ValueNotifier(null, $.$get$ChangeNotifier__emptyListeners(), type$.ValueNotifier_nullable__OverlayEntryWidgetState), new A.LabeledGlobalKey(null, type$.LabeledGlobalKey__OverlayEntryWidgetState));
    },
    OverlayEntry: function OverlayEntry(t0, t1, t2, t3, t4) {
      var _ = this;
      _.builder = t0;
      _._opaque = false;
      _._maintainState = t1;
      _.canSizeOverlay = t2;
      _._overlayEntryStateNotifier = t3;
      _._overlay = null;
      _._key = t4;
      _._disposedByOwner = false;
    },
    OverlayEntry_remove_closure: function OverlayEntry_remove_closure(t0) {
      this.overlay = t0;
    },
    OverlayState_insert_closure: function OverlayState_insert_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entry = t3;
    },
    OverlayState_insertAll_closure: function OverlayState_insertAll_closure(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.below = t1;
      _.above = t2;
      _.entries = t3;
    },
    OverlayState__markDirty_closure: function OverlayState__markDirty_closure() {
    },
    PlatformMenuDelegate: function PlatformMenuDelegate() {
    },
    DefaultPlatformMenuDelegate: function DefaultPlatformMenuDelegate(t0, t1) {
      this._idMap = t0;
      this.channel = t1;
    },
    RouteInformation: function RouteInformation(t0, t1) {
      this._router$_uri = t0;
      this.state = t1;
    },
    ScrollController$(debugLabel, initialScrollOffset, onAttach, onDetach) {
      return new A.ScrollController(initialScrollOffset, onAttach, onDetach, debugLabel, A._setArrayType([], type$.JSArray_ScrollPosition), $.$get$ChangeNotifier__emptyListeners());
    },
    ScrollController: function ScrollController(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._initialScrollOffset = t0;
      _.onAttach = t1;
      _.onDetach = t2;
      _.debugLabel = t3;
      _._positions = t4;
      _.ChangeNotifier__count = 0;
      _.ChangeNotifier__listeners = t5;
      _.ChangeNotifier__reentrantlyRemovedListeners = _.ChangeNotifier__notificationCallStackDepth = 0;
    },
    ScrollPositionAlignmentPolicy: function ScrollPositionAlignmentPolicy(t0, t1) {
      this.index = t0;
      this._name = t1;
    },
    Scrollable_maybeOf(context) {
      var t2, scrollable,
        t1 = type$._ScrollableScope,
        element = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (t2 = element != null; t2;) {
        scrollable = t1._as(element.get$widget()).scrollable;
        context.dependOnInheritedElement$1(element);
        return scrollable;
      }
      return null;
    },
    Scrollable_ensureVisible(context, alignment, alignmentPolicy, curve, duration) {
      var targetRenderObject, t2,
        t1 = type$.JSArray_Future_void,
        futures = A._setArrayType([], t1),
        scrollable = A.Scrollable_maybeOf(context);
      for (targetRenderObject = null; scrollable != null; context = t2) {
        t2 = context.get$renderObject();
        t2.toString;
        B.JSArray_methods.addAll$1(futures, A._setArrayType([scrollable._scrollable$_position.ensureVisible$6$alignment$alignmentPolicy$curve$duration$targetRenderObject(t2, alignment, alignmentPolicy, curve, duration, targetRenderObject)], t1));
        if (targetRenderObject == null)
          targetRenderObject = context.get$renderObject();
        t2 = scrollable._framework$_element;
        t2.toString;
        scrollable = A.Scrollable_maybeOf(t2);
      }
      t1 = futures.length;
      if (t1 !== 0)
        t2 = duration._duration === B.Duration_0._duration;
      else
        t2 = true;
      if (t2)
        return A.Future_Future$value(null, type$.void);
      if (t1 === 1)
        return B.JSArray_methods.get$single(futures);
      t1 = type$.void;
      return A.Future_wait(futures, false, t1).then$1$1(new A.Scrollable_ensureVisible_closure(), t1);
    },
    Scrollable_ensureVisible_closure: function Scrollable_ensureVisible_closure() {
    },
    TextFieldTapRegion$(child, debugLabel, groupId, onTapOutside) {
      return new A.TextFieldTapRegion(true, onTapOutside, null, groupId, false, debugLabel, child, null);
    },
    TapRegion: function TapRegion() {
    },
    TextFieldTapRegion: function TextFieldTapRegion(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.enabled = t0;
      _.onTapOutside = t1;
      _.onTapInside = t2;
      _.groupId = t3;
      _.consumeOutsideTaps = t4;
      _.debugLabel = t5;
      _.child = t6;
      _.key = t7;
    },
    _SelectionHandleOverlay$(dragStartBehavior, handleLayerLink, onSelectionHandleDragEnd, onSelectionHandleDragStart, onSelectionHandleDragUpdate, onSelectionHandleTapped, preferredLineHeight, selectionControls, type, visibility) {
      return new A._SelectionHandleOverlay(handleLayerLink, onSelectionHandleTapped, onSelectionHandleDragStart, onSelectionHandleDragUpdate, onSelectionHandleDragEnd, selectionControls, visibility, preferredLineHeight, type, dragStartBehavior, null);
    },
    TextSelectionOverlay: function TextSelectionOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
      var _ = this;
      _.context = t0;
      _.renderObject = t1;
      _.selectionControls = t2;
      _.selectionDelegate = t3;
      _.__TextSelectionOverlay__selectionOverlay_F = $;
      _.contextMenuBuilder = t4;
      _._text_selection$_value = t5;
      _._effectiveStartHandleVisibility = t6;
      _._effectiveEndHandleVisibility = t7;
      _._effectiveToolbarVisibility = t8;
      _._handlesVisible = false;
      _.__TextSelectionOverlay__startHandleDragTarget_A = _.__TextSelectionOverlay__startHandleDragPosition_A = _.__TextSelectionOverlay__endHandleDragTarget_A = _.__TextSelectionOverlay__endHandleDragPosition_A = $;
    },
    SelectionOverlay: function SelectionOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29) {
      var _ = this;
      _.context = t0;
      _._magnifierInfo = t1;
      _._magnifierController = t2;
      _.magnifierConfiguration = t3;
      _._startHandleType = t4;
      _._lineHeightAtStart = t5;
      _._isDraggingStartHandle = false;
      _.startHandlesVisible = t6;
      _.onStartHandleDragStart = t7;
      _.onStartHandleDragUpdate = t8;
      _.onStartHandleDragEnd = t9;
      _._endHandleType = t10;
      _._lineHeightAtEnd = t11;
      _._isDraggingEndHandle = false;
      _.endHandlesVisible = t12;
      _.onEndHandleDragStart = t13;
      _.onEndHandleDragUpdate = t14;
      _.onEndHandleDragEnd = t15;
      _.toolbarVisible = t16;
      _._selectionEndpoints = t17;
      _.debugRequiredFor = t18;
      _.toolbarLayerLink = t19;
      _.startHandleLayerLink = t20;
      _.endHandleLayerLink = t21;
      _.selectionControls = t22;
      _.selectionDelegate = t23;
      _.dragStartBehavior = t24;
      _.onSelectionHandleTapped = t25;
      _.clipboardStatus = t26;
      _._toolbarLocation = t27;
      _._toolbar = _._handles = null;
      _._contextMenuController = t28;
      _._spellCheckToolbarController = t29;
      _._text_selection$_buildScheduled = false;
    },
    SelectionOverlay_showMagnifier_closure: function SelectionOverlay_showMagnifier_closure(t0) {
      this.builtMagnifier = t0;
    },
    SelectionOverlay_showHandles_closure: function SelectionOverlay_showHandles_closure(t0, t1) {
      this.$this = t0;
      this.capturedThemes = t1;
    },
    SelectionOverlay_showHandles_closure0: function SelectionOverlay_showHandles_closure0(t0, t1) {
      this.$this = t0;
      this.capturedThemes = t1;
    },
    SelectionOverlay_showToolbar_closure: function SelectionOverlay_showToolbar_closure(t0, t1, t2) {
      this.$this = t0;
      this.renderBox = t1;
      this.contextMenuBuilder = t2;
    },
    SelectionOverlay_markNeedsBuild_closure: function SelectionOverlay_markNeedsBuild_closure(t0) {
      this.$this = t0;
    },
    SelectionOverlay__buildToolbar_closure: function SelectionOverlay__buildToolbar_closure(t0, t1, t2) {
      this.$this = t0;
      this.editingRegion = t1;
      this.midpoint = t2;
    },
    _SelectionToolbarWrapper: function _SelectionToolbarWrapper(t0, t1, t2, t3, t4) {
      var _ = this;
      _.child = t0;
      _.offset = t1;
      _.layerLink = t2;
      _.visibility = t3;
      _.key = t4;
    },
    _SelectionHandleOverlay: function _SelectionHandleOverlay(t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10) {
      var _ = this;
      _.handleLayerLink = t0;
      _.onSelectionHandleTapped = t1;
      _.onSelectionHandleDragStart = t2;
      _.onSelectionHandleDragUpdate = t3;
      _.onSelectionHandleDragEnd = t4;
      _.selectionControls = t5;
      _.visibility = t6;
      _.preferredLineHeight = t7;
      _.type = t8;
      _.dragStartBehavior = t9;
      _.key = t10;
    },
    WidgetSpan: function WidgetSpan() {
    },
    FMTCObjectBoxBackend: function FMTCObjectBoxBackend() {
    },
    FlutterNativeSplashWeb: function FlutterNativeSplashWeb() {
    },
    Registrar: function Registrar() {
    },
    Registrar_send_closure: function Registrar_send_closure(t0) {
      this.completer = t0;
    },
    PluginRegistry: function PluginRegistry(t0) {
      this._plugin_registry$_handlers = t0;
    },
    TypeAdapter: function TypeAdapter() {
    },
    BigIntAdapter: function BigIntAdapter() {
    },
    DateTimeAdapter: function DateTimeAdapter(t0) {
      this.$ti = t0;
    },
    DateTimeWithTimezoneAdapter: function DateTimeWithTimezoneAdapter() {
    },
    HiveImpl: function HiveImpl(t0, t1, t2, t3) {
      var _ = this;
      _._boxes = t0;
      _._openingBoxes = t1;
      _._managerOverride = null;
      _._secureRandom = t2;
      _.homePath = null;
      _._typeAdapters = t3;
    },
    ResolvedAdapter: function ResolvedAdapter(t0, t1, t2) {
      this.adapter = t0;
      this.typeId = t1;
      this.$ti = t2;
    },
    TypeRegistryImpl: function TypeRegistryImpl() {
    },
    MethodChannelMobileScanner: function MethodChannelMobileScanner() {
      this._textureId = this._eventsStream = null;
    },
    MobileScannerPlatform: function MobileScannerPlatform() {
    },
    MobileScannerWeb: function MobileScannerWeb(t0, t1) {
      var _ = this;
      _._barcodeReader = null;
      _._barcodesController = t0;
      _._barcodesSubscription = null;
      _.__MobileScannerWeb__divElement_A = $;
      _._permissionRequestInProgress = false;
      _._settingsController = t1;
      _._mobile_scanner_web$_textureId = 1;
      _.__MobileScannerWeb__videoElement_A = $;
    },
    PlatformInterface__verify(instance, token, preventConstObject) {
      var t1;
      if (preventConstObject) {
        t1 = $.$get$PlatformInterface__instanceTokens();
        A.Expando__checkType(instance);
        t1 = t1._jsWeakMap.get(instance) === B.C_Object;
      } else
        t1 = false;
      if (t1)
        throw A.wrapException(A.AssertionError$("`const Object()` cannot be used as the token."));
      t1 = $.$get$PlatformInterface__instanceTokens();
      A.Expando__checkType(instance);
      if (token !== t1._jsWeakMap.get(instance))
        throw A.wrapException(A.AssertionError$("Platform interfaces must not be implemented with `implements`"));
    },
    PlatformInterface: function PlatformInterface() {
    },
    SharePlusWebPlugin: function SharePlusWebPlugin(t0) {
      this._navigator = t0;
    },
    MethodChannelShare: function MethodChannelShare() {
    },
    SharePlatform: function SharePlatform() {
    },
    MethodChannelSharedPreferencesStore: function MethodChannelSharedPreferencesStore() {
    },
    SharedPreferencesStorePlatform: function SharedPreferencesStorePlatform() {
    },
    SharedPreferencesPlugin: function SharedPreferencesPlugin() {
    },
    MethodChannelUrlLauncher: function MethodChannelUrlLauncher() {
    },
    UrlLauncherPlatform: function UrlLauncherPlatform() {
    },
    UrlLauncherPlugin$() {
      var t2, t3,
        t1 = self;
      t1 = t1.window;
      t2 = $.$get$UrlLauncherPlatform__token();
      t3 = new A.UrlLauncherPlugin(t1);
      $.$get$PlatformInterface__instanceTokens().$indexSet(0, t3, t2);
      t1 = t1.navigator;
      t3._isSafari = J.contains$1$asx(t1.userAgent, "Safari") && !J.contains$1$asx(t1.userAgent, "Chrome");
      return t3;
    },
    UrlLauncherPlugin: function UrlLauncherPlugin(t0) {
      this._window = t0;
      this._isSafari = false;
    },
    Matrix40: function Matrix40(t0) {
      this._vector_math_64$_m4storage = t0;
    },
    Vector3: function Vector3(t0) {
      this._v3storage = t0;
    },
    Vector4: function Vector4(t0) {
      this._v4storage = t0;
    },
    main() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$main = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.bootstrapEngine(new A.main_closure(), new A.main_closure0()), $async$main);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main, $async$completer);
    },
    main_closure0: function main_closure0() {
    },
    main_closure: function main_closure() {
    },
    Focus_maybeOf(context, createDependency, scopeOk) {
      var t1 = type$._FocusInheritedScope,
        scope = createDependency ? context.dependOnInheritedWidgetOfExactType$1$0(t1) : context.getInheritedWidgetOfExactType$1$0(t1),
        node = scope == null ? null : scope.notifier;
      if (node == null)
        return null;
      return node;
    },
    Localizations_maybeLocaleOf(context) {
      var scope = context.dependOnInheritedWidgetOfExactType$1$0(type$._LocalizationsScope);
      return scope == null ? null : scope.localizationsState._localizations$_locale;
    },
    View_maybeOf(context) {
      var t1 = A.LookupBoundary_dependOnInheritedWidgetOfExactType(context, type$._ViewScope);
      return t1 == null ? null : t1.view;
    },
    LinkViewController__viewFactory(viewId) {
      return $.LinkViewController__instances.$index(0, viewId).get$_link$_element();
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    _convertNativeToDart_Value(value) {
      var t1, values, i;
      if (value == null)
        return value;
      if (typeof value == "string" || typeof value == "number" || A._isBool(value))
        return value;
      if (A.isJavaScriptSimpleObject(value))
        return A.convertNativeToDart_Dictionary(value);
      t1 = Array.isArray(value);
      t1.toString;
      if (t1) {
        values = [];
        i = 0;
        while (true) {
          t1 = value.length;
          t1.toString;
          if (!(i < t1))
            break;
          values.push(A._convertNativeToDart_Value(value[i]));
          ++i;
        }
        return values;
      }
      return value;
    },
    convertNativeToDart_Dictionary(object) {
      var dict, keys, t1, _i, key, t2;
      if (object == null)
        return null;
      dict = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
        key = keys[_i];
        t2 = key;
        t2.toString;
        dict.$indexSet(0, t2, A._convertNativeToDart_Value(object[key]));
      }
      return dict;
    },
    isJavaScriptSimpleObject(value) {
      var proto = Object.getPrototypeOf(value),
        t1 = proto === Object.prototype;
      t1.toString;
      if (!t1) {
        t1 = proto === null;
        t1.toString;
      } else
        t1 = true;
      return t1;
    },
    JSAnyUtilityExtension_instanceOfString(_this, constructorName) {
      var parts, $constructor, t1, t2, _i, part;
      if (constructorName.length === 0)
        return false;
      parts = constructorName.split(".");
      $constructor = type$.JSObject._as(self);
      for (t1 = parts.length, t2 = type$.nullable_JSObject, _i = 0; _i < t1; ++_i) {
        part = parts[_i];
        $constructor = t2._as($constructor[part]);
        if ($constructor == null)
          return false;
      }
      return _this instanceof type$.JavaScriptFunction._as($constructor);
    },
    JSObjectUnsafeUtilExtension__callMethod(_this, method, arg1, arg2, arg3, arg4) {
      var t1;
      if (arg1 == null)
        return _this[method]();
      else {
        t1 = _this[method](arg1);
        return t1;
      }
    },
    JSObjectUnsafeUtilExtension_callMethod(_this, method, arg1, $R) {
      return $R._as(A.JSObjectUnsafeUtilExtension__callMethod(_this, method, arg1, null, null, null));
    },
    low(codeUnit) {
      var index = string$.u1ac4_____.charCodeAt(codeUnit >>> 6) + (codeUnit & 63),
        bit = index & 1,
        pair = string$.E53333.charCodeAt(index >>> 1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    high(lead, tail) {
      var offset = (lead & 1023) << 10 | tail & 1023,
        index = string$.u1ac4_____.charCodeAt(1024 + (offset >>> 9)) + (offset & 511),
        bit = index & 1,
        pair = string$.E53333.charCodeAt(index >>> 1);
      return pair >>> 4 & -bit | pair & 15 & bit - 1;
    },
    initializeApp(apiKey, appId, authDomain, databaseURL, measurementId, messagingSenderId, $name, projectId, storageBucket) {
      var _null = null,
        t1 = self.firebase_core,
        t2 = authDomain == null ? _null : authDomain,
        t3 = databaseURL == null ? _null : databaseURL,
        t4 = storageBucket == null ? _null : storageBucket,
        t5 = measurementId == null ? _null : measurementId;
      return A.App_getInstance(t1.initializeApp(type$.JavaScriptObject._as({apiKey: apiKey, authDomain: t2, databaseURL: t3, projectId: projectId, storageBucket: t4, messagingSenderId: messagingSenderId, measurementId: t5, appId: appId}), "[DEFAULT]"));
    },
    compute0(callback, message, debugLabel, $M, $R) {
      return A.compute$body(callback, message, debugLabel, $M, $R, $R);
    },
    compute$body(callback, message, debugLabel, $M, $R, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, t1;
      var $async$compute0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A._Future$value(null, type$.Null);
              $async$goto = 3;
              return A._asyncAwait(t1, $async$compute0);
            case 3:
              // returning from await.
              $async$returnValue = callback.call$1(message);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$compute0, $async$completer);
    },
    defaultTargetPlatform() {
      var t1 = $.$get$_browserPlatform();
      return t1;
    },
    _operatingSystemToTargetPlatform(os) {
      var t1;
      switch (os.index) {
        case 1:
          t1 = B.TargetPlatform_0;
          break;
        case 0:
          t1 = B.TargetPlatform_2;
          break;
        case 2:
          t1 = B.TargetPlatform_3;
          break;
        case 4:
          t1 = B.TargetPlatform_4;
          break;
        case 3:
          t1 = B.TargetPlatform_5;
          break;
        case 5:
          t1 = B.TargetPlatform_0;
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    listEquals0(a, b) {
      var t1, t2, index;
      if (a == null)
        return b == null;
      if (b == null || J.get$length$asx(a) !== J.get$length$asx(b))
        return false;
      if (a === b)
        return true;
      for (t1 = J.getInterceptor$asx(a), t2 = J.getInterceptor$asx(b), index = 0; index < t1.get$length(a); ++index)
        if (!J.$eq$(t1.$index(a, index), t2.$index(b, index)))
          return false;
      return true;
    },
    mergeSort(list, compare, $T) {
      var middle, secondLength, scratchSpace,
        end = list.length;
      if (end < 2)
        return;
      if (end < 32) {
        A._insertionSort(list, compare, end, 0, $T);
        return;
      }
      middle = end >>> 1;
      secondLength = end - middle;
      scratchSpace = A.List_List$filled(secondLength, list[0], false, $T);
      A._mergeSort(list, compare, middle, end, scratchSpace, 0);
      A._mergeSort(list, compare, 0, middle, list, secondLength);
      A._merge(compare, list, secondLength, end, scratchSpace, 0, secondLength, list, 0);
    },
    _insertionSort(list, compare, end, start, $T) {
      var pos, element, max, min, mid;
      for (pos = start + 1; pos < end;) {
        element = list[pos];
        for (max = pos, min = start; min < max;) {
          mid = min + B.JSInt_methods._shrOtherPositive$1(max - min, 1);
          if (compare.call$2(element, list[mid]) < 0)
            max = mid;
          else
            min = mid + 1;
        }
        ++pos;
        B.JSArray_methods.setRange$4(list, min + 1, pos, list, min);
        list[min] = element;
      }
    },
    _movingInsertionSort(list, compare, start, end, target, targetOffset) {
      var i, element, max, max0, min, mid,
        $length = end - start;
      if ($length === 0)
        return;
      target[targetOffset] = list[start];
      for (i = 1; i < $length; ++i) {
        element = list[start + i];
        max = targetOffset + i;
        for (max0 = max, min = targetOffset; min < max0;) {
          mid = min + B.JSInt_methods._shrOtherPositive$1(max0 - min, 1);
          if (compare.call$2(element, target[mid]) < 0)
            max0 = mid;
          else
            min = mid + 1;
        }
        B.JSArray_methods.setRange$4(target, min + 1, max + 1, target, min);
        target[min] = element;
      }
    },
    _mergeSort(list, compare, start, end, target, targetOffset) {
      var middle, firstLength, targetMiddle,
        $length = end - start;
      if ($length < 32) {
        A._movingInsertionSort(list, compare, start, end, target, targetOffset);
        return;
      }
      middle = start + B.JSInt_methods._shrOtherPositive$1($length, 1);
      firstLength = middle - start;
      targetMiddle = targetOffset + firstLength;
      A._mergeSort(list, compare, middle, end, target, targetMiddle);
      A._mergeSort(list, compare, start, middle, list, middle);
      A._merge(compare, list, middle, middle + firstLength, target, targetMiddle, targetMiddle + (end - middle), target, targetOffset);
    },
    _merge(compare, firstList, firstStart, firstEnd, secondList, secondStart, secondEnd, target, targetOffset) {
      var targetOffset0, cursor10, cursor20,
        cursor1 = firstStart + 1,
        firstElement = firstList[firstStart],
        cursor2 = secondStart + 1,
        secondElement = secondList[secondStart];
      for (; true; targetOffset = targetOffset0) {
        targetOffset0 = targetOffset + 1;
        if (compare.call$2(firstElement, secondElement) <= 0) {
          target[targetOffset] = firstElement;
          if (cursor1 === firstEnd) {
            targetOffset = targetOffset0;
            break;
          }
          cursor10 = cursor1 + 1;
          firstElement = firstList[cursor1];
        } else {
          target[targetOffset] = secondElement;
          if (cursor2 !== secondEnd) {
            cursor20 = cursor2 + 1;
            secondElement = secondList[cursor2];
            cursor2 = cursor20;
            continue;
          }
          targetOffset = targetOffset0 + 1;
          target[targetOffset0] = firstElement;
          B.JSArray_methods.setRange$4(target, targetOffset, targetOffset + (firstEnd - cursor1), firstList, cursor1);
          return;
        }
        cursor1 = cursor10;
      }
      targetOffset0 = targetOffset + 1;
      target[targetOffset] = secondElement;
      B.JSArray_methods.setRange$4(target, targetOffset0, targetOffset0 + (secondEnd - cursor2), secondList, cursor2);
    },
    debugInstrumentAction(description, action, $T) {
      return A.debugInstrumentAction$body(description, action, $T, $T);
    },
    debugInstrumentAction$body(description, action, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, t1;
      var $async$debugInstrumentAction = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = action.call$0();
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$debugInstrumentAction, $async$completer);
    },
    debugFormatDouble(value) {
      if (value == null)
        return "null";
      return B.JSNumber_methods.toStringAsFixed$1(value, 1);
    },
    compute(callback, message, debugLabel, $M, $R) {
      return A.compute0(callback, message, debugLabel, $M, $R);
    },
    debugPrintThrottled(message, wrapWidth) {
      var t1 = type$.JSArray_String,
        messageLines = A._setArrayType(message.split("\n"), t1);
      $.$get$_debugPrintBuffer().addAll$1(0, messageLines);
      if (!$._debugPrintScheduled)
        A._debugPrintTask();
    },
    _debugPrintTask() {
      var line,
        t1 = $._debugPrintScheduled = false,
        t2 = $.$get$_debugPrintStopwatch();
      if (A.Duration$(0, 0, t2.get$elapsedMicroseconds(), 0, 0, 0)._duration > 1000000) {
        if (t2._stop == null)
          t2._stop = $.Primitives_timerTicks.call$0();
        t2.reset$0(0);
        $._debugPrintedCharacters = 0;
      }
      while (true) {
        if (!($._debugPrintedCharacters < 12288 ? !$.$get$_debugPrintBuffer().get$isEmpty(0) : t1))
          break;
        line = $.$get$_debugPrintBuffer().removeFirst$0();
        $._debugPrintedCharacters = $._debugPrintedCharacters + line.length;
        A.printString(line);
      }
      if (!$.$get$_debugPrintBuffer().get$isEmpty(0)) {
        $._debugPrintScheduled = true;
        $._debugPrintedCharacters = 0;
        A.Timer_Timer(B.Duration_1000000, A.print___debugPrintTask$closure());
        if ($._debugPrintCompleter == null)
          $._debugPrintCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      } else {
        $.$get$_debugPrintStopwatch().start$0(0);
        t1 = $._debugPrintCompleter;
        if (t1 != null)
          t1.complete$0(0);
        $._debugPrintCompleter = null;
      }
    },
    FlutterTimeline_startSync($name, $arguments) {
      A.Timeline_startSync($name, $arguments, null);
    },
    MatrixUtils_transformPoint(transform, point) {
      var storage = transform._vector_math_64$_m4storage,
        x = point._dx,
        y = point._dy,
        rx = storage[0] * x + storage[4] * y + storage[12],
        ry = storage[1] * x + storage[5] * y + storage[13],
        rw = storage[3] * x + storage[7] * y + storage[15];
      if (rw === 1)
        return new A.Offset(rx, ry);
      else
        return new A.Offset(rx / rw, ry / rw);
    },
    MatrixUtils__accumulate(m, x, y, first, isAffine) {
      var t1,
        w = isAffine ? 1 : 1 / (m[3] * x + m[7] * y + m[15]),
        tx = (m[0] * x + m[4] * y + m[12]) * w,
        ty = (m[1] * x + m[5] * y + m[13]) * w;
      if (first) {
        t1 = $.$get$MatrixUtils__minMax();
        t1[2] = tx;
        t1[0] = tx;
        t1[3] = ty;
        t1[1] = ty;
      } else {
        t1 = $.$get$MatrixUtils__minMax();
        if (tx < t1[0])
          t1[0] = tx;
        if (ty < t1[1])
          t1[1] = ty;
        if (tx > t1[2])
          t1[2] = tx;
        if (ty > t1[3])
          t1[3] = ty;
      }
    },
    MatrixUtils_transformRect(transform, rect) {
      var isAffine, wx, hx, rx, wy, hy, ry, left, right, $top, bottom, hw, rw, ulx, uly, urx, t3, ury, t4, llx, lly, lrx, lry,
        storage = transform._vector_math_64$_m4storage,
        x = rect.left,
        y = rect.top,
        t1 = rect.right,
        w = t1 - x,
        t2 = rect.bottom,
        h = t2 - y;
      if (!isFinite(w) || !isFinite(h)) {
        isAffine = storage[3] === 0 && storage[7] === 0 && storage[15] === 1;
        A.MatrixUtils__accumulate(storage, x, y, true, isAffine);
        A.MatrixUtils__accumulate(storage, t1, y, false, isAffine);
        A.MatrixUtils__accumulate(storage, x, t2, false, isAffine);
        A.MatrixUtils__accumulate(storage, t1, t2, false, isAffine);
        t1 = $.$get$MatrixUtils__minMax();
        return new A.Rect(t1[0], t1[1], t1[2], t1[3]);
      }
      t1 = storage[0];
      wx = t1 * w;
      t2 = storage[4];
      hx = t2 * h;
      rx = t1 * x + t2 * y + storage[12];
      t2 = storage[1];
      wy = t2 * w;
      t1 = storage[5];
      hy = t1 * h;
      ry = t2 * x + t1 * y + storage[13];
      t1 = storage[3];
      if (t1 === 0 && storage[7] === 0 && storage[15] === 1) {
        left = rx + wx;
        if (wx < 0)
          right = rx;
        else {
          right = left;
          left = rx;
        }
        if (hx < 0)
          left += hx;
        else
          right += hx;
        $top = ry + wy;
        if (wy < 0)
          bottom = ry;
        else {
          bottom = $top;
          $top = ry;
        }
        if (hy < 0)
          $top += hy;
        else
          bottom += hy;
        return new A.Rect(left, $top, right, bottom);
      } else {
        t2 = storage[7];
        hw = t2 * h;
        rw = t1 * x + t2 * y + storage[15];
        ulx = rx / rw;
        uly = ry / rw;
        t2 = rx + wx;
        t1 = rw + t1 * w;
        urx = t2 / t1;
        t3 = ry + wy;
        ury = t3 / t1;
        t4 = rw + hw;
        llx = (rx + hx) / t4;
        lly = (ry + hy) / t4;
        t1 += hw;
        lrx = (t2 + hx) / t1;
        lry = (t3 + hy) / t1;
        return new A.Rect(A.MatrixUtils__min4(ulx, urx, llx, lrx), A.MatrixUtils__min4(uly, ury, lly, lry), A.MatrixUtils__max4(ulx, urx, llx, lrx), A.MatrixUtils__max4(uly, ury, lly, lry));
      }
    },
    MatrixUtils__min4(a, b, c, d) {
      var e = a < b ? a : b,
        f = c < d ? c : d;
      return e < f ? e : f;
    },
    MatrixUtils__max4(a, b, c, d) {
      var e = a > b ? a : b,
        f = c > d ? c : d;
      return e > f ? e : f;
    },
    HapticFeedback_selectionClick() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$HapticFeedback_selectionClick = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_kW8.invokeMethod$1$2("HapticFeedback.vibrate", "HapticFeedbackType.selectionClick", type$.void), $async$HapticFeedback_selectionClick);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$HapticFeedback_selectionClick, $async$completer);
    },
    SystemNavigator_pop() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$SystemNavigator_pop = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_kW8.invokeMethod$1$2("SystemNavigator.pop", null, type$.void), $async$SystemNavigator_pop);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$SystemNavigator_pop, $async$completer);
    },
    _correctSpellCheckResults(newText, resultsText, results) {
      var t1, spanPointer, offset, searchStart, currentSpan, t2, t3, currentSpanTextRegexp, foundIndex, t4, t5, currentSpanFoundExactlyWithOffset, adjustedSpanStart, adjustedSpanEnd,
        correctedSpellCheckResults = A._setArrayType([], type$.JSArray_SuggestionSpan);
      for (t1 = J.getInterceptor$asx(results), spanPointer = 0, offset = 0, searchStart = 0; spanPointer < t1.get$length(results);) {
        currentSpan = t1.$index(results, spanPointer);
        t2 = currentSpan.range;
        t3 = t2.start;
        t2 = t2.end;
        currentSpanTextRegexp = A.RegExp_RegExp("\\b" + A.quoteStringForRegExp(B.JSString_methods.substring$2(resultsText, t3, t2)) + "\\b", true, false);
        foundIndex = B.JSString_methods.indexOf$1(B.JSString_methods.substring$1(newText, searchStart), currentSpanTextRegexp);
        t4 = foundIndex + searchStart;
        t5 = t3 + offset;
        currentSpanFoundExactlyWithOffset = t5 === t4;
        if (t3 === t4 || currentSpanFoundExactlyWithOffset) {
          searchStart = t2 + 1 + offset;
          correctedSpellCheckResults.push(new A.SuggestionSpan(new A.TextRange(t5, t2 + offset), currentSpan.suggestions));
        } else if (foundIndex >= 0) {
          adjustedSpanStart = searchStart + foundIndex;
          adjustedSpanEnd = adjustedSpanStart + (t2 - t3);
          searchStart = adjustedSpanEnd + 1;
          offset = adjustedSpanStart - t3;
          correctedSpellCheckResults.push(new A.SuggestionSpan(new A.TextRange(adjustedSpanStart, adjustedSpanEnd), currentSpan.suggestions));
        }
        ++spanPointer;
      }
      return correctedSpellCheckResults;
    },
    buildTextSpanWithSpellCheckSuggestions(value, composingWithinCurrentTextRange, style, misspelledTextStyle, spellCheckResults) {
      var spellCheckResultsSpans = spellCheckResults.suggestionSpans,
        spellCheckResultsText = spellCheckResults.spellCheckedText,
        t1 = value.text;
      if (spellCheckResultsText !== t1)
        spellCheckResultsSpans = A._correctSpellCheckResults(t1, spellCheckResultsText, spellCheckResultsSpans);
      if (A.defaultTargetPlatform() === B.TargetPlatform_0)
        return A.TextSpan$(A._buildSubtreesWithComposingRegion(spellCheckResultsSpans, value, style, misspelledTextStyle, composingWithinCurrentTextRange), style, null);
      return A.TextSpan$(A._buildSubtreesWithoutComposingRegion(spellCheckResultsSpans, value, style, misspelledTextStyle, value.selection.baseOffset), style, null);
    },
    _buildSubtreesWithoutComposingRegion(spellCheckSuggestions, value, style, misspelledStyle, cursorIndex) {
      var t2, endIndex0, endIndex1, endIndex2,
        textSpanTreeChildren = A._setArrayType([], type$.JSArray_TextSpan),
        text = value.text,
        misspelledJointStyle = style.merge$1(misspelledStyle),
        textPointer = 0,
        endIndex = text.length,
        t1 = J.getInterceptor$asx(spellCheckSuggestions),
        currentSpanPointer = 0;
      while (true) {
        if (!(textPointer < endIndex && currentSpanPointer < t1.get$length(spellCheckSuggestions)))
          break;
        t2 = t1.$index(spellCheckSuggestions, currentSpanPointer).range;
        endIndex0 = t2.start;
        if (endIndex0 > textPointer) {
          endIndex0 = endIndex0 < endIndex ? endIndex0 : endIndex;
          textSpanTreeChildren.push(A.TextSpan$(null, style, B.JSString_methods.substring$2(text, textPointer, endIndex0)));
          textPointer = endIndex0;
        } else {
          endIndex1 = t2.end;
          endIndex2 = endIndex1 < endIndex ? endIndex1 : endIndex;
          t2 = endIndex0 <= cursorIndex && endIndex1 >= cursorIndex ? style : misspelledJointStyle;
          textSpanTreeChildren.push(A.TextSpan$(null, t2, B.JSString_methods.substring$2(text, endIndex0, endIndex2)));
          ++currentSpanPointer;
          textPointer = endIndex2;
        }
      }
      t1 = text.length;
      if (textPointer < t1)
        textSpanTreeChildren.push(A.TextSpan$(null, style, B.JSString_methods.substring$2(text, textPointer, t1)));
      return textSpanTreeChildren;
    },
    _buildSubtreesWithComposingRegion(spellCheckSuggestions, value, style, misspelledStyle, composingWithinCurrentTextRange) {
      var t5, endIndex0, endIndex1, _null = null,
        textSpanTreeChildren = A._setArrayType([], type$.JSArray_TextSpan),
        text = value.text,
        composingRegion = value.composing,
        composingTextStyle = style.merge$1(B.TextStyle_QOg),
        misspelledJointStyle = style.merge$1(misspelledStyle),
        textPointer = 0,
        t1 = composingRegion.start,
        endIndex = text.length,
        t2 = J.getInterceptor$asx(spellCheckSuggestions),
        t3 = composingRegion.end,
        t4 = !composingWithinCurrentTextRange,
        currentSpanPointer = 0;
      while (true) {
        if (!(textPointer < endIndex && currentSpanPointer < t2.get$length(spellCheckSuggestions)))
          break;
        t5 = t2.$index(spellCheckSuggestions, currentSpanPointer).range;
        endIndex0 = t5.start;
        if (endIndex0 > textPointer) {
          endIndex0 = endIndex0 < endIndex ? endIndex0 : endIndex;
          if (t1 >= textPointer && t3 <= endIndex0 && t4) {
            textSpanTreeChildren.push(A.TextSpan$(_null, style, B.JSString_methods.substring$2(text, textPointer, t1)));
            textSpanTreeChildren.push(A.TextSpan$(_null, composingTextStyle, B.JSString_methods.substring$2(text, t1, t3)));
            textSpanTreeChildren.push(A.TextSpan$(_null, style, B.JSString_methods.substring$2(text, t3, endIndex0)));
          } else
            textSpanTreeChildren.push(A.TextSpan$(_null, style, B.JSString_methods.substring$2(text, textPointer, endIndex0)));
          textPointer = endIndex0;
        } else {
          endIndex1 = t5.end;
          endIndex1 = endIndex1 < endIndex ? endIndex1 : endIndex;
          t5 = textPointer >= t1 && endIndex1 <= t3 && t4 ? composingTextStyle : misspelledJointStyle;
          textSpanTreeChildren.push(A.TextSpan$(_null, t5, B.JSString_methods.substring$2(text, endIndex0, endIndex1)));
          ++currentSpanPointer;
          textPointer = endIndex1;
        }
      }
      t1 = text.length;
      if (textPointer < t1)
        if (textPointer < composingRegion.start && !composingWithinCurrentTextRange) {
          A._addComposingRegionTextSpans(textSpanTreeChildren, text, textPointer, composingRegion, style, composingTextStyle);
          t2 = composingRegion.end;
          if (t2 !== t1)
            textSpanTreeChildren.push(A.TextSpan$(_null, style, B.JSString_methods.substring$2(text, t2, t1)));
        } else
          textSpanTreeChildren.push(A.TextSpan$(_null, style, B.JSString_methods.substring$2(text, textPointer, t1)));
      return textSpanTreeChildren;
    },
    _addComposingRegionTextSpans(treeChildren, text, start, composingRegion, style, composingTextStyle) {
      var t1 = composingRegion.start;
      treeChildren.push(A.TextSpan$(null, style, B.JSString_methods.substring$2(text, start, t1)));
      treeChildren.push(A.TextSpan$(null, composingTextStyle, B.JSString_methods.substring$2(text, t1, composingRegion.end)));
    },
    HiveX_initFlutter(_this) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$HiveX_initFlutter = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.WidgetsBinding__instance == null)
                A.WidgetsFlutterBinding$();
              $.WidgetsBinding__instance.toString;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$HiveX_initFlutter, $async$completer);
    },
    DefaultFirebaseOptions_currentPlatform() {
      return B.FirebaseOptions_Oi3;
    },
    main0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$main0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.WidgetsBinding__instance == null)
                A.WidgetsFlutterBinding$();
              t1 = $.WidgetsBinding__instance;
              t1.toString;
              $.FlutterNativeSplash__widgetsBinding = t1;
              ++t1.RendererBinding__firstFrameDeferredCount;
              $async$goto = 2;
              return A._asyncAwait(A.Future_wait(A._setArrayType([A.Firebase_initializeApp(A.DefaultFirebaseOptions_currentPlatform()), A.HiveX_initFlutter($.$get$Hive()), new A.FMTCObjectBoxBackend().initialise$0()], type$.JSArray_Future_void), false, type$.void), $async$main0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main0, $async$completer);
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.AlarmClock.prototype = {
    set$datetime(value) {
      var now, _this = this;
      if (J.$eq$(value, _this._datetime))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      if (value.isBefore$1(now)) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this._timer = A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire());
      else if (_this._datetime.isAfter$1(value)) {
        _this._cancelTimer$0();
        _this._timer = A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire());
      }
      _this._datetime = value;
    },
    _cancelTimer$0() {
      var t1 = this._timer;
      if (t1 != null)
        t1.cancel$0(0);
      this._timer = null;
    },
    _timerDidFire$0() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime;
      t1.toString;
      if (!now.isBefore$1(t1)) {
        _this._timer = null;
        t1 = _this.callback;
        if (t1 != null)
          t1.call$0();
      } else
        _this._timer = A.Timer_Timer(_this._datetime.difference$1(now), _this.get$_timerDidFire());
    }
  };
  A.AppBootstrap.prototype = {
    autoStart$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$autoStart$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self._initializeEngine.call$0(), $async$autoStart$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait($async$self._runApp.call$0(), $async$autoStart$0);
            case 3:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$autoStart$0, $async$completer);
    },
    prepareEngineInitializer$0() {
      return A.FlutterEngineInitializer__staticInteropFactoryStub(new A.AppBootstrap_prepareEngineInitializer_closure(this), new A.AppBootstrap_prepareEngineInitializer_closure0(this));
    },
    _prepareAppRunner$0() {
      return A.FlutterAppRunner__staticInteropFactoryStub(new A.AppBootstrap__prepareAppRunner_closure(this));
    },
    _prepareFlutterApp$0() {
      return A.FlutterApp__staticInteropFactoryStub(new A.AppBootstrap__prepareFlutterApp_closure(this), new A.AppBootstrap__prepareFlutterApp_closure0(this));
    }
  };
  A.AppBootstrap_prepareEngineInitializer_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1.autoStart$0(), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareFlutterApp$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 198
  };
  A.AppBootstrap_prepareEngineInitializer_closure0.prototype = {
    call$1(configuration) {
      return this.$call$body$AppBootstrap_prepareEngineInitializer_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap_prepareEngineInitializer_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1._initializeEngine.call$1(configuration), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareAppRunner$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 67
  };
  A.AppBootstrap__prepareAppRunner_closure.prototype = {
    call$1(params) {
      return this.$call$body$AppBootstrap__prepareAppRunner_closure(params);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap__prepareAppRunner_closure(params) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1._runApp.call$0(), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareFlutterApp$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 67
  };
  A.AppBootstrap__prepareFlutterApp_closure.prototype = {
    call$1(options) {
      var t4, t5, view,
        t1 = $.$get$EnginePlatformDispatcher__instance().get$viewManager(),
        t2 = t1._dispatcher,
        t3 = options.hostElement;
      t3.toString;
      t4 = options.viewConstraints;
      t5 = $._nextViewId;
      $._nextViewId = t5 + 1;
      view = new A._EngineFlutterViewImpl(t5, t2, A.EmbeddingStrategy_EmbeddingStrategy$create(t3), t4, B.ViewPadding_0_0_0_0, A.DimensionsProvider_DimensionsProvider$create(t3));
      view.EngineFlutterView$_$4$viewConstraints(t5, t2, t3, t4);
      t1.registerView$2$jsViewOptions(view, options);
      return t5;
    },
    $signature: 140
  };
  A.AppBootstrap__prepareFlutterApp_closure0.prototype = {
    call$1(viewId) {
      return $.$get$EnginePlatformDispatcher__instance().get$viewManager().disposeAndUnregisterView$1(viewId);
    },
    $signature: 43
  };
  A.CkCanvas.prototype = {
    drawPicture$1(picture) {
      var t1 = picture.__CkPicture__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject;
      t1.toString;
      this.skCanvas.drawPicture(t1);
    }
  };
  A._canvasKitJsUrls_closure.prototype = {
    call$1(filename) {
      var t1 = A.configuration()._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.canvasKitBaseUrl;
        if (t1 == null)
          t1 = null;
      }
      return (t1 == null ? "https://www.gstatic.com/flutter-canvaskit/db49896cf25ceabc44096d5f088d86414e05a7aa/" : t1) + filename;
    },
    $signature: 37
  };
  A.DisplayCanvasFactory.prototype = {
    get$baseCanvas() {
      var result, _this = this,
        value = _this.__DisplayCanvasFactory_baseCanvas_FI;
      if (value === $) {
        result = _this.createCanvas.call$0();
        J.initialize$0$z(result);
        _this.__DisplayCanvasFactory_baseCanvas_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__DisplayCanvasFactory_baseCanvas_FI = result;
        value = result;
      }
      return value;
    },
    getCanvas$0() {
      var canvas,
        t1 = this._cache,
        t2 = this._liveCanvases;
      if (t1.length !== 0) {
        canvas = t1.pop();
        t2.push(canvas);
        return canvas;
      } else {
        canvas = this.createCanvas.call$0();
        J.initialize$0$z(canvas);
        t2.push(canvas);
        return canvas;
      }
    },
    dispose$0() {
      var t1, t2, _i, t3;
      for (t1 = this._cache, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].dispose$0();
      for (t2 = this._liveCanvases, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].dispose$0();
      this.get$baseCanvas().dispose$0();
      B.JSArray_methods.clear$0(t2);
      B.JSArray_methods.clear$0(t1);
    }
  };
  A.HtmlViewEmbedder.prototype = {
    getOverlayCanvases$0() {
      var t1 = this._context.pictureRecordersCreatedDuringPreroll;
      return new A.MappedListIterable(t1, new A.HtmlViewEmbedder_getOverlayCanvases_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,CkCanvas>"));
    },
    _cleanUpClipDefs$1(viewId) {
      var t2, nodesToRemove, t3, t4, t5, _i,
        t1 = this._svgClipDefs;
      if (t1.containsKey$1(0, viewId)) {
        t2 = this._svgPathDefs.querySelector("#sk_path_defs");
        t2.toString;
        nodesToRemove = A._setArrayType([], type$.JSArray_JavaScriptObject);
        t3 = t1.$index(0, viewId);
        t3.toString;
        for (t4 = type$._DomListWrapper_JavaScriptObject, t4 = A.CastIterable_CastIterable(new A._DomListWrapper(t2.children, t4), t4._eval$1("Iterable.E"), type$.JavaScriptObject), t2 = J.get$iterator$ax(t4._source), t4 = A._instanceType(t4)._rest[1]; t2.moveNext$0();) {
          t5 = t4._as(t2.get$current(t2));
          if (t3.contains$1(0, t5.id))
            nodesToRemove.push(t5);
        }
        for (t2 = nodesToRemove.length, _i = 0; _i < nodesToRemove.length; nodesToRemove.length === t2 || (0, A.throwConcurrentModificationError)(nodesToRemove), ++_i)
          nodesToRemove[_i].remove();
        t1.$index(0, viewId).clear$0(0);
      }
    },
    submitFrame$1(_, basePicture) {
      return this.submitFrame$body$HtmlViewEmbedder(0, basePicture);
    },
    submitFrame$body$HtmlViewEmbedder(_, basePicture) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, _i, rendering, t3, t4, i, renderCanvases, renderCanvas, recorder, unusedViews, viewId, pictures;
      var $async$submitFrame$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pictures = A._setArrayType([basePicture], type$.JSArray_CkPicture);
              for (t1 = $async$self._context.pictureRecorders, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
                pictures.push(t1[_i].endRecording$0());
              t1 = $async$self._compositionOrder;
              rendering = $async$self._modifyRenderingForMaxCanvases$1(A.createOptimizedRendering(pictures, t1, $async$self._currentCompositionParams));
              $async$self._updateDomForNewRendering$1(rendering);
              if (rendering.equalsForRendering$1($async$self._activeRendering))
                for (t2 = rendering.entities, t3 = type$.WhereTypeIterable_RenderingRenderCanvas, t4 = t3._eval$1("Iterable.E"), i = 0; i < A.List_List$of(new A.WhereTypeIterable(t2, t3), true, t4).length; ++i) {
                  A.List_List$of(new A.WhereTypeIterable(t2, t3), true, t4)[i].displayCanvas = A.List_List$of(new A.WhereTypeIterable($async$self._activeRendering.entities, t3), true, t4)[i].displayCanvas;
                  A.List_List$of(new A.WhereTypeIterable($async$self._activeRendering.entities, t3), true, t4)[i].displayCanvas = null;
                }
              $async$self._activeRendering = rendering;
              t2 = type$.WhereTypeIterable_RenderingRenderCanvas;
              renderCanvases = A.List_List$of(new A.WhereTypeIterable(rendering.entities, t2), true, t2._eval$1("Iterable.E"));
              t2 = renderCanvases.length, t3 = $async$self.rasterizer, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              renderCanvas = renderCanvases[_i];
              t4 = renderCanvas.displayCanvas;
              t4.toString;
              $async$goto = 6;
              return A._asyncAwait(t3.rasterizeToCanvas$2(t4, renderCanvas.pictures), $async$submitFrame$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              for (t2 = $async$self._context.pictureRecordersCreatedDuringPreroll, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
                recorder = t2[_i];
                if (recorder._skRecorder != null)
                  recorder.endRecording$0();
              }
              t2 = type$.JSArray_CkPictureRecorder;
              $async$self._context = new A.EmbedderFrameContext(A._setArrayType([], t2), A._setArrayType([], t2));
              t2 = $async$self._activeCompositionOrder;
              if (A.listEquals(t1, t2)) {
                B.JSArray_methods.clear$0(t1);
                // goto return
                $async$goto = 1;
                break;
              }
              unusedViews = A.LinkedHashSet_LinkedHashSet$from(t2, type$.int);
              B.JSArray_methods.clear$0(t2);
              for (i = 0; i < t1.length; ++i) {
                viewId = t1[i];
                t2.push(viewId);
                unusedViews.remove$1(0, viewId);
              }
              B.JSArray_methods.clear$0(t1);
              unusedViews.forEach$1(0, $async$self.get$disposeView());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$submitFrame$1, $async$completer);
    },
    disposeView$1(viewId) {
      var _this = this,
        clipChain = _this._viewClipChains.remove$1(0, viewId);
      if (clipChain != null)
        clipChain._root.remove();
      _this._currentCompositionParams.remove$1(0, viewId);
      _this._viewsToRecomposite.remove$1(0, viewId);
      _this._cleanUpClipDefs$1(viewId);
      _this._svgClipDefs.remove$1(0, viewId);
    },
    _modifyRenderingForMaxCanvases$1(rendering) {
      var numCanvasesToDelete, picturesForLastCanvas, modifiedEntities, i, sawLastCanvas, entity,
        result = new A.Rendering(A._setArrayType([], type$.JSArray_RenderingEntity)),
        t1 = rendering.entities,
        t2 = type$.WhereTypeIterable_RenderingRenderCanvas,
        numCanvases = A.List_List$of(new A.WhereTypeIterable(t1, t2), true, t2._eval$1("Iterable.E")).length;
      if (numCanvases <= A.configuration().get$canvasKitMaximumSurfaces())
        return rendering;
      numCanvasesToDelete = numCanvases - A.configuration().get$canvasKitMaximumSurfaces();
      picturesForLastCanvas = A._setArrayType([], type$.JSArray_CkPicture);
      modifiedEntities = A.List_List$from(t1, true, type$.RenderingEntity);
      for (i = t1.length - 1, sawLastCanvas = false; i >= 0; --i) {
        entity = modifiedEntities[i];
        if (entity instanceof A.RenderingRenderCanvas) {
          if (!sawLastCanvas) {
            sawLastCanvas = true;
            continue;
          }
          B.JSArray_methods.removeAt$1(modifiedEntities, i);
          B.JSArray_methods.insertAll$2(picturesForLastCanvas, 0, entity.pictures);
          --numCanvasesToDelete;
          if (numCanvasesToDelete === 0)
            break;
        }
      }
      sawLastCanvas = A.configuration().get$canvasKitMaximumSurfaces() === 1;
      for (i = modifiedEntities.length - 1; i > 0; --i) {
        entity = modifiedEntities[i];
        if (entity instanceof A.RenderingRenderCanvas) {
          if (sawLastCanvas) {
            B.JSArray_methods.addAll$1(entity.pictures, picturesForLastCanvas);
            break;
          }
          sawLastCanvas = true;
        }
      }
      B.JSArray_methods.addAll$1(result.entities, modifiedEntities);
      return result;
    },
    _updateDomForNewRendering$1(rendering) {
      var indexMap, t1, existingIndexMap, staticElements, i, t2, entity, t3, t4, updateRenderCanvasWithDisplay, staticElementIndex, nextRenderingIndex, staticElementIndexInActiveRendering, staticDomElement, nextEntity, _this = this;
      if (rendering.equalsForRendering$1(_this._activeRendering))
        return;
      indexMap = _this._getIndexMapFromPreviousRendering$2(_this._activeRendering, rendering);
      t1 = A._arrayInstanceType(indexMap)._eval$1("WhereIterable<1>");
      existingIndexMap = A.List_List$of(new A.WhereIterable(indexMap, new A.HtmlViewEmbedder__updateDomForNewRendering_closure(), t1), true, t1._eval$1("Iterable.E"));
      staticElements = A.longestIncreasingSubsequence(existingIndexMap);
      for (t1 = staticElements.length, i = 0; i < t1; ++i)
        staticElements[i] = existingIndexMap[staticElements[i]];
      for (t2 = _this.rasterizer, i = 0; i < _this._activeRendering.entities.length; ++i) {
        if (B.JSArray_methods.contains$1(indexMap, i))
          continue;
        entity = _this._activeRendering.entities[i];
        if (entity instanceof A.RenderingPlatformView)
          _this.disposeView$1(entity.viewId);
        else if (entity instanceof A.RenderingRenderCanvas) {
          t3 = entity.displayCanvas;
          t3.toString;
          t4 = t2.get$displayFactory();
          t3.get$hostElement().remove();
          B.JSArray_methods.remove$1(t4._liveCanvases, t3);
          t4._cache.push(t3);
          entity.displayCanvas = null;
        }
      }
      updateRenderCanvasWithDisplay = new A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay(_this, indexMap);
      for (t2 = rendering.entities, t3 = _this.sceneHost, staticElementIndex = 0, nextRenderingIndex = 0; staticElementIndex < t1;) {
        staticElementIndexInActiveRendering = staticElements[staticElementIndex];
        staticDomElement = _this._getElement$1(_this._activeRendering.entities[staticElementIndexInActiveRendering]);
        for (; indexMap[nextRenderingIndex] !== staticElementIndexInActiveRendering;) {
          nextEntity = t2[nextRenderingIndex];
          if (nextEntity instanceof A.RenderingRenderCanvas)
            updateRenderCanvasWithDisplay.call$2(nextEntity, nextRenderingIndex);
          t3.insertBefore(_this._getElement$1(nextEntity), staticDomElement);
          ++nextRenderingIndex;
        }
        t4 = t2[nextRenderingIndex];
        if (t4 instanceof A.RenderingRenderCanvas)
          updateRenderCanvasWithDisplay.call$2(t4, nextRenderingIndex);
        ++nextRenderingIndex;
        ++staticElementIndex;
      }
      for (; nextRenderingIndex < t2.length;) {
        nextEntity = t2[nextRenderingIndex];
        if (nextEntity instanceof A.RenderingRenderCanvas)
          updateRenderCanvasWithDisplay.call$2(nextEntity, nextRenderingIndex);
        t3.append(_this._getElement$1(nextEntity));
        ++nextRenderingIndex;
      }
    },
    _getElement$1(entity) {
      if (entity instanceof A.RenderingRenderCanvas)
        return entity.displayCanvas.get$hostElement();
      if (entity instanceof A.RenderingPlatformView)
        return this._viewClipChains.$index(0, entity.viewId)._root;
    },
    _getIndexMapFromPreviousRendering$2(previous, next) {
      var foundForIndex, oldIndex,
        result = A._setArrayType([], type$.JSArray_int),
        t1 = previous.entities,
        t2 = next.entities,
        maxUnchangedLength = Math.min(t1.length, t2.length),
        alreadyClaimedCanvases = A.LinkedHashSet_LinkedHashSet$_empty(type$.int),
        index = 0;
      while (true) {
        if (!(index < maxUnchangedLength && t1[index].equalsForRendering$1(t2[index])))
          break;
        result.push(index);
        if (t1[index] instanceof A.RenderingRenderCanvas)
          alreadyClaimedCanvases.add$1(0, index);
        ++index;
      }
      for (; index < t2.length;) {
        oldIndex = 0;
        while (true) {
          if (!(oldIndex < t1.length)) {
            foundForIndex = false;
            break;
          }
          if (t1[oldIndex].equalsForRendering$1(t2[index]) && !alreadyClaimedCanvases.contains$1(0, oldIndex)) {
            result.push(oldIndex);
            if (t1[oldIndex] instanceof A.RenderingRenderCanvas)
              alreadyClaimedCanvases.add$1(0, oldIndex);
            foundForIndex = true;
            break;
          }
          ++oldIndex;
        }
        if (!foundForIndex)
          result.push(-1);
        ++index;
      }
      return result;
    },
    debugCleanupSvgClipPaths$0() {
      var $parent, t2, child,
        t1 = this._svgPathDefs;
      if (t1 == null)
        $parent = null;
      else {
        t2 = type$._DomListWrapper_JavaScriptObject;
        t2 = A.CastIterable_CastIterable(new A._DomListWrapper(t1.children, t2), t2._eval$1("Iterable.E"), type$.JavaScriptObject);
        $parent = A._instanceType(t2)._rest[1]._as(J.get$single$ax(t2._source));
      }
      if ($parent != null)
        for (child = $parent.lastChild; child != null; child = $parent.lastChild)
          $parent.removeChild(child);
      this._svgClipDefs.clear$0(0);
    },
    dispose$0() {
      var _this = this,
        t1 = _this._viewClipChains,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      B.JSArray_methods.forEach$1(A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), true, t2._eval$1("Iterable.E")), _this.get$disposeView());
      t2 = type$.JSArray_CkPictureRecorder;
      _this._context = new A.EmbedderFrameContext(A._setArrayType([], t2), A._setArrayType([], t2));
      t2 = _this._currentCompositionParams;
      t2.clear$0(0);
      _this.debugCleanupSvgClipPaths$0();
      t2.clear$0(0);
      t1.clear$0(0);
      _this._viewsToRecomposite.clear$0(0);
      B.JSArray_methods.clear$0(_this._activeCompositionOrder);
      B.JSArray_methods.clear$0(_this._compositionOrder);
      _this._activeRendering = new A.Rendering(A._setArrayType([], type$.JSArray_RenderingEntity));
    }
  };
  A.HtmlViewEmbedder_getOverlayCanvases_closure.prototype = {
    call$1(r) {
      var t1 = r._recordingCanvas;
      t1.toString;
      return t1;
    },
    $signature: 197
  };
  A.HtmlViewEmbedder__updateDomForNewRendering_closure.prototype = {
    call$1(index) {
      return index !== -1;
    },
    $signature: 51
  };
  A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay.prototype = {
    call$2(renderCanvas, index) {
      var t1 = this.indexMap[index],
        t2 = this.$this;
      if (t1 !== -1) {
        t1 = type$.RenderingRenderCanvas._as(t2._activeRendering.entities[t1]);
        renderCanvas.displayCanvas = t1.displayCanvas;
        t1.displayCanvas = null;
      } else
        renderCanvas.displayCanvas = t2.rasterizer.get$displayFactory().getCanvas$0();
    },
    $signature: 165
  };
  A.MutatorsStack.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (other === this)
        return true;
      return other instanceof A.MutatorsStack && A.listEquals(other._mutators, this._mutators);
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._mutators);
    },
    get$iterator(_) {
      var t1 = this._mutators,
        t2 = A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>");
      t1 = new A.ReversedListIterable(t1, t2);
      return new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>"));
    }
  };
  A.EmbedderFrameContext.prototype = {};
  A.SkiaFontCollection.prototype = {
    get$fontFallbackManager() {
      var t1,
        value = this.__SkiaFontCollection_fontFallbackManager_AI;
      if (value === $) {
        t1 = A.configuration()._configuration;
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1.useColorEmoji;
          if (t1 == null)
            t1 = null;
        }
        t1 = t1 === true;
        value = this.__SkiaFontCollection_fontFallbackManager_AI = A.FontFallbackManager$_(new A.SkiaFallbackRegistry(this), A._setArrayType([A.NotoFont$("Noto Sans", "notosans/v36/o-0mIpQlx3QUlC5A4PNB6Ryti20_6n1iPHjcz6L1SoM-jCpoiyD9A99d41P6zHtY.ttf", true), A.NotoFont$("Noto Color Emoji", "notocoloremoji/v30/Yq6P-KqIXTD0t4D9z1ESnKM3-HpFab5s79iz64w.ttf", t1), A.NotoFont$("Noto Emoji", "notoemoji/v47/bMrnmSyK7YY-MEu6aWjPDs-ar6uWaGWuob-r0jwvS-FGJCMY.ttf", !t1), A.NotoFont$("Noto Music", "notomusic/v20/pe0rMIiSN5pO63htf1sxIteQB9Zra1U.ttf", true), A.NotoFont$("Noto Sans Symbols", "notosanssymbols/v43/rP2up3q65FkAtHfwd-eIS2brbDN6gxP34F9jRRCe4W3gfQ8gavVFRkzrbQ.ttf", true), A.NotoFont$("Noto Sans Symbols 2", "notosanssymbols2/v23/I_uyMoGduATTei9eI8daxVHDyfisHr71ypPqfX71-AI.ttf", true), A.NotoFont$("Noto Sans Adlam", "notosansadlam/v22/neIczCCpqp0s5pPusPamd81eMfjPonvqdbYxxpgufnv0TGnBZLwhuvk.ttf", true), A.NotoFont$("Noto Sans Anatolian Hieroglyphs", "notosansanatolianhieroglyphs/v16/ijw9s4roRME5LLRxjsRb8A0gKPSWq4BbDmHHu6j2pEtUJzZWXybIymc5QYo.ttf", true), A.NotoFont$("Noto Sans Arabic", "notosansarabic/v18/nwpxtLGrOAZMl5nJ_wfgRg3DrWFZWsnVBJ_sS6tlqHHFlhQ5l3sQWIHPqzCfyGyvu3CBFQLaig.ttf", true), A.NotoFont$("Noto Sans Armenian", "notosansarmenian/v43/ZgN0jOZKPa7CHqq0h37c7ReDUubm2SEdFXp7ig73qtTY5idb74R9UdM3y2nZLorxb60iYy6zF3Eg.ttf", true), A.NotoFont$("Noto Sans Avestan", "notosansavestan/v21/bWti7ejKfBziStx7lIzKOLQZKhIJkyu9SASLji8U.ttf", true), A.NotoFont$("Noto Sans Balinese", "notosansbalinese/v24/NaPwcYvSBuhTirw6IaFn6UrRDaqje-lpbbRtYf-Fwu2Ov7fdhE5Vd222PPY.ttf", true), A.NotoFont$("Noto Sans Bamum", "notosansbamum/v27/uk-0EGK3o6EruUbnwovcbBTkkklK_Ya_PBHfNGTPEddO-_gLykxEkxA.ttf", true), A.NotoFont$("Noto Sans Bassa Vah", "notosansbassavah/v17/PN_bRee-r3f7LnqsD5sax12gjZn7mBpL5YwUpA2MBdcFn4MaAc6p34gH-GD7.ttf", true), A.NotoFont$("Noto Sans Batak", "notosansbatak/v20/gok2H6TwAEdtF9N8-mdTCQvT-Zdgo4_PHuk74A.ttf", true), A.NotoFont$("Noto Sans Bengali", "notosansbengali/v20/Cn-SJsCGWQxOjaGwMQ6fIiMywrNJIky6nvd8BjzVMvJx2mcSPVFpVEqE-6KmsolLudCk8izI0lc.ttf", true), A.NotoFont$("Noto Sans Bhaiksuki", "notosansbhaiksuki/v17/UcC63EosKniBH4iELXATsSBWdvUHXxhj8rLUdU4wh9U.ttf", true), A.NotoFont$("Noto Sans Brahmi", "notosansbrahmi/v19/vEFK2-VODB8RrNDvZSUmQQIIByV18tK1W77HtMo.ttf", true), A.NotoFont$("Noto Sans Buginese", "notosansbuginese/v18/esDM30ldNv-KYGGJpKGk18phe_7Da6_gtfuEXLmNtw.ttf", true), A.NotoFont$("Noto Sans Buhid", "notosansbuhid/v22/Dxxy8jiXMW75w3OmoDXVWJD7YwzAe6tgnaFoGA.ttf", true), A.NotoFont$("Noto Sans Canadian Aboriginal", "notosanscanadianaboriginal/v26/4C_TLjTuEqPj-8J01CwaGkiZ9os0iGVkezM1mUT-j_Lmlzda6uH_nnX1bzigWLn_yAsg0q0uhQ.ttf", true), A.NotoFont$("Noto Sans Carian", "notosanscarian/v16/LDIpaoiONgYwA9Yc6f0gUILeMIOgs7ob9yGLmfI.ttf", true), A.NotoFont$("Noto Sans Caucasian Albanian", "notosanscaucasianalbanian/v18/nKKA-HM_FYFRJvXzVXaANsU0VzsAc46QGOkWytlTs-TXrYDmoVmRSZo.ttf", true), A.NotoFont$("Noto Sans Chakma", "notosanschakma/v17/Y4GQYbJ8VTEp4t3MKJSMjg5OIzhi4JjTQhYBeYo.ttf", true), A.NotoFont$("Noto Sans Cham", "notosanscham/v30/pe06MIySN5pO62Z5YkFyQb_bbuRhe6D4yip43qfcERwcv7GykboaLg.ttf", true), A.NotoFont$("Noto Sans Cherokee", "notosanscherokee/v20/KFOPCm6Yu8uF-29fiz9vQF9YWK6Z8O10cHNA0cSkZCHYWi5PDkm5rAffjl0.ttf", true), A.NotoFont$("Noto Sans Coptic", "notosanscoptic/v21/iJWfBWmUZi_OHPqn4wq6kgqumOEd78u_VG0xR4Y.ttf", true), A.NotoFont$("Noto Sans Cuneiform", "notosanscuneiform/v17/bMrrmTWK7YY-MF22aHGGd7H8PhJtvBDWgb9JlRQueeQ.ttf", true), A.NotoFont$("Noto Sans Cypriot", "notosanscypriot/v19/8AtzGta9PYqQDjyp79a6f8Cj-3a3cxIsK5MPpahF.ttf", true), A.NotoFont$("Noto Sans Deseret", "notosansdeseret/v17/MwQsbgPp1eKH6QsAVuFb9AZM6MMr2Vq9ZnJSZtQG.ttf", true), A.NotoFont$("Noto Sans Devanagari", "notosansdevanagari/v25/TuGoUUFzXI5FBtUq5a8bjKYTZjtRU6Sgv3NaV_SNmI0b8QQCQmHn6B2OHjbL_08AlXQly-AzoFoW4Ow.ttf", true), A.NotoFont$("Noto Sans Duployan", "notosansduployan/v17/gokzH7nwAEdtF9N8-mdTDx_X9JM5wsvrFsIn6WYDvA.ttf", true), A.NotoFont$("Noto Sans Egyptian Hieroglyphs", "notosansegyptianhieroglyphs/v29/vEF42-tODB8RrNDvZSUmRhcQHzx1s7y_F9-j3qSzEcbEYindSVK8xRg7iw.ttf", true), A.NotoFont$("Noto Sans Elbasan", "notosanselbasan/v16/-F6rfiZqLzI2JPCgQBnw400qp1trvHdlre4dFcFh.ttf", true), A.NotoFont$("Noto Sans Elymaic", "notosanselymaic/v17/UqyKK9YTJW5liNMhTMqe9vUFP65ZD4AjWOT0zi2V.ttf", true), A.NotoFont$("Noto Sans Ethiopic", "notosansethiopic/v47/7cHPv50vjIepfJVOZZgcpQ5B9FBTH9KGNfhSTgtoow1KVnIvyBoMSzUMacb-T35OK6DjwmfeaY9u.ttf", true), A.NotoFont$("Noto Sans Georgian", "notosansgeorgian/v44/PlIaFke5O6RzLfvNNVSitxkr76PRHBC4Ytyq-Gof7PUs4S7zWn-8YDB09HFNdpvnzFj-f5WK0OQV.ttf", true), A.NotoFont$("Noto Sans Glagolitic", "notosansglagolitic/v18/1q2ZY4-BBFBst88SU_tOj4J-4yuNF_HI4ERK4Amu7nM1.ttf", true), A.NotoFont$("Noto Sans Gothic", "notosansgothic/v16/TuGKUUVzXI5FBtUq5a8bj6wRbzxTFMX40kFQRx0.ttf", true), A.NotoFont$("Noto Sans Grantha", "notosansgrantha/v17/3y976akwcCjmsU8NDyrKo3IQfQ4o-r8cFeulHc6N.ttf", true), A.NotoFont$("Noto Sans Gujarati", "notosansgujarati/v25/wlpWgx_HC1ti5ViekvcxnhMlCVo3f5pv17ivlzsUB14gg1TMR2Gw4VceEl7MA_ypFwPM_OdiEH0s.ttf", true), A.NotoFont$("Noto Sans Gunjala Gondi", "notosansgunjalagondi/v19/bWtX7e7KfBziStx7lIzKPrcSMwcEnCv6DW7n5g0ef3PLtymzNxYL4YDE4J4vCTxEJQ.ttf", true), A.NotoFont$("Noto Sans Gurmukhi", "notosansgurmukhi/v26/w8g9H3EvQP81sInb43inmyN9zZ7hb7ATbSWo4q8dJ74a3cVrYFQ_bogT0-gPeG1OenbxZ_trdp7h.ttf", true), A.NotoFont$("Noto Sans HK", "notosanshk/v31/nKKF-GM_FYFRJvXzVXaAPe97P1KHynJFP716qHB--oWTiYjNvVA.ttf", true), A.NotoFont$("Noto Sans Hanunoo", "notosanshanunoo/v21/f0Xs0fCv8dxkDWlZSoXOj6CphMloFsEsEpgL_ix2.ttf", true), A.NotoFont$("Noto Sans Hatran", "notosanshatran/v16/A2BBn4Ne0RgnVF3Lnko-0sOBIfL_mM83r1nwzDs.ttf", true), A.NotoFont$("Noto Sans Hebrew", "notosanshebrew/v43/or3HQ7v33eiDljA1IufXTtVf7V6RvEEdhQlk0LlGxCyaeNKYZC0sqk3xXGiXd4qtoiJltutR2g.ttf", true), A.NotoFont$("Noto Sans Imperial Aramaic", "notosansimperialaramaic/v16/a8IMNpjwKmHXpgXbMIsbTc_kvks91LlLetBr5itQrtdml3YfPNno.ttf", true), A.NotoFont$("Noto Sans Indic Siyaq Numbers", "notosansindicsiyaqnumbers/v16/6xK5dTJFKcWIu4bpRBjRZRpsIYHabOeZ8UZLubTzpXNHKx2WPOpVd5Iu.ttf", true), A.NotoFont$("Noto Sans Inscriptional Pahlavi", "notosansinscriptionalpahlavi/v16/ll8UK3GaVDuxR-TEqFPIbsR79Xxz9WEKbwsjpz7VklYlC7FCVtqVOAYK0QA.ttf", true), A.NotoFont$("Noto Sans Inscriptional Parthian", "notosansinscriptionalparthian/v16/k3k7o-IMPvpLmixcA63oYi-yStDkgXuXncL7dzfW3P4TAJ2yklBJ2jNkLlLr.ttf", true), A.NotoFont$("Noto Sans JP", "notosansjp/v52/-F6jfjtqLzI2JPCgQBnw7HFyzSD-AsregP8VFBEj75vY0rw-oME.ttf", true), A.NotoFont$("Noto Sans Javanese", "notosansjavanese/v23/2V01KJkDAIA6Hp4zoSScDjV0Y-eoHAHT-Z3MngEefiidxJnkFFliZYWj4O8.ttf", true), A.NotoFont$("Noto Sans KR", "notosanskr/v36/PbyxFmXiEBPT4ITbgNA5Cgms3VYcOA-vvnIzzuoyeLTq8H4hfeE.ttf", true), A.NotoFont$("Noto Sans Kaithi", "notosanskaithi/v21/buEtppS9f8_vkXadMBJJu0tWjLwjQi0KdoZIKlo.ttf", true), A.NotoFont$("Noto Sans Kannada", "notosanskannada/v27/8vIs7xs32H97qzQKnzfeXycxXZyUmySvZWItmf1fe6TVmgop9ndpS-BqHEyGrDvNzSIMLsPKrkY.ttf", true), A.NotoFont$("Noto Sans Kayah Li", "notosanskayahli/v21/B50nF61OpWTRcGrhOVJJwOMXdca6Yecki3E06x2jVTX3WCc3CZH4EXLuKVM.ttf", true), A.NotoFont$("Noto Sans Kharoshthi", "notosanskharoshthi/v16/Fh4qPiLjKS30-P4-pGMMXCCfvkc5Vd7KE5z4rFyx5mR1.ttf", true), A.NotoFont$("Noto Sans Khmer", "notosanskhmer/v24/ijw3s5roRME5LLRxjsRb-gssOenAyendxrgV2c-Zw-9vbVUti_Z_dWgtWYuNAJz4kAbrddiA.ttf", true), A.NotoFont$("Noto Sans Khojki", "notosanskhojki/v19/-nFnOHM29Oofr2wohFbTuPPKVWpmK_d709jy92k.ttf", true), A.NotoFont$("Noto Sans Khudawadi", "notosanskhudawadi/v21/fdNi9t6ZsWBZ2k5ltHN73zZ5hc8HANlHIjRnVVXz9MY.ttf", true), A.NotoFont$("Noto Sans Lao", "notosanslao/v30/bx6lNx2Ol_ixgdYWLm9BwxM3NW6BOkuf763Clj73CiQ_J1Djx9pidOt4ccbdf5MK3riB2w.ttf", true), A.NotoFont$("Noto Sans Lepcha", "notosanslepcha/v19/0QI7MWlB_JWgA166SKhu05TekNS32AJstqBXgd4.ttf", true), A.NotoFont$("Noto Sans Limbu", "notosanslimbu/v22/3JnlSDv90Gmq2mrzckOBBRRoNJVj0MF3OHRDnA.ttf", true), A.NotoFont$("Noto Sans Linear A", "notosanslineara/v18/oPWS_l16kP4jCuhpgEGmwJOiA18FZj22zmHQAGQicw.ttf", true), A.NotoFont$("Noto Sans Linear B", "notosanslinearb/v17/HhyJU4wt9vSgfHoORYOiXOckKNB737IV3BkFTq4EPw.ttf", true), A.NotoFont$("Noto Sans Lisu", "notosanslisu/v25/uk-3EGO3o6EruUbnwovcYhz6kh57_nqbcTdjJnHP2Vwt29IlxkVdig.ttf", true), A.NotoFont$("Noto Sans Lycian", "notosanslycian/v15/QldVNSNMqAsHtsJ7UmqxBQA9r8wA5_naCJwn00E.ttf", true), A.NotoFont$("Noto Sans Lydian", "notosanslydian/v18/c4m71mVzGN7s8FmIukZJ1v4ZlcPReUPXMoIjEQI.ttf", true), A.NotoFont$("Noto Sans Mahajani", "notosansmahajani/v19/-F6sfiVqLzI2JPCgQBnw60Agp0JrvD5Fh8ARHNh4zg.ttf", true), A.NotoFont$("Noto Sans Malayalam", "notosansmalayalam/v26/sJoi3K5XjsSdcnzn071rL37lpAOsUThnDZIfPdbeSNzVakglNM-Qw8EaeB8Nss-_RuD9BFzEr6HxEA.ttf", true), A.NotoFont$("Noto Sans Mandaic", "notosansmandaic/v16/cIfnMbdWt1w_HgCcilqhKQBo_OsMI5_A_gMk0izH.ttf", true), A.NotoFont$("Noto Sans Manichaean", "notosansmanichaean/v18/taiVGntiC4--qtsfi4Jp9-_GkPZZCcrfekqCNTtFCtdX.ttf", true), A.NotoFont$("Noto Sans Marchen", "notosansmarchen/v19/aFTO7OZ_Y282EP-WyG6QTOX_C8WZMHhPk652ZaHk.ttf", true), A.NotoFont$("Noto Sans Masaram Gondi", "notosansmasaramgondi/v17/6xK_dThFKcWIu4bpRBjRYRV7KZCbUq6n_1kPnuGe7RI9WSWX.ttf", true), A.NotoFont$("Noto Sans Math", "notosansmath/v15/7Aump_cpkSecTWaHRlH2hyV5UHkG-V048PW0.ttf", true), A.NotoFont$("Noto Sans Mayan Numerals", "notosansmayannumerals/v16/PlIuFk25O6RzLfvNNVSivR09_KqYMwvvDKYjfIiE68oo6eepYQ.ttf", true), A.NotoFont$("Noto Sans Medefaidrin", "notosansmedefaidrin/v23/WwkzxOq6Dk-wranENynkfeVsNbRZtbOIdLb1exeM4ZeuabBfmErWlT318e5A3rw.ttf", true), A.NotoFont$("Noto Sans Meetei Mayek", "notosansmeeteimayek/v15/HTxAL3QyKieByqY9eZPFweO0be7M21uSphSdhqILnmrRfJ8t_1TJ_vTW5PgeFYVa.ttf", true), A.NotoFont$("Noto Sans Meroitic", "notosansmeroitic/v18/IFS5HfRJndhE3P4b5jnZ3ITPvC6i00UDgDhTiKY9KQ.ttf", true), A.NotoFont$("Noto Sans Miao", "notosansmiao/v17/Dxxz8jmXMW75w3OmoDXVV4zyZUjgUYVslLhx.ttf", true), A.NotoFont$("Noto Sans Modi", "notosansmodi/v23/pe03MIySN5pO62Z5YkFyT7jeav5qWVAgVol-.ttf", true), A.NotoFont$("Noto Sans Mongolian", "notosansmongolian/v21/VdGCAYADGIwE0EopZx8xQfHlgEAMsrToxLsg6-av1x0.ttf", true), A.NotoFont$("Noto Sans Mro", "notosansmro/v18/qWcsB6--pZv9TqnUQMhe9b39WDzRtjkho4M.ttf", true), A.NotoFont$("Noto Sans Multani", "notosansmultani/v20/9Bty3ClF38_RfOpe1gCaZ8p30BOFO1A0pfCs5Kos.ttf", true), A.NotoFont$("Noto Sans Myanmar", "notosansmyanmar/v20/AlZq_y1ZtY3ymOryg38hOCSdOnFq0En23OU4o1AC.ttf", true), A.NotoFont$("Noto Sans NKo", "notosansnko/v6/esDX31ZdNv-KYGGJpKGk2_RpMpCMHMLBrdA.ttf", true), A.NotoFont$("Noto Sans Nabataean", "notosansnabataean/v16/IFS4HfVJndhE3P4b5jnZ34DfsjO330dNoBJ9hK8kMK4.ttf", true), A.NotoFont$("Noto Sans New Tai Lue", "notosansnewtailue/v22/H4cKBW-Pl9DZ0Xe_nHUapt7PovLXAhAnY7wqaLy-OJgU3p_pdeXAYUbghFPKzeY.ttf", true), A.NotoFont$("Noto Sans Newa", "notosansnewa/v16/7r3fqXp6utEsO9pI4f8ok8sWg8n_qN4R5lNU.ttf", true), A.NotoFont$("Noto Sans Nushu", "notosansnushu/v19/rnCw-xRQ3B7652emAbAe_Ai1IYaFWFAMArZKqQ.ttf", true), A.NotoFont$("Noto Sans Ogham", "notosansogham/v17/kmKlZqk1GBDGN0mY6k5lmEmww4hrt5laQxcoCA.ttf", true), A.NotoFont$("Noto Sans Ol Chiki", "notosansolchiki/v29/N0b92TJNOPt-eHmFZCdQbrL32r-4CvhzDzRwlxOQYuVALWk267I6gVrz5gQ.ttf", true), A.NotoFont$("Noto Sans Old Hungarian", "notosansoldhungarian/v18/E213_cD6hP3GwCJPEUssHEM0KqLaHJXg2PiIgRfjbg5nCYXt.ttf", true), A.NotoFont$("Noto Sans Old Italic", "notosansolditalic/v16/TuGOUUFzXI5FBtUq5a8bh68BJxxEVam7tWlRdRhtCC4d.ttf", true), A.NotoFont$("Noto Sans Old North Arabian", "notosansoldnortharabian/v16/esDF30BdNv-KYGGJpKGk2tNiMt7Jar6olZDyNdr81zBQmUo_xw4ABw.ttf", true), A.NotoFont$("Noto Sans Old Permic", "notosansoldpermic/v17/snf1s1q1-dF8pli1TesqcbUY4Mr-ElrwKLdXgv_dKYB5.ttf", true), A.NotoFont$("Noto Sans Old Persian", "notosansoldpersian/v16/wEOjEAbNnc5caQTFG18FHrZr9Bp6-8CmIJ_tqOlQfx9CjA.ttf", true), A.NotoFont$("Noto Sans Old Sogdian", "notosansoldsogdian/v16/3JnjSCH90Gmq2mrzckOBBhFhdrMst48aURt7neIqM-9uyg.ttf", true), A.NotoFont$("Noto Sans Old South Arabian", "notosansoldsoutharabian/v16/3qT5oiOhnSyU8TNFIdhZTice3hB_HWKsEnF--0XCHiKx1OtDT9HwTA.ttf", true), A.NotoFont$("Noto Sans Old Turkic", "notosansoldturkic/v17/yMJNMJVya43H0SUF_WmcGEQVqoEMKDKbsE2RjEw-Vyws.ttf", true), A.NotoFont$("Noto Sans Oriya", "notosansoriya/v31/AYCppXfzfccDCstK_hrjDyADv5e9748vhj3CJBLHIARtgD6TJQS0dJT5Ivj0f6_c6LhHBRe-.ttf", true), A.NotoFont$("Noto Sans Osage", "notosansosage/v18/oPWX_kB6kP4jCuhpgEGmw4mtAVtXRlaSxkrMCQ.ttf", true), A.NotoFont$("Noto Sans Osmanya", "notosansosmanya/v18/8vIS7xs32H97qzQKnzfeWzUyUpOJmz6kR47NCV5Z.ttf", true), A.NotoFont$("Noto Sans Pahawh Hmong", "notosanspahawhhmong/v18/bWtp7e_KfBziStx7lIzKKaMUOBEA3UPQDW7krzc_c48aMpM.ttf", true), A.NotoFont$("Noto Sans Palmyrene", "notosanspalmyrene/v16/ZgNPjOdKPa7CHqq0h37c_ASCWvH93SFCPnK5ZpdNtcA.ttf", true), A.NotoFont$("Noto Sans Pau Cin Hau", "notosanspaucinhau/v20/x3d-cl3IZKmUqiMg_9wBLLtzl22EayN7ehIdjEWqKMxsKw.ttf", true), A.NotoFont$("Noto Sans Phags Pa", "notosansphagspa/v15/pxiZyoo6v8ZYyWh5WuPeJzMkd4SrGChkqkSsrvNXiA.ttf", true), A.NotoFont$("Noto Sans Phoenician", "notosansphoenician/v17/jizFRF9Ksm4Bt9PvcTaEkIHiTVtxmFtS5X7Jot-p5561.ttf", true), A.NotoFont$("Noto Sans Psalter Pahlavi", "notosanspsalterpahlavi/v16/rP2Vp3K65FkAtHfwd-eISGznYihzggmsicPfud3w1G3KsUQBct4.ttf", true), A.NotoFont$("Noto Sans Rejang", "notosansrejang/v21/Ktk2AKuMeZjqPnXgyqrib7DIogqwN4O3WYZB_sU.ttf", true), A.NotoFont$("Noto Sans Runic", "notosansrunic/v17/H4c_BXWPl9DZ0Xe_nHUaus7W68WWaxpvHtgIYg.ttf", true), A.NotoFont$("Noto Sans SC", "notosanssc/v36/k3kCo84MPvpLmixcA63oeAL7Iqp5IZJF9bmaG9_FnYxNbPzS5HE.ttf", true), A.NotoFont$("Noto Sans Saurashtra", "notosanssaurashtra/v23/ea8GacQ0Wfz_XKWXe6OtoA8w8zvmYwTef9ndjhPTSIx9.ttf", true), A.NotoFont$("Noto Sans Sharada", "notosanssharada/v16/gok0H7rwAEdtF9N8-mdTGALG6p0kwoXLPOwr4H8a.ttf", true), A.NotoFont$("Noto Sans Shavian", "notosansshavian/v17/CHy5V_HZE0jxJBQlqAeCKjJvQBNF4EFQSplv2Cwg.ttf", true), A.NotoFont$("Noto Sans Siddham", "notosanssiddham/v20/OZpZg-FwqiNLe9PELUikxTWDoCCeGqndk3Ic92ZH.ttf", true), A.NotoFont$("Noto Sans Sinhala", "notosanssinhala/v26/yMJ2MJBya43H0SUF_WmcBEEf4rQVO2P524V5N_MxQzQtb-tf5dJbC30Fu9zUwg2a5lgLpJwbQRM.ttf", true), A.NotoFont$("Noto Sans Sogdian", "notosanssogdian/v16/taiQGn5iC4--qtsfi4Jp6eHPnfxQBo--Pm6KHidM.ttf", true), A.NotoFont$("Noto Sans Sora Sompeng", "notosanssorasompeng/v24/PlIRFkO5O6RzLfvNNVSioxM2_OTrEhPyDLolKvCsHzCxWuGkYHR818DpZXJQd4Mu.ttf", true), A.NotoFont$("Noto Sans Soyombo", "notosanssoyombo/v17/RWmSoL-Y6-8q5LTtXs6MF6q7xsxgY0FrIFOcK25W.ttf", true), A.NotoFont$("Noto Sans Sundanese", "notosanssundanese/v26/FwZw7_84xUkosG2xJo2gm7nFwSLQkdymq2mkz3Gz1_b6ctxpNNHCizv7fQES.ttf", true), A.NotoFont$("Noto Sans Syloti Nagri", "notosanssylotinagri/v20/uU9eCAQZ75uhfF9UoWDRiY3q7Sf_VFV3m4dGFVfxN87gsj0.ttf", true), A.NotoFont$("Noto Sans Syriac", "notosanssyriac/v16/Ktk7AKuMeZjqPnXgyqribqzQqgW0LYiVqV7dXcP0C-VD9MaJyZfUL_FC.ttf", true), A.NotoFont$("Noto Sans TC", "notosanstc/v35/-nFuOG829Oofr2wohFbTp9ifNAn722rq0MXz76Cy_CpOtma3uNQ.ttf", true), A.NotoFont$("Noto Sans Tagalog", "notosanstagalog/v22/J7aFnoNzCnFcV9ZI-sUYuvote1R0wwEAA8jHexnL.ttf", true), A.NotoFont$("Noto Sans Tagbanwa", "notosanstagbanwa/v18/Y4GWYbB8VTEp4t3MKJSMmQdIKjRtt_nZRjQEaYpGoQ.ttf", true), A.NotoFont$("Noto Sans Tai Le", "notosanstaile/v17/vEFK2-VODB8RrNDvZSUmVxEATwR58tK1W77HtMo.ttf", true), A.NotoFont$("Noto Sans Tai Tham", "notosanstaitham/v20/kJEbBv0U4hgtwxDUw2x9q7tbjLIfbPGHBoaVSAZ3MdLJBCUbPgquyaRGKMw.ttf", true), A.NotoFont$("Noto Sans Tai Viet", "notosanstaiviet/v19/8QIUdj3HhN_lv4jf9vsE-9GMOLsaSPZr644fWsRO9w.ttf", true), A.NotoFont$("Noto Sans Takri", "notosanstakri/v24/TuGJUVpzXI5FBtUq5a8bnKIOdTwQNO_W3khJXg.ttf", true), A.NotoFont$("Noto Sans Tamil", "notosanstamil/v27/ieVc2YdFI3GCY6SyQy1KfStzYKZgzN1z4LKDbeZce-0429tBManUktuex7vGo70RqKDt_EvT.ttf", true), A.NotoFont$("Noto Sans Tamil Supplement", "notosanstamilsupplement/v21/DdTz78kEtnooLS5rXF1DaruiCd_bFp_Ph4sGcn7ax_vsAeMkeq1x.ttf", true), A.NotoFont$("Noto Sans Telugu", "notosanstelugu/v26/0FlxVOGZlE2Rrtr-HmgkMWJNjJ5_RyT8o8c7fHkeg-esVC5dzHkHIJQqrEntezbqQUbf-3v37w.ttf", true), A.NotoFont$("Noto Sans Thaana", "notosansthaana/v24/C8c14dM-vnz-s-3jaEsxlxHkBH-WZOETXfoQrfQ9Y4XrbhLhnu4-tbNu.ttf", true), A.NotoFont$("Noto Sans Thai", "notosansthai/v25/iJWnBXeUZi_OHPqn4wq6hQ2_hbJ1xyN9wd43SofNWcd1MKVQt_So_9CdU5RtpzF-QRvzzXg.ttf", true), A.NotoFont$("Noto Sans Tifinagh", "notosanstifinagh/v20/I_uzMoCduATTei9eI8dawkHIwvmhCvbn6rnEcXfs4Q.ttf", true), A.NotoFont$("Noto Sans Tirhuta", "notosanstirhuta/v16/t5t6IQYRNJ6TWjahPR6X-M-apUyby7uGUBsTrn5P.ttf", true), A.NotoFont$("Noto Sans Ugaritic", "notosansugaritic/v16/3qTwoiqhnSyU8TNFIdhZVCwbjCpkAXXkMhoIkiazfg.ttf", true), A.NotoFont$("Noto Sans Vai", "notosansvai/v17/NaPecZTSBuhTirw6IaFn_UrURMTsDIRSfr0.ttf", true), A.NotoFont$("Noto Sans Wancho", "notosanswancho/v17/zrf-0GXXyfn6Fs0lH9P4cUubP0GBqAPopiRfKp8.ttf", true), A.NotoFont$("Noto Sans Warang Citi", "notosanswarangciti/v17/EYqtmb9SzL1YtsZSScyKDXIeOv3w-zgsNvKRpeVCCXzdgA.ttf", true), A.NotoFont$("Noto Sans Yi", "notosansyi/v19/sJoD3LFXjsSdcnzn071rO3apxVDJNVgSNg.ttf", true), A.NotoFont$("Noto Sans Zanabazar Square", "notosanszanabazarsquare/v19/Cn-jJsuGWQxOjaGwMQ6fOicyxLBEMRfDtkzl4uagQtJxOCEgN0Gc.ttf", true), A.NotoFont$("Noto Serif Tibetan", "notoseriftibetan/v22/gokGH7nwAEdtF9N45n0Vaz7O-pk0wsvxHeDXMfqguoCmIrYcPS7rdSy_32c.ttf", true)], type$.JSArray_NotoFont));
      }
      return value;
    },
    _registerWithFontProvider$0() {
      var t2, t3, _i, font, _this0, _this = this,
        t1 = _this._fontProvider;
      if (t1 != null) {
        t1.delete();
        _this._fontProvider = null;
        t1 = _this.skFontCollection;
        if (t1 != null)
          t1.delete();
        _this.skFontCollection = null;
      }
      _this._fontProvider = $.__canvasKit._readField$0().TypefaceFontProvider.Make();
      t1 = $.__canvasKit._readField$0().FontCollection.Make();
      _this.skFontCollection = t1;
      t1.enableFontFallback();
      _this.skFontCollection.setDefaultFontManager(_this._fontProvider);
      t1 = _this.familyToFontMap;
      t1.clear$0(0);
      for (t2 = _this._registeredFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        font = t2[_i];
        _this0 = font.family;
        _this._fontProvider.registerFont(font.bytes, _this0);
        J.add$1$ax(t1.putIfAbsent$2(0, _this0, new A.SkiaFontCollection__registerWithFontProvider_closure()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
      for (t2 = _this.registeredFallbackFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        font = t2[_i];
        _this0 = font.family;
        _this._fontProvider.registerFont(font.bytes, _this0);
        J.add$1$ax(t1.putIfAbsent$2(0, _this0, new A.SkiaFontCollection__registerWithFontProvider_closure0()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
    },
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$SkiaFontCollection(manifest);
    },
    loadAssetFonts$body$SkiaFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, t2, loadedRoboto, _i, family, t3, t4, t5, _i0, fontAsset, t6, t7, fontFailures, downloadedFonts, loadedFonts, _0_1, unregisteredFont, _0_2, bytes, skFont, pendingDownloads, $async$temp1;
      var $async$loadAssetFonts$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingDownloads = A._setArrayType([], type$.JSArray_Future_FontDownloadResult);
              for (t1 = manifest.families, t2 = t1.length, loadedRoboto = false, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
                family = t1[_i];
                t3 = family.name;
                if (t3 === "Roboto")
                  loadedRoboto = true;
                for (t4 = family.fontAssets, t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0) {
                  fontAsset = t4[_i0];
                  t6 = $._assetManager;
                  t6.toString;
                  t7 = fontAsset.asset;
                  pendingDownloads.push($async$self._downloadFont$3(t7, t6.getAssetUrl$1(t7), t3));
                }
              }
              if (!loadedRoboto)
                pendingDownloads.push($async$self._downloadFont$3("Roboto", $.$get$_robotoUrl(), "Roboto"));
              fontFailures = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              downloadedFonts = A._setArrayType([], type$.JSArray_Record_2_String_and_UnregisteredFont);
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(pendingDownloads, false, type$.FontDownloadResult), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result);
            case 4:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t2 = t1.get$current(t1);
              t3 = t2.font;
              t4 = t2.assetName;
              if (t3 != null)
                downloadedFonts.push(new A._Record_2(t4, t3));
              else {
                t2 = t2.error;
                t2.toString;
                fontFailures.$indexSet(0, t4, t2);
              }
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              t1 = $.$get$_renderer().initialize$0(0);
              $async$goto = 6;
              return A._asyncAwait(type$.Future_void._is(t1) ? t1 : A._Future$value(t1, type$.void), $async$loadAssetFonts$1);
            case 6:
              // returning from await.
              loadedFonts = A._setArrayType([], type$.JSArray_String);
              for (t1 = downloadedFonts.length, t2 = $.__canvasKit.__late_helper$_name, t3 = $async$self._registeredFonts, t4 = type$.JSArray_int, _i = 0; _i < downloadedFonts.length; downloadedFonts.length === t1 || (0, A.throwConcurrentModificationError)(downloadedFonts), ++_i) {
                t5 = downloadedFonts[_i];
                _0_1 = t5._0;
                unregisteredFont = null;
                _0_2 = t5._1;
                unregisteredFont = _0_2;
                t5 = unregisteredFont.bytes;
                bytes = new Uint8Array(t5, 0);
                t5 = $.__canvasKit._value;
                if (t5 === $.__canvasKit)
                  A.throwExpression(A.LateError$fieldNI(t2));
                t5 = t5.Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
                t6 = unregisteredFont.family;
                if (t5 != null) {
                  loadedFonts.push(_0_1);
                  skFont = new self.window.flutterCanvasKit.Font(t5);
                  t7 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(A._setArrayType([0], t4));
                  skFont.getGlyphBounds(t7, null, null);
                  t3.push(new A.RegisteredFont(t6, bytes, t5));
                } else {
                  t5 = $.$get$printWarning();
                  t7 = unregisteredFont.url;
                  t5.call$1("Failed to load font " + t6 + " at " + t7);
                  $.$get$printWarning().call$1("Verify that " + t7 + " contains a valid font.");
                  fontFailures.$indexSet(0, _0_1, new A.FontInvalidDataError());
                }
              }
              $async$self.registerDownloadedFonts$0();
              $async$returnValue = new A.AssetFontsResult();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    registerDownloadedFonts$0() {
      var t1, t2, t3, _i, unregisteredFont, registeredFont,
        makeRegisterFont = new A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont();
      for (t1 = this._unregisteredFonts, t2 = t1.length, t3 = this._registeredFonts, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        unregisteredFont = t1[_i];
        registeredFont = makeRegisterFont.call$3(unregisteredFont.bytes, unregisteredFont.url, unregisteredFont.family);
        if (registeredFont != null)
          t3.push(registeredFont);
      }
      B.JSArray_methods.clear$0(t1);
      this._registerWithFontProvider$0();
    },
    _downloadFont$3(assetName, url, fontFamily) {
      return this._downloadFont$body$SkiaFontCollection(assetName, url, fontFamily);
    },
    _downloadFont$body$SkiaFontCollection(assetName, url, fontFamily) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontDownloadResult),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, response, e, exception, fontData, $async$exception;
      var $async$_downloadFont$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontData = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.httpFetch(url), $async$_downloadFont$3);
            case 7:
              // returning from await.
              response = $async$result;
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font family " + fontFamily + " not found (404) at " + url);
                $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontNotFoundError());
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(response.get$payload().asByteBuffer$0(), $async$_downloadFont$3);
            case 8:
              // returning from await.
              fontData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              $.$get$printWarning().call$1("Failed to load font " + fontFamily + " at " + url);
              $.$get$printWarning().call$1(J.toString$0$(e));
              $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontDownloadError());
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$self._downloadedFontFamilies.add$1(0, fontFamily);
              $async$returnValue = new A.FontDownloadResult(assetName, new A.UnregisteredFont(fontData, url, fontFamily), null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadFont$3, $async$completer);
    },
    clear$0(_) {
    }
  };
  A.SkiaFontCollection__registerWithFontProvider_closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 56
  };
  A.SkiaFontCollection__registerWithFontProvider_closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 56
  };
  A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont.prototype = {
    call$3(buffer, url, family) {
      var bytes = A.NativeUint8List_NativeUint8List$view(buffer, 0, null),
        t1 = $.__canvasKit._readField$0().Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
      if (t1 != null)
        return A.RegisteredFont$(bytes, family, t1);
      else {
        $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
        $.$get$printWarning().call$1("Verify that " + url + " contains a valid font.");
        return null;
      }
    },
    $signature: 146
  };
  A.RegisteredFont.prototype = {};
  A.UnregisteredFont.prototype = {};
  A.FontDownloadResult.prototype = {};
  A.SkiaFallbackRegistry.prototype = {
    getMissingCodePoints$2(codeUnits, fontFamilies) {
      var t1, t2, _i, typefacesForFamily, codePointsSupported, testString, t3, t4, i, missingCodeUnits,
        fonts = A._setArrayType([], type$.JSArray_JavaScriptObject);
      for (t1 = fontFamilies.length, t2 = this.fontCollection.familyToFontMap, _i = 0; _i < fontFamilies.length; fontFamilies.length === t1 || (0, A.throwConcurrentModificationError)(fontFamilies), ++_i) {
        typefacesForFamily = t2.$index(0, fontFamilies[_i]);
        if (typefacesForFamily != null)
          B.JSArray_methods.addAll$1(fonts, typefacesForFamily);
      }
      t1 = codeUnits.length;
      codePointsSupported = A.List_List$filled(t1, false, false, type$.bool);
      testString = A.String_String$fromCharCodes(codeUnits, 0, null);
      for (t2 = fonts.length, _i = 0; _i < fonts.length; fonts.length === t2 || (0, A.throwConcurrentModificationError)(fonts), ++_i) {
        t3 = fonts[_i].getGlyphIDs(testString);
        for (t4 = t3.length, i = 0; i < t4; ++i)
          codePointsSupported[i] = B.JSBool_methods.$or(codePointsSupported[i], t3[i] !== 0);
      }
      missingCodeUnits = A._setArrayType([], type$.JSArray_int);
      for (i = 0; i < t1; ++i)
        if (!codePointsSupported[i])
          missingCodeUnits.push(codeUnits[i]);
      return missingCodeUnits;
    },
    loadFallbackFont$2(familyName, url) {
      return this.loadFallbackFont$body$SkiaFallbackRegistry(familyName, url);
    },
    loadFallbackFont$body$SkiaFallbackRegistry(familyName, url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, buffer, t1;
      var $async$loadFallbackFont$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.httpFetchByteBuffer(url), $async$loadFallbackFont$2);
            case 3:
              // returning from await.
              buffer = $async$result;
              t1 = $.__canvasKit._readField$0().Typeface.MakeFreeTypeFaceFromData(buffer);
              if (t1 == null) {
                $.$get$printWarning().call$1("Failed to parse fallback font " + familyName + " as a font.");
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.fontCollection.registeredFallbackFonts.push(A.RegisteredFont$(A.NativeUint8List_NativeUint8List$view(buffer, 0, null), familyName, t1));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadFallbackFont$2, $async$completer);
    }
  };
  A.Layer.prototype = {};
  A.PrerollContext.prototype = {};
  A.PaintContext.prototype = {};
  A.ContainerLayer.prototype = {
    preroll$2(prerollContext, matrix) {
      this.paintBounds = this.prerollChildren$2(prerollContext, matrix);
    },
    prerollChildren$2(context, childMatrix) {
      var t1, t2, childPaintBounds, _i, layer, t3;
      for (t1 = this._layers, t2 = t1.length, childPaintBounds = B.Rect_0_0_0_0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        layer = t1[_i];
        layer.preroll$2(context, childMatrix);
        if (childPaintBounds.left >= childPaintBounds.right || childPaintBounds.top >= childPaintBounds.bottom)
          childPaintBounds = layer.paintBounds;
        else {
          t3 = layer.paintBounds;
          if (!(t3.left >= t3.right || t3.top >= t3.bottom))
            childPaintBounds = childPaintBounds.expandToInclude$1(t3);
        }
      }
      return childPaintBounds;
    },
    paintChildren$1(context) {
      var t1, t2, _i, layer, t3;
      for (t1 = this._layers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        layer = t1[_i];
        t3 = layer.paintBounds;
        if (!(t3.left >= t3.right || t3.top >= t3.bottom))
          layer.paint$1(context);
      }
    }
  };
  A.RootLayer.prototype = {
    paint$1(paintContext) {
      this.paintChildren$1(paintContext);
    }
  };
  A.LayerScene.prototype = {
    dispose$0() {
    }
  };
  A.LayerSceneBuilder.prototype = {
    build$0() {
      return new A.LayerScene(new A.LayerTree(this.rootLayer));
    }
  };
  A.LayerTree.prototype = {};
  A.Frame.prototype = {
    raster$2$ignoreRasterCache(layerTree, ignoreRasterCache) {
      A.timeAction("preroll_frame", new A.Frame_raster_closure(this, layerTree, true));
      A.timeAction("apply_frame", new A.Frame_raster_closure0(this, layerTree, true));
      return true;
    }
  };
  A.Frame_raster_closure.prototype = {
    call$0() {
      var t1 = this.layerTree.rootLayer;
      t1.paintBounds = t1.prerollChildren$2(new A.PrerollContext(this.$this.viewEmbedder, new A.MutatorsStack(A._setArrayType([], type$.JSArray_Mutator))), A.Matrix4$identity());
    },
    $signature: 0
  };
  A.Frame_raster_closure0.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = A._setArrayType([], type$.JSArray_CkCanvas),
        internalNodesCanvas = new A.CkNWayCanvas(t2),
        t3 = t1.canvas;
      t2.push(t3);
      t1 = t1.viewEmbedder;
      t1.getOverlayCanvases$0().forEach$1(0, internalNodesCanvas.get$addCanvas());
      t2 = this.layerTree.rootLayer;
      if (!t2.paintBounds.get$isEmpty(0))
        t2.paintChildren$1(new A.PaintContext(internalNodesCanvas, t3, t1));
    },
    $signature: 0
  };
  A.CompositorContext.prototype = {};
  A.MultiSurfaceRasterizer.prototype = {
    createViewRasterizer$1(view) {
      return this._viewRasterizers.putIfAbsent$2(0, view, new A.MultiSurfaceRasterizer_createViewRasterizer_closure(this, view));
    },
    setResourceCacheMaxBytes$1(bytes) {
      var t1, t2, t3, t4;
      for (t1 = this._viewRasterizers.get$values(0), t2 = A._instanceType(t1), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        t3 = (t3 == null ? t2._as(t3) : t3).displayFactory;
        t4 = new A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure(bytes);
        t4.call$1(t3.get$baseCanvas());
        B.JSArray_methods.forEach$1(t3._cache, t4);
        B.JSArray_methods.forEach$1(t3._liveCanvases, t4);
      }
    }
  };
  A.MultiSurfaceRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.MultiSurfaceViewRasterizer$(this.view, this.$this);
    },
    $signature: 114
  };
  A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure.prototype = {
    call$1(surface) {
      surface._skiaCacheBytes = this.bytes;
      surface._syncCacheBytes$0();
    },
    $signature: 101
  };
  A.MultiSurfaceViewRasterizer.prototype = {
    prepareToDraw$0() {
      this.displayFactory.get$baseCanvas().createOrUpdateSurface$1(this.currentFrameSize);
    },
    rasterizeToCanvas$2(canvas, pictures) {
      var t1, devicePixelRatio, t2;
      type$.Surface._as(canvas);
      canvas.createOrUpdateSurface$1(this.currentFrameSize);
      t1 = this.currentFrameSize;
      devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t2 = self.window.devicePixelRatio;
        devicePixelRatio = t2 === 0 ? 1 : t2;
      }
      t2 = canvas._pixelHeight;
      A.DomCSSStyleDeclarationExtension_setProperty(canvas._canvasElement.style, "transform", "translate(0px, " + A.S(t1.height / devicePixelRatio - t2 / devicePixelRatio) + "px)");
      t2 = canvas._surface.surface.getCanvas();
      t2.clear(A._populateSkColor($.$get$_sharedSkColor1(), B.Color_0));
      B.JSArray_methods.forEach$1(pictures, new A.CkCanvas(t2).get$drawPicture());
      canvas._surface.surface.flush();
      return A.Future_Future$value(null, type$.void);
    },
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.MultiSurfaceViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      var t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      if ($.$get$browserSupportsOffscreenCanvas())
        $.$get$browser().get$browserEngine();
      return new A.Surface(false, true, t1);
    },
    $signature: 100
  };
  A.CkNWayCanvas.prototype = {
    addCanvas$1(canvas) {
      this._canvases.push(canvas);
    }
  };
  A._finalizationRegistry_closure.prototype = {
    call$1(boxedUniq) {
      type$.UniqueRef_Object._as(boxedUniq);
      if (boxedUniq._nativeObject != null)
        boxedUniq.dispose$0();
    },
    $signature: 79
  };
  A.NativeMemoryFinalizationRegistry.prototype = {};
  A.UniqueRef.prototype = {
    UniqueRef$3(owner, nativeObject, _debugOwnerLabel, $T) {
      this._nativeObject = nativeObject;
      $.$get$nativeMemoryFinalizationRegistry();
      if ($.$get$browserSupportsFinalizationRegistry())
        $.$get$_finalizationRegistry().register(owner, this);
    },
    dispose$0() {
      var object = this._nativeObject;
      if (!object.isDeleted())
        object.delete();
      this._nativeObject = null;
    }
  };
  A.OffscreenCanvasRasterizer.prototype = {
    createViewRasterizer$1(view) {
      return this._viewRasterizers.putIfAbsent$2(0, view, new A.OffscreenCanvasRasterizer_createViewRasterizer_closure(this, view));
    },
    setResourceCacheMaxBytes$1(bytes) {
      var t1 = this.offscreenSurface;
      t1._skiaCacheBytes = bytes;
      t1._syncCacheBytes$0();
    }
  };
  A.OffscreenCanvasRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.OffscreenCanvasViewRasterizer$(this.view, this.$this);
    },
    $signature: 90
  };
  A.OffscreenCanvasViewRasterizer.prototype = {
    rasterizeToCanvas$2(canvas, pictures) {
      return this.rasterizeToCanvas$body$OffscreenCanvasViewRasterizer(canvas, pictures);
    },
    rasterizeToCanvas$body$OffscreenCanvasViewRasterizer(canvas, pictures) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$rasterizeToCanvas$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self.rasterizer.offscreenSurface.rasterizeToCanvas$3($async$self.currentFrameSize, type$.RenderCanvas._as(canvas), pictures), $async$rasterizeToCanvas$2);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$rasterizeToCanvas$2, $async$completer);
    },
    prepareToDraw$0() {
      this.rasterizer.offscreenSurface.createOrUpdateSurface$1(this.currentFrameSize);
    },
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.OffscreenCanvasViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      var t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container"),
        t2 = A.createDomCanvasElement(null, null),
        t3 = new A.RenderCanvas(t1, t2),
        t4 = A.jsify("true");
      if (t4 == null)
        t4 = type$.Object._as(t4);
      t2.setAttribute("aria-hidden", t4);
      A.DomCSSStyleDeclarationExtension_setProperty(t2.style, "position", "absolute");
      t3._updateLogicalHtmlCanvasSize$0();
      t1.append(t2);
      return t3;
    },
    $signature: 102
  };
  A.Rendering.prototype = {
    equalsForRendering$1(other) {
      var i,
        t1 = other.entities,
        t2 = this.entities;
      if (t1.length !== t2.length)
        return false;
      for (i = 0; i < t2.length; ++i)
        if (!t2[i].equalsForRendering$1(t1[i]))
          return false;
      return true;
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this.entities, "[", "]");
    }
  };
  A.RenderingEntity.prototype = {};
  A.RenderingRenderCanvas.prototype = {
    equalsForRendering$1(other) {
      return other instanceof A.RenderingRenderCanvas;
    },
    toString$0(_) {
      return B.Type_RenderingRenderCanvas_gsm.toString$0(0) + "(" + this.pictures.length + " pictures)";
    }
  };
  A.RenderingPlatformView.prototype = {
    equalsForRendering$1(other) {
      return other instanceof A.RenderingPlatformView && other.viewId === this.viewId;
    },
    toString$0(_) {
      return B.Type_RenderingPlatformView_IIV.toString$0(0) + "(" + this.viewId + ")";
    }
  };
  A.CkPaint.prototype = {
    set$color(_, value) {
      if (this._color === value.get$value(value))
        return;
      this._color = value.get$value(value);
      this.skiaObject.setColorInt(value.get$value(value));
    },
    toString$0(_) {
      return "Paint()";
    },
    $isPaint: 1
  };
  A.CkPicture.prototype = {};
  A.CkPictureRecorder.prototype = {
    beginRecording$1(bounds) {
      var recorder = new self.window.flutterCanvasKit.PictureRecorder();
      this._skRecorder = recorder;
      return this._recordingCanvas = new A.CkCanvas(recorder.beginRecording(A.toSkRect(bounds), true));
    },
    endRecording$0() {
      var skPicture, result, t1,
        recorder = this._skRecorder;
      if (recorder == null)
        throw A.wrapException(A.StateError$("PictureRecorder is not recording"));
      skPicture = recorder.finishRecordingAsPicture();
      recorder.delete();
      this._skRecorder = null;
      result = new A.CkPicture();
      t1 = new A.UniqueRef("Picture", type$.UniqueRef_JavaScriptObject);
      t1.UniqueRef$3(result, skPicture, "Picture", type$.JavaScriptObject);
      result.__CkPicture__ref_F !== $ && A.throwUnnamedLateFieldAI();
      result.__CkPicture__ref_F = t1;
      return result;
    }
  };
  A.Rasterizer.prototype = {};
  A.ViewRasterizer.prototype = {
    get$viewEmbedder() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this,
        value = _this.__ViewRasterizer_viewEmbedder_FI;
      if (value === $) {
        t1 = _this.view.get$dom();
        t2 = type$.JSArray_CkPictureRecorder;
        t3 = A._setArrayType([], t2);
        t2 = A._setArrayType([], t2);
        t4 = type$.int;
        t5 = type$.JSArray_int;
        t6 = A._setArrayType([], t5);
        t5 = A._setArrayType([], t5);
        t7 = A._setArrayType([], type$.JSArray_RenderingEntity);
        _this.__ViewRasterizer_viewEmbedder_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__ViewRasterizer_viewEmbedder_FI = new A.HtmlViewEmbedder(t1.sceneHost, _this, new A.EmbedderFrameContext(t3, t2), A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.EmbeddedViewParams), A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.ViewClipChain), A.LinkedHashSet_LinkedHashSet$_empty(t4), t6, t5, new A.Rendering(t7), A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.Set_String));
      }
      return value;
    },
    draw$1(layerTree) {
      return this.draw$body$ViewRasterizer(layerTree);
    },
    draw$body$ViewRasterizer(layerTree) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, pictureRecorder, frameSize;
      var $async$draw$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              frameSize = $async$self.view.get$physicalSize();
              if (frameSize.get$isEmpty(0)) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self.currentFrameSize = new A.BitmapSize(B.JSNumber_methods.round$0(frameSize._dx), B.JSNumber_methods.round$0(frameSize._dy));
              $async$self.prepareToDraw$0();
              t1 = $async$self.get$viewEmbedder();
              t2 = $async$self.currentFrameSize;
              t1.__HtmlViewEmbedder__frameSize_A = t2;
              pictureRecorder = new A.CkPictureRecorder();
              t2 = t2.toSize$0();
              pictureRecorder.beginRecording$1(new A.Rect(0, 0, 0 + t2._dx, 0 + t2._dy));
              t2 = pictureRecorder._recordingCanvas;
              t2.toString;
              new A.Frame(t2, null, $async$self.get$viewEmbedder()).raster$2$ignoreRasterCache(layerTree, true);
              $async$goto = 3;
              return A._asyncAwait($async$self.get$viewEmbedder().submitFrame$1(0, pictureRecorder.endRecording$0()), $async$draw$1);
            case 3:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$draw$1, $async$completer);
    }
  };
  A.DisplayCanvas.prototype = {};
  A.RenderQueue.prototype = {};
  A.RenderCanvas.prototype = {
    _updateLogicalHtmlCanvasSize$0() {
      var t1, t2, style, _this = this,
        devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      t1 = _this._pixelWidth;
      t2 = _this._pixelHeight;
      style = _this.canvasElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(style, "width", A.S(t1 / devicePixelRatio) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(style, "height", A.S(t2 / devicePixelRatio) + "px");
      _this._currentDevicePixelRatio = devicePixelRatio;
    },
    _ensureSize$1(size) {
      var t2, _this = this,
        t1 = size.width;
      if (t1 === _this._pixelWidth && size.height === _this._pixelHeight) {
        t1 = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
        if (t1 == null) {
          t1 = self.window.devicePixelRatio;
          if (t1 === 0)
            t1 = 1;
        }
        if (t1 !== _this._currentDevicePixelRatio)
          _this._updateLogicalHtmlCanvasSize$0();
        return;
      }
      _this._pixelWidth = t1;
      _this._pixelHeight = size.height;
      t2 = _this.canvasElement;
      A.DomCanvasElementExtension_set_width(t2, t1);
      A.DomCanvasElementExtension_set_height(t2, _this._pixelHeight);
      _this._updateLogicalHtmlCanvasSize$0();
    },
    initialize$0(_) {
    },
    dispose$0() {
      this.hostElement.remove();
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.CanvasKitVariant.prototype = {
    _enumToString$0() {
      return "CanvasKitVariant." + this._name;
    }
  };
  A.CanvasKitRenderer.prototype = {
    get$rendererTag() {
      return "canvaskit";
    },
    get$_fontCollection() {
      var t1, t2, t3, t4,
        value = this.__CanvasKitRenderer__fontCollection_FI;
      if (value === $) {
        t1 = type$.String;
        t2 = A._setArrayType([], type$.JSArray_UnregisteredFont);
        t3 = type$.JSArray_RegisteredFont;
        t4 = A._setArrayType([], t3);
        t3 = A._setArrayType([], t3);
        this.__CanvasKitRenderer__fontCollection_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__CanvasKitRenderer__fontCollection_FI = new A.SkiaFontCollection(A.LinkedHashSet_LinkedHashSet$_empty(t1), t2, t4, t3, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_JavaScriptObject));
      }
      return value;
    },
    get$fontCollection() {
      var t1, t2, t3, t4,
        value = this.__CanvasKitRenderer__fontCollection_FI;
      if (value === $) {
        t1 = type$.String;
        t2 = A._setArrayType([], type$.JSArray_UnregisteredFont);
        t3 = type$.JSArray_RegisteredFont;
        t4 = A._setArrayType([], t3);
        t3 = A._setArrayType([], t3);
        this.__CanvasKitRenderer__fontCollection_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__CanvasKitRenderer__fontCollection_FI = new A.SkiaFontCollection(A.LinkedHashSet_LinkedHashSet$_empty(t1), t2, t4, t3, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_JavaScriptObject));
      }
      return value;
    },
    initialize$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$initialize$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._initialized;
              $async$returnValue = t1 == null ? $async$self._initialized = new A.CanvasKitRenderer_initialize_closure($async$self).call$0() : t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initialize$0, $async$completer);
    },
    createPaint$0() {
      return A.CkPaint$();
    },
    createSceneBuilder$0() {
      var t1 = new A.RootLayer(A._setArrayType([], type$.JSArray_Layer), B.Rect_0_0_0_0),
        t2 = new A.LayerSceneBuilder(t1);
      t2.__LayerSceneBuilder_currentLayer_A = t1;
      return t2;
    },
    createTextStyle$21$background$color$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$shadows$textBaseline$wordSpacing(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, shadows, textBaseline, wordSpacing) {
      var t1 = type$.nullable_CkPaint;
      t1._as(background);
      t1._as(foreground);
      return A.CkTextStyle$_(background, color, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, fontFamily, fontFamilyFallback, shadows, textBaseline, wordSpacing);
    },
    createParagraphStyle$12$ellipsis$fontFamily$fontSize$fontStyle$fontWeight$height$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior(ellipsis, fontFamily, fontSize, fontStyle, fontWeight, height, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior) {
      var skTextStyle,
        t1 = height === 0,
        t2 = t1 ? null : height,
        t3 = type$.JavaScriptObject,
        properties = t3._as({}),
        t4 = $.$get$_skTextAligns()[textAlign.index];
      properties.textAlign = t4;
      if (textDirection != null)
        properties.textDirection = $.$get$_skTextDirections()[textDirection.index];
      if (maxLines != null)
        properties.maxLines = maxLines;
      t4 = t2 != null;
      if (t4)
        properties.heightMultiplier = t2;
      if (textHeightBehavior != null)
        properties.textHeightBehavior = $.$get$_skTextHeightBehaviors()[0];
      if (ellipsis != null)
        properties.ellipsis = ellipsis;
      if (strutStyle != null)
        properties.strutStyle = A.CkParagraphStyle_toSkStrutStyleProperties(strutStyle, textHeightBehavior);
      properties.replaceTabCharacters = true;
      skTextStyle = t3._as({});
      if (fontWeight != null)
        skTextStyle.fontStyle = A.toSkFontStyle(fontWeight, fontStyle);
      if (fontSize != null)
        A.SkTextStylePropertiesExtension_set_fontSize(skTextStyle, fontSize);
      if (t4)
        A.SkTextStylePropertiesExtension_set_heightMultiplier(skTextStyle, t2);
      A.SkTextStylePropertiesExtension_set_fontFamilies(skTextStyle, A._computeCombinedFontFamilies(fontFamily, null));
      properties.textStyle = skTextStyle;
      properties.applyRoundingHack = false;
      t2 = $.__canvasKit._readField$0().ParagraphStyle(properties);
      return new A.CkParagraphStyle(t2, textAlign, textDirection, fontWeight, fontStyle, maxLines, fontFamily, fontFamily, fontSize, t1 ? null : height, textHeightBehavior, strutStyle, ellipsis, locale);
    },
    createStrutStyle$9$fontFamily$fontFamilyFallback$fontSize$fontStyle$fontWeight$forceStrutHeight$height$leading$leadingDistribution(fontFamily, fontFamilyFallback, fontSize, fontStyle, fontWeight, forceStrutHeight, height, leading, leadingDistribution) {
      return new A.CkStrutStyle(fontFamily, fontFamilyFallback, fontSize, height === 0 ? null : height, leading, fontWeight, fontStyle, forceStrutHeight, leadingDistribution);
    },
    createParagraphBuilder$1(style) {
      var t1, t2, t3, t4, _null = null;
      type$.CkParagraphStyle._as(style);
      t1 = A._setArrayType([], type$.JSArray_double);
      t2 = A._setArrayType([], type$.JSArray_CkTextStyle);
      t3 = $.__canvasKit._readField$0().ParagraphBuilder.MakeFromFontCollection(style.skParagraphStyle, $.CanvasKitRenderer____instance._readField$0().get$_fontCollection().skFontCollection);
      t4 = style._textHeightBehavior;
      t4 = t4 == null ? _null : t4.leadingDistribution;
      t2.push(A.CkTextStyle$_(_null, _null, _null, _null, _null, _null, style._effectiveFontFamily, _null, _null, style._fontSize, style._fontStyle, _null, style._fontWeight, _null, style.__engine$_height, t4, _null, _null, style._originalFontFamily, _null, _null, _null, _null));
      return new A.CkParagraphBuilder(t3, style, t1, t2);
    },
    renderScene$2(scene, view) {
      return this.renderScene$body$CanvasKitRenderer(scene, view);
    },
    renderScene$body$CanvasKitRenderer(scene, view) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, rasterizer, renderQueue, recorder;
      var $async$renderScene$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              rasterizer = $async$self._rasterizers.$index(0, view.viewId);
              renderQueue = rasterizer.queue;
              recorder = $.$get$EnginePlatformDispatcher__instance()._onReportTimings != null ? new A.FrameTimingRecorder($.FrameTimingRecorder__currentFrameVsyncStart, $.FrameTimingRecorder__currentFrameBuildStart) : null;
              if (renderQueue.current != null) {
                t1 = renderQueue.next;
                if (t1 != null)
                  t1._0.complete$0(0);
                t1 = new A._Future($.Zone__current, type$._Future_void);
                renderQueue.next = new A._Record_3_completer_recorder_scene(new A._AsyncCompleter(t1, type$._AsyncCompleter_void), recorder, scene);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = new A._Future($.Zone__current, type$._Future_void);
              renderQueue.current = new A._Record_3_completer_recorder_scene(new A._AsyncCompleter(t1, type$._AsyncCompleter_void), recorder, scene);
              $async$self._kickRenderLoop$1(rasterizer);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$renderScene$2, $async$completer);
    },
    _kickRenderLoop$1(rasterizer) {
      return this._kickRenderLoop$body$CanvasKitRenderer(rasterizer);
    },
    _kickRenderLoop$body$CanvasKitRenderer(rasterizer) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, current, error, stackTrace, exception, renderQueue, t1, $async$exception;
      var $async$_kickRenderLoop$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              renderQueue = rasterizer.queue;
              t1 = renderQueue.current;
              t1.toString;
              current = t1;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait($async$self._renderScene$3(current._2, rasterizer, current._1), $async$_kickRenderLoop$1);
            case 7:
              // returning from await.
              current._0.complete$0(0);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = A.unwrapException($async$exception);
              stackTrace = A.getTraceFromException($async$exception);
              current._0.completeError$2(error, stackTrace);
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              t1 = renderQueue.next;
              renderQueue.current = t1;
              renderQueue.next = null;
              if (t1 == null) {
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = $async$self._kickRenderLoop$1(rasterizer);
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_kickRenderLoop$1, $async$completer);
    },
    _renderScene$3(scene, rasterizer, recorder) {
      return this._renderScene$body$CanvasKitRenderer(scene, rasterizer, recorder);
    },
    _renderScene$body$CanvasKitRenderer(scene, rasterizer, recorder) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t1;
      var $async$_renderScene$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = recorder == null;
              if (!t1)
                recorder.recordBuildFinish$0();
              if (!t1)
                recorder.recordRasterStart$0();
              $async$goto = 2;
              return A._asyncAwait(rasterizer.draw$1(type$.LayerScene._as(scene).layerTree), $async$_renderScene$3);
            case 2:
              // returning from await.
              if (!t1)
                recorder.recordRasterFinish$0();
              if (!t1)
                recorder.submitTimings$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_renderScene$3, $async$completer);
    },
    _onViewCreated$1(viewId) {
      var view = $.$get$EnginePlatformDispatcher__instance().get$viewManager()._viewData.$index(0, viewId);
      this._rasterizers.$indexSet(0, view.viewId, this._rasterizer.createViewRasterizer$1(view));
    },
    _onViewDisposed$1(viewId) {
      var t1 = this._rasterizers;
      if (!t1.containsKey$1(0, viewId))
        return;
      t1 = t1.remove$1(0, viewId);
      t1.toString;
      t1.get$viewEmbedder().dispose$0();
      t1.get$displayFactory().dispose$0();
    },
    clearFragmentProgramCache$0() {
      $.CanvasKitRenderer__programs.clear$0(0);
    }
  };
  A.CanvasKitRenderer_initialize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, viewManager, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, value, view, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = self.window.flutterCanvasKit != null ? 2 : 4;
              break;
            case 2:
              // then
              t1 = self.window.flutterCanvasKit;
              t1.toString;
              $.__canvasKit._value = t1;
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = self.window.flutterCanvasKitLoaded != null ? 5 : 7;
              break;
            case 5:
              // then
              t1 = self.window.flutterCanvasKitLoaded;
              t1.toString;
              $async$temp1 = $.__canvasKit;
              $async$goto = 8;
              return A._asyncAwait(A.promiseToFuture(t1, type$.JavaScriptObject), $async$call$0);
            case 8:
              // returning from await.
              $async$temp1._value = $async$result;
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              $async$temp1 = $.__canvasKit;
              $async$goto = 9;
              return A._asyncAwait(A.downloadCanvasKit(), $async$call$0);
            case 9:
              // returning from await.
              $async$temp1._value = $async$result;
              self.window.flutterCanvasKit = $.__canvasKit._readField$0();
            case 6:
              // join
            case 3:
              // join
              t1 = $.$get$EnginePlatformDispatcher__instance();
              viewManager = t1.get$viewManager();
              t2 = $async$self.$this;
              if (t2._onViewCreatedListener == null)
                for (t3 = viewManager._viewData.get$values(0), t4 = A._instanceType(t3), t3 = new A.MappedIterator(J.get$iterator$ax(t3.__internal$_iterable), t3._f, t4._eval$1("MappedIterator<1,2>")), t4 = t4._rest[1], t5 = type$._SyncBroadcastStreamController_int, t6 = type$.int, t7 = type$.EngineFlutterView, t8 = type$.JavaScriptObject, t9 = t2._rasterizers, t10 = t2._rasterizer; t3.moveNext$0();) {
                  t11 = t3.__internal$_current;
                  t11 = (t11 == null ? t4._as(t11) : t11).viewId;
                  value = t1.__EnginePlatformDispatcher_viewManager_FI;
                  if (value === $) {
                    value !== $ && A.throwUnnamedLateFieldADI();
                    value = t1.__EnginePlatformDispatcher_viewManager_FI = new A.FlutterViewManager(t1, A.LinkedHashMap_LinkedHashMap$_empty(t6, t7), A.LinkedHashMap_LinkedHashMap$_empty(t6, t8), new A._SyncBroadcastStreamController(null, null, t5), new A._SyncBroadcastStreamController(null, null, t5));
                  }
                  view = value._viewData.$index(0, t11);
                  t9.$indexSet(0, view.viewId, t10.createViewRasterizer$1(view));
                }
              if (t2._onViewCreatedListener == null) {
                t1 = viewManager._onViewCreatedController;
                t2._onViewCreatedListener = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onViewCreated());
              }
              if (t2._onViewDisposedListener == null) {
                t1 = viewManager._onViewDisposedController;
                t2._onViewDisposedListener = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onViewDisposed());
              }
              $.CanvasKitRenderer____instance._value = t2;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 71
  };
  A.Surface.prototype = {
    _syncCacheBytes$0() {
      var t2,
        t1 = this._skiaCacheBytes;
      if (t1 != null) {
        t2 = this._grContext;
        if (t2 != null)
          t2.setResourceCacheLimitBytes(t1);
      }
    },
    rasterizeToCanvas$3(bitmapSize, canvas, pictures) {
      return this.rasterizeToCanvas$body$Surface(bitmapSize, canvas, pictures);
    },
    rasterizeToCanvas$body$Surface(bitmapSize, canvas, pictures) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, bitmapSource, jsPromise, bitmap, value, t2, imageSource, t3, t1;
      var $async$rasterizeToCanvas$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._surface.surface.getCanvas();
              t1.clear(A._populateSkColor($.$get$_sharedSkColor1(), B.Color_0));
              B.JSArray_methods.forEach$1(pictures, new A.CkCanvas(t1).get$drawPicture());
              $async$self._surface.surface.flush();
              if (self.window.createImageBitmap != null)
                t1 = !A.isChrome110OrOlder();
              else
                t1 = false;
              $async$goto = t1 ? 2 : 4;
              break;
            case 2:
              // then
              if ($async$self.useOffscreenCanvas) {
                t1 = $async$self._offscreenCanvas;
                t1.toString;
                bitmapSource = t1;
              } else {
                t1 = $async$self._canvasElement;
                t1.toString;
                bitmapSource = t1;
              }
              t1 = bitmapSize.height;
              t1 = [t1, bitmapSize.width, 0, $async$self._pixelHeight - t1];
              jsPromise = self.createImageBitmap(bitmapSource, t1[2], t1[3], t1[1], t1[0]);
              jsPromise = jsPromise;
              t1 = type$.JavaScriptObject;
              $async$goto = 5;
              return A._asyncAwait(A.promiseToFuture(jsPromise, t1), $async$rasterizeToCanvas$3);
            case 5:
              // returning from await.
              bitmap = $async$result;
              canvas._ensureSize$1(new A.BitmapSize(A._asInt(bitmap.width), A._asInt(bitmap.height)));
              value = canvas.__RenderCanvas_renderContext_FI;
              if (value === $) {
                t2 = A.DomCanvasElementExtension_getContext(canvas.canvasElement, "bitmaprenderer", null);
                t2.toString;
                t1._as(t2);
                canvas.__RenderCanvas_renderContext_FI !== $ && A.throwUnnamedLateFieldADI();
                canvas.__RenderCanvas_renderContext_FI = t2;
                value = t2;
              }
              value.transferFromImageBitmap(bitmap);
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              if ($async$self.useOffscreenCanvas) {
                t1 = $async$self._offscreenCanvas;
                t1.toString;
                imageSource = t1;
              } else {
                t1 = $async$self._canvasElement;
                t1.toString;
                imageSource = t1;
              }
              t1 = $async$self._pixelHeight;
              canvas._ensureSize$1(bitmapSize);
              value = canvas.__RenderCanvas_renderContext2d_FI;
              if (value === $) {
                t2 = A.DomCanvasElementExtension_getContext(canvas.canvasElement, "2d", null);
                t2.toString;
                type$.JavaScriptObject._as(t2);
                canvas.__RenderCanvas_renderContext2d_FI !== $ && A.throwUnnamedLateFieldADI();
                canvas.__RenderCanvas_renderContext2d_FI = t2;
                value = t2;
              }
              t2 = bitmapSize.height;
              t3 = bitmapSize.width;
              A.DomCanvasRenderingContext2DExtension_drawImage(value, imageSource, 0, t1 - t2, t3, t2, 0, 0, t3, t2);
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$rasterizeToCanvas$3, $async$completer);
    },
    _updateLogicalHtmlCanvasSize$0() {
      var t1, t2, style, _this = this,
        devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      t1 = _this._pixelWidth;
      t2 = _this._pixelHeight;
      style = _this._canvasElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(style, "width", A.S(t1 / devicePixelRatio) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(style, "height", A.S(t2 / devicePixelRatio) + "px");
      _this._currentDevicePixelRatio = devicePixelRatio;
    },
    ensureSurface$0() {
      if (this._surface != null)
        return;
      this.createOrUpdateSurface$1(B.BitmapSize_1_1);
    },
    createOrUpdateSurface$1(size) {
      var previousSurfaceSize, devicePixelRatio, previousCanvasSize, t2, t3, t4, htmlCanvas, canvas, _this0, options, glContext, gl, _this = this,
        _s20_ = "webglcontextrestored",
        _s16_ = "webglcontextlost",
        t1 = size.width;
      if (t1 === 0 || size.height === 0)
        throw A.wrapException(A.CanvasKitError$("Cannot create surfaces of empty size."));
      if (!_this._forceNewContext) {
        previousSurfaceSize = _this._currentSurfaceSize;
        if (previousSurfaceSize != null && t1 === previousSurfaceSize.width && size.height === previousSurfaceSize.height) {
          devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
          if (devicePixelRatio == null) {
            t1 = self.window.devicePixelRatio;
            devicePixelRatio = t1 === 0 ? 1 : t1;
          }
          if (_this.isDisplayCanvas && devicePixelRatio !== _this._currentDevicePixelRatio)
            _this._updateLogicalHtmlCanvasSize$0();
          t1 = _this._surface;
          t1.toString;
          return t1;
        }
        previousCanvasSize = _this._currentCanvasPhysicalSize;
        if (previousCanvasSize != null)
          t2 = t1 > previousCanvasSize.width || size.height > previousCanvasSize.height;
        else
          t2 = false;
        if (t2) {
          t2 = size.toSize$0().$mul(0, 1.4);
          t3 = B.JSNumber_methods.round$0(t2._dx);
          t2 = B.JSNumber_methods.round$0(t2._dy);
          t4 = _this._surface;
          if (t4 != null)
            t4.dispose$0();
          _this._surface = null;
          _this._pixelWidth = t3;
          _this._pixelHeight = t2;
          if (_this.useOffscreenCanvas) {
            t2 = _this._offscreenCanvas;
            t2.toString;
            A.DomOffscreenCanvasExtension_set_width(t2, t3);
            t3 = _this._offscreenCanvas;
            t3.toString;
            A.DomOffscreenCanvasExtension_set_height(t3, _this._pixelHeight);
          } else {
            t2 = _this._canvasElement;
            t2.toString;
            A.DomCanvasElementExtension_set_width(t2, t3);
            t3 = _this._canvasElement;
            t3.toString;
            A.DomCanvasElementExtension_set_height(t3, _this._pixelHeight);
          }
          _this._currentCanvasPhysicalSize = new A.BitmapSize(_this._pixelWidth, _this._pixelHeight);
          if (_this.isDisplayCanvas)
            _this._updateLogicalHtmlCanvasSize$0();
        }
      }
      if (_this._forceNewContext || _this._currentCanvasPhysicalSize == null) {
        t2 = _this._surface;
        if (t2 != null)
          t2.dispose$0();
        _this._surface = null;
        t2 = _this._grContext;
        if (t2 != null)
          t2.releaseResourcesAndAbandonContext();
        t2 = _this._grContext;
        if (t2 != null)
          t2.delete();
        _this._grContext = null;
        t2 = _this._offscreenCanvas;
        if (t2 != null) {
          A.DomEventTargetExtension_removeEventListener(t2, _s20_, _this._cachedContextRestoredListener, false);
          t2 = _this._offscreenCanvas;
          t2.toString;
          A.DomEventTargetExtension_removeEventListener(t2, _s16_, _this._cachedContextLostListener, false);
          _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._offscreenCanvas = null;
        } else {
          t2 = _this._canvasElement;
          if (t2 != null) {
            A.DomEventTargetExtension_removeEventListener(t2, _s20_, _this._cachedContextRestoredListener, false);
            t2 = _this._canvasElement;
            t2.toString;
            A.DomEventTargetExtension_removeEventListener(t2, _s16_, _this._cachedContextLostListener, false);
            _this._canvasElement.remove();
            _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._canvasElement = null;
          }
        }
        _this._pixelWidth = t1;
        t2 = _this._pixelHeight = size.height;
        t3 = _this.useOffscreenCanvas;
        if (t3) {
          htmlCanvas = _this._offscreenCanvas = new self.OffscreenCanvas(t1, t2);
          _this._canvasElement = null;
        } else {
          canvas = _this._canvasElement = A.createDomCanvasElement(t2, t1);
          _this._offscreenCanvas = null;
          if (_this.isDisplayCanvas) {
            t1 = A.jsify("true");
            if (t1 == null)
              t1 = type$.Object._as(t1);
            canvas.setAttribute("aria-hidden", t1);
            A.DomCSSStyleDeclarationExtension_setProperty(_this._canvasElement.style, "position", "absolute");
            t1 = _this._canvasElement;
            t1.toString;
            _this.hostElement.append(t1);
            _this._updateLogicalHtmlCanvasSize$0();
          }
          htmlCanvas = canvas;
        }
        _this._cachedContextRestoredListener = A._functionToJS1(_this.get$_contextRestoredListener());
        t1 = A._functionToJS1(_this.get$_contextLostListener());
        _this._cachedContextLostListener = t1;
        A.DomEventTargetExtension_addEventListener(htmlCanvas, _s16_, t1, false);
        A.DomEventTargetExtension_addEventListener(htmlCanvas, _s20_, _this._cachedContextRestoredListener, false);
        _this._forceNewContext = false;
        t1 = $._cachedWebGLVersion;
        if ((t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1) !== -1 && !A.configuration().get$canvasKitForceCpuOnly()) {
          _this0 = $._cachedWebGLVersion;
          if (_this0 == null)
            _this0 = $._cachedWebGLVersion = A._detectWebGLVersion();
          options = type$.JavaScriptObject._as({antialias: 0, majorVersion: _this0});
          if (t3) {
            t1 = $.__canvasKit._readField$0();
            t2 = _this._offscreenCanvas;
            t2.toString;
            glContext = B.JSNumber_methods.toInt$0(t1.GetWebGLContext(t2, options));
          } else {
            t1 = $.__canvasKit._readField$0();
            t2 = _this._canvasElement;
            t2.toString;
            glContext = B.JSNumber_methods.toInt$0(t1.GetWebGLContext(t2, options));
          }
          _this._glContext = glContext;
          if (glContext !== 0) {
            _this._grContext = $.__canvasKit._readField$0().MakeGrContext(glContext);
            if (_this._sampleCount === -1 || _this._stencilBits === -1) {
              t1 = $._cachedWebGLVersion;
              if (t3) {
                t2 = _this._offscreenCanvas;
                t2.toString;
                gl = A.DomOffscreenCanvasExtension_getGlContext(t2, t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1);
              } else {
                t2 = _this._canvasElement;
                t2.toString;
                gl = A.DomCanvasElementExtension_getGlContext(t2, t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1);
              }
              _this._sampleCount = B.JSNumber_methods.toInt$0(gl.getParameter(B.JSNumber_methods.toInt$0(gl.SAMPLES)));
              _this._stencilBits = B.JSNumber_methods.toInt$0(gl.getParameter(B.JSNumber_methods.toInt$0(gl.STENCIL_BITS)));
            }
            _this._syncCacheBytes$0();
          }
        }
        _this._currentCanvasPhysicalSize = size;
      }
      _this._currentSurfaceSize = size;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
      return _this._surface = _this._createNewSurface$1(size);
    },
    _contextRestoredListener$1($event) {
      $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      $event.stopPropagation();
      $event.preventDefault();
    },
    _contextLostListener$1($event) {
      this._forceNewContext = true;
      $event.preventDefault();
    },
    _createNewSurface$1(size) {
      var t2, _this = this,
        t1 = $._cachedWebGLVersion;
      if ((t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1) === -1)
        return _this._makeSoftwareCanvasSurface$1("WebGL support not detected");
      else if (A.configuration().get$canvasKitForceCpuOnly())
        return _this._makeSoftwareCanvasSurface$1("CPU rendering forced by application");
      else if (_this._glContext === 0)
        return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL context");
      else {
        t1 = $.__canvasKit._readField$0();
        t2 = _this._grContext;
        t2.toString;
        t2 = A.callMethod(t1, "MakeOnScreenGLSurface", [t2, size.width, size.height, self.window.flutterCanvasKit.ColorSpace.SRGB, _this._sampleCount, _this._stencilBits]);
        if (t2 == null)
          return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL surface");
        return new A.CkSurface(t2, _this._glContext);
      }
    },
    _makeSoftwareCanvasSurface$1(reason) {
      var t1, t2, surface;
      if (!$.Surface__didWarnAboutWebGlInitializationFailure) {
        $.$get$printWarning().call$1("WARNING: Falling back to CPU-only rendering. " + reason + ".");
        $.Surface__didWarnAboutWebGlInitializationFailure = true;
      }
      if (this.useOffscreenCanvas) {
        t1 = $.__canvasKit._readField$0();
        t2 = this._offscreenCanvas;
        t2.toString;
        surface = t1.MakeSWCanvasSurface(t2);
      } else {
        t1 = $.__canvasKit._readField$0();
        t2 = this._canvasElement;
        t2.toString;
        surface = t1.MakeSWCanvasSurface(t2);
      }
      return new A.CkSurface(surface, null);
    },
    initialize$0(_) {
      this.ensureSurface$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._offscreenCanvas;
      if (t1 != null)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextlost", _this._cachedContextLostListener, false);
      t1 = _this._offscreenCanvas;
      if (t1 != null)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextrestored", _this._cachedContextRestoredListener, false);
      _this._cachedContextRestoredListener = _this._cachedContextLostListener = null;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.CkSurface.prototype = {
    dispose$0() {
      if (this._isDisposed)
        return;
      this.surface.dispose();
      this._isDisposed = true;
    }
  };
  A.CkParagraphStyle.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CkParagraphStyle && other.__engine$_textAlign === _this.__engine$_textAlign && other.__engine$_textDirection == _this.__engine$_textDirection && other._fontWeight == _this._fontWeight && other.__engine$_maxLines == _this.__engine$_maxLines && other._originalFontFamily == _this._originalFontFamily && other._fontSize == _this._fontSize && other.__engine$_height == _this.__engine$_height && J.$eq$(other._textHeightBehavior, _this._textHeightBehavior) && J.$eq$(other.__engine$_strutStyle, _this.__engine$_strutStyle) && other.__engine$_ellipsis == _this.__engine$_ellipsis && J.$eq$(other.__engine$_locale, _this.__engine$_locale);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.__engine$_textAlign, _this.__engine$_textDirection, _this._fontWeight, _this._fontStyle, _this.__engine$_maxLines, _this._originalFontFamily, _this._fontSize, _this.__engine$_height, _this._textHeightBehavior, _this.__engine$_strutStyle, _this.__engine$_ellipsis, _this.__engine$_locale, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.CkTextStyle.prototype = {
    get$skTextStyle() {
      var result, _this = this,
        value = _this.__CkTextStyle_skTextStyle_FI;
      if (value === $) {
        result = new A.CkTextStyle_skTextStyle_closure(_this).call$0();
        _this.__CkTextStyle_skTextStyle_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__CkTextStyle_skTextStyle_FI = result;
        value = result;
      }
      return value;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.CkTextStyle && J.$eq$(other.color, _this.color) && J.$eq$(other.decoration, _this.decoration) && J.$eq$(other.decorationColor, _this.decorationColor) && other.decorationStyle == _this.decorationStyle && other.fontWeight == _this.fontWeight && other.textBaseline == _this.textBaseline && other.leadingDistribution == _this.leadingDistribution && other.originalFontFamily == _this.originalFontFamily && other.fontSize == _this.fontSize && other.letterSpacing == _this.letterSpacing && other.wordSpacing == _this.wordSpacing && other.height == _this.height && other.decorationThickness == _this.decorationThickness && other.background == _this.background && other.foreground == _this.foreground && A.listEquals(other.shadows, _this.shadows) && A.listEquals(other.originalFontFamilyFallback, _this.originalFontFamilyFallback) && A.listEquals(other.fontFeatures, _this.fontFeatures) && A.listEquals(other.fontVariations, _this.fontVariations);
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        shadows = _this.shadows,
        fontVariations = _this.fontVariations,
        fontFamilyFallback = _this.originalFontFamilyFallback,
        t1 = fontFamilyFallback == null ? _null : A.Object_hashAll(fontFamilyFallback),
        t2 = shadows == null ? _null : A.Object_hashAll(shadows);
      return A.Object_hash(_this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.fontWeight, _this.fontStyle, _this.textBaseline, _this.leadingDistribution, _this.originalFontFamily, t1, _this.fontSize, _this.letterSpacing, _this.wordSpacing, _this.height, _this.locale, _this.background, _this.foreground, t2, _this.decorationThickness, A.Object_hash(_null, fontVariations == null ? _null : A.Object_hashAll(fontVariations), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue));
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.CkTextStyle_skTextStyle_closure.prototype = {
    call$0() {
      var t3, decorationValue, value, result, ckShadows, _i, shadow, ckShadow, point, _this, skFontVariations, fontVariation, skFontVariation,
        t1 = this.$this,
        color = t1.color,
        decoration = t1.decoration,
        decorationColor = t1.decorationColor,
        decorationStyle = t1.decorationStyle,
        decorationThickness = t1.decorationThickness,
        fontWeight = t1.fontWeight,
        textBaseline = t1.textBaseline,
        fontSize = t1.fontSize,
        letterSpacing = t1.letterSpacing,
        wordSpacing = t1.wordSpacing,
        height = t1.height,
        background = t1.background,
        foreground = t1.foreground,
        shadows = t1.shadows,
        fontVariations = t1.fontVariations,
        t2 = type$.JavaScriptObject,
        properties = t2._as({});
      if (background != null) {
        t3 = A.makeFreshSkColor(new A.Color(background._color));
        properties.backgroundColor = t3;
      }
      if (color != null) {
        t3 = A.makeFreshSkColor(color);
        properties.color = t3;
      }
      if (decoration != null) {
        decorationValue = B.JSNumber_methods.toInt$0($.__canvasKit._readField$0().NoDecoration);
        t3 = decoration._mask;
        if ((t3 | 1) === t3)
          decorationValue = (decorationValue | B.JSNumber_methods.toInt$0($.__canvasKit._readField$0().UnderlineDecoration)) >>> 0;
        if ((t3 | 2) === t3)
          decorationValue = (decorationValue | B.JSNumber_methods.toInt$0($.__canvasKit._readField$0().OverlineDecoration)) >>> 0;
        if ((t3 | 4) === t3)
          decorationValue = (decorationValue | B.JSNumber_methods.toInt$0($.__canvasKit._readField$0().LineThroughDecoration)) >>> 0;
        properties.decoration = decorationValue;
      }
      if (decorationThickness != null)
        properties.decorationThickness = decorationThickness;
      if (decorationColor != null) {
        t3 = A.makeFreshSkColor(decorationColor);
        properties.decorationColor = t3;
      }
      if (decorationStyle != null)
        properties.decorationStyle = $.$get$_skTextDecorationStyles()[decorationStyle.index];
      if (textBaseline != null)
        properties.textBaseline = $.$get$_skTextBaselines()[textBaseline.index];
      if (fontSize != null)
        A.SkTextStylePropertiesExtension_set_fontSize(properties, fontSize);
      if (letterSpacing != null)
        properties.letterSpacing = letterSpacing;
      if (wordSpacing != null)
        properties.wordSpacing = wordSpacing;
      if (height != null)
        A.SkTextStylePropertiesExtension_set_heightMultiplier(properties, height);
      switch (t1.leadingDistribution) {
        case null:
        case void 0:
          break;
        case B.TextLeadingDistribution_1:
          A.SkTextStylePropertiesExtension_set_halfLeading(properties, true);
          break;
        case B.TextLeadingDistribution_0:
          A.SkTextStylePropertiesExtension_set_halfLeading(properties, false);
          break;
      }
      value = t1.__CkTextStyle_combinedFontFamilies_FI;
      if (value === $) {
        result = A._computeCombinedFontFamilies(t1.effectiveFontFamily, t1.effectiveFontFamilyFallback);
        t1.__CkTextStyle_combinedFontFamilies_FI !== $ && A.throwUnnamedLateFieldADI();
        t1.__CkTextStyle_combinedFontFamilies_FI = result;
        value = result;
      }
      A.SkTextStylePropertiesExtension_set_fontFamilies(properties, value);
      if (fontWeight != null)
        properties.fontStyle = A.toSkFontStyle(fontWeight, t1.fontStyle);
      if (foreground != null) {
        t1 = A.makeFreshSkColor(new A.Color(foreground._color));
        properties.foregroundColor = t1;
      }
      if (shadows != null) {
        ckShadows = A._setArrayType([], type$.JSArray_JavaScriptObject);
        for (t1 = shadows.length, _i = 0; _i < shadows.length; shadows.length === t1 || (0, A.throwConcurrentModificationError)(shadows), ++_i) {
          shadow = shadows[_i];
          ckShadow = t2._as({});
          t3 = A.makeFreshSkColor(shadow.color);
          ckShadow.color = t3;
          t3 = shadow.offset;
          point = new Float32Array(2);
          point[0] = t3._dx;
          point[1] = t3._dy;
          ckShadow.offset = point;
          _this = shadow.blurRadius;
          ckShadow.blurRadius = _this;
          ckShadows.push(ckShadow);
        }
        properties.shadows = ckShadows;
      }
      if (fontVariations != null) {
        skFontVariations = A._setArrayType([], type$.JSArray_JavaScriptObject);
        for (t1 = fontVariations.length, _i = 0; _i < fontVariations.length; fontVariations.length === t1 || (0, A.throwConcurrentModificationError)(fontVariations), ++_i) {
          fontVariation = fontVariations[_i];
          skFontVariation = t2._as({});
          _this = fontVariation.axis;
          skFontVariation.axis = _this;
          _this = fontVariation.value;
          skFontVariation.value = _this;
          skFontVariations.push(skFontVariation);
        }
        properties.fontVariations = skFontVariations;
      }
      return $.__canvasKit._readField$0().TextStyle(properties);
    },
    $signature: 42
  };
  A.CkStrutStyle.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.CkStrutStyle && other._fontFamily == _this._fontFamily && other._fontSize == _this._fontSize && other.__engine$_height == _this.__engine$_height && other._leadingDistribution == _this._leadingDistribution && other._fontWeight == _this._fontWeight && other._forceStrutHeight == _this._forceStrutHeight && A.listEquals(other.__engine$_fontFamilyFallback, _this.__engine$_fontFamilyFallback);
    },
    get$hashCode(_) {
      var _this = this,
        fontFamilyFallback = _this.__engine$_fontFamilyFallback,
        t1 = fontFamilyFallback != null ? A.Object_hashAll(fontFamilyFallback) : null;
      return A.Object_hash(_this._fontFamily, t1, _this._fontSize, _this.__engine$_height, _this._leading, _this._leadingDistribution, _this._fontWeight, _this._fontStyle, _this._forceStrutHeight, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.CkParagraph.prototype = {
    get$height(_) {
      return this.__engine$_height;
    },
    get$longestLine() {
      return this._longestLine;
    },
    get$maxIntrinsicWidth() {
      return this._maxIntrinsicWidth;
    },
    get$width(_) {
      return this.__engine$_width;
    },
    getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, boxWidthStyle) {
      var t1, t2, index, t3;
      if (start < 0 || end < 0)
        return B.List_empty3;
      t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject;
      t1.toString;
      t2 = $.$get$_skRectHeightStyles()[boxHeightStyle.index];
      index = boxWidthStyle.index;
      t3 = $.$get$_skRectWidthStyles();
      t1 = t1.getRectsForRange(start, end, t2, t3[index < 2 ? index : 0]);
      return this.skRectsToTextBoxes$1(B.JSArray_methods.cast$1$0(t1, type$.JavaScriptObject));
    },
    getBoxesForRange$3$boxHeightStyle(start, end, boxHeightStyle) {
      return this.getBoxesForRange$4$boxHeightStyle$boxWidthStyle(start, end, boxHeightStyle, B.BoxWidthStyle_0);
    },
    skRectsToTextBoxes$1(skRects) {
      var t1, t2, t3, i, skRect, t4, skTextDirection,
        result = A._setArrayType([], type$.JSArray_TextBox);
      for (t1 = skRects._source, t2 = J.getInterceptor$asx(t1), t3 = skRects.$ti._rest[1], i = 0; i < t2.get$length(t1); ++i) {
        skRect = t3._as(t2.$index(t1, i));
        t4 = skRect.rect;
        skTextDirection = B.JSNumber_methods.toInt$0(skRect.dir.value);
        result.push(new A.TextBox(t4[0], t4[1], t4[2], t4[3], B.List_TextDirection_0_TextDirection_1[skTextDirection]));
      }
      return result;
    },
    getPositionForOffset$1(offset) {
      var affinity,
        t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject.getGlyphPositionAtCoordinate(offset._dx, offset._dy);
      affinity = B.List_TextAffinity_0_TextAffinity_1[B.JSNumber_methods.toInt$0(t1.affinity.value)];
      return new A.TextPosition(B.JSNumber_methods.toInt$0(t1.pos), affinity);
    },
    getGlyphInfoAt$1(codeUnitOffset) {
      var t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject.getGlyphInfoAt(codeUnitOffset);
      return t1 == null ? null : A.SkGlyphClusterInfoExtension_get__glyphInfo(t1);
    },
    layout$1(constraints) {
      var paragraph, e, t2, exception, _this = this,
        t1 = constraints.width;
      if (_this._lastLayoutConstraints === t1)
        return;
      _this._lastLayoutConstraints = t1;
      try {
        t2 = _this.__CkParagraph__ref_F;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t2 = t2._nativeObject;
        t2.toString;
        paragraph = t2;
        paragraph.layout(t1);
        _this._alphabeticBaseline = paragraph.getAlphabeticBaseline();
        _this._didExceedMaxLines = paragraph.didExceedMaxLines();
        _this.__engine$_height = paragraph.getHeight();
        _this._ideographicBaseline = paragraph.getIdeographicBaseline();
        _this._longestLine = paragraph.getLongestLine();
        _this._maxIntrinsicWidth = paragraph.getMaxIntrinsicWidth();
        _this._minIntrinsicWidth = paragraph.getMinIntrinsicWidth();
        _this.__engine$_width = paragraph.getMaxWidth();
        t1 = paragraph.getRectsForPlaceholders();
        _this.__CkParagraph__boxesForPlaceholders_A = _this.skRectsToTextBoxes$1(B.JSArray_methods.cast$1$0(t1, type$.JavaScriptObject));
      } catch (exception) {
        e = A.unwrapException(exception);
        $.$get$printWarning().call$1('CanvasKit threw an exception while laying out the paragraph. The font was "' + A.S(_this._paragraphStyle._originalFontFamily) + '". Exception:\n' + A.S(e));
        throw exception;
      }
    },
    getLineBoundary$1(position) {
      var metrics, offset, t2, t3,
        t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject.getLineMetrics();
      metrics = B.JSArray_methods.cast$1$0(t1, type$.JavaScriptObject);
      offset = position.offset;
      for (t1 = metrics.$ti, t2 = new A.ListIterator(metrics, metrics.get$length(0), t1._eval$1("ListIterator<ListBase.E>")), t1 = t1._eval$1("ListBase.E"); t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        if (offset >= t3.startIndex && offset <= t3.endIndex)
          return new A.TextRange(B.JSNumber_methods.toInt$0(t3.startIndex), B.JSNumber_methods.toInt$0(t3.endIndex));
      }
      return B.TextRange_m1_m1;
    },
    getLineMetricsAt$1(lineNumber) {
      var t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1._nativeObject.getLineMetricsAt(lineNumber);
      return t1 == null ? null : new A.CkLineMetrics(t1);
    },
    get$numberOfLines() {
      var t1 = this.__CkParagraph__ref_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return B.JSNumber_methods.toInt$0(t1._nativeObject.getNumberOfLines());
    }
  };
  A.CkLineMetrics.prototype = {
    get$baseline() {
      return this.skLineMetrics.baseline;
    },
    get$left(_) {
      return this.skLineMetrics.left;
    },
    get$width(_) {
      return this.skLineMetrics.width;
    }
  };
  A.CkParagraphBuilder.prototype = {
    addPlaceholder$5$baseline$baselineOffset(width, height, alignment, baseline, baselineOffset) {
      var t1;
      ++this._placeholderCount;
      this._placeholderScales.push(1);
      t1 = baselineOffset == null ? height : baselineOffset;
      A.callMethod(this._paragraphBuilder, "addPlaceholder", [width, height, $.$get$_skPlaceholderAlignments()[alignment.index], $.$get$_skTextBaselines()[0], t1]);
    },
    addPlaceholder$3(width, height, alignment) {
      return this.addPlaceholder$5$baseline$baselineOffset(width, height, alignment, null, null);
    },
    addText$1(text) {
      var fontFamilies = A._setArrayType([], type$.JSArray_String),
        style = B.JSArray_methods.get$last(this._styleStack),
        t1 = style.effectiveFontFamily;
      if (t1 != null)
        fontFamilies.push(t1);
      t1 = style.effectiveFontFamilyFallback;
      if (t1 != null)
        B.JSArray_methods.addAll$1(fontFamilies, t1);
      $.$get$_renderer().get$fontCollection().get$fontFallbackManager().ensureFontsSupportText$2(text, fontFamilies);
      this._paragraphBuilder.addText(text);
    },
    build$0() {
      var t1, t2, cache, t3, cachedResult, result, t4, t5, item,
        _s9_ = "Paragraph";
      if ($.$get$_ckRequiresClientICU()) {
        t1 = this._paragraphBuilder;
        t2 = B.C_Utf8Codec.decode$1(0, new A.CodeUnits(t1.getText()));
        cache = A.SegmentationCacheExtensions_getCacheForText($.$get$segmentationCache(), t2);
        t3 = cache == null;
        cachedResult = t3 ? null : cache.$index(0, t2);
        if (cachedResult != null)
          result = cachedResult;
        else {
          t4 = A.fragmentUsingIntlSegmenter(t2, B.IntlSegmenterGranularity_1);
          t5 = A.fragmentUsingIntlSegmenter(t2, B.IntlSegmenterGranularity_0);
          result = new A._Record_3_breaks_graphemes_words(A.fragmentUsingV8LineBreaker(t2), t5, t4);
        }
        if (!t3) {
          t3 = cache._itemMap;
          item = t3.$index(0, t2);
          if (item == null)
            cache.__engine$_add$2(0, t2, result);
          else {
            t4 = item.element;
            if (!J.$eq$(t4._1, result)) {
              item.remove$0(0);
              cache.__engine$_add$2(0, t2, result);
            } else {
              item.remove$0(0);
              t5 = cache._itemQueue;
              t5.addFirst$1(t4);
              t5 = t5._sentinel._nextLink._asNonSentinelEntry$0();
              t5.toString;
              t3.$indexSet(0, t2, t5);
            }
          }
        }
        t1.setWordsUtf16(result._2);
        t1.setGraphemeBreaksUtf16(result._1);
        t1.setLineBreaksUtf16(result._0);
      }
      t1 = this._paragraphBuilder;
      result = t1.build();
      t1.delete();
      t1 = new A.CkParagraph(this._style);
      t2 = new A.UniqueRef(_s9_, type$.UniqueRef_JavaScriptObject);
      t2.UniqueRef$3(t1, result, _s9_, type$.JavaScriptObject);
      t1.__CkParagraph__ref_F !== $ && A.throwUnnamedLateFieldAI();
      t1.__CkParagraph__ref_F = t2;
      return t1;
    },
    get$placeholderCount() {
      return this._placeholderCount;
    },
    pop$0() {
      var t1 = this._styleStack;
      if (t1.length <= 1)
        return;
      t1.pop();
      this._paragraphBuilder.pop();
    },
    pushStyle$1(style) {
      var t2, textHeight, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, skStyle, foreground, _this, background, _null = null,
        t1 = this._styleStack,
        baseStyle = B.JSArray_methods.get$last(t1);
      type$.CkTextStyle._as(style);
      t2 = style.height;
      if (t2 === 0)
        textHeight = _null;
      else
        textHeight = t2 == null ? baseStyle.height : t2;
      t2 = style.color;
      if (t2 == null)
        t2 = baseStyle.color;
      t3 = style.decoration;
      if (t3 == null)
        t3 = baseStyle.decoration;
      t4 = style.decorationColor;
      if (t4 == null)
        t4 = baseStyle.decorationColor;
      t5 = style.decorationStyle;
      if (t5 == null)
        t5 = baseStyle.decorationStyle;
      t6 = style.decorationThickness;
      if (t6 == null)
        t6 = baseStyle.decorationThickness;
      t7 = style.fontWeight;
      if (t7 == null)
        t7 = baseStyle.fontWeight;
      t8 = style.textBaseline;
      if (t8 == null)
        t8 = baseStyle.textBaseline;
      t9 = style.originalFontFamily;
      if (t9 == null)
        t9 = baseStyle.originalFontFamily;
      t10 = style.effectiveFontFamily;
      if (t10 == null)
        t10 = baseStyle.effectiveFontFamily;
      t11 = style.originalFontFamilyFallback;
      if (t11 == null)
        t11 = baseStyle.originalFontFamilyFallback;
      t12 = style.effectiveFontFamilyFallback;
      if (t12 == null)
        t12 = baseStyle.effectiveFontFamilyFallback;
      t13 = style.fontSize;
      if (t13 == null)
        t13 = baseStyle.fontSize;
      t14 = style.letterSpacing;
      if (t14 == null)
        t14 = baseStyle.letterSpacing;
      t15 = style.wordSpacing;
      if (t15 == null)
        t15 = baseStyle.wordSpacing;
      t16 = style.leadingDistribution;
      if (t16 == null)
        t16 = baseStyle.leadingDistribution;
      t17 = style.background;
      if (t17 == null)
        t17 = baseStyle.background;
      t18 = style.foreground;
      if (t18 == null)
        t18 = baseStyle.foreground;
      t19 = style.shadows;
      if (t19 == null)
        t19 = baseStyle.shadows;
      t20 = style.fontVariations;
      if (t20 == null)
        t20 = baseStyle.fontVariations;
      skStyle = A.CkTextStyle$_(t17, t2, t3, t4, t5, t6, t10, t12, baseStyle.fontFeatures, t13, baseStyle.fontStyle, t20, t7, t18, textHeight, t16, t14, baseStyle.locale, t9, t11, t19, t8, t15);
      t1.push(skStyle);
      t1 = skStyle.foreground;
      t2 = t1 == null;
      if (!t2 || skStyle.background != null) {
        foreground = t2 ? _null : t1.skiaObject;
        if (foreground == null) {
          foreground = $.$get$CkParagraphBuilder__defaultTextForeground();
          t1 = skStyle.color;
          _this = t1 == null ? _null : t1.get$value(t1);
          if (_this == null)
            _this = 4278190080;
          foreground.setColorInt(_this);
        }
        t1 = skStyle.background;
        background = t1 == null ? _null : t1.skiaObject;
        if (background == null)
          background = $.$get$CkParagraphBuilder__defaultTextBackground();
        this._paragraphBuilder.pushPaintStyle(skStyle.get$skTextStyle(), foreground, background);
      } else
        this._paragraphBuilder.pushStyle(skStyle.get$skTextStyle());
    }
  };
  A._computeCombinedFontFamilies_closure.prototype = {
    call$1(font) {
      return this.fontFamily === font;
    },
    $signature: 23
  };
  A.IntlSegmenterGranularity.prototype = {
    _enumToString$0() {
      return "IntlSegmenterGranularity." + this._name;
    }
  };
  A.CanvasKitError.prototype = {
    toString$0(_) {
      return "CanvasKitError: " + this.message;
    }
  };
  A.ClipboardMessageHandler.prototype = {
    setDataMethodCall$2(methodCall, callback) {
      var t1 = {};
      t1.errorEnvelopeEncoded = false;
      this._copyToClipboardStrategy.setData$1(0, A._asStringQ(J.$index$asx(type$.Map_of_String_and_nullable_Object._as(methodCall.$arguments), "text"))).then$1$1(new A.ClipboardMessageHandler_setDataMethodCall_closure(t1, callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_setDataMethodCall_closure0(t1, callback));
    },
    getDataMethodCall$1(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(new A.ClipboardMessageHandler_getDataMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_getDataMethodCall_closure0(this, callback));
    },
    hasStringsMethodCall$1(callback) {
      this._pasteFromClipboardStrategy.getData$0(0).then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure(callback), type$.Null).catchError$1(new A.ClipboardMessageHandler_hasStringsMethodCall_closure0(callback));
    }
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure.prototype = {
    call$1(success) {
      var t1 = this.callback;
      if (success) {
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([true]));
      } else {
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
        this._box_0.errorEnvelopeEncoded = true;
      }
    },
    $signature: 38
  };
  A.ClipboardMessageHandler_setDataMethodCall_closure0.prototype = {
    call$1(_) {
      var t1;
      if (!this._box_0.errorEnvelopeEncoded) {
        t1 = this.callback;
        t1.toString;
        t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["copy_fail", "Clipboard.setData failed", null]));
      }
    },
    $signature: 15
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure.prototype = {
    call$1(data) {
      var map = A.LinkedHashMap_LinkedHashMap$_literal(["text", data], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 45
  };
  A.ClipboardMessageHandler_getDataMethodCall_closure0.prototype = {
    call$1(error) {
      var t1;
      if (error instanceof A.UnimplementedError) {
        A.Future_Future$delayed(B.Duration_0, null, type$.void).then$1$1(new A.ClipboardMessageHandler_getDataMethodCall__closure(this.callback), type$.Null);
        return;
      }
      t1 = this.callback;
      A.print("Could not get text from clipboard: " + A.S(error));
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1(["paste_fail", "Clipboard.getData failed", null]));
    },
    $signature: 15
  };
  A.ClipboardMessageHandler_getDataMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 8
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure.prototype = {
    call$1(data) {
      var map = A.LinkedHashMap_LinkedHashMap$_literal(["value", data.length !== 0], type$.String, type$.dynamic),
        t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 45
  };
  A.ClipboardMessageHandler_hasStringsMethodCall_closure0.prototype = {
    call$1(error) {
      var map, t1;
      if (error instanceof A.UnimplementedError) {
        A.Future_Future$delayed(B.Duration_0, null, type$.void).then$1$1(new A.ClipboardMessageHandler_hasStringsMethodCall__closure(this.callback), type$.Null);
        return;
      }
      map = A.LinkedHashMap_LinkedHashMap$_literal(["value", false], type$.String, type$.dynamic);
      t1 = this.callback;
      t1.toString;
      t1.call$1(B.C_JSONMessageCodec.encodeMessage$1([map]));
    },
    $signature: 15
  };
  A.ClipboardMessageHandler_hasStringsMethodCall__closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(null);
    },
    $signature: 8
  };
  A.ClipboardAPICopyStrategy.prototype = {
    setData$1(_, text) {
      return this.setData$body$ClipboardAPICopyStrategy(0, text);
    },
    setData$body$ClipboardAPICopyStrategy(_, text) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, error, t1, exception, $async$exception;
      var $async$setData$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = self.window.navigator.clipboard;
              t1.toString;
              text.toString;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(t1.writeText(text), type$.dynamic), $async$setData$1);
            case 7:
              // returning from await.
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              error = A.unwrapException($async$exception);
              A.print("copy is not successful " + A.S(error));
              t1 = A.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$returnValue = A.Future_Future$value(true, type$.bool);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$setData$1, $async$completer);
    }
  };
  A.ClipboardAPIPasteStrategy.prototype = {
    getData$0(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue;
      var $async$getData$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.promiseToFuture(self.window.navigator.clipboard.readText(), type$.String);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$getData$0, $async$completer);
    }
  };
  A.ExecCommandCopyStrategy.prototype = {
    setData$1(_, text) {
      return A.Future_Future$value(this._setDataSync$1(text), type$.bool);
    },
    _setDataSync$1(text) {
      var tempTextArea, result, error, exception,
        _s8_ = "-99999px",
        _s11_ = "transparent",
        tempElement = A.DomDocumentExtension_createElement(self.document, "textarea"),
        elementStyle = tempElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", _s8_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", _s8_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      self.document.body.append(tempElement);
      tempTextArea = tempElement;
      A.DomHTMLTextAreaElementExtension_set_value(tempTextArea, text);
      A.DomElementExtension_focus(tempTextArea, null);
      tempTextArea.select();
      result = false;
      try {
        result = self.document.execCommand("copy");
        if (!result)
          A.print("copy is not successful");
      } catch (exception) {
        error = A.unwrapException(exception);
        A.print("copy is not successful " + A.S(error));
      } finally {
        tempTextArea.remove();
      }
      return result;
    }
  };
  A.ExecCommandPasteStrategy.prototype = {
    getData$0(_) {
      return A.Future_Future$error(new A.UnimplementedError("Paste is not implemented for this browser."), null, type$.String);
    }
  };
  A.FlutterConfiguration.prototype = {
    get$canvasKitForceCpuOnly() {
      var t1 = this._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.canvasKitForceCpuOnly;
        if (t1 == null)
          t1 = null;
      }
      return t1 === true;
    },
    get$canvasKitMaximumSurfaces() {
      var maxSurfaces,
        t1 = this._configuration;
      if (t1 == null)
        maxSurfaces = null;
      else {
        t1 = t1.canvasKitMaximumSurfaces;
        if (t1 == null)
          t1 = null;
        t1 = t1 == null ? null : B.JSNumber_methods.toInt$0(t1);
        maxSurfaces = t1;
      }
      if (maxSurfaces == null)
        maxSurfaces = 8;
      if (maxSurfaces < 1)
        return 1;
      return maxSurfaces;
    },
    get$debugShowSemanticsNodes() {
      var t1 = this._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.debugShowSemanticsNodes;
        if (t1 == null)
          t1 = null;
      }
      return t1 === true;
    },
    get$fontFallbackBaseUrl() {
      var t1 = this._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.fontFallbackBaseUrl;
        if (t1 == null)
          t1 = null;
      }
      return t1 == null ? "https://fonts.gstatic.com/s/" : t1;
    }
  };
  A.EngineFlutterDisplay.prototype = {
    get$devicePixelRatio(_) {
      var t1 = this._debugDevicePixelRatioOverride;
      if (t1 == null) {
        t1 = self.window.devicePixelRatio;
        if (t1 === 0)
          t1 = 1;
      }
      return t1;
    }
  };
  A.ScreenOrientation.prototype = {
    setPreferredOrientation$1(orientations) {
      return this.setPreferredOrientation$body$ScreenOrientation(orientations);
    },
    setPreferredOrientation$body$ScreenOrientation(orientations) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, screenOrientation, lockType, t1, exception, $screen, $async$exception;
      var $async$setPreferredOrientation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $screen = self.window.screen;
              $async$goto = $screen != null ? 3 : 4;
              break;
            case 3:
              // then
              screenOrientation = $screen.orientation;
              $async$goto = screenOrientation != null ? 5 : 6;
              break;
            case 5:
              // then
              t1 = J.getInterceptor$asx(orientations);
              $async$goto = t1.get$isEmpty(orientations) ? 7 : 9;
              break;
            case 7:
              // then
              screenOrientation.unlock();
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              lockType = A.ScreenOrientation__deviceOrientationToLockType(A._asStringQ(t1.get$first(orientations)));
              $async$goto = lockType != null ? 10 : 11;
              break;
            case 10:
              // then
              $async$handler = 13;
              $async$goto = 16;
              return A._asyncAwait(A.promiseToFuture(screenOrientation.lock(lockType), type$.dynamic), $async$setPreferredOrientation$1);
            case 16:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 15;
              break;
            case 13:
              // catch
              $async$handler = 12;
              $async$exception = $async$currentError;
              t1 = A.Future_Future$value(false, type$.bool);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 15;
              break;
            case 12:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 15:
              // after finally
            case 11:
              // join
            case 8:
              // join
            case 6:
              // join
            case 4:
              // join
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$setPreferredOrientation$1, $async$completer);
    }
  };
  A.DomConsoleExtension_get_warn_closure.prototype = {
    call$1(arg) {
      return this._this.warn(arg);
    },
    $signature: 9
  };
  A.DomNavigatorExtension_get_languages_closure.prototype = {
    call$1(any) {
      any.toString;
      return A._asString(any);
    },
    $signature: 189
  };
  A.HttpFetchResponseImpl.prototype = {
    get$status(_) {
      return A._asInt(this._domResponse.status);
    },
    get$hasPayload() {
      var t1 = this._domResponse,
        accepted = A._asInt(t1.status) >= 200 && A._asInt(t1.status) < 300,
        t2 = A._asInt(t1.status),
        t3 = A._asInt(t1.status),
        unknownRedirect = A._asInt(t1.status) > 307 && A._asInt(t1.status) < 400;
      return accepted || t2 === 0 || t3 === 304 || unknownRedirect;
    },
    get$payload() {
      var _this = this;
      if (!_this.get$hasPayload())
        throw A.wrapException(new A.HttpFetchNoPayloadError(_this.url, _this.get$status(0)));
      return new A.HttpFetchPayloadImpl(_this._domResponse);
    },
    $isHttpFetchResponse: 1
  };
  A.HttpFetchPayloadImpl.prototype = {
    read$1$1(_, callback, $T) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, chunk, reader;
      var $async$read$1$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              reader = $async$self._domResponse.body.getReader();
              t1 = type$.JavaScriptObject;
            case 2:
              // for condition
              // trivial condition
              $async$goto = 4;
              return A._asyncAwait(A.promiseToFuture(reader.read(), t1), $async$read$1$1);
            case 4:
              // returning from await.
              chunk = $async$result;
              if (chunk.done) {
                // goto after for
                $async$goto = 3;
                break;
              }
              callback.call$1($T._as(chunk.value));
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$read$1$1, $async$completer);
    },
    asByteBuffer$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue, $async$self = this, t1;
      var $async$asByteBuffer$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.promiseToFuture($async$self._domResponse.arrayBuffer(), type$.nullable_Object), $async$asByteBuffer$0);
            case 3:
              // returning from await.
              t1 = $async$result;
              t1.toString;
              $async$returnValue = type$.ByteBuffer._as(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$asByteBuffer$0, $async$completer);
    }
  };
  A.HttpFetchNoPayloadError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to fetch "' + this.url + '". HTTP request succeeded, but the server responded with HTTP status ' + this.status + ".";
    },
    $isException: 1
  };
  A.HttpFetchError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to complete HTTP request to fetch "' + this.url + '": ' + A.S(this.requestError);
    },
    $isException: 1
  };
  A.DomSubscription.prototype = {};
  A.DomPoint.prototype = {};
  A.createDomResizeObserver_closure.prototype = {
    call$2(entries, observer) {
      this.fn.call$2(B.JSArray_methods.cast$1$0(entries, type$.JavaScriptObject), observer);
    },
    $signature: 190
  };
  A._ttPolicy_closure.prototype = {
    call$1(url) {
      var uri = A.Uri_parse(url, 0, null);
      if (B.Set_OhoY3.contains$1(0, B.JSArray_methods.get$last(uri.get$pathSegments())))
        return uri.toString$0(0);
      self.window.console.error("URL rejected by TrustedTypes policy flutter-engine: " + url + "(download prevented)");
      return null;
    },
    $signature: 199
  };
  A._DomListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current(_) {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomListIterator(this.list, this.$ti._eval$1("_DomListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A._DomTouchListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current(_) {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomTouchListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomTouchListIterator(this.list, this.$ti._eval$1("_DomTouchListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A.DomIteratorWrapper.prototype = {
    get$current(_) {
      var t1 = this.__DomIteratorWrapper__current_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    moveNext$0() {
      var result = this.__engine$_iterator.next();
      if (result.done)
        return false;
      this.__DomIteratorWrapper__current_A = this.$ti._precomputed1._as(result.value);
      return true;
    }
  };
  A.sendFontChangeMessage_closure.prototype = {
    call$1(_) {
      $._fontChangeScheduled = false;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/system", $.$get$_fontChangeMessage(), new A.sendFontChangeMessage__closure());
    },
    $signature: 31
  };
  A.sendFontChangeMessage__closure.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.FontFallbackManager.prototype = {
    ensureFontsSupportText$2(text, fontFamilies) {
      var t1, t2, t3, rune, codePoints, _this = this,
        runesToCheck = A.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      for (t1 = new A.RuneIterator(text), t2 = _this.knownCoveredCodePoints, t3 = _this.codePointsWithNoKnownFont; t1.moveNext$0();) {
        rune = t1._currentCodePoint;
        if (!(rune < 160 || t2.contains$1(0, rune) || t3.contains$1(0, rune)))
          runesToCheck.add$1(0, rune);
      }
      if (runesToCheck._collection$_length === 0)
        return;
      codePoints = A.List_List$of(runesToCheck, true, runesToCheck.$ti._precomputed1);
      if (_this.registry.getMissingCodePoints$2(codePoints, fontFamilies).length !== 0)
        _this.addMissingCodePoints$1(codePoints);
    },
    addMissingCodePoints$1(codePoints) {
      var _this = this;
      _this._codePointsToCheckAgainstFallbackFonts.addAll$1(0, codePoints);
      if (!_this._scheduledCodePointCheck) {
        _this._scheduledCodePointCheck = true;
        _this._idleFuture = A.Future_Future$delayed(B.Duration_0, new A.FontFallbackManager_addMissingCodePoints_closure(_this), type$.void);
      }
    },
    _ensureFallbackFonts$0() {
      var t1, codePoints;
      this._scheduledCodePointCheck = false;
      t1 = this._codePointsToCheckAgainstFallbackFonts;
      if (t1._collection$_length === 0)
        return;
      codePoints = A.List_List$of(t1, true, A._instanceType(t1)._precomputed1);
      t1.clear$0(0);
      this.findFontsForMissingCodePoints$1(codePoints);
    },
    findFontsForMissingCodePoints$1(codePoints) {
      var t2, t3, _i, codePoint, value, result, component, t4, t5, _i0, font, selectedFonts, selectedFont, _this = this,
        missingCodePoints = A._setArrayType([], type$.JSArray_int),
        requiredComponents = A._setArrayType([], type$.JSArray_FallbackFontComponent),
        t1 = type$.JSArray_NotoFont,
        candidateFonts = A._setArrayType([], t1);
      for (t2 = codePoints.length, t3 = type$.FallbackFontComponent, _i = 0; _i < codePoints.length; codePoints.length === t2 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        codePoint = codePoints[_i];
        value = _this.__FontFallbackManager_codePointToComponents_FI;
        if (value === $) {
          value = _this.__FontFallbackManager_fontComponents_FI;
          if (value === $) {
            result = _this._decodeFontComponents$1("1rhb2gl,1r2ql,1rh2il,4i,,1z2i,1r3c,1z,1rj2gl,1zb2g,2b2g,a,f,bac,2x,ba,1zb,2b,a1qhb2gl,e,1rhbv1kl,1j,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,f1lhb2gl,1rh2u,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,i,e1mhb2gl,a2w,bab,5b,p,1n,1q,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,bac1lhb2gl,1o,3x,2d,4n,5d,az,2j,ba1ohb2gl,1e,1k,1rhb2s,1u,bab1mhb2gl,1rhb2g,2f,2n,a1qhbv1kl,f1lhbv1kl,po,1l,1rj2s,2s,2w,e2s,1c,1n3n,1p,3e,5o,a1d,a1e,f2r,j,1f,2l,3g,4a,4y,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,a1g,a1k,d,i4v,q,y,1b,1e3f,1rhb,1rhb1cfxlr,2g,3h,3k,aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaabaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,af1khb2gl,a4s,g,i2z1kk,i4k,r,u,z,1a,1ei,1rhb1c1dl,1rhb1ixlr,1rhb2glr,1t,2a,2k,2m,2v,3a,3b,3c,3f,3p,4f,4t,4w,5g,aaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaabaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,af,afb,a1gjhbv1kl,a1j,a1qhb2glg,a5f,ea,e1mhbv1kl,i1n,k,l,m,n,o,poip,s,w,x,1c1ja,1g,1rhb1cfselco,1rhb1ixl,1rhb2belr,1v,1x,1y,1zb2gl,2c,2e,2h,2i,2o,2q,2t,2u,3d,3ey,3i,3j,3l,3m,3q,3t,3y,3z,4e,4g,4il,4j,4m,4p,4r,4v,4x,4z,5a,5c,5f,5h,5i,5k,5l,5m,aaa,aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,aaafbacabaadafbgaaabbfbaaaaaaaaafaaafcacabadgaccbacabadaabaaaaaabaaaadc,aaa1ohb1c1dl,aaa1ohb2gl,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaabaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaaaabaabaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,acaaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaabaaaaaabbaaaaaaaaaaaabaaaaaabaaaaaaaabaaaaaaaaaaaaaaaaaaaabaaabaaaaaaaaaabaaaaaaaaaaaaaaaaaaa,acaaababaaaaaaaaabaabdaaabbaaaaaaabeaaaaaaaaaaaaccaaaaaacbaacabagbcabcbaaaaabaabaaaaaaabaabaaaacca,acabacaaabababbbbaaaabbcababaaaaaabdacaaaaaacaababaabababaaaaaaaaaaaaaabaaaabaaabaaaaaaababaaaabadaaaaaaaa,ad,afadbbabadbbbiadbaaaabbcdcbacbbabaabcacdabaaaaacaaaababacbaaabbbaaiaaaaab,afy3n,agaccaaaaakjbbhbabacaaghgpfccddacaaaabbaai,ahafkdeadbacebaaaaahd1ekgbabgbbi,ahbacabaadafaagaaabaafbaaaaaaaaafaaafcacabalccbacabaacaabaaaaaabaaaadc,ah1ihb2gjb,ah1l,ah1l1nupk,ai,aj,aooiabmecfadjqpehabd,aooiabmo1rqbd,aoojbmohni1db,aoolx1i1h,ao1aahbbcl1ekeggb,at2j,av,avcfg3gla,avd,avdk,ayae1kb1olm,ayf3n,ay1x1v,azgda1k,a1di,a1dxo,a1d1y,a1elhb2gl,a1i,a1jghb2gl,a1k2g,a1qhb1c1dl,a1qhb2bel,a1t,a2d1c,a2i,a2n,a2tmv,a3an,a3h,a3k,a3o,a3og,a3r,a3w,a3x,a4r,a5a,a5e,baba,bab1a,bab1mhbv1kl,bab5j,bacz,bac2r,ba1ohbv1kl,ba2u,c,da1mhbv1kl,da1mhb2gl,e1alhb2gl,e1l,e4o,fu,f2r2a,f2s,gb2ka1kie,gb2z1kk,h,ir,i1n2wk,i2z1v,i4kk,j1a,ph3u,poip2zd,poy,p4r,s1h,t,ty3ca,v,x2j1p,1d,1eip,1ejbladaiak1wg,1ejbladail1wg,1ejbleail1wg,1eyo2ib,1e3w,1h,1i,1j1n,1m,1os,1q1p,1rhbmpfselco,1rhb1cfxl,1rhb1cyelr,1rhb2bel,1r2q,1s,1w,2p,2r,2xu,2z,3n,3o,3r,3s,3u,3v,3w,4b,4c,4d,4h,4k,4l,4o,4q,4s,5e,5j,5n");
            _this.__FontFallbackManager_fontComponents_FI !== $ && A.throwUnnamedLateFieldADI();
            _this.__FontFallbackManager_fontComponents_FI = result;
            value = result;
          }
          result = A._UnicodePropertyLookup__UnicodePropertyLookup$fromPackedData("", value, t3);
          _this.__FontFallbackManager_codePointToComponents_FI !== $ && A.throwUnnamedLateFieldADI();
          _this.__FontFallbackManager_codePointToComponents_FI = result;
          value = result;
        }
        component = value.lookup$1(codePoint);
        if (component.get$_activeFonts().length === 0)
          missingCodePoints.push(codePoint);
        else {
          if (component.coverCount === 0)
            requiredComponents.push(component);
          ++component.coverCount;
        }
      }
      for (t2 = requiredComponents.length, _i = 0; _i < requiredComponents.length; requiredComponents.length === t2 || (0, A.throwConcurrentModificationError)(requiredComponents), ++_i) {
        component = requiredComponents[_i];
        for (t4 = component.get$_activeFonts(), t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {
          font = t4[_i0];
          if (font.coverCount === 0)
            candidateFonts.push(font);
          font.coverCount = font.coverCount + component.coverCount;
          font.coverComponents.push(component);
        }
      }
      selectedFonts = A._setArrayType([], t1);
      for (; candidateFonts.length !== 0;) {
        selectedFont = _this._selectFont$1(candidateFonts);
        selectedFonts.push(selectedFont);
        for (t1 = A.List_List$of(selectedFont.coverComponents, true, t3), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          component = t1[_i];
          for (t4 = component.get$_activeFonts(), t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {
            font = t4[_i0];
            font.coverCount = font.coverCount - component.coverCount;
            B.JSArray_methods.remove$1(font.coverComponents, component);
          }
          component.coverCount = 0;
        }
        if (!!candidateFonts.fixed$length)
          A.throwExpression(A.UnsupportedError$("removeWhere"));
        B.JSArray_methods._removeWhere$2(candidateFonts, new A.FontFallbackManager_findFontsForMissingCodePoints_closure(), true);
      }
      t1 = _this.__FontFallbackManager_downloadQueue_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      B.JSArray_methods.forEach$1(selectedFonts, t1.get$add(t1));
      if (missingCodePoints.length !== 0)
        if (t1.pendingFonts.__js_helper$_length === 0) {
          $.$get$printWarning().call$1("Could not find a set of Noto fonts to display all missing characters. Please add a font asset for the missing characters. See: https://flutter.dev/docs/cookbook/design/fonts");
          _this.codePointsWithNoKnownFont.addAll$1(0, missingCodePoints);
        }
    },
    _selectFont$1(fonts) {
      var t1, maxCodePointsCovered, bestFont, _i, font, t2, bestFont0, _this = this,
        bestFonts = A._setArrayType([], type$.JSArray_NotoFont);
      for (t1 = fonts.length, maxCodePointsCovered = -1, bestFont = null, _i = 0; _i < fonts.length; fonts.length === t1 || (0, A.throwConcurrentModificationError)(fonts), ++_i) {
        font = fonts[_i];
        t2 = font.coverCount;
        if (t2 > maxCodePointsCovered) {
          B.JSArray_methods.clear$0(bestFonts);
          bestFonts.push(font);
          maxCodePointsCovered = font.coverCount;
          bestFont = font;
        } else if (t2 === maxCodePointsCovered) {
          bestFonts.push(font);
          if (font.index < bestFont.index)
            bestFont = font;
        }
      }
      if (bestFonts.length > 1)
        if (B.JSArray_methods.every$1(bestFonts, new A.FontFallbackManager__selectFont_closure(_this))) {
          t1 = self.window.navigator.language;
          if (t1 === "zh-Hans" || t1 === "zh-CN" || t1 === "zh-SG" || t1 === "zh-MY") {
            bestFont0 = _this._notoSansSC;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          } else if (t1 === "zh-Hant" || t1 === "zh-TW" || t1 === "zh-MO") {
            bestFont0 = _this._notoSansTC;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          } else if (t1 === "zh-HK") {
            bestFont0 = _this._notoSansHK;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          } else if (t1 === "ja") {
            bestFont0 = _this._notoSansJP;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          } else if (t1 === "ko") {
            bestFont0 = _this._notoSansKR;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          } else {
            bestFont0 = _this._notoSansSC;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          }
        } else {
          bestFont0 = _this._notoSymbols;
          if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
            bestFont = bestFont0;
          else {
            bestFont0 = _this._notoSansSC;
            if (B.JSArray_methods.contains$1(bestFonts, bestFont0))
              bestFont = bestFont0;
          }
        }
      bestFont.toString;
      return bestFont;
    },
    _decodeFontComponents$1(data) {
      var t2, t3, _i,
        t1 = A._setArrayType([], type$.JSArray_FallbackFontComponent);
      for (t2 = data.split(","), t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push(new A.FallbackFontComponent(this._decodeFontSet$1(t2[_i])));
      return t1;
    },
    _decodeFontSet$1(data) {
      var t1, t2, previousIndex, prefix, i, code, index,
        result = A._setArrayType([], type$.JSArray_NotoFont);
      for (t1 = data.length, t2 = this.fallbackFonts, previousIndex = -1, prefix = 0, i = 0; i < t1; ++i) {
        code = data.charCodeAt(i);
        if (97 <= code && code < 123) {
          index = previousIndex + (prefix * 26 + (code - 97)) + 1;
          result.push(t2[index]);
          previousIndex = index;
          prefix = 0;
        } else if (48 <= code && code < 58)
          prefix = prefix * 10 + (code - 48);
        else
          throw A.wrapException(A.StateError$("Unreachable"));
      }
      return result;
    }
  };
  A.FontFallbackManager$__closure.prototype = {
    call$1(font) {
      return font.name === "Noto Sans SC";
    },
    $signature: 4
  };
  A.FontFallbackManager$__closure0.prototype = {
    call$1(font) {
      return font.name === "Noto Sans TC";
    },
    $signature: 4
  };
  A.FontFallbackManager$__closure1.prototype = {
    call$1(font) {
      return font.name === "Noto Sans HK";
    },
    $signature: 4
  };
  A.FontFallbackManager$__closure2.prototype = {
    call$1(font) {
      return font.name === "Noto Sans JP";
    },
    $signature: 4
  };
  A.FontFallbackManager$__closure3.prototype = {
    call$1(font) {
      return font.name === "Noto Sans KR";
    },
    $signature: 4
  };
  A.FontFallbackManager$__closure4.prototype = {
    call$1(font) {
      return font.name === "Noto Sans Symbols";
    },
    $signature: 4
  };
  A.FontFallbackManager_addMissingCodePoints_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t1._ensureFallbackFonts$0();
              t1._scheduledCodePointCheck = false;
              t1 = t1.__FontFallbackManager_downloadQueue_F;
              t1 === $ && A.throwUnnamedLateFieldNI();
              $async$goto = 2;
              return A._asyncAwait(t1.waitForIdle$0(), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 6
  };
  A.FontFallbackManager_findFontsForMissingCodePoints_closure.prototype = {
    call$1(font) {
      return font.coverCount === 0;
    },
    $signature: 4
  };
  A.FontFallbackManager__selectFont_closure.prototype = {
    call$1(font) {
      var t1 = this.$this;
      return font === t1._notoSansSC || font === t1._notoSansTC || font === t1._notoSansHK || font === t1._notoSansJP || font === t1._notoSansKR;
    },
    $signature: 4
  };
  A._UnicodePropertyLookup.prototype = {
    get$length(_) {
      return this._boundaries.length;
    },
    lookup$1(value) {
      var start, mid,
        t1 = this._boundaries,
        end = t1.length;
      for (start = 0; true;) {
        if (start === end)
          return this.__engine$_values[start];
        mid = start + B.JSInt_methods._tdivFast$1(end - start, 2);
        if (value >= t1[mid])
          start = mid + 1;
        else
          end = mid;
      }
    }
  };
  A.FallbackFontDownloadQueue.prototype = {
    waitForIdle$0() {
      var t1 = this._idleCompleter;
      if (t1 == null)
        return A.Future_Future$value(null, type$.void);
      else
        return t1.future;
    },
    add$1(_, font) {
      var t1, t2, _this = this;
      if (_this.downloadedFonts.contains$1(0, font) || _this.pendingFonts.containsKey$1(0, font.url))
        return;
      t1 = _this.pendingFonts;
      t2 = t1.__js_helper$_length;
      t1.$indexSet(0, font.url, font);
      if (_this._idleCompleter == null)
        _this._idleCompleter = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
      if (t2 === 0)
        A.Timer_Timer(B.Duration_0, _this.get$startDownloads());
    },
    startDownloads$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, t4, t5, _i, downloads, downloadedFontFamilies;
      var $async$startDownloads$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              downloads = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Future_void);
              downloadedFontFamilies = A._setArrayType([], type$.JSArray_String);
              for (t1 = $async$self.pendingFonts, t2 = t1.get$values(0), t3 = A._instanceType(t2), t2 = new A.MappedIterator(J.get$iterator$ax(t2.__internal$_iterable), t2._f, t3._eval$1("MappedIterator<1,2>")), t4 = type$.void, t3 = t3._rest[1]; t2.moveNext$0();) {
                t5 = t2.__internal$_current;
                if (t5 == null)
                  t5 = t3._as(t5);
                downloads.$indexSet(0, t5.url, A.Future_Future(new A.FallbackFontDownloadQueue_startDownloads_closure($async$self, t5, downloadedFontFamilies), t4));
              }
              $async$goto = 2;
              return A._asyncAwait(A.Future_wait(downloads.get$values(0), false, t4), $async$startDownloads$0);
            case 2:
              // returning from await.
              B.JSArray_methods.sort$0(downloadedFontFamilies);
              for (t2 = downloadedFontFamilies.length, t3 = $async$self.fallbackManager, t4 = t3.globalFontFallbacks, _i = 0; _i < downloadedFontFamilies.length; downloadedFontFamilies.length === t2 || (0, A.throwConcurrentModificationError)(downloadedFontFamilies), ++_i) {
                t5 = t1.remove$1(0, downloadedFontFamilies[_i]);
                t5.toString;
                t5 = t5.name;
                if (t5 === "Noto Color Emoji" || t5 === "Noto Emoji")
                  if (B.JSArray_methods.get$first(t4) === "Roboto")
                    B.JSArray_methods.insert$2(t4, 1, t5);
                  else
                    B.JSArray_methods.insert$2(t4, 0, t5);
                else
                  t4.push(t5);
              }
              $async$goto = t1.__js_helper$_length === 0 ? 3 : 5;
              break;
            case 3:
              // then
              t3.registry.fontCollection.registerDownloadedFonts$0();
              A.sendFontChangeMessage();
              t1 = $async$self._idleCompleter;
              t1.toString;
              $async$self._idleCompleter = null;
              t1.complete$0(0);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$goto = 6;
              return A._asyncAwait($async$self.startDownloads$0(), $async$startDownloads$0);
            case 6:
              // returning from await.
            case 4:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$startDownloads$0, $async$completer);
    }
  };
  A.FallbackFontDownloadQueue_startDownloads_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, url, e, t1, t2, exception, $async$exception;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              t1 = $async$self.font;
              t2 = t1.url;
              url = A.configuration().get$fontFallbackBaseUrl() + t2;
              $async$goto = 7;
              return A._asyncAwait($async$self.$this.fallbackManager.registry.loadFallbackFont$2(t1.name, url), $async$call$0);
            case 7:
              // returning from await.
              $async$self.downloadedFontFamilies.push(t2);
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              t1 = $async$self.font;
              t2 = t1.url;
              $async$self.$this.pendingFonts.remove$1(0, t2);
              $.$get$printWarning().call$1("Failed to load font " + t1.name + " at " + A.configuration().get$fontFallbackBaseUrl() + t2);
              $.$get$printWarning().call$1(J.toString$0$(e));
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$self.$this.downloadedFonts.add$1(0, $async$self.font);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 6
  };
  A.FontAsset.prototype = {};
  A.FontFamily.prototype = {};
  A.FontManifest.prototype = {};
  A.fetchFontManifest_closure.prototype = {
    call$1(accumulated) {
      if (accumulated.length !== 1)
        throw A.wrapException(A.AssertionError$(string$.There_));
      this._box_0.fontManifestJson = B.JSArray_methods.get$first(accumulated);
    },
    $signature: 187
  };
  A.fetchFontManifest_closure0.prototype = {
    call$1(chunk) {
      return this.inputSink.add$1(0, chunk);
    },
    $signature: 181
  };
  A.fetchFontManifest_closure1.prototype = {
    call$1(fontFamilyJson) {
      var t1, familyName;
      type$.Map_String_dynamic._as(fontFamilyJson);
      t1 = J.getInterceptor$asx(fontFamilyJson);
      familyName = A._asString(t1.$index(fontFamilyJson, "family"));
      t1 = J.map$1$1$ax(type$.List_dynamic._as(t1.$index(fontFamilyJson, "fonts")), new A.fetchFontManifest__closure(), type$.FontAsset);
      return new A.FontFamily(familyName, A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")));
    },
    $signature: 174
  };
  A.fetchFontManifest__closure.prototype = {
    call$1(fontAssetJson) {
      var asset, t2, t3, t4,
        t1 = type$.String,
        descriptors = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = J.get$entries$x(type$.Map_String_dynamic._as(fontAssetJson)), t1 = t1.get$iterator(t1), asset = null; t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        t3 = t2.key;
        t4 = J.$eq$(t3, "asset");
        t2 = t2.value;
        if (t4) {
          A._asString(t2);
          asset = t2;
        } else
          descriptors.$indexSet(0, t3, A.S(t2));
      }
      if (asset == null)
        throw A.wrapException(A.AssertionError$("Invalid Font manifest, missing 'asset' key on font."));
      return new A.FontAsset(asset, descriptors);
    },
    $signature: 172
  };
  A.FontLoadError.prototype = {};
  A.FontNotFoundError.prototype = {};
  A.FontDownloadError.prototype = {};
  A.FontInvalidDataError.prototype = {};
  A.AssetFontsResult.prototype = {};
  A.FrameTimingRecorder.prototype = {
    recordBuildFinish$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this._buildFinishMicros = t1;
    },
    recordRasterStart$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this._rasterStartMicros = t1;
    },
    recordRasterFinish$0() {
      var t1 = A.FrameTimingRecorder__nowMicros();
      this._rasterFinishMicros = t1;
    },
    submitTimings$0() {
      var t2, t3, now, _this = this,
        t1 = _this._buildFinishMicros;
      t1.toString;
      t2 = _this._rasterStartMicros;
      t2.toString;
      t3 = _this._rasterFinishMicros;
      t3.toString;
      t3 = A._setArrayType([_this._vsyncStartMicros, _this._buildStartMicros, t1, t2, t3, t3, 0, 0, 0, 0, 1], type$.JSArray_int);
      $.FrameTimingRecorder__frameTimings.push(new A.FrameTiming(t3));
      now = A.FrameTimingRecorder__nowMicros();
      if (now - $.$get$FrameTimingRecorder__frameTimingsLastSubmitTime() > 100000) {
        $.FrameTimingRecorder__frameTimingsLastSubmitTime = now;
        t1 = $.$get$EnginePlatformDispatcher__instance();
        t2 = $.FrameTimingRecorder__frameTimings;
        A.invoke1(t1._onReportTimings, t1._onReportTimingsZone, t2);
        $.FrameTimingRecorder__frameTimings = A._setArrayType([], type$.JSArray_FrameTiming);
      }
    }
  };
  A.HtmlRenderer.prototype = {};
  A.ResourceManager.prototype = {};
  A.DebugEngineInitializationState.prototype = {
    _enumToString$0() {
      return "DebugEngineInitializationState." + this._name;
    }
  };
  A.initializeEngineServices_closure.prototype = {
    call$2(_, __) {
      var t1, _i;
      for (t1 = $._hotRestartListeners.length, _i = 0; _i < $._hotRestartListeners.length; $._hotRestartListeners.length === t1 || (0, A.throwConcurrentModificationError)($._hotRestartListeners), ++_i)
        $._hotRestartListeners[_i].call$0();
      return A.Future_Future$value(A.ServiceExtensionResponse$result("OK"), type$.ServiceExtensionResponse);
    },
    $signature: 65
  };
  A.initializeEngineServices_closure0.prototype = {
    call$0() {
      var t1 = this._box_0;
      if (!t1.waitingForAnimation) {
        t1.waitingForAnimation = true;
        self.window.requestAnimationFrame(A._functionToJS1(new A.initializeEngineServices__closure(t1)));
      }
    },
    $signature: 0
  };
  A.initializeEngineServices__closure.prototype = {
    call$1(highResTime) {
      var highResTimeMicroseconds, t2, t3,
        t1 = $.$get$EnginePlatformDispatcher__instance();
      if (t1._onReportTimings != null)
        $.FrameTimingRecorder__currentFrameVsyncStart = A.FrameTimingRecorder__nowMicros();
      if (t1._onReportTimings != null)
        $.FrameTimingRecorder__currentFrameBuildStart = A.FrameTimingRecorder__nowMicros();
      this._box_0.waitingForAnimation = false;
      highResTimeMicroseconds = B.JSNumber_methods.toInt$0(1000 * highResTime);
      t2 = t1._onBeginFrame;
      if (t2 != null) {
        t3 = A.Duration$(0, 0, highResTimeMicroseconds, 0, 0, 0);
        t1._viewsRenderedInCurrentFrame = A.LinkedHashSet_LinkedHashSet$_empty(type$.FlutterView);
        A.invoke1(t2, t1._onBeginFrameZone, t3);
        t1._viewsRenderedInCurrentFrame = null;
      }
      t2 = t1._onDrawFrame;
      if (t2 != null) {
        t1._viewsRenderedInCurrentFrame = A.LinkedHashSet_LinkedHashSet$_empty(type$.FlutterView);
        A.invoke(t2, t1._onDrawFrameZone);
        t1._viewsRenderedInCurrentFrame = null;
      }
    },
    $signature: 31
  };
  A.initializeEngineServices_initializeRendererCallback.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$_renderer().initialize$0(0);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 6
  };
  A.FlutterApp__staticInteropFactoryStub_closure.prototype = {
    call$1(id) {
      return this.removeView.call$1(A._asInt(id));
    },
    $signature: 170
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure.prototype = {
    call$1(config) {
      return A.futureToPromise(this.initializeEngine.call$1(config), type$.JSObject);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 69
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure0.prototype = {
    call$0() {
      return A.futureToPromise(this.autoStart.call$0(), type$.JSObject);
    },
    $signature: 44
  };
  A.FlutterAppRunner__staticInteropFactoryStub_closure.prototype = {
    call$1(args) {
      return A.futureToPromise(this.runApp.call$1(args), type$.JSObject);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 69
  };
  A.futureToPromise_closure.prototype = {
    call$2(resolver, rejecter) {
      this.future.then$1$2$onError(new A.futureToPromise__closure(resolver, this.T), new A.futureToPromise__closure0(rejecter), type$.void);
    },
    $signature: 166
  };
  A.futureToPromise__closure.prototype = {
    call$1(value) {
      return this.resolver.call(null, value);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.futureToPromise__closure0.prototype = {
    call$1(error) {
      $.$get$printWarning().call$1("Rejecting promise with error: " + A.S(error));
      this.rejecter.call(null, null);
    },
    $signature: 79
  };
  A._kLogicalKeyToModifierGetter_closure.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure0.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure1.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure2.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure3.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event._event);
      return t1 === true;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure4.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event._event);
      return t1 === true;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure5.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 5
  };
  A._kLogicalKeyToModifierGetter_closure6.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 5
  };
  A._cached_closure.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.cache;
      return t2 == null ? t1.cache = this.body.call$0() : t2;
    },
    $signature() {
      return this.T._eval$1("0()");
    }
  };
  A.KeyboardBinding.prototype = {
    KeyboardBinding$_$0() {
      var _this = this;
      _this._addEventListener$2(0, "keydown", new A.KeyboardBinding$__closure(_this));
      _this._addEventListener$2(0, "keyup", new A.KeyboardBinding$__closure0(_this));
    },
    get$_converter() {
      var t1, t2, t3, _this = this,
        value = _this.__KeyboardBinding__converter_FI;
      if (value === $) {
        t1 = $.$get$browser().get$operatingSystem();
        t2 = type$.int;
        t3 = t1 === B.OperatingSystem_4 || t1 === B.OperatingSystem_0;
        t1 = A.KeyboardConverter__mappingFromPlatform(t1);
        _this.__KeyboardBinding__converter_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__KeyboardBinding__converter_FI = new A.KeyboardConverter(_this.get$_onKeyData(), t3, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.void_Function));
      }
      return value;
    },
    _addEventListener$2(_, eventName, handler) {
      var wrappedHandler = A._functionToJS1(new A.KeyboardBinding__addEventListener_loggedHandler(handler));
      this._listeners.$indexSet(0, eventName, wrappedHandler);
      A.DomEventTargetExtension_addEventListener(self.window, eventName, wrappedHandler, true);
    },
    _onKeyData$1(data) {
      var t1 = {};
      t1.result = null;
      $.$get$EnginePlatformDispatcher__instance().invokeOnKeyData$2(data, new A.KeyboardBinding__onKeyData_closure(t1));
      t1 = t1.result;
      t1.toString;
      return t1;
    }
  };
  A.KeyboardBinding$__closure.prototype = {
    call$1(domEvent) {
      var t1;
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent(domEvent));
      t1 = $.RawKeyboard__instance;
      if (t1 != null)
        t1.handleHtmlEvent$1(domEvent);
    },
    $signature: 1
  };
  A.KeyboardBinding$__closure0.prototype = {
    call$1(domEvent) {
      var t1;
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent(domEvent));
      t1 = $.RawKeyboard__instance;
      if (t1 != null)
        t1.handleHtmlEvent$1(domEvent);
    },
    $signature: 1
  };
  A.KeyboardBinding__addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A.KeyboardBinding__onKeyData_closure.prototype = {
    call$1(handled) {
      this._box_0.result = handled;
    },
    $signature: 48
  };
  A.FlutterHtmlKeyboardEvent.prototype = {};
  A.KeyboardConverter.prototype = {
    _scheduleAsyncEvent$3(duration, getData, callback) {
      var t2, t1 = {};
      t1.canceled = false;
      t2 = type$.void;
      A.Future_Future$delayed(duration, null, t2).then$1$1(new A.KeyboardConverter__scheduleAsyncEvent_closure(t1, this, callback, getData), t2);
      return new A.KeyboardConverter__scheduleAsyncEvent_closure0(t1);
    },
    _startGuardingKey$3(physicalKey, logicalKey, currentTimeStamp) {
      var cancelingCallback, t1, t2, _this = this;
      if (!_this.onDarwin)
        return;
      cancelingCallback = _this._scheduleAsyncEvent$3(B.Duration_2000000, new A.KeyboardConverter__startGuardingKey_closure(currentTimeStamp, physicalKey, logicalKey), new A.KeyboardConverter__startGuardingKey_closure0(_this, physicalKey));
      t1 = _this._keyGuards;
      t2 = t1.remove$1(0, physicalKey);
      if (t2 != null)
        t2.call$0();
      t1.$indexSet(0, physicalKey, cancelingCallback);
    },
    _handleEvent$1($event) {
      var timeStamp, t3, physicalKey, logicalKeyIsCharacter, logicalKey, isPhysicalDown, type, t4, t5, lastLogicalRecord, nextLogicalRecord, character, _this = this, _null = null,
        t1 = $event._event,
        t2 = A.DomEventExtension_get_timeStamp(t1);
      t2.toString;
      timeStamp = A._eventTimeStampToDuration(t2);
      t2 = A.DomKeyboardEventExtension_get_key(t1);
      t2.toString;
      t3 = A.DomKeyboardEventExtension_get_code(t1);
      t3.toString;
      physicalKey = A.KeyboardConverter__getPhysicalCode(t3);
      logicalKeyIsCharacter = !(t2.length > 1 && t2.charCodeAt(0) < 127 && t2.charCodeAt(1) < 127);
      logicalKey = A._cached(new A.KeyboardConverter__handleEvent_closure(_this, t2, $event, logicalKeyIsCharacter, physicalKey), type$.int);
      if (t1.type !== "keydown")
        if (_this.onDarwin) {
          t3 = A.DomKeyboardEventExtension_get_code(t1);
          t3.toString;
          t3 = t3 === "CapsLock";
          isPhysicalDown = t3;
        } else
          isPhysicalDown = false;
      else
        isPhysicalDown = true;
      if (_this.onDarwin) {
        t3 = A.DomKeyboardEventExtension_get_code(t1);
        t3.toString;
        t3 = t3 === "CapsLock";
      } else
        t3 = false;
      if (t3) {
        _this._scheduleAsyncEvent$3(B.Duration_0, new A.KeyboardConverter__handleEvent_closure0(timeStamp, physicalKey, logicalKey), new A.KeyboardConverter__handleEvent_closure1(_this, physicalKey));
        type = B.KeyEventType_0;
      } else if (isPhysicalDown) {
        t3 = _this._pressingRecords;
        if (t3.$index(0, physicalKey) != null) {
          t4 = t1.repeat;
          if (t4 == null)
            t4 = _null;
          if (t4 === true)
            type = B.KeyEventType_2;
          else {
            t4 = _this._dispatchKeyData;
            t4.toString;
            t5 = t3.$index(0, physicalKey);
            t5.toString;
            t4.call$1(new A.KeyData(timeStamp, B.KeyEventType_1, physicalKey, t5, _null, true));
            t3.remove$1(0, physicalKey);
            type = B.KeyEventType_0;
          }
        } else
          type = B.KeyEventType_0;
      } else {
        if (_this._pressingRecords.$index(0, physicalKey) == null) {
          t1.preventDefault();
          return;
        }
        type = B.KeyEventType_1;
      }
      t3 = _this._pressingRecords;
      lastLogicalRecord = t3.$index(0, physicalKey);
      nextLogicalRecord = _null;
      switch (type.index) {
        case 0:
          nextLogicalRecord = logicalKey.call$0();
          break;
        case 1:
          break;
        case 2:
          nextLogicalRecord = lastLogicalRecord;
          break;
      }
      t4 = nextLogicalRecord == null;
      if (t4)
        t3.remove$1(0, physicalKey);
      else
        t3.$indexSet(0, physicalKey, nextLogicalRecord);
      $.$get$_kLogicalKeyToModifierGetter().forEach$1(0, new A.KeyboardConverter__handleEvent_closure2(_this, logicalKey, $event, timeStamp));
      if (logicalKeyIsCharacter)
        if (!t4)
          _this._startGuardingKey$3(physicalKey, logicalKey.call$0(), timeStamp);
        else {
          t3 = _this._keyGuards.remove$1(0, physicalKey);
          if (t3 != null)
            t3.call$0();
        }
      if (logicalKeyIsCharacter)
        character = t2;
      else
        character = _null;
      t2 = lastLogicalRecord == null ? logicalKey.call$0() : lastLogicalRecord;
      t3 = type === B.KeyEventType_1 ? _null : character;
      if (_this._dispatchKeyData.call$1(new A.KeyData(timeStamp, type, physicalKey, t2, t3, false)))
        t1.preventDefault();
    },
    handleEvent$1($event) {
      var _this = this, t1 = {},
        t2 = $event._event;
      if (A.DomKeyboardEventExtension_get_key(t2) == null || A.DomKeyboardEventExtension_get_code(t2) == null)
        return;
      t1.sentAnyEvents = false;
      _this._dispatchKeyData = new A.KeyboardConverter_handleEvent_closure(t1, _this);
      try {
        _this._handleEvent$1($event);
      } finally {
        if (!t1.sentAnyEvents)
          _this._dispatchKeyData.call$1(B.KeyData_65R);
        _this._dispatchKeyData = null;
      }
    },
    _synthesizeModifierIfNeeded$5(physicalLeft, physicalRight, logicalLeft, type, domTimestamp) {
      var t2, _this = this,
        t1 = _this._pressingRecords,
        leftPressed = t1.containsKey$1(0, physicalLeft),
        rightPressed = t1.containsKey$1(0, physicalRight),
        alreadyPressed = leftPressed || rightPressed,
        synthesizeDown = type === B.KeyEventType_0 && !alreadyPressed,
        synthesizeUp = type === B.KeyEventType_1 && alreadyPressed;
      if (synthesizeDown) {
        _this.performDispatchKeyData.call$1(new A.KeyData(A._eventTimeStampToDuration(domTimestamp), B.KeyEventType_0, physicalLeft, logicalLeft, null, true));
        t1.$indexSet(0, physicalLeft, logicalLeft);
      }
      if (synthesizeUp && leftPressed) {
        t2 = t1.$index(0, physicalLeft);
        t2.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalLeft, t2);
      }
      if (synthesizeUp && rightPressed) {
        t1 = t1.$index(0, physicalRight);
        t1.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalRight, t1);
      }
    },
    _synthesizeKeyUpEvent$3(domTimestamp, physical, logical) {
      this.performDispatchKeyData.call$1(new A.KeyData(A._eventTimeStampToDuration(domTimestamp), B.KeyEventType_1, physical, logical, null, true));
      this._pressingRecords.remove$1(0, physical);
    }
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure.prototype = {
    call$1(_) {
      var _this = this;
      if (!_this._box_0.canceled && !_this.$this._disposed) {
        _this.callback.call$0();
        _this.$this.performDispatchKeyData.call$1(_this.getData.call$0());
      }
    },
    $signature: 8
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure0.prototype = {
    call$0() {
      this._box_0.canceled = true;
    },
    $signature: 0
  };
  A.KeyboardConverter__startGuardingKey_closure.prototype = {
    call$0() {
      return new A.KeyData(new A.Duration(this.currentTimeStamp._duration + 2000000), B.KeyEventType_1, this.physicalKey, this.logicalKey, null, true);
    },
    $signature: 49
  };
  A.KeyboardConverter__startGuardingKey_closure0.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure.prototype = {
    call$0() {
      var t2, result, localeLogicalKeys, t3, t4, _this = this,
        t1 = _this.eventKey,
        mappedLogicalKey = B.Map_o06v8.$index(0, t1);
      if (mappedLogicalKey != null)
        return mappedLogicalKey;
      t2 = _this.event._event;
      if (B.Map_0GYb.containsKey$1(0, A.DomKeyboardEventExtension_get_key(t2))) {
        t1 = A.DomKeyboardEventExtension_get_key(t2);
        t1.toString;
        t1 = B.Map_0GYb.$index(0, t1);
        result = t1 == null ? null : t1[B.JSNumber_methods.toInt$0(t2.location)];
        result.toString;
        return result;
      }
      if (_this.logicalKeyIsCharacter) {
        localeLogicalKeys = _this.$this._mapping.getLogicalKey$3(A.DomKeyboardEventExtension_get_code(t2), A.DomKeyboardEventExtension_get_key(t2), B.JSNumber_methods.toInt$0(t2.keyCode));
        if (localeLogicalKeys != null)
          return localeLogicalKeys;
      }
      if (t1 === "Dead") {
        t1 = t2.altKey;
        t3 = t2.ctrlKey;
        t4 = A.DomKeyboardEventExtension_get_shiftKey(t2);
        t2 = t2.metaKey;
        t1 = t1 ? 1073741824 : 0;
        t3 = t3 ? 268435456 : 0;
        t4 = t4 === true ? 536870912 : 0;
        t2 = t2 ? 2147483648 : 0;
        return _this.physicalKey + (t1 + t3 + t4 + t2) + 98784247808;
      }
      return B.JSString_methods.get$hashCode(t1) + 98784247808;
    },
    $signature: 33
  };
  A.KeyboardConverter__handleEvent_closure0.prototype = {
    call$0() {
      return new A.KeyData(this.timeStamp, B.KeyEventType_1, this.physicalKey, this.logicalKey.call$0(), null, true);
    },
    $signature: 49
  };
  A.KeyboardConverter__handleEvent_closure1.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure2.prototype = {
    call$2(testeeLogicalKey, getModifier) {
      var t1, t2, _this = this;
      if (J.$eq$(_this.logicalKey.call$0(), testeeLogicalKey))
        return;
      t1 = _this.$this;
      t2 = t1._pressingRecords;
      if (t2.containsValue$1(0, testeeLogicalKey) && !getModifier.call$1(_this.event))
        t2.removeWhere$1(t2, new A.KeyboardConverter__handleEvent__closure(t1, testeeLogicalKey, _this.timeStamp));
    },
    $signature: 164
  };
  A.KeyboardConverter__handleEvent__closure.prototype = {
    call$2(physicalKey, logicalRecord) {
      var t1 = this.testeeLogicalKey;
      if (logicalRecord !== t1)
        return false;
      this.$this._dispatchKeyData.call$1(new A.KeyData(this.timeStamp, B.KeyEventType_1, physicalKey, t1, null, true));
      return true;
    },
    $signature: 159
  };
  A.KeyboardConverter_handleEvent_closure.prototype = {
    call$1(data) {
      this._box_0.sentAnyEvents = true;
      return this.$this.performDispatchKeyData.call$1(data);
    },
    $signature: 32
  };
  A.ContextMenu.prototype = {
    disable$0(_) {
      if (!this._enabled)
        return;
      this._enabled = false;
      A.DomEventTargetExtension_addEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    },
    enable$0(_) {
      if (this._enabled)
        return;
      this._enabled = true;
      A.DomEventTargetExtension_removeEventListener(this.element, "contextmenu", $.$get$preventDefaultListener(), null);
    }
  };
  A.MouseCursor.prototype = {};
  A.preventDefaultListener_closure.prototype = {
    call$1($event) {
      $event.preventDefault();
    },
    $signature: 1
  };
  A.BrowserHistory.prototype = {
    get$_unsubscribe() {
      var t1 = this.__BrowserHistory__unsubscribe_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    dispose$0() {
      var _this = this;
      if (_this._isDisposed || _this.get$urlStrategy() == null)
        return;
      _this._isDisposed = true;
      _this._unsubscribe$0();
    },
    exit$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$exit$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.get$urlStrategy() != null ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return A._asyncAwait($async$self.tearDown$0(), $async$exit$0);
            case 4:
              // returning from await.
              $async$goto = 5;
              return A._asyncAwait($async$self.get$urlStrategy().go$1(0, -1), $async$exit$0);
            case 5:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$exit$0, $async$completer);
    },
    get$currentPath() {
      var t1 = this.get$urlStrategy();
      t1 = t1 == null ? null : t1.getPath$0();
      return t1 == null ? "/" : t1;
    },
    get$currentState() {
      var t1 = this.get$urlStrategy();
      return t1 == null ? null : t1.getState$0(0);
    },
    _unsubscribe$0() {
      return this.get$_unsubscribe().call$0();
    }
  };
  A.MultiEntriesBrowserHistory.prototype = {
    MultiEntriesBrowserHistory$1$urlStrategy(urlStrategy) {
      var t1, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this.__BrowserHistory__unsubscribe_A = strategy.addPopStateListener$1(_this.get$onPopState(_this));
      if (!_this._hasSerialCount$1(_this.get$currentState())) {
        t1 = type$.dynamic;
        strategy.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", 0, "state", _this.get$currentState()], t1, t1), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = _this.get$_currentSerialCount();
    },
    get$_currentSerialCount() {
      if (this._hasSerialCount$1(this.get$currentState())) {
        var t1 = this.get$currentState();
        t1.toString;
        return B.JSNumber_methods.toInt$0(A._asDouble(J.$index$asx(type$.Map_dynamic_dynamic._as(t1), "serialCount")));
      }
      return 0;
    },
    _hasSerialCount$1(state) {
      return type$.Map_dynamic_dynamic._is(state) && J.$index$asx(state, "serialCount") != null;
    },
    setRouteName$3$replace$state(routeName, replace, state) {
      var t2, t3,
        t1 = this.urlStrategy;
      if (t1 != null) {
        t2 = type$.dynamic;
        t3 = this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A;
        if (replace) {
          t3 === $ && A.throwUnnamedLateFieldNI();
          t2 = A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t3, "state", state], t2, t2);
          routeName.toString;
          t1.replaceState$3(0, t2, "flutter", routeName);
        } else {
          t3 === $ && A.throwUnnamedLateFieldNI();
          ++t3;
          this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = t3;
          t2 = A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t3, "state", state], t2, t2);
          routeName.toString;
          t1.pushState$3(0, t2, "flutter", routeName);
        }
      }
    },
    setRouteName$1(routeName) {
      return this.setRouteName$3$replace$state(routeName, false, null);
    },
    onPopState$1(_, state) {
      var t1, t2, t3, t4, _this = this;
      if (!_this._hasSerialCount$1(state)) {
        t1 = _this.urlStrategy;
        t1.toString;
        t2 = _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        t3 = type$.dynamic;
        t1.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["serialCount", t2 + 1, "state", state], t3, t3), "flutter", _this.get$currentPath());
      }
      _this.__MultiEntriesBrowserHistory__lastSeenSerialCount_A = _this.get$_currentSerialCount();
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = _this.get$currentPath();
      type$.nullable_Map_dynamic_dynamic._as(state);
      t3 = state == null ? null : J.$index$asx(state, "state");
      t4 = type$.dynamic;
      t1.invokeOnPlatformMessage$3("flutter/navigation", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0("pushRouteInformation", A.LinkedHashMap_LinkedHashMap$_literal(["location", t2, "state", t3], t4, t4))), new A.MultiEntriesBrowserHistory_onPopState_closure());
    },
    tearDown$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, backCount, t1, t2;
      var $async$tearDown$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.dispose$0();
              if ($async$self._isTornDown || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isTornDown = true;
              backCount = $async$self.get$_currentSerialCount();
              $async$goto = backCount > 0 ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self.urlStrategy.go$1(0, -backCount), $async$tearDown$0);
            case 5:
              // returning from await.
            case 4:
              // join
              t1 = $async$self.get$currentState();
              t1.toString;
              type$.Map_dynamic_dynamic._as(t1);
              t2 = $async$self.urlStrategy;
              t2.toString;
              t2.replaceState$3(0, J.$index$asx(t1, "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy() {
      return this.urlStrategy;
    }
  };
  A.MultiEntriesBrowserHistory_onPopState_closure.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.SingleEntryBrowserHistory.prototype = {
    SingleEntryBrowserHistory$1$urlStrategy(urlStrategy) {
      var path, _this = this,
        strategy = _this.urlStrategy;
      if (strategy == null)
        return;
      _this.__BrowserHistory__unsubscribe_A = strategy.addPopStateListener$1(_this.get$onPopState(_this));
      path = _this.get$currentPath();
      if (!A.SingleEntryBrowserHistory__isFlutterEntry(A.DomHistoryExtension_get_state(self.window.history))) {
        strategy.replaceState$3(0, A.LinkedHashMap_LinkedHashMap$_literal(["origin", true, "state", _this.get$currentState()], type$.String, type$.dynamic), "origin", "");
        _this._setupFlutterEntry$2$path(strategy, path);
      }
    },
    setRouteName$3$replace$state(routeName, replace, state) {
      var t1 = this.urlStrategy;
      if (t1 != null)
        this._setupFlutterEntry$3$path$replace(t1, routeName, true);
    },
    setRouteName$1(routeName) {
      return this.setRouteName$3$replace$state(routeName, false, null);
    },
    onPopState$1(_, state) {
      var t1, _this = this,
        _s18_ = "flutter/navigation";
      if (A.SingleEntryBrowserHistory__isOriginEntry(state)) {
        t1 = _this.urlStrategy;
        t1.toString;
        _this._setupFlutterEntry$1(t1);
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, B.C_JSONMethodCodec.encodeMethodCall$1(B.MethodCall_popRoute_null), new A.SingleEntryBrowserHistory_onPopState_closure());
      } else if (A.SingleEntryBrowserHistory__isFlutterEntry(state)) {
        t1 = _this._userProvidedRouteName;
        t1.toString;
        _this._userProvidedRouteName = null;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s18_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0("pushRoute", t1)), new A.SingleEntryBrowserHistory_onPopState_closure0());
      } else {
        _this._userProvidedRouteName = _this.get$currentPath();
        _this.urlStrategy.go$1(0, -1);
      }
    },
    _setupFlutterEntry$3$path$replace(strategy, path, replace) {
      var t1;
      if (path == null)
        path = this.get$currentPath();
      t1 = this._flutterState;
      if (replace)
        strategy.replaceState$3(0, t1, "flutter", path);
      else
        strategy.pushState$3(0, t1, "flutter", path);
    },
    _setupFlutterEntry$2$path(strategy, path) {
      return this._setupFlutterEntry$3$path$replace(strategy, path, false);
    },
    _setupFlutterEntry$1(strategy) {
      return this._setupFlutterEntry$3$path$replace(strategy, null, false);
    },
    tearDown$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2;
      var $async$tearDown$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.dispose$0();
              if ($async$self._isTornDown || $async$self.urlStrategy == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              $async$self._isTornDown = true;
              t1 = $async$self.urlStrategy;
              $async$goto = 3;
              return A._asyncAwait(t1.go$1(0, -1), $async$tearDown$0);
            case 3:
              // returning from await.
              t2 = $async$self.get$currentState();
              t2.toString;
              t1.replaceState$3(0, J.$index$asx(type$.Map_dynamic_dynamic._as(t2), "state"), "flutter", $async$self.get$currentPath());
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$tearDown$0, $async$completer);
    },
    get$urlStrategy() {
      return this.urlStrategy;
    }
  };
  A.SingleEntryBrowserHistory_onPopState_closure.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.SingleEntryBrowserHistory_onPopState_closure0.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.NotoFont.prototype = {};
  A.FallbackFontComponent.prototype = {
    get$_activeFonts() {
      var t1, result, _this = this,
        value = _this.__FallbackFontComponent__activeFonts_FI;
      if (value === $) {
        t1 = _this._allFonts;
        result = A.List_List$unmodifiable(new A.WhereIterable(t1, new A.FallbackFontComponent__activeFonts_closure(), A._arrayInstanceType(t1)._eval$1("WhereIterable<1>")), type$.NotoFont);
        _this.__FallbackFontComponent__activeFonts_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__FallbackFontComponent__activeFonts_FI = result;
        value = result;
      }
      return value;
    }
  };
  A.FallbackFontComponent__activeFonts_closure.prototype = {
    call$1(font) {
      return font.enabled;
    },
    $signature: 4
  };
  A.HighContrastSupport.prototype = {
    get$_onHighContrastChangeListener() {
      var result, _this = this,
        value = _this.__HighContrastSupport__onHighContrastChangeListener_FI;
      if (value === $) {
        result = A._functionToJS1(_this.get$_onHighContrastChange());
        _this.__HighContrastSupport__onHighContrastChangeListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__HighContrastSupport__onHighContrastChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onHighContrastChange$1($event) {
      var t2, t3, _i,
        t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      for (t2 = this._listeners, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].call$1(t1);
    }
  };
  A.EnginePlatformDispatcher.prototype = {
    EnginePlatformDispatcher$0() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this, _null = null;
      _this._addBrightnessMediaQueryListener$0();
      t1 = $.$get$HighContrastSupport_instance();
      t2 = t1._listeners;
      if (t2.length === 0)
        t1._highContrastMediaQuery.addListener(t1.get$_onHighContrastChangeListener());
      t2.push(_this.get$_updateHighContrast());
      _this._addFontSizeObserver$0();
      _this._addLocaleChangedListener$0();
      $._hotRestartListeners.push(_this.get$dispose());
      t1 = _this.get$_appLifecycleState();
      t2 = _this.get$_setAppLifecycleState();
      t3 = t1._listeners;
      if (t3.length === 0) {
        A.DomEventTargetExtension_addEventListener(self.window, "focus", t1.get$_focusListener(), _null);
        A.DomEventTargetExtension_addEventListener(self.window, "blur", t1.get$_blurListener(), _null);
        A.DomEventTargetExtension_addEventListener(self.document, "visibilitychange", t1.get$_visibilityChangeListener(), _null);
        t4 = t1._subscriptions;
        t5 = t1._viewManager;
        t6 = t5._onViewCreatedController;
        t7 = t1.get$_onViewCountChanged();
        t4.push(new A._BroadcastStream(t6, A._instanceType(t6)._eval$1("_BroadcastStream<1>")).listen$1(t7));
        t5 = t5._onViewDisposedController;
        t4.push(new A._BroadcastStream(t5, A._instanceType(t5)._eval$1("_BroadcastStream<1>")).listen$1(t7));
      }
      t3.push(t2);
      t2.call$1(t1._appLifecycleState);
      t1 = _this.get$_viewFocusBinding();
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keydown", t1.get$_handleKeyDown(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keyup", t1.get$_handleKeyUp(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "focusin", t1.get$_handleFocusin(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "focusout", t1.get$_handleFocusout(), _null);
      t2 = t1._viewManager._onViewCreatedController;
      t1._onViewCreatedListener = new A._BroadcastStream(t2, A._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(t1.get$_handleViewCreated());
      t1 = self.document.body;
      if (t1 != null)
        t1.prepend(_this.accessibilityPlaceholder);
      t1 = _this.get$viewManager()._onViewDisposedController;
      _this.__EnginePlatformDispatcher__onViewDisposedListener_A = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(new A.EnginePlatformDispatcher_closure(_this));
    },
    dispose$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this._brightnessMediaQuery.removeListener(_this._brightnessMediaQueryListener);
      _this._brightnessMediaQueryListener = null;
      t1 = _this._fontSizeObserver;
      if (t1 != null)
        t1.disconnect();
      _this._fontSizeObserver = null;
      t1 = _this._onLocaleChangedSubscription;
      if (t1 != null)
        t1.target.removeEventListener(t1.type, t1.listener);
      _this._onLocaleChangedSubscription = null;
      t1 = $.$get$HighContrastSupport_instance();
      t2 = t1._listeners;
      B.JSArray_methods.remove$1(t2, _this.get$_updateHighContrast());
      if (t2.length === 0)
        t1._highContrastMediaQuery.removeListener(t1.get$_onHighContrastChangeListener());
      t1 = _this.get$_appLifecycleState();
      t2 = t1._listeners;
      B.JSArray_methods.remove$1(t2, _this.get$_setAppLifecycleState());
      if (t2.length === 0)
        t1.deactivate$0();
      t1 = _this.get$_viewFocusBinding();
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keydown", t1.get$_handleKeyDown(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keyup", t1.get$_handleKeyUp(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "focusin", t1.get$_handleFocusin(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "focusout", t1.get$_handleFocusout(), _null);
      t1 = t1._onViewCreatedListener;
      if (t1 != null)
        t1.cancel$0(0);
      _this.accessibilityPlaceholder.remove();
      t1 = _this.__EnginePlatformDispatcher__onViewDisposedListener_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.cancel$0(0);
      t1 = _this.get$viewManager();
      t2 = t1._viewData;
      t3 = A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>");
      B.JSArray_methods.forEach$1(A.List_List$of(new A.LinkedHashMapKeyIterable(t2, t3), true, t3._eval$1("Iterable.E")), t1.get$disposeAndUnregisterView());
      t1._onViewCreatedController.close$0(0);
      t1._onViewDisposedController.close$0(0);
    },
    get$viewManager() {
      var t1, t2, _null = null,
        value = this.__EnginePlatformDispatcher_viewManager_FI;
      if (value === $) {
        t1 = type$.int;
        t2 = type$._SyncBroadcastStreamController_int;
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__EnginePlatformDispatcher_viewManager_FI = new A.FlutterViewManager(this, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.EngineFlutterView), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject), new A._SyncBroadcastStreamController(_null, _null, t2), new A._SyncBroadcastStreamController(_null, _null, t2));
      }
      return value;
    },
    get$_appLifecycleState() {
      var t1, t2, t3, _this = this,
        value = _this.__EnginePlatformDispatcher__appLifecycleState_FI;
      if (value === $) {
        t1 = _this.get$viewManager();
        t2 = A._setArrayType([], type$.JSArray_StreamSubscription_void);
        t3 = A._setArrayType([], type$.JSArray_of_void_Function_AppLifecycleState);
        _this.__EnginePlatformDispatcher__appLifecycleState_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EnginePlatformDispatcher__appLifecycleState_FI = new A._BrowserAppLifecycleState(t1, t2, B.AppLifecycleState_1, t3);
      }
      return value;
    },
    invokeOnMetricsChanged$0() {
      var t1 = this._onMetricsChanged;
      if (t1 != null)
        A.invoke(t1, this._onMetricsChangedZone);
    },
    get$_viewFocusBinding() {
      var t1, _this = this,
        value = _this.__EnginePlatformDispatcher__viewFocusBinding_FI;
      if (value === $) {
        t1 = _this.get$viewManager();
        _this.__EnginePlatformDispatcher__viewFocusBinding_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EnginePlatformDispatcher__viewFocusBinding_FI = new A.ViewFocusBinding(t1, _this.get$invokeOnViewFocusChange(), B.ViewFocusDirection_1);
      }
      return value;
    },
    invokeOnViewFocusChange$1(viewFocusEvent) {
      A.invoke1(this._onViewFocusChange, this._onViewFocusChangeZone, viewFocusEvent);
    },
    invokeOnKeyData$2(data, callback) {
      var onKeyData = this._onKeyData;
      if (onKeyData != null)
        A.invoke(new A.EnginePlatformDispatcher_invokeOnKeyData_closure(callback, onKeyData, data), this._onKeyDataZone);
      else
        callback.call$1(false);
    },
    invokeOnPlatformMessage$3($name, data, callback) {
      var t1;
      if ($name === "dev.flutter/channel-buffers")
        try {
          t1 = $.$get$channelBuffers();
          data.toString;
          t1.handleMessage$1(data);
        } finally {
          callback.call$1(null);
        }
      else
        $.$get$channelBuffers().push$3($name, data, callback);
    },
    _sendPlatformMessage$3($name, data, callback) {
      var decoded, cacheSizeInBytes, t1, $navigator, $arguments, label, primaryColor, statusBarColor, t2, cssValue, _0_0, _0_2, semantics, dataMap, message, assertivenessIndex, _this = this, _null = null;
      switch ($name) {
        case "flutter/skia":
          decoded = B.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "Skia.setResourceCacheMaxBytes":
              if ($.$get$_renderer() instanceof A.CanvasKitRenderer) {
                cacheSizeInBytes = A._asInt(decoded.$arguments);
                $.CanvasKitRenderer____instance._readField$0()._rasterizer.setResourceCacheMaxBytes$1(cacheSizeInBytes);
              }
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([A._setArrayType([true], type$.JSArray_bool)]));
              break;
          }
          return;
        case "flutter/assets":
          _this._handleFlutterAssetsMessage$2(B.C_Utf8Codec.decode$1(0, A.NativeUint8List_NativeUint8List$view(data.buffer, 0, _null)), callback);
          return;
        case "flutter/platform":
          decoded = B.C_JSONMethodCodec.decodeMethodCall$1(data);
          switch (decoded.method) {
            case "SystemNavigator.pop":
              t1 = type$.nullable_EngineFlutterWindow;
              if (t1._as(_this.get$viewManager()._viewData.$index(0, 0)) != null)
                t1._as(_this.get$viewManager()._viewData.$index(0, 0)).get$browserHistory().exit$0().then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure(_this, callback), type$.Null);
              else
                _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "HapticFeedback.vibrate":
              t1 = _this._getHapticFeedbackDuration$1(A._asStringQ(decoded.$arguments));
              $navigator = self.window.navigator;
              if ("vibrate" in $navigator)
                $navigator.vibrate(t1);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setApplicationSwitcherDescription":
              $arguments = type$.Map_of_String_and_nullable_Object._as(decoded.$arguments);
              t1 = J.getInterceptor$asx($arguments);
              label = A._asStringQ(t1.$index($arguments, "label"));
              if (label == null)
                label = "";
              primaryColor = A._asIntQ(t1.$index($arguments, "primaryColor"));
              if (primaryColor == null)
                primaryColor = 4278190080;
              t1 = self.document;
              t1.title = label;
              A.setThemeColor(new A.Color(primaryColor >>> 0));
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setSystemUIOverlayStyle":
              statusBarColor = A._asIntQ(J.$index$asx(type$.Map_of_String_and_nullable_Object._as(decoded.$arguments), "statusBarColor"));
              A.setThemeColor(statusBarColor == null ? _null : new A.Color(statusBarColor >>> 0));
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "SystemChrome.setPreferredOrientations":
              B.C_ScreenOrientation.setPreferredOrientation$1(type$.List_dynamic._as(decoded.$arguments)).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure0(_this, callback), type$.Null);
              return;
            case "SystemSound.play":
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "Clipboard.setData":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).setDataMethodCall$2(decoded, callback);
              return;
            case "Clipboard.getData":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).getDataMethodCall$1(callback);
              return;
            case "Clipboard.hasStrings":
              new A.ClipboardMessageHandler(A.CopyToClipboardStrategy_CopyToClipboardStrategy(), A.PasteFromClipboardStrategy_PasteFromClipboardStrategy()).hasStringsMethodCall$1(callback);
              return;
          }
          break;
        case "flutter/service_worker":
          t1 = self.window;
          t2 = self.document.createEvent("Event");
          t2.initEvent("flutter-first-frame", true, true);
          t1.dispatchEvent(t2);
          return;
        case "flutter/textinput":
          $.$get$textEditing().get$channel(0).handleTextInput$2(data, callback);
          return;
        case "flutter/contextmenu":
          switch (B.C_JSONMethodCodec.decodeMethodCall$1(data).method) {
            case "enableContextMenu":
              type$.nullable_EngineFlutterWindow._as(_this.get$viewManager()._viewData.$index(0, 0)).get$contextMenu().enable$0(0);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
            case "disableContextMenu":
              type$.nullable_EngineFlutterWindow._as(_this.get$viewManager()._viewData.$index(0, 0)).get$contextMenu().disable$0(0);
              _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
              return;
          }
          return;
        case "flutter/mousecursor":
          decoded = B.C_StandardMethodCodec.decodeMethodCall$1(data);
          $arguments = type$.Map_dynamic_dynamic._as(decoded.$arguments);
          switch (decoded.method) {
            case "activateSystemCursor":
              t1 = A.IterableExtensions_get_firstOrNull(_this.get$viewManager()._viewData.get$values(0));
              if (t1 != null) {
                if (t1.__EngineFlutterView_mouseCursor_FI === $) {
                  t1.get$dom();
                  t1.__EngineFlutterView_mouseCursor_FI !== $ && A.throwUnnamedLateFieldADI();
                  t1.__EngineFlutterView_mouseCursor_FI = new A.MouseCursor();
                }
                cssValue = B.Map_WZ6cQ.$index(0, A._asStringQ(J.$index$asx($arguments, "kind")));
                if (cssValue == null)
                  cssValue = "default";
                if (cssValue === "default")
                  self.document.body.style.removeProperty("cursor");
                else
                  A.DomCSSStyleDeclarationExtension_setProperty(self.document.body.style, "cursor", cssValue);
              }
              break;
          }
          return;
        case "flutter/web_test_e2e":
          _this.replyToPlatformMessage$2(callback, B.C_JSONMessageCodec.encodeMessage$1([A._handleWebTestEnd2EndMessage(B.C_JSONMethodCodec, data)]));
          return;
        case "flutter/platform_views":
          _0_0 = B.C_StandardMethodCodec.decodeMethodCall$1(data);
          $arguments = _null;
          _0_2 = _0_0.$arguments;
          $arguments = _0_2;
          t1 = $.$get$PlatformViewMessageHandler_instance();
          callback.toString;
          t1.handlePlatformViewCall$3(_0_0.method, $arguments, callback);
          return;
        case "flutter/accessibility":
          semantics = $.EngineSemantics__instance;
          if (semantics == null)
            semantics = $.EngineSemantics__instance = A.EngineSemantics$_();
          if (semantics._semanticsEnabled) {
            t1 = type$.Map_dynamic_dynamic;
            dataMap = t1._as(J.$index$asx(t1._as(B.C_StandardMessageCodec0.decodeMessage$1(data)), "data"));
            message = A._asStringQ(J.$index$asx(dataMap, "message"));
            if (message != null && message.length !== 0) {
              assertivenessIndex = A.JsonExtensions_tryInt(dataMap, "assertiveness");
              semantics.accessibilityAnnouncements.announce$2(message, B.List_Assertiveness_0_Assertiveness_1[assertivenessIndex == null ? 0 : assertivenessIndex]);
            }
          }
          _this.replyToPlatformMessage$2(callback, B.C_StandardMessageCodec0.encodeMessage$1(true));
          return;
        case "flutter/navigation":
          t1 = type$.nullable_EngineFlutterWindow;
          if (t1._as(_this.get$viewManager()._viewData.$index(0, 0)) != null)
            t1._as(_this.get$viewManager()._viewData.$index(0, 0)).handleNavigationMessage$1(data).then$1$1(new A.EnginePlatformDispatcher__sendPlatformMessage_closure1(_this, callback), type$.Null);
          else if (callback != null)
            callback.call$1(_null);
          _this._defaultRouteName = "/";
          return;
      }
      t1 = $.pluginMessageCallHandler;
      if (t1 != null) {
        t1.call$3($name, data, callback);
        return;
      }
      _this.replyToPlatformMessage$2(callback, _null);
    },
    _handleFlutterAssetsMessage$2(url, callback) {
      return this._handleFlutterAssetsMessage$body$EnginePlatformDispatcher(url, callback);
    },
    _handleFlutterAssetsMessage$body$EnginePlatformDispatcher(url, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$self = this, response, assetData, error, t1, exception, $async$exception, $async$temp1;
      var $async$_handleFlutterAssetsMessage$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 3;
              t1 = $._assetManager;
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 6;
              return A._asyncAwait(A.httpFetch(t1.getAssetUrl$1(url)), $async$_handleFlutterAssetsMessage$2);
            case 6:
              // returning from await.
              response = $async$temp1._as($async$result);
              $async$goto = 7;
              return A._asyncAwait(response.get$payload().asByteBuffer$0(), $async$_handleFlutterAssetsMessage$2);
            case 7:
              // returning from await.
              assetData = $async$result;
              $async$self.replyToPlatformMessage$2(callback, A.NativeByteData_NativeByteData$view(assetData, 0, null));
              $async$handler = 1;
              // goto after finally
              $async$goto = 5;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception = $async$currentError;
              error = A.unwrapException($async$exception);
              $.$get$printWarning().call$1("Error while trying to load an asset: " + A.S(error));
              $async$self.replyToPlatformMessage$2(callback, null);
              // goto after finally
              $async$goto = 5;
              break;
            case 2:
              // uncaught
              // goto rethrow
              $async$goto = 1;
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleFlutterAssetsMessage$2, $async$completer);
    },
    _getHapticFeedbackDuration$1(type) {
      switch (type) {
        case "HapticFeedbackType.lightImpact":
          return 10;
        case "HapticFeedbackType.mediumImpact":
          return 20;
        case "HapticFeedbackType.heavyImpact":
          return 30;
        case "HapticFeedbackType.selectionClick":
          return 10;
        default:
          return 50;
      }
    },
    scheduleFrame$0() {
      var t1 = $.scheduleFrameCallback;
      if (t1 == null)
        throw A.wrapException(A.Exception_Exception("scheduleFrameCallback must be initialized first."));
      t1.call$0();
    },
    render$2(scene, view) {
      return this.render$body$EnginePlatformDispatcher(scene, view);
    },
    render$body$EnginePlatformDispatcher(scene, view) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$render$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._viewsRenderedInCurrentFrame;
              t1 = t1 == null ? null : t1.add$1(0, view);
              $async$goto = t1 === true || $.$get$_renderer().get$rendererTag() === "html" ? 2 : 3;
              break;
            case 2:
              // then
              $async$goto = 4;
              return A._asyncAwait($.$get$_renderer().renderScene$2(scene, view), $async$render$2);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$render$2, $async$completer);
    },
    _addLocaleChangedListener$0() {
      var _this = this;
      if (_this._onLocaleChangedSubscription != null)
        return;
      _this.configuration = _this.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      _this._onLocaleChangedSubscription = A.DomSubscription$(self.window, "languagechange", new A.EnginePlatformDispatcher__addLocaleChangedListener_closure(_this));
    },
    _addFontSizeObserver$0() {
      var t2, t3, t4,
        t1 = new self.MutationObserver(A._functionToJS2(new A.EnginePlatformDispatcher__addFontSizeObserver_closure(this)));
      this._fontSizeObserver = t1;
      t2 = self.document.documentElement;
      t2.toString;
      t3 = A._setArrayType(["style"], type$.JSArray_String);
      t4 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t4.$indexSet(0, "attributes", true);
      t4.$indexSet(0, "attributeFilter", t3);
      t3 = A.jsify(t4);
      if (t3 == null)
        t3 = type$.Object._as(t3);
      t1.observe(t2, t3);
    },
    _setAppLifecycleState$1(state) {
      this.invokeOnPlatformMessage$3("flutter/lifecycle", A.NativeByteData_NativeByteData$view(B.C_Utf8Encoder.convert$1(state._enumToString$0()).buffer, 0, null), new A.EnginePlatformDispatcher__setAppLifecycleState_closure());
    },
    _updatePlatformBrightness$1(value) {
      var _this = this,
        t1 = _this.configuration;
      if (t1.platformBrightness !== value) {
        _this.configuration = t1.copyWith$1$platformBrightness(value);
        A.invoke(null, null);
        A.invoke(_this._onPlatformBrightnessChanged, _this._onPlatformBrightnessChangedZone);
      }
    },
    _updateHighContrast$1(value) {
      var t1 = this.configuration,
        t2 = t1.accessibilityFeatures;
      if ((t2.__engine$_index & 32) !== 0 !== value) {
        this.configuration = t1.copyWith$1$accessibilityFeatures(t2.copyWith$1$highContrast(value));
        A.invoke(null, null);
      }
    },
    _addBrightnessMediaQueryListener$0() {
      var t2, _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(t1.matches ? B.Brightness_0 : B.Brightness_1);
      t2 = A._functionToJS1(new A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(_this));
      _this._brightnessMediaQueryListener = t2;
      t1.addListener(t2);
    },
    replyToPlatformMessage$2(callback, data) {
      A.Future_Future$delayed(B.Duration_0, null, type$.void).then$1$1(new A.EnginePlatformDispatcher_replyToPlatformMessage_closure(callback, data), type$.Null);
    }
  };
  A.EnginePlatformDispatcher_closure.prototype = {
    call$1(_) {
      this.$this.invokeOnMetricsChanged$0();
    },
    $signature: 14
  };
  A.EnginePlatformDispatcher_invokeOnKeyData_closure.prototype = {
    call$0() {
      return this.callback.call$1(this.onKeyData.call$1(this.data));
    },
    $signature: 0
  };
  A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure.prototype = {
    call$1(data) {
      this.registrationZone.runUnaryGuarded$2(this.callback, data);
    },
    $signature: 3
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure.prototype = {
    call$1(_) {
      this.$this.replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 8
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure0.prototype = {
    call$1(success) {
      this.$this.replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([success]));
    },
    $signature: 38
  };
  A.EnginePlatformDispatcher__sendPlatformMessage_closure1.prototype = {
    call$1(handled) {
      var t1 = this.callback;
      if (handled)
        this.$this.replyToPlatformMessage$2(t1, B.C_JSONMessageCodec.encodeMessage$1([true]));
      else if (t1 != null)
        t1.call$1(null);
    },
    $signature: 38
  };
  A.EnginePlatformDispatcher__addLocaleChangedListener_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      t1.configuration = t1.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      A.invoke(t1._onLocaleChanged, t1._onLocaleChangedZone);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher__addFontSizeObserver_closure.prototype = {
    call$2(mutations, _) {
      var mutation, t4, fontSize, newTextScaleFactor, _null = null,
        t1 = B.JSArray_methods.get$iterator(mutations),
        t2 = type$.JavaScriptObject,
        t3 = this.$this;
      for (; t1.moveNext$0();) {
        mutation = t1.get$current(0);
        mutation.toString;
        t2._as(mutation);
        t4 = mutation.type;
        if ((t4 == null ? _null : t4) === "attributes") {
          t4 = mutation.attributeName;
          t4 = (t4 == null ? _null : t4) === "style";
        } else
          t4 = false;
        if (t4) {
          t4 = self.document.documentElement;
          t4.toString;
          fontSize = A.parseFontSize(t4);
          newTextScaleFactor = (fontSize == null ? 16 : fontSize) / 16;
          t4 = t3.configuration;
          if (t4.textScaleFactor !== newTextScaleFactor) {
            t3.configuration = t4.copyWith$1$textScaleFactor(newTextScaleFactor);
            A.invoke(_null, _null);
            A.invoke(t3._onTextScaleFactorChanged, t3._onTextScaleFactorChangedZone);
          }
        }
      }
    },
    $signature: 158
  };
  A.EnginePlatformDispatcher__setAppLifecycleState_closure.prototype = {
    call$1(_) {
    },
    $signature: 3
  };
  A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure.prototype = {
    call$1($event) {
      var t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      t1 = t1 ? B.Brightness_0 : B.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher_replyToPlatformMessage_closure.prototype = {
    call$1(_) {
      var t1 = this.callback;
      if (t1 != null)
        t1.call$1(this.data);
    },
    $signature: 8
  };
  A.invoke2_closure.prototype = {
    call$0() {
      this.callback.call$2(this.arg1, this.arg2);
    },
    $signature: 0
  };
  A.ViewConfiguration0.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "[view: null]";
    }
  };
  A.PlatformConfiguration.prototype = {
    copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, locales, platformBrightness, semanticsEnabled, textScaleFactor) {
      var _this = this,
        t1 = accessibilityFeatures == null ? _this.accessibilityFeatures : accessibilityFeatures,
        t2 = semanticsEnabled == null ? _this.semanticsEnabled : semanticsEnabled,
        t3 = platformBrightness == null ? _this.platformBrightness : platformBrightness,
        t4 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor,
        t5 = locales == null ? _this.locales : locales;
      return new A.PlatformConfiguration(t1, false, t2, t3, t4, t5, _this.defaultRouteName, _this.systemFontFamily);
    },
    copyWith$1$accessibilityFeatures(accessibilityFeatures) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, _null, _null, _null, _null);
    },
    copyWith$1$locales(locales) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, locales, _null, _null, _null);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, _null, textScaleFactor);
    },
    copyWith$1$platformBrightness(platformBrightness) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, platformBrightness, _null, _null);
    },
    copyWith$1$semanticsEnabled(semanticsEnabled) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, semanticsEnabled, _null);
    }
  };
  A.AppLifecycleState0.prototype = {
    onAppLifecycleStateChange$1(newState) {
      var t1, t2, _i;
      if (newState !== this._appLifecycleState) {
        this._appLifecycleState = newState;
        for (t1 = this._listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$1(newState);
      }
    }
  };
  A._BrowserAppLifecycleState.prototype = {
    deactivate$0() {
      var t1, t2, _i, _this = this;
      A.DomEventTargetExtension_removeEventListener(self.window, "focus", _this.get$_focusListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.window, "blur", _this.get$_blurListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.document, "visibilitychange", _this.get$_visibilityChangeListener(), null);
      for (t1 = _this._subscriptions, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].cancel$0(0);
      B.JSArray_methods.clear$0(t1);
    },
    get$_focusListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__focusListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__focusListener_closure(_this));
        _this.___BrowserAppLifecycleState__focusListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__focusListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_blurListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__blurListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__blurListener_closure(_this));
        _this.___BrowserAppLifecycleState__blurListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__blurListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_visibilityChangeListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__visibilityChangeListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__visibilityChangeListener_closure(_this));
        _this.___BrowserAppLifecycleState__visibilityChangeListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__visibilityChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onViewCountChanged$1(_) {
      if (J.get$isEmpty$asx(this._viewManager._viewData.get$values(0).__internal$_iterable))
        this.onAppLifecycleStateChange$1(B.AppLifecycleState_0);
      else
        this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
    }
  };
  A._BrowserAppLifecycleState__focusListener_closure.prototype = {
    call$1($event) {
      this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__blurListener_closure.prototype = {
    call$1($event) {
      this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_2);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__visibilityChangeListener_closure.prototype = {
    call$1($event) {
      if (self.document.visibilityState === "visible")
        this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
      else if (self.document.visibilityState === "hidden")
        this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_3);
    },
    $signature: 1
  };
  A.ViewFocusBinding.prototype = {
    changeViewFocus$2(viewId, state) {
      return;
    },
    get$_handleFocusin() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleFocusin_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleFocusin_closure(_this));
        _this.__ViewFocusBinding__handleFocusin_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleFocusin_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleFocusout() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleFocusout_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleFocusout_closure(_this));
        _this.__ViewFocusBinding__handleFocusout_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleFocusout_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyDown() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleKeyDown_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleKeyDown_closure(_this));
        _this.__ViewFocusBinding__handleKeyDown_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleKeyDown_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyUp() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleKeyUp_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleKeyUp_closure(_this));
        _this.__ViewFocusBinding__handleKeyUp_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleKeyUp_FI = result;
        value = result;
      }
      return value;
    },
    _handleFocusChange$1(focusedElement) {
      return;
    },
    _handleViewCreated$1(viewId) {
      this._maybeMarkViewAsFocusable$2$reachableByKeyboard(viewId, true);
    },
    _maybeMarkViewAsFocusable$2$reachableByKeyboard(viewId, reachableByKeyboard) {
      var t1, rootElement;
      if (viewId == null)
        return;
      t1 = this._viewManager._viewData.$index(0, viewId);
      rootElement = t1 == null ? null : t1.get$dom().rootElement;
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled) {
        if (rootElement != null)
          rootElement.removeAttribute("tabindex");
      } else if (rootElement != null) {
        t1 = A.jsify(reachableByKeyboard ? 0 : -1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        rootElement.setAttribute("tabindex", t1);
      }
    }
  };
  A.ViewFocusBinding__handleFocusin_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1($event.target);
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleFocusout_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1($event.relatedTarget);
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyDown_closure.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event);
      if (t1 === true)
        this.$this._viewFocusDirection = B.ViewFocusDirection_2;
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyUp_closure.prototype = {
    call$1($event) {
      this.$this._viewFocusDirection = B.ViewFocusDirection_1;
    },
    $signature: 1
  };
  A.PlatformViewManager.prototype = {
    registerFactory$3$isVisible(viewType, factoryFunction, isVisible) {
      var t1 = this._factories;
      if (t1.containsKey$1(0, viewType))
        return false;
      t1.$indexSet(0, viewType, factoryFunction);
      if (!isVisible)
        this._invisibleViews.add$1(0, viewType);
      return true;
    },
    registerFactory$2(viewType, factoryFunction) {
      return this.registerFactory$3$isVisible(viewType, factoryFunction, true);
    },
    renderContent$3(viewType, viewId, params) {
      this._viewIdToType.$indexSet(0, viewId, viewType);
      return this.__engine$_contents.putIfAbsent$2(0, viewId, new A.PlatformViewManager_renderContent_closure(this, viewId, "flt-pv-slot-" + viewId, viewType, params));
    }
  };
  A.PlatformViewManager_renderContent_closure.prototype = {
    call$0() {
      var t2, t3, t4, $content, _this = this,
        wrapper = A.DomDocumentExtension_createElement(self.document, "flt-platform-view"),
        t1 = _this.viewId;
      wrapper.id = "flt-pv-" + t1;
      t2 = A.jsify(_this.slotName);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      wrapper.setAttribute("slot", t2);
      t2 = _this.viewType;
      t3 = _this.$this._factories.$index(0, t2);
      t3.toString;
      t4 = type$.JavaScriptObject;
      if (type$.Object_Function_int_$named_params_nullable_Object._is(t3))
        $content = t4._as(t3.call$2$params(t1, _this.params));
      else {
        type$.Object_Function_int._as(t3);
        $content = t4._as(t3.call$1(t1));
      }
      if ($content.style.getPropertyValue("height").length === 0) {
        $.$get$printWarning().call$1("Height of Platform View type: [" + t2 + "] may not be set. Defaulting to `height: 100%`.\nSet `style.height` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_setProperty($content.style, "height", "100%");
      }
      if ($content.style.getPropertyValue("width").length === 0) {
        $.$get$printWarning().call$1("Width of Platform View type: [" + t2 + "] may not be set. Defaulting to `width: 100%`.\nSet `style.width` to any appropriate value to stop this message.");
        A.DomCSSStyleDeclarationExtension_setProperty($content.style, "width", "100%");
      }
      wrapper.append($content);
      return wrapper;
    },
    $signature: 42
  };
  A.PlatformViewMessageHandler.prototype = {
    _createPlatformView$4$params$platformViewId$platformViewType(callback, params, platformViewId, platformViewType) {
      var t1 = this._contentManager;
      if (!t1._factories.containsKey$1(0, platformViewType)) {
        callback.call$1(B.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("unregistered_view_type", "If you are the author of the PlatformView, make sure `registerViewFactory` is invoked.", "A HtmlElementView widget is trying to create a platform view with an unregistered type: <" + platformViewType + ">."));
        return;
      }
      if (t1.__engine$_contents.containsKey$1(0, platformViewId)) {
        callback.call$1(B.C_StandardMethodCodec.encodeErrorEnvelope$3$code$details$message("recreating_view", "view id: " + platformViewId, "trying to create an already created view"));
        return;
      }
      t1.renderContent$3(platformViewType, platformViewId, params);
      callback.call$1(B.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
    },
    handlePlatformViewCall$3(method, $arguments, callback) {
      var t1, t2, t3;
      switch (method) {
        case "create":
          type$.Map_dynamic_dynamic._as($arguments);
          t1 = J.getInterceptor$asx($arguments);
          t2 = B.JSNumber_methods.toInt$0(A._asNum(t1.$index($arguments, "id")));
          t3 = A._asString(t1.$index($arguments, "viewType"));
          this._createPlatformView$4$params$platformViewId$platformViewType(callback, t1.$index($arguments, "params"), t2, t3);
          return;
        case "dispose":
          t1 = this._contentManager.__engine$_contents.remove$1(0, A._asInt($arguments));
          if (t1 != null)
            t1.remove();
          callback.call$1(B.C_StandardMethodCodec.encodeSuccessEnvelope$1(null));
          return;
      }
      callback.call$1(null);
    }
  };
  A.SafariPointerEventWorkaround.prototype = {
    workAroundMissingPointerEvents$0() {
      if (this._listener == null) {
        this._listener = A._functionToJS1(new A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure());
        A.DomEventTargetExtension_addEventListener(self.document, "touchstart", this._listener, null);
      }
    }
  };
  A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure.prototype = {
    call$1(_) {
    },
    $signature: 1
  };
  A.PointerBinding.prototype = {
    _createAdapter$0() {
      if ("PointerEvent" in self.window) {
        var t1 = new A._PointerAdapter(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), this, A._setArrayType([], type$.JSArray_Listener));
        t1.setup$0();
        return t1;
      }
      throw A.wrapException(A.UnsupportedError$("This browser does not support pointer events which are necessary to handle interactions with Flutter Web apps."));
    }
  };
  A.ClickDebouncer.prototype = {
    onPointerData$2($event, data) {
      var t2, t3, target, _this = this,
        t1 = $.$get$EnginePlatformDispatcher__instance();
      if (!t1.configuration.semanticsEnabled) {
        t2 = A._setArrayType(data.slice(0), A._arrayInstanceType(data));
        A.invoke1(t1._onPointerDataPacket, t1._onPointerDataPacketZone, new A.PointerDataPacket(t2));
        return;
      }
      t2 = _this.__engine$_state;
      if (t2 != null) {
        t1 = t2._0;
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t1.push(new A._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t3)));
        if ($event.type === "pointerup")
          if (!J.$eq$($event.target, t2._1))
            _this._flush$0();
      } else if ($event.type === "pointerdown") {
        target = $event.target;
        if (type$.JavaScriptObject._is(target) && target.hasAttribute("flt-tappable")) {
          t1 = A.Timer_Timer(B.Duration_200000, _this.get$_onTimerExpired());
          t2 = A.DomEventExtension_get_timeStamp($event);
          t2.toString;
          _this.__engine$_state = new A._Record_3_queue_target_timer(A._setArrayType([new A._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t2))], type$.JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp), target, t1);
        } else {
          t2 = A._setArrayType(data.slice(0), A._arrayInstanceType(data));
          A.invoke1(t1._onPointerDataPacket, t1._onPointerDataPacketZone, new A.PointerDataPacket(t2));
        }
      } else {
        if ($event.type === "pointerup") {
          t2 = A.DomEventExtension_get_timeStamp($event);
          t2.toString;
          _this._lastSentPointerUpTimeStamp = A._BaseAdapter__eventTimeStampToDuration(t2);
        }
        t2 = A._setArrayType(data.slice(0), A._arrayInstanceType(data));
        A.invoke1(t1._onPointerDataPacket, t1._onPointerDataPacketZone, new A.PointerDataPacket(t2));
      }
    },
    _onTimerExpired$0() {
      if (this.__engine$_state == null)
        return;
      this._flush$0();
    },
    _flush$0() {
      var t1, aggregateData, t2, t3, _i, queuedEvent,
        state = this.__engine$_state;
      state._2.cancel$0(0);
      t1 = type$.JSArray_PointerData;
      aggregateData = A._setArrayType([], t1);
      for (t2 = state._0, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        queuedEvent = t2[_i];
        if (queuedEvent._1.type === "pointerup")
          this._lastSentPointerUpTimeStamp = queuedEvent._2;
        B.JSArray_methods.addAll$1(aggregateData, queuedEvent._0);
      }
      t1 = A._setArrayType(aggregateData.slice(0), t1);
      t2 = $.$get$EnginePlatformDispatcher__instance();
      A.invoke1(t2._onPointerDataPacket, t2._onPointerDataPacketZone, new A.PointerDataPacket(t1));
      this.__engine$_state = null;
    }
  };
  A.PointerSupportDetector.prototype = {
    toString$0(_) {
      return "pointers:" + ("PointerEvent" in self.window);
    }
  };
  A.Listener.prototype = {};
  A._BaseAdapter.prototype = {
    get$__engine$_callback() {
      return $.$get$PointerBinding_clickDebouncer().get$onPointerData();
    },
    dispose$0() {
      var t1, t2, _i, listener;
      for (t1 = this._listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        listener = t1[_i];
        listener.target.removeEventListener(listener.event, listener.handler);
      }
      B.JSArray_methods.clear$0(t1);
    },
    addEventListener$3(_, target, eventName, handler) {
      this._listeners.push(A.Listener_Listener$register(eventName, new A._BaseAdapter_addEventListener_loggedHandler(handler), null, target));
    },
    __engine$_callback$2(arg0, arg1) {
      return this.get$__engine$_callback().call$2(arg0, arg1);
    }
  };
  A._BaseAdapter_addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A._WheelEventListenerMixin.prototype = {
    _isAcceleratedMouseWheelDelta$2(delta, wheelDelta) {
      if (wheelDelta == null)
        return false;
      return Math.abs(wheelDelta - -3 * delta) > 1;
    },
    _isTrackpadEvent$1($event) {
      var t1, t2, t3, t4, deltaXChange, deltaYChange, _this = this;
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        return false;
      if (_this._isAcceleratedMouseWheelDelta$2($event.deltaX, A.DomWheelEventExtension_get_wheelDeltaX($event)) || _this._isAcceleratedMouseWheelDelta$2($event.deltaY, A.DomWheelEventExtension_get_wheelDeltaY($event)))
        return false;
      if (!(B.JSNumber_methods.$mod($event.deltaX, 120) === 0 && B.JSNumber_methods.$mod($event.deltaY, 120) === 0)) {
        t1 = A.DomWheelEventExtension_get_wheelDeltaX($event);
        if (B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0) {
          t1 = A.DomWheelEventExtension_get_wheelDeltaY($event);
          t1 = B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1) {
        t1 = $event.deltaX;
        t2 = _this._lastWheelEvent;
        t3 = t2 == null;
        t4 = t3 ? null : t2.deltaX;
        deltaXChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        t1 = $event.deltaY;
        t4 = t3 ? null : t2.deltaY;
        deltaYChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        t1 = true;
        if (!t3)
          if (!(deltaXChange === 0 && deltaYChange === 0))
            t1 = !(deltaXChange < 20 && deltaYChange < 20);
        if (t1) {
          if (A.DomEventExtension_get_timeStamp($event) != null)
            t1 = (t3 ? null : A.DomEventExtension_get_timeStamp(t2)) != null;
          else
            t1 = false;
          if (t1) {
            t1 = A.DomEventExtension_get_timeStamp($event);
            t1.toString;
            t2.toString;
            t2 = A.DomEventExtension_get_timeStamp(t2);
            t2.toString;
            if (t1 - t2 < 50 && _this._lastWheelEventWasTrackpad)
              return true;
          }
          return false;
        }
      }
      return true;
    },
    _convertWheelEventToPointerData$1($event) {
      var kind, deviceId, deltaX, deltaY, t1, probe, res, t2, data, offset, t3, t4, t5, ignoreCtrlKey, t6, t7, _this = this;
      if (_this._isTrackpadEvent$1($event)) {
        kind = B.PointerDeviceKind_4;
        deviceId = -2;
      } else {
        kind = B.PointerDeviceKind_1;
        deviceId = -1;
      }
      deltaX = $event.deltaX;
      deltaY = $event.deltaY;
      switch (B.JSNumber_methods.toInt$0($event.deltaMode)) {
        case 1:
          t1 = $._WheelEventListenerMixin__defaultScrollLineHeight;
          if (t1 == null) {
            probe = A.DomDocumentExtension_createElement(self.document, "div");
            t1 = probe.style;
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "font-size", "initial");
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "display", "none");
            self.document.body.append(probe);
            t1 = A.DomWindowExtension_getComputedStyle(self.window, probe).getPropertyValue("font-size");
            if (B.JSString_methods.contains$1(t1, "px"))
              res = A.Primitives_parseDouble(A.stringReplaceAllUnchecked(t1, "px", ""));
            else
              res = null;
            probe.remove();
            t1 = $._WheelEventListenerMixin__defaultScrollLineHeight = res == null ? 16 : res / 4;
          }
          deltaX *= t1;
          deltaY *= t1;
          break;
        case 2:
          t1 = _this._owner.view;
          deltaX *= t1.get$physicalSize()._dx;
          deltaY *= t1.get$physicalSize()._dy;
          break;
        case 0:
          if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_4) {
            t1 = $.$get$EngineFlutterDisplay__instance();
            t2 = t1._debugDevicePixelRatioOverride;
            if (t2 == null) {
              t2 = self.window.devicePixelRatio;
              if (t2 === 0)
                t2 = 1;
            }
            deltaX *= t2;
            t1 = t1._debugDevicePixelRatioOverride;
            if (t1 == null) {
              t1 = self.window.devicePixelRatio;
              if (t1 === 0)
                t1 = 1;
            }
            deltaY *= t1;
          }
          break;
        default:
          break;
      }
      data = A._setArrayType([], type$.JSArray_PointerData);
      t1 = _this._owner;
      t2 = t1.view;
      offset = A.computeEventOffsetToTarget($event, t2);
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_4) {
        t3 = t1._keyboardConverter;
        t4 = t3 == null;
        if (t4)
          t5 = null;
        else {
          t5 = $.$get$kPhysicalControlLeft();
          t5 = t3._pressingRecords.containsKey$1(0, t5);
        }
        if (t5 !== true) {
          if (t4)
            t3 = null;
          else {
            t4 = $.$get$kPhysicalControlRight();
            t4 = t3._pressingRecords.containsKey$1(0, t4);
            t3 = t4;
          }
          ignoreCtrlKey = t3 === true;
        } else
          ignoreCtrlKey = true;
      } else
        ignoreCtrlKey = false;
      t3 = $event.ctrlKey && !ignoreCtrlKey;
      t1 = t1._pointerDataConverter;
      t2 = t2.viewId;
      t4 = offset._dx;
      if (t3) {
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        t5 = $.$get$EngineFlutterDisplay__instance();
        t6 = t5._debugDevicePixelRatioOverride;
        if (t6 == null) {
          t6 = self.window.devicePixelRatio;
          if (t6 === 0)
            t6 = 1;
        }
        t5 = t5._debugDevicePixelRatioOverride;
        if (t5 == null) {
          t5 = self.window.devicePixelRatio;
          if (t5 === 0)
            t5 = 1;
        }
        t7 = A.DomMouseEventExtension_get_buttons($event);
        t7.toString;
        t1.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(data, B.JSNumber_methods.toInt$0(t7), B.PointerChange_3, deviceId, kind, t4 * t6, offset._dy * t5, 1, 1, Math.exp(-deltaY / 200), B.PointerSignalKind_3, t3, t2);
      } else {
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        t5 = $.$get$EngineFlutterDisplay__instance();
        t6 = t5._debugDevicePixelRatioOverride;
        if (t6 == null) {
          t6 = self.window.devicePixelRatio;
          if (t6 === 0)
            t6 = 1;
        }
        t5 = t5._debugDevicePixelRatioOverride;
        if (t5 == null) {
          t5 = self.window.devicePixelRatio;
          if (t5 === 0)
            t5 = 1;
        }
        t7 = A.DomMouseEventExtension_get_buttons($event);
        t7.toString;
        t1.convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(data, B.JSNumber_methods.toInt$0(t7), B.PointerChange_3, deviceId, kind, new A._WheelEventListenerMixin__convertWheelEventToPointerData_closure(_this), t4 * t6, offset._dy * t5, 1, 1, deltaX, deltaY, B.PointerSignalKind_1, t3, t2);
      }
      _this._lastWheelEvent = $event;
      _this._lastWheelEventWasTrackpad = kind === B.PointerDeviceKind_4;
      return data;
    }
  };
  A._WheelEventListenerMixin__convertWheelEventToPointerData_closure.prototype = {
    call$1$allowPlatformDefault(allowPlatformDefault) {
      var t1 = this.$this;
      t1._lastWheelEventAllowedDefault = B.JSBool_methods.$or(t1._lastWheelEventAllowedDefault, allowPlatformDefault);
    },
    call$0() {
      return this.call$1$allowPlatformDefault(false);
    },
    $signature: 151
  };
  A._SanitizedDetails.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(change: " + this.change.toString$0(0) + ", buttons: " + this.buttons + ")";
    }
  };
  A._ButtonSanitizer.prototype = {
    sanitizeDownEvent$2$button$buttons(button, buttons) {
      var t1;
      if (this._pressedButtons !== 0)
        return this.sanitizeMoveEvent$1$buttons(buttons);
      t1 = (buttons === 0 && button > -1 ? A.convertButtonToButtons(button) : buttons) & 1073741823;
      this._pressedButtons = t1;
      return new A._SanitizedDetails(B.PointerChange_4, t1);
    },
    sanitizeMoveEvent$1$buttons(buttons) {
      var newPressedButtons = buttons & 1073741823,
        t1 = this._pressedButtons;
      if (t1 === 0 && newPressedButtons !== 0)
        return new A._SanitizedDetails(B.PointerChange_3, t1);
      this._pressedButtons = newPressedButtons;
      return new A._SanitizedDetails(newPressedButtons === 0 ? B.PointerChange_3 : B.PointerChange_5, newPressedButtons);
    },
    sanitizeMissingRightClickUp$1$buttons(buttons) {
      if (this._pressedButtons !== 0 && (buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_6, 0);
      }
      return null;
    },
    sanitizeLeaveEvent$1$buttons(buttons) {
      if ((buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_3, 0);
      }
      return null;
    },
    sanitizeUpEvent$1$buttons(buttons) {
      var t1;
      if (this._pressedButtons === 0)
        return null;
      t1 = this._pressedButtons = (buttons == null ? 0 : buttons) & 1073741823;
      if (t1 === 0)
        return new A._SanitizedDetails(B.PointerChange_6, t1);
      else
        return new A._SanitizedDetails(B.PointerChange_5, t1);
    }
  };
  A._PointerAdapter.prototype = {
    _ensureSanitizer$1(device) {
      return this._sanitizers.putIfAbsent$2(0, device, new A._PointerAdapter__ensureSanitizer_closure());
    },
    _removePointerIfUnhoverable$1($event) {
      if (A.DomPointerEventExtension_get_pointerType($event) === "touch")
        this._sanitizers.remove$1(0, A.DomPointerEventExtension_get_pointerId($event));
    },
    _addPointerEventListener$4$checkModifiers(target, eventName, handler, checkModifiers) {
      this.addEventListener$3(0, target, eventName, new A._PointerAdapter__addPointerEventListener_closure(this, checkModifiers, handler));
    },
    _addPointerEventListener$3(target, eventName, handler) {
      return this._addPointerEventListener$4$checkModifiers(target, eventName, handler, true);
    },
    setup$0() {
      var t2, _this = this,
        t1 = _this._owner.view;
      _this._addPointerEventListener$3(t1.get$dom().rootElement, "pointerdown", new A._PointerAdapter_setup_closure(_this));
      t2 = t1.embeddingStrategy;
      _this._addPointerEventListener$3(t2.get$globalEventTarget(), "pointermove", new A._PointerAdapter_setup_closure0(_this));
      _this._addPointerEventListener$4$checkModifiers(t1.get$dom().rootElement, "pointerleave", new A._PointerAdapter_setup_closure1(_this), false);
      _this._addPointerEventListener$3(t2.get$globalEventTarget(), "pointerup", new A._PointerAdapter_setup_closure2(_this));
      _this._addPointerEventListener$4$checkModifiers(t1.get$dom().rootElement, "pointercancel", new A._PointerAdapter_setup_closure3(_this), false);
      _this._listeners.push(A.Listener_Listener$register("wheel", new A._PointerAdapter_setup_closure4(_this), false, t1.get$dom().rootElement));
    },
    _convertEventsToPointerData$3$data$details$event(data, details, $event) {
      var kind, t2, timeStamp, pressure, t3, offset, t4, t5, t6, t7,
        t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      kind = this._pointerTypeToDeviceKind$1(t1);
      t1 = A.DomPointerEventExtension_get_tiltX($event);
      t1.toString;
      t2 = A.DomPointerEventExtension_get_tiltY($event);
      t2.toString;
      t1 = Math.abs(t1) > Math.abs(t2) ? A.DomPointerEventExtension_get_tiltX($event) : A.DomPointerEventExtension_get_tiltY($event);
      t1.toString;
      t2 = A.DomEventExtension_get_timeStamp($event);
      t2.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t2);
      pressure = $event.pressure;
      if (pressure == null)
        pressure = null;
      t2 = this._owner;
      t3 = t2.view;
      offset = A.computeEventOffsetToTarget($event, t3);
      t4 = this._getPointerId$1($event);
      t5 = $.$get$EngineFlutterDisplay__instance();
      t6 = t5._debugDevicePixelRatioOverride;
      if (t6 == null) {
        t6 = self.window.devicePixelRatio;
        if (t6 === 0)
          t6 = 1;
      }
      t5 = t5._debugDevicePixelRatioOverride;
      if (t5 == null) {
        t5 = self.window.devicePixelRatio;
        if (t5 === 0)
          t5 = 1;
      }
      t7 = pressure == null ? 0 : pressure;
      t2._pointerDataConverter.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(data, details.buttons, details.change, t4, kind, offset._dx * t6, offset._dy * t5, t7, 1, B.PointerSignalKind_0, t1 / 180 * 3.141592653589793, timeStamp, t3.viewId);
    },
    _expandEvents$1($event) {
      var t1, coalescedEvents;
      if ("getCoalescedEvents" in $event) {
        t1 = $event.getCoalescedEvents();
        t1 = B.JSArray_methods.cast$1$0(t1, type$.JavaScriptObject);
        coalescedEvents = new A.CastList(t1._source, t1.$ti._eval$1("CastList<1,JavaScriptObject>"));
        if (!coalescedEvents.get$isEmpty(coalescedEvents))
          return coalescedEvents;
      }
      return A._setArrayType([$event], type$.JSArray_JavaScriptObject);
    },
    _pointerTypeToDeviceKind$1(pointerType) {
      switch (pointerType) {
        case "mouse":
          return B.PointerDeviceKind_1;
        case "pen":
          return B.PointerDeviceKind_2;
        case "touch":
          return B.PointerDeviceKind_0;
        default:
          return B.PointerDeviceKind_5;
      }
    },
    _getPointerId$1($event) {
      var t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      if (this._pointerTypeToDeviceKind$1(t1) === B.PointerDeviceKind_1)
        t1 = -1;
      else {
        t1 = A.DomPointerEventExtension_get_pointerId($event);
        t1.toString;
        t1 = B.JSNumber_methods.toInt$0(t1);
      }
      return t1;
    }
  };
  A._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0() {
      return new A._ButtonSanitizer();
    },
    $signature: 147
  };
  A._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1($event) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (this.checkModifiers) {
        t1 = this.$this._owner._keyboardConverter;
        if (t1 != null) {
          t2 = $event.getModifierState("Alt");
          t3 = $event.getModifierState("Control");
          t4 = $event.getModifierState("Meta");
          t5 = $event.getModifierState("Shift");
          t6 = A.DomEventExtension_get_timeStamp($event);
          t6.toString;
          t7 = $.$get$_kPhysicalAltLeft();
          t8 = $.$get$_kPhysicalAltRight();
          t9 = $.$get$_kLogicalAltLeft();
          t1._synthesizeModifierIfNeeded$5(t7, t8, t9, t2 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t7 = $.$get$kPhysicalControlLeft();
          t8 = $.$get$kPhysicalControlRight();
          t9 = $.$get$_kLogicalControlLeft();
          t1._synthesizeModifierIfNeeded$5(t7, t8, t9, t3 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t2 = $.$get$_kPhysicalMetaLeft();
          t7 = $.$get$_kPhysicalMetaRight();
          t8 = $.$get$_kLogicalMetaLeft();
          t1._synthesizeModifierIfNeeded$5(t2, t7, t8, t4 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t2 = $.$get$_kPhysicalShiftLeft();
          t3 = $.$get$_kPhysicalShiftRight();
          t7 = $.$get$_kLogicalShiftLeft();
          t1._synthesizeModifierIfNeeded$5(t2, t3, t7, t5 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
        }
      }
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._PointerAdapter_setup_closure.prototype = {
    call$1($event) {
      var up, t3,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        sanitizer = t1._ensureSanitizer$1(device),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t2 = B.JSNumber_methods.toInt$0($event.button);
      t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeDownEvent$2$button$buttons(t2, B.JSNumber_methods.toInt$0(t3)), $event);
      t1.__engine$_callback$2($event, pointerData);
      if (J.$eq$($event.target, t1._owner.view.get$dom().rootElement)) {
        $event.preventDefault();
        A.Timer_Timer(B.Duration_0, new A._PointerAdapter_setup__closure(t1));
      }
    },
    $signature: 16
  };
  A._PointerAdapter_setup__closure.prototype = {
    call$0() {
      $.$get$EnginePlatformDispatcher__instance().get$_viewFocusBinding().changeViewFocus$2(this.$this._owner.view.viewId, B.ViewFocusState_1);
    },
    $signature: 0
  };
  A._PointerAdapter_setup_closure0.prototype = {
    call$1($event) {
      var t2, t3, t4, up,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t2 = J.get$iterator$ax(t1._expandEvents$1($event)); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t4));
        if (up != null)
          t1._convertEventsToPointerData$3$data$details$event(pointerData, up, t3);
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeMoveEvent$1$buttons(B.JSNumber_methods.toInt$0(t4)), t3);
      }
      t1.__engine$_callback$2($event, pointerData);
    },
    $signature: 16
  };
  A._PointerAdapter_setup_closure1.prototype = {
    call$1($event) {
      var details,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      details = sanitizer.sanitizeLeaveEvent$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 16
  };
  A._PointerAdapter_setup_closure2.prototype = {
    call$1($event) {
      var pointerData, t3, details,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(0, device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2 = t2.$index(0, device);
        t2.toString;
        t3 = A.DomMouseEventExtension_get_buttons($event);
        details = t2.sanitizeUpEvent$1$buttons(t3 == null ? null : B.JSNumber_methods.toInt$0(t3));
        t1._removePointerIfUnhoverable$1($event);
        if (details != null) {
          t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
          t1.__engine$_callback$2($event, pointerData);
        }
      }
    },
    $signature: 16
  };
  A._PointerAdapter_setup_closure3.prototype = {
    call$1($event) {
      var pointerData,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(0, device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2.$index(0, device)._pressedButtons = 0;
        t1._removePointerIfUnhoverable$1($event);
        t1._convertEventsToPointerData$3$data$details$event(pointerData, new A._SanitizedDetails(B.PointerChange_0, 0), $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 16
  };
  A._PointerAdapter_setup_closure4.prototype = {
    call$1($event) {
      var t1 = this.$this;
      t1._lastWheelEventAllowedDefault = false;
      t1.__engine$_callback$2($event, t1._convertWheelEventToPointerData$1($event));
      if (!t1._lastWheelEventAllowedDefault)
        $event.preventDefault();
    },
    $signature: 1
  };
  A._PointerDeviceState.prototype = {};
  A._GlobalPointerState.prototype = {
    ensurePointerDeviceState$3(device, x, y) {
      return this.pointers.putIfAbsent$2(0, device, new A._GlobalPointerState_ensurePointerDeviceState_closure(x, y));
    }
  };
  A._GlobalPointerState_ensurePointerDeviceState_closure.prototype = {
    call$0() {
      return new A._PointerDeviceState(this.x, this.y);
    },
    $signature: 142
  };
  A.PointerDataConverter.prototype = {
    _generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      var t3,
        state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, onRespond, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp, viewId);
    },
    _generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      return this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, null, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId);
    },
    _locationHasChanged$3(device, physicalX, physicalY) {
      var state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device);
      return state.x !== physicalX || state.y !== physicalY;
    },
    _synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp, viewId) {
      var t3,
        state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, null, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, B.PointerSignalKind_0, size, true, tilt, timeStamp, viewId);
    },
    convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scale, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp, viewId) {
      var t1, alreadyAdded, t2, t3, state, _this = this;
      if (signalKind === B.PointerSignalKind_0)
        switch (change.index) {
          case 1:
            $.$get$PointerDataConverter_globalPointerState().ensurePointerDeviceState$3(device, physicalX, physicalY);
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case 3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(0, device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case 4:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(0, device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY)._pointer = $._PointerDeviceState__pointerCount = $._PointerDeviceState__pointerCount + 1;
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case 5:
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            $.$get$PointerDataConverter_globalPointerState().activeButtons = buttons;
            break;
          case 6:
          case 0:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            t2 = t1.pointers;
            t3 = t2.$index(0, device);
            t3.toString;
            if (change === B.PointerChange_0) {
              physicalX = t3.x;
              physicalY = t3.y;
            }
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(t1.activeButtons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            if (kind === B.PointerDeviceKind_0) {
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, B.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              t2.remove$1(0, device);
            }
            break;
          case 2:
            t1 = $.$get$PointerDataConverter_globalPointerState().pointers;
            state = t1.$index(0, device);
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, state.x, state.y, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.remove$1(0, device);
            break;
          case 7:
          case 8:
          case 9:
            break;
        }
      else
        switch (signalKind.index) {
          case 1:
          case 2:
          case 3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(0, device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              if (buttons !== 0)
                result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              else
                result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, onRespond, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case 0:
            break;
          case 4:
            break;
        }
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, scale, 0, 0, signalKind, 0, timeStamp, viewId);
    },
    convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scrollDeltaX, scrollDeltaY, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, 1, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp, viewId);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, signalKind, tilt, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, tilt, timeStamp, viewId);
    }
  };
  A.Profiler.prototype = {};
  A.RawKeyboard.prototype = {
    RawKeyboard$_$1(_onMacOs) {
      $._hotRestartListeners.push(new A.RawKeyboard$__closure(this));
    },
    dispose$0() {
      var t1, t2;
      for (t1 = this._keydownTimers, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications, A._instanceType(t1)._precomputed1); t2.moveNext$0();)
        t1.$index(0, t2.__js_helper$_current).cancel$0(0);
      t1.clear$0(0);
      $.RawKeyboard__instance = null;
    },
    handleHtmlEvent$1(domEvent) {
      var $event, t1, t2, t3, metaState, eventData, _this = this,
        $constructor = globalThis.KeyboardEvent;
      if (!($constructor != null && domEvent instanceof $constructor))
        return;
      $event = new A.FlutterHtmlKeyboardEvent(domEvent);
      t1 = A.DomKeyboardEventExtension_get_code(domEvent);
      t1.toString;
      if (domEvent.type === "keydown" && A.DomKeyboardEventExtension_get_key(domEvent) === "Tab" && domEvent.isComposing)
        return;
      t2 = A.DomKeyboardEventExtension_get_key(domEvent);
      t2.toString;
      if (!(t2 === "Meta" || t2 === "Shift" || t2 === "Alt" || t2 === "Control") && _this._onMacOs) {
        t2 = _this._keydownTimers;
        t3 = t2.$index(0, t1);
        if (t3 != null)
          t3.cancel$0(0);
        if (domEvent.type === "keydown")
          if (!domEvent.ctrlKey) {
            t3 = A.DomKeyboardEventExtension_get_shiftKey(domEvent);
            t3 = t3 === true || domEvent.altKey || domEvent.metaKey;
          } else
            t3 = true;
        else
          t3 = false;
        if (t3)
          t2.$indexSet(0, t1, A.Timer_Timer(B.Duration_2000000, new A.RawKeyboard_handleHtmlEvent_closure(_this, t1, $event)));
        else
          t2.remove$1(0, t1);
      }
      metaState = domEvent.getModifierState("Shift") ? 1 : 0;
      if (domEvent.getModifierState("Alt") || domEvent.getModifierState("AltGraph"))
        metaState |= 2;
      if (domEvent.getModifierState("Control"))
        metaState |= 4;
      if (domEvent.getModifierState("Meta"))
        metaState |= 8;
      _this._lastMetaState = metaState;
      if (domEvent.type === "keydown")
        if (A.DomKeyboardEventExtension_get_key(domEvent) === "CapsLock")
          _this._lastMetaState = metaState | 32;
        else if (A.DomKeyboardEventExtension_get_code(domEvent) === "NumLock")
          _this._lastMetaState = metaState | 16;
        else if (A.DomKeyboardEventExtension_get_key(domEvent) === "ScrollLock")
          _this._lastMetaState = metaState | 64;
        else if (A.DomKeyboardEventExtension_get_key(domEvent) === "Meta" && $.$get$browser().get$operatingSystem() === B.OperatingSystem_2)
          _this._lastMetaState |= 8;
        else if (A.DomKeyboardEventExtension_get_code(domEvent) === "MetaLeft" && A.DomKeyboardEventExtension_get_key(domEvent) === "Process")
          _this._lastMetaState |= 8;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", domEvent.type, "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(domEvent), "key", A.DomKeyboardEventExtension_get_key(domEvent), "location", B.JSNumber_methods.toInt$0(domEvent.location), "metaState", _this._lastMetaState, "keyCode", B.JSNumber_methods.toInt$0(domEvent.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), new A.RawKeyboard_handleHtmlEvent_closure0($event));
    }
  };
  A.RawKeyboard$__closure.prototype = {
    call$0() {
      this.$this.dispose$0();
    },
    $signature: 0
  };
  A.RawKeyboard_handleHtmlEvent_closure.prototype = {
    call$0() {
      var t2, eventData,
        t1 = this.$this;
      t1._keydownTimers.remove$1(0, this.timerKey);
      t2 = this.event._event;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", "keyup", "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(t2), "key", A.DomKeyboardEventExtension_get_key(t2), "location", B.JSNumber_methods.toInt$0(t2.location), "metaState", t1._lastMetaState, "keyCode", B.JSNumber_methods.toInt$0(t2.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), A._engine___noopCallback$closure());
    },
    $signature: 0
  };
  A.RawKeyboard_handleHtmlEvent_closure0.prototype = {
    call$1(data) {
      var t1;
      if (data == null)
        return;
      if (A._asBool(J.$index$asx(type$.Map_String_dynamic._as(B.C_JSONMessageCodec.decodeMessage$1(data)), "handled"))) {
        t1 = this.event._event;
        t1.preventDefault();
        t1.stopPropagation();
      }
    },
    $signature: 3
  };
  A.Assertiveness.prototype = {
    _enumToString$0() {
      return "Assertiveness." + this._name;
    }
  };
  A.AccessibilityAnnouncements.prototype = {
    ariaLiveElementFor$1(assertiveness) {
      switch (assertiveness.index) {
        case 0:
          return this._politeElement;
        case 1:
          return this._assertiveElement;
      }
    },
    announce$2(message, assertiveness) {
      var _this = this,
        ariaLiveElement = _this.ariaLiveElementFor$1(assertiveness),
        messageElement = A.DomDocumentExtension_createElement(self.document, "div");
      A.DomNodeExtension_set_text(messageElement, _this._appendSpace ? message + "\xa0" : message);
      _this._appendSpace = !_this._appendSpace;
      ariaLiveElement.append(messageElement);
      A.Timer_Timer(B.Duration_300000, new A.AccessibilityAnnouncements_announce_closure(messageElement));
    }
  };
  A.AccessibilityAnnouncements_announce_closure.prototype = {
    call$0() {
      return this.messageElement.remove();
    },
    $signature: 0
  };
  A.EngineAccessibilityFeatures.prototype = {
    toString$0(_) {
      var features = A._setArrayType([], type$.JSArray_String),
        t1 = this.__engine$_index;
      if ((t1 & 1) !== 0)
        features.push("accessibleNavigation");
      if ((t1 & 2) !== 0)
        features.push("invertColors");
      if ((t1 & 4) !== 0)
        features.push("disableAnimations");
      if ((t1 & 8) !== 0)
        features.push("boldText");
      if ((t1 & 16) !== 0)
        features.push("reduceMotion");
      if ((t1 & 32) !== 0)
        features.push("highContrast");
      if ((t1 & 64) !== 0)
        features.push("onOffSwitchLabels");
      return "AccessibilityFeatures" + A.S(features);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.EngineAccessibilityFeatures && other.__engine$_index === this.__engine$_index;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.__engine$_index);
    },
    copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, highContrast) {
      var t1 = (accessibleNavigation == null ? (this.__engine$_index & 1) !== 0 : accessibleNavigation) ? 1 : 0,
        t2 = this.__engine$_index;
      t1 = (t2 & 2) !== 0 ? t1 | 2 : t1 & 4294967293;
      t1 = (t2 & 4) !== 0 ? t1 | 4 : t1 & 4294967291;
      t1 = (t2 & 8) !== 0 ? t1 | 8 : t1 & 4294967287;
      t1 = (t2 & 16) !== 0 ? t1 | 16 : t1 & 4294967279;
      t1 = (highContrast == null ? (t2 & 32) !== 0 : highContrast) ? t1 | 32 : t1 & 4294967263;
      return new A.EngineAccessibilityFeatures((t2 & 64) !== 0 ? t1 | 64 : t1 & 4294967231);
    },
    copyWith$1$highContrast(highContrast) {
      return this.copyWith$2$accessibleNavigation$highContrast(null, highContrast);
    },
    copyWith$1$accessibleNavigation(accessibleNavigation) {
      return this.copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, null);
    }
  };
  A.SemanticsUpdate.prototype = {$isSemanticsUpdate0: 1};
  A.AccessibilityMode.prototype = {
    _enumToString$0() {
      return "AccessibilityMode." + this._name;
    }
  };
  A.GestureMode.prototype = {
    _enumToString$0() {
      return "GestureMode." + this._name;
    }
  };
  A.EngineSemantics.prototype = {
    set$semanticsEnabled(value) {
      var t1, t2, t3;
      if (this._semanticsEnabled)
        return;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = t1.configuration;
      t1.configuration = t2.copyWith$1$accessibilityFeatures(t2.accessibilityFeatures.copyWith$1$accessibleNavigation(true));
      this._semanticsEnabled = true;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = this._semanticsEnabled;
      t3 = t1.configuration;
      if (t2 !== t3.semanticsEnabled) {
        t1.configuration = t3.copyWith$1$semanticsEnabled(t2);
        t2 = t1._onSemanticsEnabledChanged;
        if (t2 != null)
          A.invoke(t2, t1._onSemanticsEnabledChangedZone);
      }
    },
    _getGestureModeClock$0() {
      var _this = this,
        t1 = _this._gestureModeClock;
      if (t1 == null) {
        t1 = _this._gestureModeClock = new A.AlarmClock(_this._now);
        t1.callback = new A.EngineSemantics__getGestureModeClock_closure(_this);
      }
      return t1;
    },
    receiveGlobalEvent$1($event) {
      var t1, _this = this;
      if (B.JSArray_methods.contains$1(B.List_OGJ, $event.type)) {
        t1 = _this._getGestureModeClock$0();
        t1.toString;
        t1.set$datetime(_this._now.call$0()._addMicroseconds$1(500000));
        if (_this._gestureMode !== B.GestureMode_0) {
          _this._gestureMode = B.GestureMode_0;
          _this._notifyGestureModeListeners$0();
        }
      }
      return _this.semanticsHelper._semanticsEnabler.shouldEnableSemantics$1($event);
    },
    _notifyGestureModeListeners$0() {
      var t1, i;
      for (t1 = this._gestureModeListeners, i = 0; i < t1.length; ++i)
        t1[i].call$1(this._gestureMode);
    }
  };
  A.EngineSemantics__now_closure.prototype = {
    call$0() {
      return new A.DateTime(Date.now(), 0, false);
    },
    $signature: 133
  };
  A.EngineSemantics__getGestureModeClock_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._gestureMode === B.GestureMode_1)
        return;
      t1._gestureMode = B.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  A.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$1(semanticsHost) {
      $._hotRestartListeners.push(new A.EngineSemanticsOwner_closure(this));
    },
    _finalizeTree$0() {
      var callback, t2, t3, _i, t4, t5, t6, _this = this,
        t1 = type$.SemanticsObject,
        removals = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t2 = _this._detachments, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i]._visitDepthFirstInTraversalOrder$1(new A.EngineSemanticsOwner__finalizeTree_closure(_this, removals));
      for (t2 = A._LinkedHashSetIterator$(removals, removals._collection$_modifications, removals.$ti._precomputed1), t3 = _this._semanticsTree, t4 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t5 = t2._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t3.remove$1(0, t5.id);
        t6 = t5.primaryRole.__PrimaryRoleManager_element_F;
        t6 === $ && A.throwUnnamedLateFieldNI();
        t6.remove();
        t5._parent = null;
        t6 = t5.primaryRole;
        if (t6 != null)
          t6.dispose$0();
        t5.primaryRole = null;
      }
      _this._detachments = A._setArrayType([], type$.JSArray_SemanticsObject);
      _this._attachments = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1);
      try {
        t1 = _this._oneTimePostUpdateCallbacks;
        t2 = t1.length;
        if (t2 !== 0) {
          for (_i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
            callback = t1[_i];
            callback.call$0();
          }
          _this._oneTimePostUpdateCallbacks = A._setArrayType([], type$.JSArray_of_void_Function);
        }
      } finally {
      }
      _this._hasNodeRequestingFocus = false;
    },
    reset$0(_) {
      var i, object, _this = this,
        t1 = _this._semanticsTree,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"),
        keys = A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), true, t2._eval$1("Iterable.E")),
        len = keys.length;
      for (i = 0; i < len; ++i) {
        object = t1.$index(0, keys[i]);
        if (object != null)
          _this._detachments.push(object);
      }
      _this._finalizeTree$0();
      t2 = _this._rootSemanticsElement;
      if (t2 != null)
        t2.remove();
      _this._rootSemanticsElement = null;
      t1.clear$0(0);
      _this._attachments.clear$0(0);
      B.JSArray_methods.clear$0(_this._detachments);
      B.JSArray_methods.clear$0(_this._oneTimePostUpdateCallbacks);
    }
  };
  A.EngineSemanticsOwner_closure.prototype = {
    call$0() {
      var t1 = this.$this._rootSemanticsElement;
      if (t1 != null)
        t1.remove();
    },
    $signature: 0
  };
  A.EngineSemanticsOwner__finalizeTree_closure.prototype = {
    call$1(node) {
      if (this.$this._attachments.$index(0, node.id) == null)
        this.removals.add$1(0, node);
      return true;
    },
    $signature: 128
  };
  A.SemanticsHelper.prototype = {};
  A.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1($event) {
      if (!this.get$isWaitingToEnableSemantics())
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  A.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1;
      if (this._semanticsPlaceholder == null)
        return true;
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled)
        return true;
      if (!B.Set_2nPij.contains$1(0, $event.type))
        return true;
      if (!J.$eq$($event.target, this._semanticsPlaceholder))
        return true;
      t1 = $.EngineSemantics__instance;
      (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).set$semanticsEnabled(true);
      this.dispose$0();
      return false;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A._functionToJS1(new A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("polite");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-live", t1);
      t1 = A.jsify("0");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("tabindex", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      this._semanticsPlaceholder = null;
    }
  };
  A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1, activationPoint, activatingElementRect, t2, t3, t4, t5, t6, deltaX, deltaY, _this = this;
      if (_this._semanticsPlaceholder == null)
        return true;
      if (_this._schedulePlaceholderRemoval) {
        if ($.$get$browser().get$browserEngine() !== B.BrowserEngine_1 || $event.type === "touchend" || $event.type === "pointerup" || $event.type === "click")
          _this.dispose$0();
        return true;
      }
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled)
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!B.Set_3bBbi.contains$1(0, $event.type))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      activationPoint = A._Cell$named("activationPoint");
      switch ($event.type) {
        case "click":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.offsetX, $event.offsetY));
          break;
        case "touchstart":
        case "touchend":
          t1 = type$._DomTouchListWrapper_JavaScriptObject;
          t1 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject);
          t1 = A._instanceType(t1)._rest[1]._as(J.get$first$ax(t1._source));
          activationPoint.set$finalLocalValue(new A.DomPoint(t1.clientX, t1.clientY));
          break;
        case "pointerdown":
        case "pointerup":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.clientX, $event.clientY));
          break;
        default:
          return true;
      }
      activatingElementRect = _this._semanticsPlaceholder.getBoundingClientRect();
      t1 = activatingElementRect.left;
      t2 = activatingElementRect.right;
      t3 = activatingElementRect.left;
      t4 = activatingElementRect.top;
      t5 = activatingElementRect.bottom;
      t6 = activatingElementRect.top;
      deltaX = activationPoint._readLocal$0().x - (t1 + (t2 - t3) / 2);
      deltaY = activationPoint._readLocal$0().y - (t4 + (t5 - t6) / 2);
      if (deltaX * deltaX + deltaY * deltaY < 1) {
        _this._schedulePlaceholderRemoval = true;
        _this.semanticsActivationTimer = A.Timer_Timer(B.Duration_300000, new A.MobileSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A._functionToJS1(new A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      this.semanticsActivationTimer = this._semanticsPlaceholder = null;
    }
  };
  A.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0() {
      this.$this.dispose$0();
      var t1 = $.EngineSemantics__instance;
      (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).set$semanticsEnabled(true);
    },
    $signature: 0
  };
  A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.SemanticsTextEditingStrategy.prototype = {
    enable$3$onAction$onChange(_, inputConfig, onAction, onChange) {
      this.inputConfig = inputConfig;
      this.onChange = onChange;
      this.onAction = onAction;
    },
    disable$0(_) {
      var t1, i, t2, _this = this;
      if (!_this.isEnabled)
        return;
      _this.isEnabled = false;
      _this.geometry = _this.style = null;
      for (t1 = _this.subscriptions, i = 0; i < t1.length; ++i) {
        t2 = t1[i];
        t2.target.removeEventListener(t2.type, t2.listener);
      }
      B.JSArray_methods.clear$0(t1);
      _this.lastEditingState = null;
      t1 = _this.domElement;
      if (t1 != null)
        t1.blur();
      _this._queuedStyle = _this.activeTextField = _this.domElement = null;
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      _this.preventDefaultForMouseEvents$0();
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      this.isEnabled = true;
      this.__DefaultTextEditingStrategy_inputConfiguration_A = inputConfig;
      this.applyConfiguration$1(inputConfig);
    },
    placeElement$0() {
      this.__DefaultTextEditingStrategy_inputConfiguration_A === $ && A.throwUnnamedLateFieldNI();
      var t1 = this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, null);
    },
    initializeElementPlacement$0() {
    },
    updateElementPlacement$1(textGeometry) {
    },
    updateElementStyle$1(textStyle) {
      this._queuedStyle = textStyle;
      this._syncStyle$0();
    },
    _syncStyle$0() {
      var t1 = this._queuedStyle;
      if (t1 == null || this.domElement == null)
        return;
      t1.toString;
      this.super$DefaultTextEditingStrategy$updateElementStyle(t1);
    }
  };
  A._TypedDataBuffer.prototype = {
    get$length(_) {
      return this.__engine$_length;
    },
    $index(_, index) {
      if (index >= this.__engine$_length)
        throw A.wrapException(A.IndexError$(index, this, null, null, null));
      return this.__engine$_buffer[index];
    },
    $indexSet(_, index, value) {
      if (index >= this.__engine$_length)
        throw A.wrapException(A.IndexError$(index, this, null, null, null));
      this.__engine$_buffer[index] = value;
    },
    set$length(_, newLength) {
      var t2, i, newBuffer, _this = this,
        t1 = _this.__engine$_length;
      if (newLength < t1)
        for (t2 = _this.__engine$_buffer, i = newLength; i < t1; ++i)
          t2[i] = 0;
      else {
        t1 = _this.__engine$_buffer.length;
        if (newLength > t1) {
          if (t1 === 0)
            newBuffer = new Uint8Array(newLength);
          else
            newBuffer = _this._createBiggerBuffer$1(newLength);
          B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
          _this.__engine$_buffer = newBuffer;
        }
      }
      _this.__engine$_length = newLength;
    },
    __engine$_add$1(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    add$1(_, value) {
      var _this = this,
        t1 = _this.__engine$_length;
      if (t1 === _this.__engine$_buffer.length)
        _this.__engine$_grow$1(t1);
      _this.__engine$_buffer[_this.__engine$_length++] = value;
    },
    addAll$3(_, values, start, end) {
      A.RangeError_checkNotNegative(start, "start");
      if (end != null && start > end)
        throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
      this.__engine$_addAll$3(values, start, end);
    },
    addAll$1(_, values) {
      return this.addAll$3(0, values, 0, null);
    },
    __engine$_addAll$3(values, start, end) {
      var t1, i, value, _this = this;
      if (A._instanceType(_this)._eval$1("List<_TypedDataBuffer.E>")._is(values))
        end = end == null ? J.get$length$asx(values) : end;
      if (end != null) {
        _this._insertKnownLength$4(_this.__engine$_length, values, start, end);
        return;
      }
      for (t1 = J.get$iterator$ax(values), i = 0; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (i >= start)
          _this.__engine$_add$1(0, value);
        ++i;
      }
      if (i < start)
        throw A.wrapException(A.StateError$("Too few elements"));
    },
    _insertKnownLength$4(index, values, start, end) {
      var valuesLength, newLength, t2, _this = this,
        t1 = J.getInterceptor$asx(values);
      if (start > t1.get$length(values) || end > t1.get$length(values))
        throw A.wrapException(A.StateError$("Too few elements"));
      valuesLength = end - start;
      newLength = _this.__engine$_length + valuesLength;
      _this._ensureCapacity$1(newLength);
      t1 = _this.__engine$_buffer;
      t2 = index + valuesLength;
      B.NativeUint8List_methods.setRange$4(t1, t2, _this.__engine$_length + valuesLength, t1, index);
      B.NativeUint8List_methods.setRange$4(_this.__engine$_buffer, index, t2, values, start);
      _this.__engine$_length = newLength;
    },
    _ensureCapacity$1(requiredCapacity) {
      var newBuffer, _this = this;
      if (requiredCapacity <= _this.__engine$_buffer.length)
        return;
      newBuffer = _this._createBiggerBuffer$1(requiredCapacity);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, _this.__engine$_length, _this.__engine$_buffer);
      _this.__engine$_buffer = newBuffer;
    },
    _createBiggerBuffer$1(requiredCapacity) {
      var newLength = this.__engine$_buffer.length * 2;
      if (requiredCapacity != null && newLength < requiredCapacity)
        newLength = requiredCapacity;
      else if (newLength < 8)
        newLength = 8;
      return new Uint8Array(newLength);
    },
    __engine$_grow$1($length) {
      var t1 = this._createBiggerBuffer$1(null);
      B.NativeUint8List_methods.setRange$3(t1, 0, $length, this.__engine$_buffer);
      this.__engine$_buffer = t1;
    }
  };
  A._IntBuffer.prototype = {};
  A.Uint8Buffer.prototype = {};
  A.MethodCall0.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(" + this.method + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.JSONMessageCodec.prototype = {
    encodeMessage$1(message) {
      return A.NativeByteData_NativeByteData$view(B.C_Utf8Encoder.convert$1(B.C_JsonCodec.encode$1(message)).buffer, 0, null);
    },
    decodeMessage$1(message) {
      if (message == null)
        return message;
      return B.C_JsonCodec.decode$1(0, B.Utf8Decoder_false.convert$1(A.NativeUint8List_NativeUint8List$view(message.buffer, 0, null)));
    }
  };
  A.JSONMethodCodec.prototype = {
    encodeMethodCall$1($call) {
      return B.C_JSONMessageCodec.encodeMessage$1(A.LinkedHashMap_LinkedHashMap$_literal(["method", $call.method, "args", $call.$arguments], type$.String, type$.dynamic));
    },
    decodeMethodCall$1(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = B.C_JSONMessageCodec.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected method call Map, got " + A.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new A.MethodCall0(method, $arguments);
      throw A.wrapException(A.FormatException$("Invalid method call: " + A.S(decoded), _null, _null));
    }
  };
  A.StandardMessageCodec.prototype = {
    encodeMessage$1(message) {
      var buffer = A.WriteBuffer_WriteBuffer0();
      this.writeValue$2(0, buffer, true);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new A.ReadBuffer0(message);
      result = this.readValue$1(0, buffer);
      if (buffer.__engine$_position < message.byteLength)
        throw A.wrapException(B.FormatException_rh8);
      return result;
    },
    writeValue$2(_, buffer, value) {
      var t1, t2, t3, bytes, _this = this;
      if (value == null)
        buffer.__engine$_buffer.__engine$_add$1(0, 0);
      else if (A._isBool(value)) {
        t1 = value ? 1 : 2;
        buffer.__engine$_buffer.__engine$_add$1(0, t1);
      } else if (typeof value == "number") {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 6);
        buffer.__engine$_alignTo$1(8);
        buffer.__engine$_eightBytes.setFloat64(0, value, B.C_Endian === $.$get$Endian_host());
        t1.addAll$1(0, buffer.__engine$_eightBytesAsList);
      } else if (A._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer.__engine$_buffer;
        t3 = buffer.__engine$_eightBytes;
        if (t1) {
          t2.__engine$_add$1(0, 3);
          t3.setInt32(0, value, B.C_Endian === $.$get$Endian_host());
          t2.addAll$3(0, buffer.__engine$_eightBytesAsList, 0, 4);
        } else {
          t2.__engine$_add$1(0, 4);
          B.NativeByteData_methods.setInt64$3(t3, 0, value, $.$get$Endian_host());
        }
      } else if (typeof value == "string") {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 7);
        bytes = B.C_Utf8Encoder.convert$1(value);
        _this.writeSize$2(buffer, bytes.length);
        t1.addAll$1(0, bytes);
      } else if (type$.Uint8List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        t1.addAll$1(0, value);
      } else if (type$.Int32List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 9);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer.__engine$_alignTo$1(4);
        t1.addAll$1(0, A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t2));
      } else if (type$.Float64List._is(value)) {
        t1 = buffer.__engine$_buffer;
        t1.__engine$_add$1(0, 11);
        t2 = value.length;
        _this.writeSize$2(buffer, t2);
        buffer.__engine$_alignTo$1(8);
        t1.addAll$1(0, A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t2));
      } else if (type$.List_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer.__engine$_buffer.__engine$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new A.StandardMessageCodec_writeValue_closure0(_this, buffer));
      } else
        throw A.wrapException(A.ArgumentError$value(value, null, null));
    },
    readValue$1(_, buffer) {
      if (buffer.__engine$_position >= buffer.data.byteLength)
        throw A.wrapException(B.FormatException_rh8);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var result, value, $length, t1, list, theResult, i, t2, t3, _this = this;
      switch (type) {
        case 0:
          result = null;
          break;
        case 1:
          result = true;
          break;
        case 2:
          result = false;
          break;
        case 3:
          value = buffer.data.getInt32(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          result = value;
          break;
        case 4:
          result = buffer.getInt64$0(0);
          break;
        case 5:
          $length = _this.readSize$1(buffer);
          result = A.int_parse(B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length)), 16);
          break;
        case 6:
          buffer.__engine$_alignTo$1(8);
          value = buffer.data.getFloat64(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 8;
          result = value;
          break;
        case 7:
          $length = _this.readSize$1(buffer);
          result = B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
          break;
        case 8:
          result = buffer.getUint8List$1(_this.readSize$1(buffer));
          break;
        case 9:
          $length = _this.readSize$1(buffer);
          buffer.__engine$_alignTo$1(4);
          t1 = buffer.data;
          list = A.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 4 * $length;
          result = list;
          break;
        case 10:
          result = buffer.getInt64List$1(_this.readSize$1(buffer));
          break;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer.__engine$_alignTo$1(8);
          t1 = buffer.data;
          list = A.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer.__engine$_position, $length);
          buffer.__engine$_position = buffer.__engine$_position + 8 * $length;
          result = list;
          break;
        case 12:
          $length = _this.readSize$1(buffer);
          theResult = [];
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer.__engine$_position = t2 + 1;
            theResult.push(_this.readValueOfType$2(t1.getUint8(t2), buffer));
          }
          result = theResult;
          break;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          theResult = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer.__engine$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer.__engine$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer.__engine$_position;
            if (t3 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer.__engine$_position = t3 + 1;
            theResult.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          result = theResult;
          break;
        default:
          throw A.wrapException(B.FormatException_rh8);
      }
      return result;
    },
    writeSize$2(buffer, value) {
      var t1, t2, t3;
      if (value < 254)
        buffer.__engine$_buffer.__engine$_add$1(0, value);
      else {
        t1 = buffer.__engine$_buffer;
        t2 = buffer.__engine$_eightBytes;
        t3 = buffer.__engine$_eightBytesAsList;
        if (value <= 65535) {
          t1.__engine$_add$1(0, 254);
          t2.setUint16(0, value, B.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 2);
        } else {
          t1.__engine$_add$1(0, 255);
          t2.setUint32(0, value, B.C_Endian === $.$get$Endian_host());
          t1.addAll$3(0, t3, 0, 4);
        }
      }
    },
    readSize$1(buffer) {
      var value = buffer.getUint8$0(0);
      switch (value) {
        case 254:
          value = buffer.data.getUint16(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 2;
          return value;
        case 255:
          value = buffer.data.getUint32(buffer.__engine$_position, B.C_Endian === $.$get$Endian_host());
          buffer.__engine$_position += 4;
          return value;
        default:
          return value;
      }
    }
  };
  A.StandardMessageCodec_writeValue_closure0.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 64
  };
  A.StandardMethodCodec.prototype = {
    decodeMethodCall$1(methodCall) {
      var buffer, method, $arguments;
      methodCall.toString;
      buffer = new A.ReadBuffer0(methodCall);
      method = B.C_StandardMessageCodec0.readValue$1(0, buffer);
      $arguments = B.C_StandardMessageCodec0.readValue$1(0, buffer);
      if (typeof method == "string" && buffer.__engine$_position >= methodCall.byteLength)
        return new A.MethodCall0(method, $arguments);
      else
        throw A.wrapException(B.FormatException_4CA);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer0();
      buffer.__engine$_buffer.__engine$_add$1(0, 0);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer = A.WriteBuffer_WriteBuffer0();
      buffer.__engine$_buffer.__engine$_add$1(0, 1);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, code);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, message);
      B.C_StandardMessageCodec0.writeValue$2(0, buffer, details);
      return buffer.done$0();
    }
  };
  A.WriteBuffer0.prototype = {
    __engine$_alignTo$1(alignment) {
      var t2, i,
        t1 = this.__engine$_buffer,
        mod = B.JSInt_methods.$mod(t1.__engine$_length, alignment);
      if (mod !== 0)
        for (t2 = alignment - mod, i = 0; i < t2; ++i)
          t1.__engine$_add$1(0, 0);
    },
    done$0() {
      var t1 = this.__engine$_buffer,
        t2 = t1.__engine$_buffer;
      return A.NativeByteData_NativeByteData$view(t2.buffer, 0, t1.__engine$_length * t2.BYTES_PER_ELEMENT);
    }
  };
  A.ReadBuffer0.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this.__engine$_position++);
    },
    getInt64$0(_) {
      B.NativeByteData_methods.getInt64$2(this.data, this.__engine$_position, $.$get$Endian_host());
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
      this.__engine$_position += $length;
      return list;
    },
    getInt64List$1($length) {
      var t1;
      this.__engine$_alignTo$1(8);
      t1 = this.data;
      B.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this.__engine$_position, $length);
    },
    __engine$_alignTo$1(alignment) {
      var t1 = this.__engine$_position,
        mod = B.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this.__engine$_position = t1 + (alignment - mod);
    }
  };
  A.TextFragment.prototype = {};
  A.LineBreakType.prototype = {
    _enumToString$0() {
      return "LineBreakType." + this._name;
    }
  };
  A.LineBreakFragment.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.start, _this.end, _this.type, _this.trailingNewlines, _this.trailingSpaces, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.LineBreakFragment && other.start === _this.start && other.end === _this.end && other.type === _this.type && other.trailingNewlines === _this.trailingNewlines && other.trailingSpaces === _this.trailingSpaces;
    },
    toString$0(_) {
      return "LineBreakFragment(" + this.start + ", " + this.end + ", " + this.type.toString$0(0) + ")";
    }
  };
  A.BrowserAutofillHints.prototype = {};
  A.CompositionAwareMixin.prototype = {
    get$_compositionStartListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI;
      if (value === $) {
        result = A._functionToJS1(_this.get$_handleCompositionStart());
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionUpdateListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI;
      if (value === $) {
        result = A._functionToJS1(_this.get$_handleCompositionUpdate());
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_compositionEndListener() {
      var result, _this = this,
        value = _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI;
      if (value === $) {
        result = A._functionToJS1(_this.get$_handleCompositionEnd());
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = result;
        value = result;
      }
      return value;
    },
    addCompositionEventHandlers$1(domElement) {
      A.DomEventTargetExtension_addEventListener(domElement, "compositionstart", this.get$_compositionStartListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionupdate", this.get$_compositionUpdateListener(), null);
      A.DomEventTargetExtension_addEventListener(domElement, "compositionend", this.get$_compositionEndListener(), null);
    },
    _handleCompositionStart$1($event) {
      this.CompositionAwareMixin_composingText = null;
    },
    _handleCompositionUpdate$1($event) {
      var t1,
        $constructor = globalThis.CompositionEvent;
      if ($constructor != null && $event instanceof $constructor) {
        t1 = $event.data;
        this.CompositionAwareMixin_composingText = t1 == null ? null : t1;
      }
    },
    _handleCompositionEnd$1($event) {
      this.CompositionAwareMixin_composingText = null;
    },
    determineCompositionState$1(editingState) {
      var t1, t2, composingBase;
      if (this.CompositionAwareMixin_composingText == null || editingState.text == null)
        return editingState;
      t1 = editingState.extentOffset;
      t2 = this.CompositionAwareMixin_composingText.length;
      composingBase = t1 - t2;
      if (composingBase < 0)
        return editingState;
      return A.EditingState$(editingState.baseOffset, composingBase, composingBase + t2, t1, editingState.text);
    }
  };
  A.EngineInputAction.prototype = {
    configureInputAction$1(domElement) {
      var t1;
      if (this.get$enterkeyhintAttribute() == null)
        return;
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 || $.$get$browser().get$operatingSystem() === B.OperatingSystem_1 || this.get$enterkeyhintAttribute() == null) {
        t1 = this.get$enterkeyhintAttribute();
        t1.toString;
        t1 = A.jsify(t1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("enterkeyhint", t1);
      }
    }
  };
  A.NoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return null;
    }
  };
  A.EnterInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "enter";
    }
  };
  A.DoneInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "done";
    }
  };
  A.GoInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "go";
    }
  };
  A.NextInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "next";
    }
  };
  A.PreviousInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "previous";
    }
  };
  A.SearchInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "search";
    }
  };
  A.SendInputAction.prototype = {
    get$enterkeyhintAttribute() {
      return "send";
    }
  };
  A.EngineInputType.prototype = {
    createDomElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "input");
    },
    configureInputMode$1(domElement) {
      var t1;
      if (this.get$inputmodeAttribute() == null)
        return;
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 || $.$get$browser().get$operatingSystem() === B.OperatingSystem_1 || this.get$inputmodeAttribute() === "none") {
        t1 = this.get$inputmodeAttribute();
        t1.toString;
        t1 = A.jsify(t1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("inputmode", t1);
      }
    }
  };
  A.NoTextInputType.prototype = {
    get$inputmodeAttribute() {
      return "none";
    }
  };
  A.MultilineNoTextInputType.prototype = {
    get$inputmodeAttribute() {
      return "none";
    },
    createDomElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "textarea");
    }
  };
  A.TextInputType0.prototype = {
    get$inputmodeAttribute() {
      return null;
    }
  };
  A.NumberInputType.prototype = {
    get$inputmodeAttribute() {
      return "numeric";
    }
  };
  A.DecimalInputType.prototype = {
    get$inputmodeAttribute() {
      return "decimal";
    }
  };
  A.PhoneInputType.prototype = {
    get$inputmodeAttribute() {
      return "tel";
    }
  };
  A.EmailInputType.prototype = {
    get$inputmodeAttribute() {
      return "email";
    }
  };
  A.UrlInputType.prototype = {
    get$inputmodeAttribute() {
      return "url";
    }
  };
  A.MultilineInputType.prototype = {
    get$inputmodeAttribute() {
      return null;
    },
    createDomElement$0() {
      return A.DomDocumentExtension_createElement(self.document, "textarea");
    }
  };
  A.TextCapitalization.prototype = {
    _enumToString$0() {
      return "TextCapitalization." + this._name;
    }
  };
  A.TextCapitalizationConfig.prototype = {
    setAutocapitalizeAttribute$1(domElement) {
      var autocapitalize, $constructor, t1,
        _s9_ = "sentences";
      switch (this.textCapitalization.index) {
        case 0:
          autocapitalize = $.$get$browser().get$browserEngine() === B.BrowserEngine_1 ? _s9_ : "words";
          break;
        case 2:
          autocapitalize = "characters";
          break;
        case 1:
          autocapitalize = _s9_;
          break;
        case 3:
        default:
          autocapitalize = "off";
          break;
      }
      $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        t1 = A.jsify(autocapitalize);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        domElement.setAttribute("autocapitalize", t1);
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          t1 = A.jsify(autocapitalize);
          if (t1 == null)
            t1 = type$.Object._as(t1);
          domElement.setAttribute("autocapitalize", t1);
        }
      }
    }
  };
  A.EngineAutofillForm.prototype = {
    addInputEventListeners$0() {
      var t1 = this.elements,
        subscriptions = A._setArrayType([], type$.JSArray_DomSubscription);
      new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>")).forEach$1(0, new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey(this, subscriptions));
      return subscriptions;
    }
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = t1.elements.$index(0, key);
      t2.toString;
      this.subscriptions.push(A.DomSubscription$(t2, "input", new A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure(t1, key, t2)));
    },
    $signature: 124
  };
  A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure.prototype = {
    call$1(e) {
      var newEditingState,
        t1 = this.$this.items,
        t2 = this.key;
      if (t1.$index(0, t2) == null)
        throw A.wrapException(A.StateError$("AutofillInfo must have a valid uniqueIdentifier."));
      else {
        t1 = t1.$index(0, t2);
        t1.toString;
        newEditingState = A.EditingState_EditingState$fromDomElement(this.element);
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0(string$.TextInT, [0, A.LinkedHashMap_LinkedHashMap$_literal([t1.uniqueIdentifier, newEditingState.toFlutter$0()], type$.nullable_String, type$.dynamic)])), A._engine___emptyCallback$closure());
      }
    },
    $signature: 1
  };
  A.AutofillInfo.prototype = {
    applyToDomElement$2$focusedElement(domElement, focusedElement) {
      var t1, _this, t2,
        _s8_ = "password",
        autofillHint = this.autofillHint,
        placeholder = this.placeholder,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        if (placeholder != null)
          domElement.placeholder = placeholder;
        t1 = autofillHint == null;
        if (!t1) {
          domElement.name = autofillHint;
          domElement.id = autofillHint;
          if (B.JSString_methods.contains$1(autofillHint, _s8_))
            A.DomHTMLInputElementExtension_set_type(domElement, _s8_);
          else
            A.DomHTMLInputElementExtension_set_type(domElement, "text");
        }
        _this = t1 ? "on" : autofillHint;
        domElement.autocomplete = _this;
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          if (placeholder != null)
            domElement.placeholder = placeholder;
          t1 = autofillHint == null;
          if (!t1) {
            domElement.name = autofillHint;
            domElement.id = autofillHint;
          }
          t2 = A.jsify(t1 ? "on" : autofillHint);
          t1 = t2 == null ? type$.Object._as(t2) : t2;
          domElement.setAttribute("autocomplete", t1);
        }
      }
    },
    applyToDomElement$1(domElement) {
      return this.applyToDomElement$2$focusedElement(domElement, false);
    }
  };
  A.TextEditingDeltaState.prototype = {};
  A.EditingState.prototype = {
    get$minOffset() {
      return Math.min(this.baseOffset, this.extentOffset);
    },
    get$maxOffset() {
      return Math.max(this.baseOffset, this.extentOffset);
    },
    toFlutter$0() {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["text", _this.text, "selectionBase", _this.baseOffset, "selectionExtent", _this.extentOffset, "composingBase", _this.composingBaseOffset, "composingExtent", _this.composingExtentOffset], type$.String, type$.dynamic);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.text, _this.baseOffset, _this.extentOffset, _this.composingBaseOffset, _this.composingExtentOffset, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.EditingState && other.text == _this.text && other.get$minOffset() === _this.get$minOffset() && other.get$maxOffset() === _this.get$maxOffset() && other.composingBaseOffset === _this.composingBaseOffset && other.composingExtentOffset === _this.composingExtentOffset;
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    },
    applyToDomElement$1(domElement) {
      var _this0, t1, _this = this,
        $constructor = globalThis.HTMLInputElement;
      if ($constructor != null && domElement instanceof $constructor) {
        domElement.toString;
        A.DomHTMLInputElementExtension_set_value(domElement, _this.text);
        _this0 = _this.get$minOffset();
        _this = _this.get$maxOffset();
        domElement.setSelectionRange(_this0, _this);
      } else {
        $constructor = globalThis.HTMLTextAreaElement;
        if ($constructor != null && domElement instanceof $constructor) {
          domElement.toString;
          A.DomHTMLTextAreaElementExtension_set_value(domElement, _this.text);
          _this0 = _this.get$minOffset();
          _this = _this.get$maxOffset();
          domElement.setSelectionRange(_this0, _this);
        } else {
          t1 = domElement == null ? null : A.DomElementExtension_get_tagName(domElement);
          throw A.wrapException(A.UnsupportedError$("Unsupported DOM element type: <" + A.S(t1) + "> (" + J.get$runtimeType$(domElement).toString$0(0) + ")"));
        }
      }
    }
  };
  A.InputConfiguration.prototype = {};
  A.GloballyPositionedTextEditingStrategy.prototype = {
    placeElement$0() {
      var t2, _this = this,
        t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null) {
        _this.placeForm$0();
        t1 = _this.lastEditingState;
        if (t1 != null)
          t1.applyToDomElement$1(_this.domElement);
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A.autofillGroup;
        t1 = t1 == null ? null : t1.formElement;
        t1.toString;
        A.DomElementExtension_focus(t1, true);
        t1 = _this.domElement;
        t1.toString;
        A.DomElementExtension_focus(t1, true);
      }
    }
  };
  A.SafariDesktopTextEditingStrategy.prototype = {
    placeElement$0() {
      var t2, _this = this,
        t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null) {
        _this.placeForm$0();
        t1 = _this.domElement;
        t1.toString;
        A.DomElementExtension_focus(t1, true);
        t1 = _this.lastEditingState;
        if (t1 != null) {
          t2 = _this.domElement;
          t2.toString;
          t1.applyToDomElement$1(t2);
        }
      }
    },
    initializeElementPlacement$0() {
      if (this.geometry != null)
        this.placeElement$0();
      var t1 = this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
    }
  };
  A.DefaultTextEditingStrategy.prototype = {
    get$editingDeltaState() {
      var _null = null,
        t1 = this._editingDeltaState;
      if (t1 == null) {
        t1 = this.lastEditingState.text;
        t1.toString;
        t1 = this._editingDeltaState = new A.TextEditingDeltaState(t1, "", -1, -1, _null, _null, _null, _null);
      }
      return t1;
    },
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var elementStyle, t2, _this = this, _s4_ = "none",
        _s11_ = "transparent",
        t1 = inputConfig.inputType.createDomElement$0();
      A.DomElementExtension_set_tabIndex(t1, -1);
      _this.domElement = t1;
      _this.applyConfiguration$1(inputConfig);
      t1 = _this.domElement;
      t1.classList.add("flt-text-editing");
      elementStyle = t1.style;
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "forced-color-adjust", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "white-space", "pre-wrap");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "align-content", "center");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "left", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "padding", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "opacity", "1");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "background", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "caret-color", _s11_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "outline", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "border", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "resize", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "text-shadow", _s4_);
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(elementStyle, "transform-origin", "0 0 0");
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_0 || $.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        t1.classList.add("transparentTextEditing");
      t1 = _this.style;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup == null) {
        t1 = _this.domElement;
        t1.toString;
        A._insertEditingElementInView(t1, inputConfig.viewId);
        _this._appendedToForm = false;
      }
      _this.initializeElementPlacement$0();
      _this.isEnabled = true;
      _this.onChange = onChange;
      _this.onAction = onAction;
    },
    applyConfiguration$1(config) {
      var t1, t2, action, autofill, autocorrectValue, _this = this;
      _this.__DefaultTextEditingStrategy_inputConfiguration_A = config;
      t1 = _this.domElement;
      if (config.readOnly) {
        t1.toString;
        t2 = A.jsify("readonly");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("readonly", t2);
      } else
        t1.removeAttribute("readonly");
      if (config.obscureText) {
        t1 = _this.domElement;
        t1.toString;
        t2 = A.jsify("password");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("type", t2);
      }
      if (config.inputType.get$inputmodeAttribute() === "none") {
        t1 = _this.domElement;
        t1.toString;
        t2 = A.jsify("none");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("inputmode", t2);
      }
      action = A.EngineInputAction_fromName(config.inputAction);
      t1 = _this.domElement;
      t1.toString;
      action.configureInputAction$1(t1);
      autofill = config.autofill;
      t1 = _this.domElement;
      if (autofill != null) {
        t1.toString;
        autofill.applyToDomElement$2$focusedElement(t1, true);
      } else {
        t1.toString;
        t2 = A.jsify("off");
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t1.setAttribute("autocomplete", t2);
        t2 = _this.domElement;
        t2.toString;
        A._ensureEditingElementInView(t2, _this.__DefaultTextEditingStrategy_inputConfiguration_A.viewId);
      }
      autocorrectValue = config.autocorrect ? "on" : "off";
      t1 = _this.domElement;
      t1.toString;
      t2 = A.jsify(autocorrectValue);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      t1.setAttribute("autocorrect", t2);
    },
    initializeElementPlacement$0() {
      this.placeElement$0();
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "beforeinput", _this.get$handleBeforeInput()));
      if (!(_this instanceof A.SafariDesktopTextEditingStrategy)) {
        t2 = _this.domElement;
        t2.toString;
        t1.push(A.DomSubscription$(t2, "blur", _this.get$handleBlur()));
      }
      t1 = _this.domElement;
      t1.toString;
      _this.addCompositionEventHandlers$1(t1);
      _this.preventDefaultForMouseEvents$0();
    },
    updateElementPlacement$1(textGeometry) {
      var t1, _this = this;
      _this.geometry = textGeometry;
      if (_this.isEnabled)
        if (_this.CompositionAwareMixin_composingText != null) {
          t1 = _this.domElement;
          t1.toString;
          textGeometry.applyToDomElement$1(t1);
        } else
          _this.placeElement$0();
    },
    updateElementStyle$1(textStyle) {
      var t1;
      this.style = textStyle;
      if (this.isEnabled) {
        t1 = this.domElement;
        t1.toString;
        textStyle.applyToDomElement$1(t1);
      }
    },
    disable$0(_) {
      var t1, i, t2, _this = this, _null = null;
      _this.isEnabled = false;
      _this.geometry = _this.style = _this._editingDeltaState = _this.lastEditingState = null;
      for (t1 = _this.subscriptions, i = 0; i < t1.length; ++i) {
        t2 = t1[i];
        t2.target.removeEventListener(t2.type, t2.listener);
      }
      B.JSArray_methods.clear$0(t1);
      t1 = _this.domElement;
      t1.toString;
      A.DomEventTargetExtension_removeEventListener(t1, "compositionstart", _this.get$_compositionStartListener(), _null);
      A.DomEventTargetExtension_removeEventListener(t1, "compositionupdate", _this.get$_compositionUpdateListener(), _null);
      A.DomEventTargetExtension_removeEventListener(t1, "compositionend", _this.get$_compositionEndListener(), _null);
      if (_this._appendedToForm) {
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.autofillGroup;
        t1 = (t1 == null ? _null : t1.formElement) != null;
      } else
        t1 = false;
      t2 = _this.domElement;
      if (t1) {
        t2.toString;
        A._styleAutofillElements(t2, true, false, true);
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1 = t1.autofillGroup;
        if (t1 != null) {
          t2 = t1.formIdentifier;
          t1 = t1.formElement;
          $.formsOnTheDom.$indexSet(0, t2, t1);
          A._styleAutofillElements(t1, true, false, true);
        }
        t1 = _this.domElement;
        t1.toString;
        A.DefaultTextEditingStrategy__moveFocusToFlutterView(t1, $.$get$EnginePlatformDispatcher__instance().get$viewManager().findViewForElement$1(t1), false);
      } else {
        t2.toString;
        A.DefaultTextEditingStrategy__moveFocusToFlutterView(t2, $.$get$EnginePlatformDispatcher__instance().get$viewManager().findViewForElement$1(t2), true);
      }
      _this.domElement = null;
    },
    setEditingState$1(editingState) {
      var t1;
      this.lastEditingState = editingState;
      if (this.isEnabled)
        t1 = !(editingState.baseOffset >= 0 && editingState.extentOffset >= 0);
      else
        t1 = true;
      if (t1)
        return;
      editingState.applyToDomElement$1(this.domElement);
    },
    placeElement$0() {
      var t1 = this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
    },
    placeForm$0() {
      var t2, t3,
        t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      t1.toString;
      t2 = this.domElement;
      t2.toString;
      if ($.$get$textEditing().get$strategy() instanceof A.SafariDesktopTextEditingStrategy)
        A.DomCSSStyleDeclarationExtension_setProperty(t2.style, "pointer-events", "all");
      t3 = t1.formElement;
      t3.insertBefore(t2, t1.insertionReferenceNode);
      A._insertEditingElementInView(t3, t1.viewId);
      this._appendedToForm = true;
    },
    handleChange$1($event) {
      var newEditingState, newTextEditingDeltaState, _this = this,
        t1 = _this.domElement;
      t1.toString;
      newEditingState = _this.determineCompositionState$1(A.EditingState_EditingState$fromDomElement(t1));
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.enableDeltaModel) {
        _this.get$editingDeltaState().composingOffset = newEditingState.composingBaseOffset;
        _this.get$editingDeltaState().composingExtent = newEditingState.composingExtentOffset;
        newTextEditingDeltaState = A.TextEditingDeltaState_inferDeltaState(newEditingState, _this.lastEditingState, _this.get$editingDeltaState());
      } else
        newTextEditingDeltaState = null;
      if (!newEditingState.$eq(0, _this.lastEditingState)) {
        _this.lastEditingState = newEditingState;
        _this._editingDeltaState = newTextEditingDeltaState;
        _this.onChange.call$2(newEditingState, newTextEditingDeltaState);
      }
      _this._editingDeltaState = null;
    },
    handleBeforeInput$1($event) {
      var t1, deltaOffset, deltaOffset0, _this = this,
        eventData = A._asStringQ($event.data),
        inputType = A._asStringQ($event.inputType);
      if (inputType != null) {
        t1 = _this.lastEditingState;
        deltaOffset = t1.baseOffset;
        deltaOffset0 = t1.extentOffset;
        deltaOffset = deltaOffset > deltaOffset0 ? deltaOffset : deltaOffset0;
        if (B.JSString_methods.contains$1(inputType, "delete")) {
          _this.get$editingDeltaState().deltaText = "";
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (inputType === "insertLineBreak") {
          _this.get$editingDeltaState().deltaText = "\n";
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        } else if (eventData != null) {
          _this.get$editingDeltaState().deltaText = eventData;
          _this.get$editingDeltaState().deltaStart = deltaOffset;
          _this.get$editingDeltaState().deltaEnd = deltaOffset;
        }
      }
    },
    handleBlur$1($event) {
      var t1, t2, t3,
        willGainFocusElement = $event.relatedTarget;
      if (willGainFocusElement != null) {
        t1 = $.$get$EnginePlatformDispatcher__instance();
        t2 = t1.get$viewManager().findViewForElement$1(willGainFocusElement);
        t3 = this.domElement;
        t3.toString;
        t3 = t2 == t1.get$viewManager().findViewForElement$1(t3);
        t1 = t3;
      } else
        t1 = true;
      if (t1) {
        t1 = this.domElement;
        t1.toString;
        A.DomElementExtension_focus(t1, true);
      }
    },
    maybeSendAction$1(e) {
      var t1, t2,
        $constructor = globalThis.KeyboardEvent;
      if ($constructor != null && e instanceof $constructor)
        if (e.keyCode === 13) {
          t1 = this.onAction;
          t1.toString;
          t2 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          t1.call$1(t2.inputAction);
          t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
          if (t1.inputType instanceof A.MultilineInputType && t1.inputAction === "TextInputAction.newline")
            return;
          e.preventDefault();
        }
    },
    enable$3$onAction$onChange(_, inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange);
      _this.addEventHandlers$0();
      t1 = _this.lastEditingState;
      if (t1 != null)
        _this.setEditingState$1(t1);
      t1 = _this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
    },
    preventDefaultForMouseEvents$0() {
      var _this = this,
        t1 = _this.subscriptions,
        t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mousedown", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure()));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mouseup", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0()));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "mousemove", new A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1()));
    }
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure.prototype = {
    call$1($event) {
      $event.preventDefault();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0.prototype = {
    call$1($event) {
      $event.preventDefault();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1.prototype = {
    call$1($event) {
      $event.preventDefault();
    },
    $signature: 1
  };
  A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure.prototype = {
    call$0() {
      var t2,
        t1 = this.element;
      if (J.$eq$(t1, self.document.activeElement)) {
        t2 = this.view;
        if (t2 != null)
          A.DomElementExtension_focus(t2.get$dom().rootElement, true);
      }
      if (this.removeElement)
        t1.remove();
    },
    $signature: 0
  };
  A.IOSTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        _this.placeForm$0();
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    initializeElementPlacement$0() {
      A.DomCSSStyleDeclarationExtension_setProperty(this.domElement.style, "transform", "translate(-9999px, -9999px)");
      this._canPosition = false;
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "beforeinput", _this.get$handleBeforeInput()));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", _this.get$handleBlur()));
      t3 = _this.domElement;
      t3.toString;
      _this.addCompositionEventHandlers$1(t3);
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "focus", new A.IOSTextEditingStrategy_addEventHandlers_closure(_this)));
      _this._addTapListener$0();
    },
    updateElementPlacement$1(textGeometry) {
      var _this = this;
      _this.geometry = textGeometry;
      if (_this.isEnabled && _this._canPosition)
        _this.placeElement$0();
    },
    disable$0(_) {
      var t1;
      this.super$DefaultTextEditingStrategy$disable(0);
      t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = null;
    },
    _addTapListener$0() {
      var t1 = this.domElement;
      t1.toString;
      this.subscriptions.push(A.DomSubscription$(t1, "click", new A.IOSTextEditingStrategy__addTapListener_closure(this)));
    },
    _schedulePlacement$0() {
      var t1 = this._positionInputElementTimer;
      if (t1 != null)
        t1.cancel$0(0);
      this._positionInputElementTimer = A.Timer_Timer(B.Duration_100000, new A.IOSTextEditingStrategy__schedulePlacement_closure(this));
    },
    placeElement$0() {
      var t2,
        t1 = this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
      t1 = this.geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.IOSTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1(_) {
      this.$this._schedulePlacement$0();
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__addTapListener_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      if (t1._canPosition) {
        t1.initializeElementPlacement$0();
        t1._schedulePlacement$0();
      }
    },
    $signature: 1
  };
  A.IOSTextEditingStrategy__schedulePlacement_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._canPosition = true;
      t1.placeElement$0();
    },
    $signature: 0
  };
  A.AndroidTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1, _this = this;
      _this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = _this.domElement;
      t1.toString;
      inputConfig.inputType.configureInputMode$1(t1);
      t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        _this.placeForm$0();
      else {
        t1 = _this.domElement;
        t1.toString;
        A._insertEditingElementInView(t1, inputConfig.viewId);
      }
      t1 = _this.domElement;
      t1.toString;
      inputConfig.textCapitalization.setAutocapitalizeAttribute$1(t1);
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t1.push(A.DomSubscription$(self.document, "selectionchange", t3));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "beforeinput", _this.get$handleBeforeInput()));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", _this.get$handleBlur()));
      t3 = _this.domElement;
      t3.toString;
      _this.addCompositionEventHandlers$1(t3);
      _this.preventDefaultForMouseEvents$0();
    },
    placeElement$0() {
      var t2,
        t1 = this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
      t1 = this.geometry;
      if (t1 != null) {
        t2 = this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.FirefoxTextEditingStrategy.prototype = {
    initializeTextEditing$3$onAction$onChange(inputConfig, onAction, onChange) {
      var t1;
      this.super$DefaultTextEditingStrategy$initializeTextEditing(inputConfig, onAction, onChange);
      t1 = this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1.autofillGroup != null)
        this.placeForm$0();
    },
    addEventHandlers$0() {
      var t2, t3, _this = this,
        t1 = _this.__DefaultTextEditingStrategy_inputConfiguration_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1 = t1.autofillGroup;
      if (t1 != null)
        B.JSArray_methods.addAll$1(_this.subscriptions, t1.addInputEventListeners$0());
      t1 = _this.subscriptions;
      t2 = _this.domElement;
      t2.toString;
      t3 = _this.get$handleChange();
      t1.push(A.DomSubscription$(t2, "input", t3));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keydown", _this.get$maybeSendAction()));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "beforeinput", _this.get$handleBeforeInput()));
      t2 = _this.domElement;
      t2.toString;
      _this.addCompositionEventHandlers$1(t2);
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "keyup", new A.FirefoxTextEditingStrategy_addEventHandlers_closure(_this)));
      t2 = _this.domElement;
      t2.toString;
      t1.push(A.DomSubscription$(t2, "select", t3));
      t3 = _this.domElement;
      t3.toString;
      t1.push(A.DomSubscription$(t3, "blur", _this.get$handleBlur()));
      _this.preventDefaultForMouseEvents$0();
    },
    placeElement$0() {
      var t2, _this = this,
        t1 = _this.domElement;
      t1.toString;
      A.DomElementExtension_focus(t1, true);
      t1 = _this.geometry;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
      t1 = _this.lastEditingState;
      if (t1 != null) {
        t2 = _this.domElement;
        t2.toString;
        t1.applyToDomElement$1(t2);
      }
    }
  };
  A.FirefoxTextEditingStrategy_addEventHandlers_closure.prototype = {
    call$1($event) {
      this.$this.handleChange$1($event);
    },
    $signature: 1
  };
  A.TextInputCommand.prototype = {};
  A.TextInputSetClient.prototype = {
    run$1(textEditing) {
      var t1 = textEditing._clientId;
      if (t1 != null && t1 !== this.clientId && textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
      textEditing._clientId = this.clientId;
      textEditing.configuration = this.configuration;
    }
  };
  A.TextInputUpdateConfig.prototype = {
    run$1(textEditing) {
      var t1 = textEditing.get$strategy(),
        t2 = textEditing.configuration;
      t2.toString;
      t1.applyConfiguration$1(t2);
    }
  };
  A.TextInputSetEditingState.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().setEditingState$1(this.state);
    }
  };
  A.TextInputShow.prototype = {
    run$1(textEditing) {
      if (!textEditing.isEditing)
        textEditing._startEditing$0();
    }
  };
  A.TextInputSetEditableSizeAndTransform.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().updateElementPlacement$1(this.geometry);
    }
  };
  A.TextInputSetStyle.prototype = {
    run$1(textEditing) {
      textEditing.get$strategy().updateElementStyle$1(this.style);
    }
  };
  A.TextInputClearClient.prototype = {
    run$1(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  A.TextInputHide.prototype = {
    run$1(textEditing) {
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
      }
    }
  };
  A.TextInputSetMarkedTextRect.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputSetCaretRect.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputRequestAutofill.prototype = {
    run$1(textEditing) {
    }
  };
  A.TextInputFinishAutofillContext.prototype = {
    run$1(textEditing) {
      var t1;
      if (textEditing.isEditing) {
        textEditing.isEditing = false;
        textEditing.get$strategy().disable$0(0);
        textEditing.get$channel(0);
        t1 = textEditing._clientId;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0("TextInputClient.onConnectionClosed", [t1])), A._engine___emptyCallback$closure());
      }
      if (this.saveForm)
        A.saveForms();
      A.cleanForms();
    }
  };
  A.saveForms_closure.prototype = {
    call$2(identifier, form) {
      var t1 = type$._DomListWrapper_JavaScriptObject;
      t1 = A.CastIterable_CastIterable(new A._DomListWrapper(form.getElementsByClassName("submitBtn"), t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject);
      A._instanceType(t1)._rest[1]._as(J.get$first$ax(t1._source)).click();
    },
    $signature: 123
  };
  A.TextEditingChannel.prototype = {
    handleTextInput$2(data, callback) {
      var t1, t2, t3, command, textAlignIndex, textDirectionIndex, fontWeightIndex, fontWeight,
        $call = B.C_JSONMethodCodec.decodeMethodCall$1(data);
      switch ($call.method) {
        case "TextInput.setClient":
          t1 = $call.$arguments;
          t1.toString;
          type$.List_nullable_Object._as(t1);
          t2 = J.getInterceptor$asx(t1);
          t3 = t2.$index(t1, 0);
          t3.toString;
          A._asInt(t3);
          t1 = t2.$index(t1, 1);
          t1.toString;
          command = new A.TextInputSetClient(t3, A.InputConfiguration$fromFrameworkMessage(type$.Map_of_String_and_nullable_Object._as(t1)));
          break;
        case "TextInput.updateConfig":
          this.implementation.configuration = A.InputConfiguration$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments));
          command = B.C_TextInputUpdateConfig;
          break;
        case "TextInput.setEditingState":
          command = new A.TextInputSetEditingState(A.EditingState_EditingState$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.show":
          command = B.C_TextInputShow;
          break;
        case "TextInput.setEditableSizeAndTransform":
          command = new A.TextInputSetEditableSizeAndTransform(A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage(type$.Map_String_dynamic._as($call.$arguments)));
          break;
        case "TextInput.setStyle":
          t1 = type$.Map_String_dynamic._as($call.$arguments);
          t2 = J.getInterceptor$asx(t1);
          textAlignIndex = A._asInt(t2.$index(t1, "textAlignIndex"));
          textDirectionIndex = A._asInt(t2.$index(t1, "textDirectionIndex"));
          fontWeightIndex = A._asIntQ(t2.$index(t1, "fontWeightIndex"));
          fontWeight = fontWeightIndex != null ? A.fontWeightIndexToCss(fontWeightIndex) : "normal";
          t3 = A._asNumQ(t2.$index(t1, "fontSize"));
          if (t3 == null)
            t3 = null;
          command = new A.TextInputSetStyle(new A.EditableTextStyle(t3, fontWeight, A._asStringQ(t2.$index(t1, "fontFamily")), B.List_44l[textAlignIndex], B.List_TextDirection_0_TextDirection_1[textDirectionIndex]));
          break;
        case "TextInput.clearClient":
          command = B.C_TextInputClearClient;
          break;
        case "TextInput.hide":
          command = B.C_TextInputHide;
          break;
        case "TextInput.requestAutofill":
          command = B.C_TextInputRequestAutofill;
          break;
        case "TextInput.finishAutofillContext":
          command = new A.TextInputFinishAutofillContext(A._asBool($call.$arguments));
          break;
        case "TextInput.setMarkedTextRect":
          command = B.C_TextInputSetMarkedTextRect;
          break;
        case "TextInput.setCaretRect":
          command = B.C_TextInputSetCaretRect;
          break;
        default:
          $.$get$EnginePlatformDispatcher__instance().replyToPlatformMessage$2(callback, null);
          return;
      }
      command.run$1(this.implementation);
      new A.TextEditingChannel_handleTextInput_closure(callback).call$0();
    }
  };
  A.TextEditingChannel_handleTextInput_closure.prototype = {
    call$0() {
      $.$get$EnginePlatformDispatcher__instance().replyToPlatformMessage$2(this.callback, B.C_JSONMessageCodec.encodeMessage$1([true]));
    },
    $signature: 0
  };
  A.HybridTextEditing.prototype = {
    get$channel(_) {
      var value = this.__HybridTextEditing_channel_FI;
      if (value === $) {
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__HybridTextEditing_channel_FI = new A.TextEditingChannel(this);
      }
      return value;
    },
    get$strategy() {
      var t1, result, strategy, _this = this, _null = null,
        value = _this.__HybridTextEditing_strategy_FI;
      if (value === $) {
        t1 = $.EngineSemantics__instance;
        if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled) {
          t1 = A.SemanticsTextEditingStrategy_ensureInitialized(_this);
          result = t1;
        } else {
          if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0)
            strategy = new A.IOSTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_1)
            strategy = new A.AndroidTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1)
            strategy = new A.SafariDesktopTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else
            strategy = $.$get$browser().get$browserEngine() === B.BrowserEngine_2 ? new A.FirefoxTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null) : A.GloballyPositionedTextEditingStrategy$(_this);
          result = strategy;
        }
        _this.__HybridTextEditing_strategy_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__HybridTextEditing_strategy_FI = result;
      }
      return value;
    },
    _startEditing$0() {
      var t1, t2, _this = this;
      _this.isEditing = true;
      t1 = _this.get$strategy();
      t2 = _this.configuration;
      t2.toString;
      t1.enable$3$onAction$onChange(0, t2, new A.HybridTextEditing__startEditing_closure(_this), new A.HybridTextEditing__startEditing_closure0(_this));
    }
  };
  A.HybridTextEditing__startEditing_closure0.prototype = {
    call$2(editingState, editingDeltaState) {
      var t2, t3,
        _s17_ = "flutter/textinput",
        t1 = this.$this;
      if (t1.configuration.enableDeltaModel) {
        t1.get$channel(0);
        t1 = t1._clientId;
        t2 = type$.String;
        t3 = type$.dynamic;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s17_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0(string$.TextInD, [t1, A.LinkedHashMap_LinkedHashMap$_literal(["deltas", A._setArrayType([A.LinkedHashMap_LinkedHashMap$_literal(["oldText", editingDeltaState.oldText, "deltaText", editingDeltaState.deltaText, "deltaStart", editingDeltaState.deltaStart, "deltaEnd", editingDeltaState.deltaEnd, "selectionBase", editingDeltaState.baseOffset, "selectionExtent", editingDeltaState.extentOffset, "composingBase", editingDeltaState.composingOffset, "composingExtent", editingDeltaState.composingExtent], t2, t3)], type$.JSArray_Map_String_dynamic)], t2, t3)])), A._engine___emptyCallback$closure());
      } else {
        t1.get$channel(0);
        t1 = t1._clientId;
        $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3(_s17_, B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0("TextInputClient.updateEditingState", [t1, editingState.toFlutter$0()])), A._engine___emptyCallback$closure());
      }
    },
    $signature: 122
  };
  A.HybridTextEditing__startEditing_closure.prototype = {
    call$1(inputAction) {
      var t1 = this.$this;
      t1.get$channel(0);
      t1 = t1._clientId;
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/textinput", B.C_JSONMethodCodec.encodeMethodCall$1(new A.MethodCall0("TextInputClient.performAction", [t1, inputAction])), A._engine___emptyCallback$closure());
    },
    $signature: 121
  };
  A.EditableTextStyle.prototype = {
    applyToDomElement$1(domElement) {
      var _this = this,
        t1 = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "text-align", A.textAlignToCssValue(_this.textAlign, _this.textDirection));
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "font", _this.fontWeight + " " + A.S(_this.fontSize) + "px " + A.S(A.canonicalizeFontFamily(_this.fontFamily)));
    }
  };
  A.EditableTextGeometry.prototype = {
    applyToDomElement$1(domElement) {
      var cssTransform = A.float64ListToCssTransform(this.globalTransform),
        t1 = domElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", A.S(this.width) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", A.S(this.height) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", cssTransform);
    }
  };
  A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure.prototype = {
    call$1(e) {
      return A._asNum(e);
    },
    $signature: 120
  };
  A.TransformKind.prototype = {
    _enumToString$0() {
      return "TransformKind." + this._name;
    }
  };
  A.LruCache.prototype = {
    get$length(_) {
      return this._itemQueue._elementCount;
    },
    $index(_, key) {
      var t1 = this._itemMap.$index(0, key);
      return t1 == null ? null : t1.element._1;
    },
    __engine$_add$2(_, key, value) {
      var t2, t3, t4,
        t1 = this._itemQueue;
      t1.addFirst$1(new A._Record_2_key_value(key, value));
      t2 = this._itemMap;
      t3 = t1._sentinel;
      t4 = t3._nextLink._asNonSentinelEntry$0();
      t4.toString;
      t2.$indexSet(0, key, t4);
      if (t1._elementCount > this.maximumSize) {
        t2.remove$1(0, t3._previousLink.get$element()._0);
        t1.removeLast$0(0);
      }
    }
  };
  A.BitmapSize.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.BitmapSize && other.width === this.width && other.height === this.height;
    },
    get$hashCode(_) {
      return A.Object_hash(this.width, this.height, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toSize$0() {
      return new A.Size(this.width, this.height);
    }
  };
  A.Matrix4.prototype = {
    setFrom$1(arg) {
      var argStorage = arg._m4storage,
        t1 = this._m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    perspectiveTransform$3$x$y$z(x, y, z) {
      var t1 = this._m4storage,
        t2 = t1[0],
        t3 = t1[4],
        t4 = t1[8],
        t5 = t1[12],
        t6 = t1[1],
        t7 = t1[5],
        t8 = t1[9],
        t9 = t1[13],
        t10 = t1[2],
        t11 = t1[6],
        t12 = t1[10],
        t13 = t1[14],
        w = 1 / (t1[3] * x + t1[7] * y + t1[11] * z + t1[15]);
      return new A._Record_3_x78_y_z((t2 * x + t3 * y + t4 * z + t5) * w, (t6 * x + t7 * y + t8 * z + t9) * w, (t10 * x + t11 * y + t12 * z + t13) * w);
    },
    multiply$1(_, arg) {
      var t1 = this._m4storage,
        m33 = t1[15],
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        argStorage = arg._m4storage,
        n33 = argStorage[15],
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    toString$0(_) {
      return this.super$Object$toString(0);
    }
  };
  A.CustomElementDimensionsProvider.prototype = {
    CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange) {
      var _this = this,
        t1 = onDprChange.listen$1(new A.CustomElementDimensionsProvider_closure(_this));
      _this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = t1;
      t1 = A.createDomResizeObserver(new A.CustomElementDimensionsProvider_closure0(_this));
      _this.__CustomElementDimensionsProvider__hostElementResizeObserver_A = t1;
      t1.observe(_this._hostElement);
    },
    close$0(_) {
      var t1, _this = this;
      _this.super$DimensionsProvider$close(0);
      t1 = _this.__CustomElementDimensionsProvider__hostElementResizeObserver_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.disconnect();
      t1 = _this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 != null)
        t1.cancel$0(0);
      _this._onResizeStreamController.close$0(0);
    },
    get$onResize(_) {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var t1,
        devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      t1 = this._hostElement;
      return new A.Size(t1.clientWidth * devicePixelRatio, t1.clientHeight * devicePixelRatio);
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      return B.ViewPadding_0_0_0_0;
    }
  };
  A.CustomElementDimensionsProvider_closure.prototype = {
    call$1(_) {
      this.$this._onResizeStreamController.add$1(0, null);
    },
    $signature: 31
  };
  A.CustomElementDimensionsProvider_closure0.prototype = {
    call$2(entries, _) {
      var t1, t2, t3, t4;
      for (t1 = entries.$ti, t2 = new A.ListIterator(entries, entries.get$length(0), t1._eval$1("ListIterator<ListBase.E>")), t3 = this.$this._onResizeStreamController, t1 = t1._eval$1("ListBase.E"); t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        if (t4 == null)
          t1._as(t4);
        if (!t3.get$_mayAddEvent())
          A.throwExpression(t3._addEventError$0());
        t3._sendData$1(null);
      }
    },
    $signature: 118
  };
  A.DimensionsProvider.prototype = {
    close$0(_) {
    }
  };
  A.FullPageDimensionsProvider.prototype = {
    _onVisualViewportResize$1($event) {
      this._onResizeStreamController.add$1(0, null);
    },
    close$0(_) {
      var t1;
      this.super$DimensionsProvider$close(0);
      t1 = this.__FullPageDimensionsProvider__domResizeSubscription_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.target.removeEventListener(t1.type, t1.listener);
      this._onResizeStreamController.close$0(0);
    },
    get$onResize(_) {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var t1, t2,
        windowInnerWidth = A._Cell$named("windowInnerWidth"),
        windowInnerHeight = A._Cell$named("windowInnerHeight"),
        viewport = self.window.visualViewport,
        devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      if (viewport != null)
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0) {
          t1 = self.document.documentElement.clientWidth;
          t2 = self.document.documentElement.clientHeight;
          windowInnerWidth._value = t1 * devicePixelRatio;
          windowInnerHeight._value = t2 * devicePixelRatio;
        } else {
          t1 = viewport.width;
          if (t1 == null)
            t1 = null;
          t1.toString;
          windowInnerWidth._value = t1 * devicePixelRatio;
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          windowInnerHeight._value = t1 * devicePixelRatio;
        }
      else {
        t1 = self.window.innerWidth;
        if (t1 == null)
          t1 = null;
        t1.toString;
        windowInnerWidth._value = t1 * devicePixelRatio;
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        windowInnerHeight._value = t1 * devicePixelRatio;
      }
      return new A.Size(windowInnerWidth._readLocal$0(), windowInnerHeight._readLocal$0());
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      var t1, viewport, windowInnerHeight,
        devicePixelRatio = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (devicePixelRatio == null) {
        t1 = self.window.devicePixelRatio;
        devicePixelRatio = t1 === 0 ? 1 : t1;
      }
      viewport = self.window.visualViewport;
      windowInnerHeight = A._Cell$named("windowInnerHeight");
      if (viewport != null)
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 && !isEditingOnMobile)
          windowInnerHeight._value = self.document.documentElement.clientHeight * devicePixelRatio;
        else {
          t1 = A.DomVisualViewportExtension_get_height(viewport);
          t1.toString;
          windowInnerHeight._value = t1 * devicePixelRatio;
        }
      else {
        t1 = A.DomWindowExtension_get_innerHeight(self.window);
        t1.toString;
        windowInnerHeight._value = t1 * devicePixelRatio;
      }
      return new A.ViewPadding(0, 0, 0, physicalHeight - windowInnerHeight._readLocal$0());
    }
  };
  A.DisplayDprStream.prototype = {
    _subscribeToMediaQuery$0() {
      var t2, t3, t4,
        t1 = A.DomWindowExtension_matchMedia(self.window, "(resolution: " + A.S(this._currentDpr) + "dppx)");
      this.__DisplayDprStream__dprMediaQuery_A = t1;
      t2 = A._functionToJS1(this.get$_onDprMediaQueryChange());
      t3 = type$.Object;
      t4 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["once", true, "passive", true], type$.String, t3));
      t3 = t4 == null ? t3._as(t4) : t4;
      t1.addEventListener("change", t2, t3);
    },
    _onDprMediaQueryChange$1(_) {
      var _this = this,
        t1 = _this._display._debugDevicePixelRatioOverride;
      if (t1 == null) {
        t1 = self.window.devicePixelRatio;
        if (t1 === 0)
          t1 = 1;
      }
      _this._currentDpr = t1;
      _this._dprStreamController.add$1(0, t1);
      _this._subscribeToMediaQuery$0();
    }
  };
  A.DomManager.prototype = {};
  A.CustomElementEmbeddingStrategy.prototype = {
    get$globalEventTarget() {
      var t1 = this.__CustomElementEmbeddingStrategy__rootElement_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    attachViewRoot$1(rootElement) {
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "width", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "height", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "display", "block");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "position", "relative");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "touch-action", "none");
      this.hostElement.appendChild(rootElement);
      $.$get$_hotRestartCache();
      this.__CustomElementEmbeddingStrategy__rootElement_F !== $ && A.throwUnnamedLateFieldAI();
      this.__CustomElementEmbeddingStrategy__rootElement_F = rootElement;
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FullPageEmbeddingStrategy.prototype = {
    get$globalEventTarget() {
      return self.window;
    },
    attachViewRoot$1(rootElement) {
      var t1 = rootElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      this.hostElement.append(rootElement);
      $.$get$_hotRestartCache();
    },
    _applyViewportMeta$0() {
      var t1, t2, viewportMeta;
      for (t1 = type$._DomListWrapper_JavaScriptObject, t1 = A.CastIterable_CastIterable(new A._DomListWrapper(self.document.head.querySelectorAll('meta[name="viewport"]'), t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject), t2 = J.get$iterator$ax(t1._source), t1 = A._instanceType(t1)._rest[1]; t2.moveNext$0();)
        t1._as(t2.get$current(t2)).remove();
      viewportMeta = A.DomDocumentExtension_createElement(self.document, "meta");
      t1 = A.jsify("");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      viewportMeta.setAttribute("flt-viewport", t1);
      viewportMeta.name = "viewport";
      viewportMeta.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      self.document.head.append(viewportMeta);
      $.$get$_hotRestartCache();
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FlutterViewManager.prototype = {
    registerView$2$jsViewOptions(view, jsViewOptions) {
      var viewId = view.viewId;
      this._viewData.$indexSet(0, viewId, view);
      if (jsViewOptions != null)
        this._jsViewOptions.$indexSet(0, viewId, jsViewOptions);
      this._onViewCreatedController.add$1(0, viewId);
      return view;
    },
    registerView$1(view) {
      return this.registerView$2$jsViewOptions(view, null);
    },
    disposeAndUnregisterView$1(viewId) {
      var jsViewOptions,
        t1 = this._viewData,
        view = t1.$index(0, viewId);
      if (view == null)
        return null;
      t1.remove$1(0, viewId);
      jsViewOptions = this._jsViewOptions.remove$1(0, viewId);
      this._onViewDisposedController.add$1(0, viewId);
      view.dispose$0();
      return jsViewOptions;
    },
    findViewForElement$1(element) {
      var viewIdAttribute, t1, viewId, _null = null,
        viewRoot = element == null ? _null : element.closest("flutter-view[flt-view-id]");
      if (viewRoot == null)
        viewIdAttribute = _null;
      else {
        t1 = viewRoot.getAttribute("flt-view-id");
        viewIdAttribute = t1 == null ? _null : t1;
      }
      viewId = viewIdAttribute == null ? _null : A.int_parse(viewIdAttribute, _null);
      return viewId == null ? _null : this._viewData.$index(0, viewId);
    }
  };
  A.GlobalHtmlAttributes.prototype = {};
  A._hotRestartCache_closure.prototype = {
    call$0() {
      return null;
    },
    $signature: 106
  };
  A.EngineFlutterView.prototype = {
    EngineFlutterView$_$4$viewConstraints(viewId, platformDispatcher, hostElement, viewConstraints) {
      var t2, t3, value, _this = this,
        t1 = _this.embeddingStrategy;
      t1.attachViewRoot$1(_this.get$dom().rootElement);
      t2 = $.KeyboardBinding__instance;
      t2 = t2 == null ? null : t2.get$_converter();
      t2 = new A.PointerBinding(_this, new A.PointerDataConverter(), t2);
      t3 = $.$get$browser().get$browserEngine() === B.BrowserEngine_1 && $.$get$browser().get$operatingSystem() === B.OperatingSystem_0;
      if (t3) {
        t3 = $.$get$PointerBinding__defaultSafariWorkaround();
        t2._safariWorkaround = t3;
        t3.workAroundMissingPointerEvents$0();
      }
      t2.__PointerBinding__adapter_A = t2._createAdapter$0();
      _this.__EngineFlutterView_pointerBinding_F !== $ && A.throwUnnamedLateFieldAI();
      _this.__EngineFlutterView_pointerBinding_F = t2;
      t2 = _this.dimensionsProvider;
      t2 = t2.get$onResize(t2).listen$1(_this.get$_didResize());
      _this.__EngineFlutterView__resizeSubscription_F !== $ && A.throwUnnamedLateFieldAI();
      _this.__EngineFlutterView__resizeSubscription_F = t2;
      value = _this.__EngineFlutterView__globalHtmlAttributes_FI;
      if (value === $) {
        t2 = _this.get$dom();
        t1 = t1.get$hostElement();
        _this.__EngineFlutterView__globalHtmlAttributes_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EngineFlutterView__globalHtmlAttributes_FI = new A.GlobalHtmlAttributes(t2.rootElement, t1);
      }
      t1 = $.$get$_renderer().get$rendererTag();
      t2 = A.jsify(_this.viewId);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      value.rootElement.setAttribute("flt-view-id", t2);
      t2 = value.hostElement;
      t1 = A.jsify(t1 + " (requested explicitly)");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("flt-renderer", t1);
      t1 = A.jsify("profile");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("flt-build-mode", t1);
      t1 = A.jsify("false");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("spellcheck", t1);
      $._hotRestartListeners.push(_this.get$dispose());
    },
    dispose$0() {
      var t1, t2, _this = this;
      if (_this.isDisposed)
        return;
      _this.isDisposed = true;
      t1 = _this.__EngineFlutterView__resizeSubscription_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.cancel$0(0);
      _this.dimensionsProvider.close$0(0);
      t1 = _this.__EngineFlutterView_pointerBinding_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.__PointerBinding__adapter_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.dispose$0();
      t1 = t1._safariWorkaround;
      if (t1 != null)
        if (t1._listener != null) {
          A.DomEventTargetExtension_removeEventListener(self.document, "touchstart", t1._listener, null);
          t1._listener = null;
        }
      _this.get$dom().rootElement.remove();
      $.$get$_renderer().clearFragmentProgramCache$0();
      _this.get$semantics().reset$0(0);
    },
    get$contextMenu() {
      var t1, _this = this,
        value = _this.__EngineFlutterView_contextMenu_FI;
      if (value === $) {
        t1 = _this.get$dom();
        _this.__EngineFlutterView_contextMenu_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EngineFlutterView_contextMenu_FI = new A.ContextMenu(t1.rootElement);
      }
      return value;
    },
    get$dom() {
      var t1, rootElement, platformViewsHost, t2, sceneHost, textEditingHost, semanticsHost, t3,
        _s12_ = "flutter-view",
        value = this.__EngineFlutterView_dom_FI;
      if (value === $) {
        t1 = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
        if (t1 == null) {
          t1 = self.window.devicePixelRatio;
          if (t1 === 0)
            t1 = 1;
        }
        rootElement = A.DomDocumentExtension_createElement(self.document, _s12_);
        platformViewsHost = A.DomDocumentExtension_createElement(self.document, "flt-glass-pane");
        t2 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["mode", "open", "delegatesFocus", false], type$.String, type$.dynamic));
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t2 = platformViewsHost.attachShadow(t2);
        sceneHost = A.DomDocumentExtension_createElement(self.document, "flt-scene-host");
        textEditingHost = A.DomDocumentExtension_createElement(self.document, "flt-text-editing-host");
        semanticsHost = A.DomDocumentExtension_createElement(self.document, "flt-semantics-host");
        rootElement.appendChild(platformViewsHost);
        rootElement.appendChild(textEditingHost);
        rootElement.appendChild(semanticsHost);
        t2.append(sceneHost);
        t3 = A.configuration()._configuration;
        A.StyleManager_attachGlobalStyles(_s12_, rootElement, "flt-text-editing-stylesheet", t3 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t3));
        t3 = A.configuration()._configuration;
        A.StyleManager_attachGlobalStyles("", t2, "flt-internals-stylesheet", t3 == null ? null : A.JsFlutterConfigurationExtension_get_nonce(t3));
        t3 = A.configuration().get$debugShowSemanticsNodes();
        A.DomCSSStyleDeclarationExtension_setProperty(sceneHost.style, "pointer-events", "none");
        if (t3)
          A.DomCSSStyleDeclarationExtension_setProperty(sceneHost.style, "opacity", "0.3");
        t3 = semanticsHost.style;
        A.DomCSSStyleDeclarationExtension_setProperty(t3, "position", "absolute");
        A.DomCSSStyleDeclarationExtension_setProperty(t3, "transform-origin", "0 0 0");
        A.DomCSSStyleDeclarationExtension_setProperty(semanticsHost.style, "transform", "scale(" + A.S(1 / t1) + ")");
        this.__EngineFlutterView_dom_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__EngineFlutterView_dom_FI = new A.DomManager(rootElement, platformViewsHost, t2, sceneHost, textEditingHost, semanticsHost);
      }
      return value;
    },
    get$semantics() {
      var result, _this = this,
        value = _this.__EngineFlutterView_semantics_FI;
      if (value === $) {
        result = A.EngineSemanticsOwner$(_this.get$dom().semanticsHost);
        _this.__EngineFlutterView_semantics_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__EngineFlutterView_semantics_FI = result;
        value = result;
      }
      return value;
    },
    get$physicalSize() {
      var t1 = this._physicalSize;
      return t1 == null ? this._physicalSize = this._computePhysicalSize$0() : t1;
    },
    _computePhysicalSize$0() {
      var t1 = this.dimensionsProvider.computePhysicalSize$0();
      return t1;
    },
    _didResize$1(newSize) {
      var newPhysicalSize, _this = this,
        t1 = _this.get$dom(),
        t2 = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
      if (t2 == null) {
        t2 = self.window.devicePixelRatio;
        if (t2 === 0)
          t2 = 1;
      }
      A.DomCSSStyleDeclarationExtension_setProperty(t1.semanticsHost.style, "transform", "scale(" + A.S(1 / t2) + ")");
      newPhysicalSize = _this._computePhysicalSize$0();
      if (!B.Set_2h4Ve.contains$1(0, $.$get$browser().get$operatingSystem()) && !_this._isRotation$1(newPhysicalSize) && $.$get$textEditing().isEditing)
        _this._computeOnScreenKeyboardInsets$1(true);
      else {
        _this._physicalSize = newPhysicalSize;
        _this._computeOnScreenKeyboardInsets$1(false);
      }
      _this.platformDispatcher.invokeOnMetricsChanged$0();
    },
    _isRotation$1(newPhysicalSize) {
      var t2, t3,
        t1 = this._physicalSize;
      if (t1 != null) {
        t2 = t1._dy;
        t3 = newPhysicalSize._dy;
        if (t2 !== t3 && t1._dx !== newPhysicalSize._dx) {
          t1 = t1._dx;
          if (!(t2 > t1 && t3 < newPhysicalSize._dx))
            t1 = t1 > t2 && newPhysicalSize._dx < t3;
          else
            t1 = true;
          if (t1)
            return true;
        }
      }
      return false;
    },
    _computeOnScreenKeyboardInsets$1(isEditingOnMobile) {
      this._viewInsets = this.dimensionsProvider.computeKeyboardInsets$2(this._physicalSize._dy, isEditingOnMobile);
    },
    $isFlutterView: 1
  };
  A._EngineFlutterViewImpl.prototype = {};
  A.EngineFlutterWindow.prototype = {
    dispose$0() {
      this.super$EngineFlutterView$dispose();
      var t1 = this._browserHistory;
      if (t1 != null)
        t1.dispose$0();
    },
    get$browserHistory() {
      var t1 = this._browserHistory;
      if (t1 == null) {
        t1 = $.$get$_realDefaultUrlStrategy();
        t1 = this._browserHistory = A.createHistoryForExistingState(t1);
      }
      return t1;
    },
    _useSingleEntryBrowserHistory$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, strategy, t1;
      var $async$_useSingleEntryBrowserHistory$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 == null) {
                t1 = $.$get$_realDefaultUrlStrategy();
                t1 = $async$self._browserHistory = A.createHistoryForExistingState(t1);
              }
              if (t1 instanceof A.SingleEntryBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              t1 = t1 == null ? null : t1.tearDown$0();
              $async$goto = 3;
              return A._asyncAwait(type$.Future_void._is(t1) ? t1 : A._Future$value(t1, type$.void), $async$_useSingleEntryBrowserHistory$0);
            case 3:
              // returning from await.
              $async$self._browserHistory = A.SingleEntryBrowserHistory$(strategy);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_useSingleEntryBrowserHistory$0, $async$completer);
    },
    _useMultiEntryBrowserHistory$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, strategy, t1;
      var $async$_useMultiEntryBrowserHistory$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._browserHistory;
              if (t1 == null) {
                t1 = $.$get$_realDefaultUrlStrategy();
                t1 = $async$self._browserHistory = A.createHistoryForExistingState(t1);
              }
              if (t1 instanceof A.MultiEntriesBrowserHistory) {
                // goto return
                $async$goto = 1;
                break;
              }
              strategy = t1.get$urlStrategy();
              t1 = $async$self._browserHistory;
              t1 = t1 == null ? null : t1.tearDown$0();
              $async$goto = 3;
              return A._asyncAwait(type$.Future_void._is(t1) ? t1 : A._Future$value(t1, type$.void), $async$_useMultiEntryBrowserHistory$0);
            case 3:
              // returning from await.
              $async$self._browserHistory = A.MultiEntriesBrowserHistory$(strategy);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_useMultiEntryBrowserHistory$0, $async$completer);
    },
    _waitInTheLine$1(callback) {
      return this._waitInTheLine$body$EngineFlutterWindow(callback);
    },
    _waitInTheLine$body$EngineFlutterWindow(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, result, currentPosition, completer;
      var $async$_waitInTheLine$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              currentPosition = $async$self._endOfTheLine;
              completer = new A._AsyncCompleter(new A._Future($.Zone__current, type$._Future_void), type$._AsyncCompleter_void);
              $async$self._endOfTheLine = completer.future;
              $async$goto = 3;
              return A._asyncAwait(currentPosition, $async$_waitInTheLine$1);
            case 3:
              // returning from await.
              result = false;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(callback.call$0(), $async$_waitInTheLine$1);
            case 7:
              // returning from await.
              result = $async$result;
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // uncaught
              $async$next = [2];
            case 5:
              // finally
              $async$handler = 2;
              J.complete$0$z(completer);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 6:
              // after finally
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_waitInTheLine$1, $async$completer);
    },
    handleNavigationMessage$1(data) {
      return this.handleNavigationMessage$body$EngineFlutterWindow(data);
    },
    handleNavigationMessage$body$EngineFlutterWindow(data) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this;
      var $async$handleNavigationMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self._waitInTheLine$1(new A.EngineFlutterWindow_handleNavigationMessage_closure($async$self, data));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleNavigationMessage$1, $async$completer);
    }
  };
  A.EngineFlutterWindow_handleNavigationMessage_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, uriString, uri, t2, t3, path, decoded, $arguments;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              decoded = B.C_JSONMethodCodec.decodeMethodCall$1($async$self.data);
              $arguments = type$.nullable_Map_String_dynamic._as(decoded.$arguments);
            case 3:
              // switch
              switch (decoded.method) {
                case "selectMultiEntryHistory":
                  // goto case
                  $async$goto = 5;
                  break;
                case "selectSingleEntryHistory":
                  // goto case
                  $async$goto = 6;
                  break;
                case "routeUpdated":
                  // goto case
                  $async$goto = 7;
                  break;
                case "routeInformationUpdated":
                  // goto case
                  $async$goto = 8;
                  break;
                default:
                  // goto after switch
                  $async$goto = 4;
                  break;
              }
              break;
            case 5:
              // case
              $async$goto = 9;
              return A._asyncAwait($async$self.$this._useMultiEntryBrowserHistory$0(), $async$call$0);
            case 9:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 6:
              // case
              $async$goto = 10;
              return A._asyncAwait($async$self.$this._useSingleEntryBrowserHistory$0(), $async$call$0);
            case 10:
              // returning from await.
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // case
              t1 = $async$self.$this;
              $async$goto = 11;
              return A._asyncAwait(t1._useSingleEntryBrowserHistory$0(), $async$call$0);
            case 11:
              // returning from await.
              t1 = t1.get$browserHistory();
              $arguments.toString;
              t1.setRouteName$1(A._asStringQ(J.$index$asx($arguments, "routeName")));
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // case
              $arguments.toString;
              t1 = J.getInterceptor$asx($arguments);
              uriString = A._asStringQ(t1.$index($arguments, "uri"));
              if (uriString != null) {
                uri = A.Uri_parse(uriString, 0, null);
                t2 = uri.get$path(uri).length === 0 ? "/" : uri.get$path(uri);
                t3 = uri.get$queryParametersAll();
                t3 = t3.get$isEmpty(t3) ? null : uri.get$queryParametersAll();
                t2 = A._Uri__Uri(uri.get$fragment().length === 0 ? null : uri.get$fragment(), null, t2, null, t3).get$_text();
                path = A._Uri__uriDecode(t2, 0, t2.length, B.C_Utf8Codec, false);
              } else {
                t2 = A._asStringQ(t1.$index($arguments, "location"));
                t2.toString;
                path = t2;
              }
              t2 = $async$self.$this.get$browserHistory();
              t3 = t1.$index($arguments, "state");
              t1 = A._asBoolQ(t1.$index($arguments, "replace"));
              t2.setRouteName$3$replace$state(path, t1 === true, t3);
              $async$returnValue = true;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // after switch
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A.ViewPadding.prototype = {};
  A.ViewConstraints.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ViewConstraints && other.minWidth === _this.minWidth && other.maxWidth === _this.maxWidth && other.minHeight === _this.minHeight && other.maxHeight === _this.maxHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.minWidth;
      if (t1 === 1 / 0 && _this.minHeight === 1 / 0)
        return "ViewConstraints(biggest)";
      if (t1 === 0 && _this.maxWidth === 1 / 0 && _this.minHeight === 0 && _this.maxHeight === 1 / 0)
        return "ViewConstraints(unconstrained)";
      t2 = new A.ViewConstraints_toString_describe();
      return "ViewConstraints(" + t2.call$3(t1, _this.maxWidth, "w") + ", " + t2.call$3(_this.minHeight, _this.maxHeight, "h") + ")";
    }
  };
  A.ViewConstraints_toString_describe.prototype = {
    call$3(min, max, dim) {
      if (min === max)
        return dim + "=" + B.JSNumber_methods.toStringAsFixed$1(min, 1);
      return B.JSNumber_methods.toStringAsFixed$1(min, 1) + "<=" + dim + "<=" + B.JSNumber_methods.toStringAsFixed$1(max, 1);
    },
    $signature: 74
  };
  A._DefaultTextEditingStrategy_Object_CompositionAwareMixin.prototype = {};
  A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    $or(receiver, other) {
      return other || receiver;
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.Null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {$isJSObject: 1};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_0ua;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    },
    $isFunction: 1
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    removeAt$1(receiver, index) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeAt"));
      if (index < 0 || index >= receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      return receiver.splice(index, 1)[0];
    },
    insert$2(receiver, index, value) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insert"));
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$value(index, null));
      receiver.splice(index, 0, value);
    },
    insertAll$2(receiver, index, iterable) {
      var insertionLength, end;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("insertAll"));
      A.RangeError_checkValueInInterval(index, 0, receiver.length, "index");
      if (!type$.EfficientLengthIterable_dynamic._is(iterable))
        iterable = J.toList$0$ax(iterable);
      insertionLength = J.get$length$asx(iterable);
      receiver.length = receiver.length + insertionLength;
      end = index + insertionLength;
      this.setRange$4(receiver, end, receiver.length, receiver, index);
      this.setRange$3(receiver, index, end, iterable);
    },
    removeLast$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("removeLast"));
      if (receiver.length === 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, -1));
      return receiver.pop();
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    _removeWhere$2(receiver, test, removeMatching) {
      var i, element, t1, retained = [],
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (!test.call$1(element))
          retained.push(element);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      t1 = retained.length;
      if (t1 === end)
        return;
      this.set$length(receiver, t1);
      for (i = 0; i < retained.length; ++i)
        receiver[i] = retained[i];
    },
    where$1(receiver, f) {
      return new A.WhereIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("WhereIterable<1>"));
    },
    addAll$1(receiver, collection) {
      var t1;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current(t1));
    },
    _addAllFromArray$1(receiver, array) {
      var i,
        len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        list[i] = A.S(receiver[i]);
      return list.join(separator);
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    fold$1$2(receiver, initialValue, combine) {
      var value, i,
        $length = receiver.length;
      for (value = initialValue, i = 0; i < $length; ++i) {
        value = combine.call$2(value, receiver[i]);
        if (receiver.length !== $length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return value;
    },
    fold$2(receiver, initialValue, combine) {
      return this.fold$1$2(receiver, initialValue, combine, type$.dynamic);
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        element = receiver[i];
        if (test.call$1(element))
          return element;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    firstWhere$1(receiver, test) {
      return this.firstWhere$2$orElse(receiver, test, null);
    },
    singleWhere$2$orElse(receiver, test, orElse) {
      var match, matchFound, i, element,
        $length = receiver.length;
      for (match = null, matchFound = false, i = 0; i < $length; ++i) {
        element = receiver[i];
        if (test.call$1(element)) {
          if (matchFound)
            throw A.wrapException(A.IterableElementError_tooMany());
          match = element;
          matchFound = true;
        }
        if ($length !== receiver.length)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (matchFound)
        return match == null ? A._arrayInstanceType(receiver)._precomputed1._as(match) : match;
      throw A.wrapException(A.IterableElementError_noElement());
    },
    singleWhere$1(receiver, test) {
      return this.singleWhere$2$orElse(receiver, test, null);
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, "start", null));
      if (end == null)
        end = receiver.length;
      else if (end < start || end > receiver.length)
        throw A.wrapException(A.RangeError$range(end, start, receiver.length, "end", null));
      if (start === end)
        return A._setArrayType([], A._arrayInstanceType(receiver));
      return A._setArrayType(receiver.slice(start, end), A._arrayInstanceType(receiver));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    getRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      return A.SubListIterable$(receiver, start, end, A._arrayInstanceType(receiver)._precomputed1);
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(receiver) {
      var t1 = receiver.length;
      if (t1 === 1)
        return receiver[0];
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        t1 = J.skip$1$ax(iterable, skipCount);
        otherList = t1.toList$1$growable(t1, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    any$1(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (test.call$1(receiver[i]))
          return true;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    every$1(receiver, test) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        if (!test.call$1(receiver[i]))
          return false;
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return true;
    },
    sort$1(receiver, compare) {
      var len, a, b, undefineds, i;
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("sort"));
      len = receiver.length;
      if (len < 2)
        return;
      if (compare == null)
        compare = J._interceptors_JSArray__compareAny$closure();
      if (len === 2) {
        a = receiver[0];
        b = receiver[1];
        if (compare.call$2(a, b) > 0) {
          receiver[0] = b;
          receiver[1] = a;
        }
        return;
      }
      undefineds = 0;
      if (A._arrayInstanceType(receiver)._precomputed1._is(null))
        for (i = 0; i < receiver.length; ++i)
          if (receiver[i] === void 0) {
            receiver[i] = null;
            ++undefineds;
          }
      receiver.sort(A.convertDartClosureToJS(compare, 2));
      if (undefineds > 0)
        this._replaceSomeNullsWithUndefined$1(receiver, undefineds);
    },
    sort$0(receiver) {
      return this.sort$1(receiver, null);
    },
    _replaceSomeNullsWithUndefined$1(receiver, count) {
      var i0,
        i = receiver.length;
      for (; i0 = i - 1, i > 0; i = i0)
        if (receiver[i0] === null) {
          receiver[i0] = void 0;
          --count;
          if (count === 0)
            break;
        }
    },
    indexOf$2(receiver, element, start) {
      var i,
        $length = receiver.length;
      if (start >= $length)
        return -1;
      for (i = start; i < $length; ++i)
        if (J.$eq$(receiver[i], element))
          return i;
      return -1;
    },
    indexOf$1(receiver, element) {
      return this.indexOf$2(receiver, element, 0);
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable(receiver, growable) {
      var t1 = A._arrayInstanceType(receiver);
      return growable ? A._setArrayType(receiver.slice(0), t1) : J.JSArray_JSArray$markFixed(receiver.slice(0), t1._precomputed1);
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    set$last(receiver, element) {
      var t1 = receiver.length;
      if (t1 === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      this.$indexSet(receiver, t1 - 1, element);
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current(_) {
      var t1 = this.__interceptors$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this.__interceptors$_current = null;
        return false;
      }
      _this.__interceptors$_current = t1[t2];
      _this._index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    compareTo$1(receiver, b) {
      var bIsNegative;
      if (receiver < b)
        return -1;
      else if (receiver > b)
        return 1;
      else if (receiver === b) {
        if (receiver === 0) {
          bIsNegative = this.get$isNegative(b);
          if (this.get$isNegative(receiver) === bIsNegative)
            return 0;
          if (this.get$isNegative(receiver))
            return -1;
          return 1;
        }
        return 0;
      } else if (isNaN(receiver)) {
        if (isNaN(b))
          return 0;
        return 1;
      } else
        return -1;
    },
    get$isNegative(receiver) {
      return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
    },
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toStringAsFixed$1(receiver, fractionDigits) {
      var result;
      if (fractionDigits > 20)
        throw A.wrapException(A.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0 && this.get$isNegative(receiver))
        return "-" + result;
      return result;
    },
    toRadixString$1(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (result.charCodeAt(result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    $tdiv(receiver, other) {
      if ((receiver | 0) === receiver)
        if (other >= 1 || other < -1)
          return receiver / other | 0;
      return this._tdivSlow$1(receiver, other);
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + A.S(other)));
    },
    $shl(receiver, other) {
      if (other < 0)
        throw A.wrapException(A.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isdouble: 1,
    $isnum: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    allMatches$2(receiver, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._StringAllMatchesIterable(string, receiver, start);
    },
    allMatches$1(receiver, string) {
      return this.allMatches$2(receiver, string, 0);
    },
    matchAsPrefix$2(receiver, string, start) {
      var t1, i, _null = null;
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, _null, _null));
      t1 = receiver.length;
      if (start + t1 > string.length)
        return _null;
      for (i = 0; i < t1; ++i)
        if (string.charCodeAt(start + i) !== receiver.charCodeAt(i))
          return _null;
      return new A.StringMatch(start, receiver);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    endsWith$1(receiver, other) {
      var otherLength = other.length,
        t1 = receiver.length;
      if (otherLength > t1)
        return false;
      return other === this.substring$1(receiver, t1 - otherLength);
    },
    replaceFirst$2(receiver, from, to) {
      A.RangeError_checkValueInInterval(0, 0, receiver.length, "startIndex");
      return A.stringReplaceFirstUnchecked(receiver, from, to, 0);
    },
    split$1(receiver, pattern) {
      var t1 = A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      return t1;
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length, null, null);
      return A.stringReplaceRangeUnchecked(receiver, start, e, replacement);
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        endIndex = index + pattern.length;
        if (endIndex > receiver.length)
          return false;
        return pattern === receiver.substring(index, endIndex);
      }
      return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length, null, null));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    trimLeft$0(receiver) {
      var result = receiver.trimStart();
      if (result.length === 0)
        return result;
      if (result.charCodeAt(0) !== 133)
        return result;
      return result.substring(J.JSString__skipLeadingWhitespace(result, 1));
    },
    trimRight$0(receiver) {
      var t1,
        result = receiver.trimEnd(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      t1 = endIndex - 1;
      if (result.charCodeAt(t1) !== 133)
        return result;
      return result.substring(0, J.JSString__skipTrailingWhitespace(result, t1));
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var match, t1, t2, i;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      if (typeof pattern == "string")
        return receiver.indexOf(pattern, start);
      if (pattern instanceof A.JSSyntaxRegExp) {
        match = pattern._execGlobal$2(receiver, start);
        return match == null ? -1 : match._match.index;
      }
      for (t1 = receiver.length, t2 = J.getInterceptor$s(pattern), i = start; i <= t1; ++i)
        if (t2.matchAsPrefix$2(pattern, receiver, i) != null)
          return i;
      return -1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    lastIndexOf$2(receiver, pattern, start) {
      var t1, t2, i;
      if (start == null)
        start = receiver.length;
      else if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      if (typeof pattern == "string") {
        t1 = pattern.length;
        t2 = receiver.length;
        if (start + t1 > t2)
          start = t2 - t1;
        return receiver.lastIndexOf(pattern, start);
      }
      for (t1 = J.getInterceptor$s(pattern), i = start; i >= 0; --i)
        if (t1.matchAsPrefix$2(pattern, receiver, i) != null)
          return i;
      return -1;
    },
    lastIndexOf$1(receiver, pattern) {
      return this.lastIndexOf$2(receiver, pattern, null);
    },
    contains$2(receiver, other, startIndex) {
      var t1 = receiver.length;
      if (startIndex > t1)
        throw A.wrapException(A.RangeError$range(startIndex, 0, t1, null, null));
      return A.stringContainsUnchecked(receiver, other, startIndex);
    },
    contains$1(receiver, other) {
      return this.contains$2(receiver, other, 0);
    },
    compareTo$1(receiver, other) {
      var t1;
      if (receiver === other)
        t1 = 0;
      else
        t1 = receiver < other ? -1 : 1;
      return t1;
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isTrustedGetRuntimeType: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), A._instanceType(this)._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    take$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.take$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    get$single(_) {
      return A._instanceType(this)._rest[1]._as(J.get$single$ax(this.get$_source()));
    },
    contains$1(_, other) {
      return J.contains$1$asx(this.get$_source(), other);
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._rest[1]._as(t1.get$current(t1));
    }
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    remove$1(_, value) {
      return J.remove$1$ax(this._source, value);
    },
    removeLast$0(_) {
      return this.$ti._rest[1]._as(J.removeLast$0$ax(this._source));
    },
    getRange$2(_, start, end) {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(J.getRange$2$ax(this._source, start, end), t1._precomputed1, t1._rest[1]);
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    cast$1$0(_, $R) {
      return new A.CastList(this._source, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    get$_source() {
      return this._source;
    }
  };
  A.CastMap.prototype = {
    cast$2$0(_, RK, RV) {
      return new A.CastMap(this._source, this.$ti._eval$1("@<1,2>")._bind$1(RK)._bind$1(RV)._eval$1("CastMap<1,2,3,4>"));
    },
    containsKey$1(_, key) {
      return J.containsKey$1$x(this._source, key);
    },
    $index(_, key) {
      return this.$ti._eval$1("4?")._as(J.$index$asx(this._source, key));
    },
    $indexSet(_, key, value) {
      var t1 = this.$ti;
      J.$indexSet$ax(this._source, t1._precomputed1._as(key), t1._rest[1]._as(value));
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t1 = this.$ti;
      return t1._rest[3]._as(J.putIfAbsent$2$x(this._source, t1._precomputed1._as(key), new A.CastMap_putIfAbsent_closure(this, ifAbsent)));
    },
    remove$1(_, key) {
      return this.$ti._eval$1("4?")._as(J.remove$1$ax(this._source, key));
    },
    forEach$1(_, f) {
      J.forEach$1$ax(this._source, new A.CastMap_forEach_closure(this, f));
    },
    get$keys(_) {
      var t1 = this.$ti;
      return A.CastIterable_CastIterable(J.get$keys$x(this._source), t1._precomputed1, t1._rest[2]);
    },
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._source);
    },
    get$entries(_) {
      var t1 = J.get$entries$x(this._source);
      return t1.map$1$1(t1, new A.CastMap_entries_closure(this), this.$ti._eval$1("MapEntry<3,4>"));
    }
  };
  A.CastMap_putIfAbsent_closure.prototype = {
    call$0() {
      return this.$this.$ti._rest[1]._as(this.ifAbsent.call$0());
    },
    $signature() {
      return this.$this.$ti._eval$1("2()");
    }
  };
  A.CastMap_forEach_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this.$ti;
      this.f.call$2(t1._rest[2]._as(key), t1._rest[3]._as(value));
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1,2)");
    }
  };
  A.CastMap_entries_closure.prototype = {
    call$1(e) {
      var t1 = this.$this.$ti;
      return new A.MapEntry(t1._rest[2]._as(e.key), t1._rest[3]._as(e.value), t1._eval$1("MapEntry<3,4>"));
    },
    $signature() {
      return this.$this.$ti._eval$1("MapEntry<3,4>(MapEntry<1,2>)");
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      return this._string.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.Null);
    },
    $signature: 71
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    forEach$1(_, action) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        action.call$1(_this.elementAt$1(0, i));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    get$single(_) {
      var _this = this;
      if (_this.get$length(_this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      if (_this.get$length(_this) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      return _this.elementAt$1(0, 0);
    },
    contains$1(_, element) {
      var i, _this = this,
        $length = _this.get$length(_this);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(_this.elementAt$1(0, i), element))
          return true;
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return false;
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedListIterable(this, toElement, A._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    take$1(_, count) {
      return A.SubListIterable$(this, 0, A.checkNotNullable(count, "count", type$.int), A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.SubListIterable.prototype = {
    SubListIterable$3(_iterable, _start, _endOrLength, $E) {
      var endOrLength,
        t1 = this._start;
      A.RangeError_checkNotNegative(t1, "start");
      endOrLength = this._endOrLength;
      if (endOrLength != null) {
        A.RangeError_checkNotNegative(endOrLength, "end");
        if (t1 > endOrLength)
          throw A.wrapException(A.RangeError$range(t1, 0, endOrLength, "start", null));
      }
    },
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    take$1(_, count) {
      var endOrLength, t1, newEnd, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      endOrLength = _this._endOrLength;
      t1 = _this._start;
      newEnd = t1 + count;
      if (endOrLength == null)
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      else {
        if (endOrLength < newEnd)
          return _this;
        return A.SubListIterable$(_this.__internal$_iterable, t1, newEnd, _this.$ti._precomputed1);
      }
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.ListIterator.prototype = {
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    }
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, A._instanceType(this)._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    get$single(_) {
      return this._f.call$1(J.get$single$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current(t1));
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.WhereIterable.prototype = {
    get$iterator(_) {
      return new A.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("WhereIterator<1>"));
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedIterable(this, toElement, this.$ti._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    }
  };
  A.WhereIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
        if (t2.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.ExpandIterable.prototype = {
    get$iterator(_) {
      return new A.ExpandIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, B.C_EmptyIterator, this.$ti._eval$1("ExpandIterator<1,2>"));
    }
  };
  A.ExpandIterator.prototype = {
    get$current(_) {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    },
    moveNext$0() {
      var t2, t3, _this = this,
        t1 = _this._currentExpansion;
      if (t1 == null)
        return false;
      for (t2 = _this._iterator, t3 = _this._f; !t1.moveNext$0();) {
        _this.__internal$_current = null;
        if (t2.moveNext$0()) {
          _this._currentExpansion = null;
          t1 = J.get$iterator$ax(t3.call$1(t2.get$current(t2)));
          _this._currentExpansion = t1;
        } else
          return false;
      }
      t1 = _this._currentExpansion;
      _this.__internal$_current = t1.get$current(t1);
      return true;
    }
  };
  A.TakeIterable.prototype = {
    get$iterator(_) {
      return new A.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, A._instanceType(this)._eval$1("TakeIterator<1>"));
    }
  };
  A.EfficientLengthTakeIterable.prototype = {
    get$length(_) {
      var iterableLength = J.get$length$asx(this.__internal$_iterable),
        t1 = this._takeCount;
      if (iterableLength > t1)
        return t1;
      return iterableLength;
    },
    $isEfficientLengthIterable: 1
  };
  A.TakeIterator.prototype = {
    moveNext$0() {
      if (--this._remaining >= 0)
        return this._iterator.moveNext$0();
      this._remaining = -1;
      return false;
    },
    get$current(_) {
      var t1;
      if (this._remaining < 0) {
        this.$ti._precomputed1._as(null);
        return null;
      }
      t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, A._instanceType(this)._eval$1("SkipIterator<1>"));
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.SkipWhileIterable.prototype = {
    get$iterator(_) {
      return new A.SkipWhileIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti._eval$1("SkipWhileIterator<1>"));
    }
  };
  A.SkipWhileIterator.prototype = {
    moveNext$0() {
      var t1, t2, _this = this;
      if (!_this._hasSkipped) {
        _this._hasSkipped = true;
        for (t1 = _this._iterator, t2 = _this._f; t1.moveNext$0();)
          if (!t2.call$1(t1.get$current(t1)))
            return true;
      }
      return _this._iterator.moveNext$0();
    },
    get$current(_) {
      var t1 = this._iterator;
      return t1.get$current(t1);
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    forEach$1(_, action) {
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$single(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    contains$1(_, element) {
      return false;
    },
    map$1$1(_, toElement, $T) {
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    },
    toList$1$growable(_, growable) {
      var t1 = this.$ti._precomputed1;
      return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.FollowedByIterable.prototype = {
    get$iterator(_) {
      return new A.FollowedByIterator(J.get$iterator$ax(this.__internal$_first), this.__internal$_second, A._instanceType(this)._eval$1("FollowedByIterator<1>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_first) + J.get$length$asx(this.__internal$_second);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_first) && J.get$isEmpty$asx(this.__internal$_second);
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.__internal$_first) || J.get$isNotEmpty$asx(this.__internal$_second);
    },
    contains$1(_, value) {
      return J.contains$1$asx(this.__internal$_first, value) || J.contains$1$asx(this.__internal$_second, value);
    },
    get$first(_) {
      var iterator = J.get$iterator$ax(this.__internal$_first);
      if (iterator.moveNext$0())
        return iterator.get$current(iterator);
      return J.get$first$ax(this.__internal$_second);
    }
  };
  A.EfficientLengthFollowedByIterable.prototype = {
    elementAt$1(_, index) {
      var t1 = this.__internal$_first,
        t2 = J.getInterceptor$asx(t1),
        firstLength = t2.get$length(t1);
      if (index < firstLength)
        return t2.elementAt$1(t1, index);
      return J.elementAt$1$ax(this.__internal$_second, index - firstLength);
    },
    get$first(_) {
      var t1 = this.__internal$_first,
        t2 = J.getInterceptor$asx(t1);
      if (t2.get$isNotEmpty(t1))
        return t2.get$first(t1);
      return J.get$first$ax(this.__internal$_second);
    },
    $isEfficientLengthIterable: 1
  };
  A.FollowedByIterator.prototype = {
    moveNext$0() {
      var t1, _this = this;
      if (_this._currentIterator.moveNext$0())
        return true;
      t1 = _this._nextIterable;
      if (t1 != null) {
        t1 = J.get$iterator$ax(t1);
        _this._currentIterator = t1;
        _this._nextIterable = null;
        return t1.moveNext$0();
      }
      return false;
    },
    get$current(_) {
      var t1 = this._currentIterator;
      return t1.get$current(t1);
    }
  };
  A.WhereTypeIterable.prototype = {
    get$iterator(_) {
      return new A.WhereTypeIterator(J.get$iterator$ax(this._source), this.$ti._eval$1("WhereTypeIterator<1>"));
    }
  };
  A.WhereTypeIterator.prototype = {
    moveNext$0() {
      var t1, t2;
      for (t1 = this._source, t2 = this.$ti._precomputed1; t1.moveNext$0();)
        if (t2._is(t1.get$current(t1)))
          return true;
      return false;
    },
    get$current(_) {
      var t1 = this._source;
      return this.$ti._precomputed1._as(t1.get$current(t1));
    }
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    },
    remove$1(receiver, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from a fixed-length list"));
    },
    removeLast$0(receiver) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    },
    remove$1(_, element) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from an unmodifiable list"));
    },
    removeLast$0(_) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.ReversedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      var t1 = this._source,
        t2 = J.getInterceptor$asx(t1);
      return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
    }
  };
  A.Symbol.prototype = {};
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_2.prototype = {$recipe: "+(1,2)", $shape: 1};
  A._Record_2_end_start.prototype = {$recipe: "+end,start(1,2)", $shape: 5};
  A._Record_2_key_value.prototype = {$recipe: "+key,value(1,2)", $shape: 7};
  A._Record_3_breaks_graphemes_words.prototype = {$recipe: "+breaks,graphemes,words(1,2,3)", $shape: 15};
  A._Record_3_completer_recorder_scene.prototype = {$recipe: "+completer,recorder,scene(1,2,3)", $shape: 17};
  A._Record_3_data_event_timeStamp.prototype = {$recipe: "+data,event,timeStamp(1,2,3)", $shape: 18};
  A._Record_3_large_medium_small.prototype = {$recipe: "+large,medium,small(1,2,3)", $shape: 20};
  A._Record_3_queue_target_timer.prototype = {$recipe: "+queue,target,timer(1,2,3)", $shape: 21};
  A._Record_3_x78_y_z.prototype = {$recipe: "+x,y,z(1,2,3)", $shape: 23};
  A.ConstantMapView.prototype = {};
  A.ConstantMap.prototype = {
    cast$2$0(_, RK, RV) {
      var t1 = A._instanceType(this);
      return A.Map_castFrom(this, t1._precomputed1, t1._rest[1], RK, RV);
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $indexSet(_, key, value) {
      A.ConstantMap__throwUnmodifiable();
    },
    putIfAbsent$2(_, key, ifAbsent) {
      A.ConstantMap__throwUnmodifiable();
    },
    remove$1(_, key) {
      A.ConstantMap__throwUnmodifiable();
    },
    get$entries(_) {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(0), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap($async$_) {
      var $async$self = this;
      return function() {
        var _ = $async$_;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, key;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys($async$self), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current(t1);
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, $async$self.$index(0, key), t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$__js_helper$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(0, key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var t1, i,
        keys = this.get$__js_helper$_keys(),
        values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys(_) {
      return new A._KeysOrValues(this.get$__js_helper$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return 0 === this._elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this._elements.length;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this.__js_helper$_length) {
        _this.__js_helper$_current = null;
        return false;
      }
      _this.__js_helper$_current = _this._elements[t1];
      _this.__js_helper$_index = t1 + 1;
      return true;
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys(_) {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.ConstantSet.prototype = {
    clear$0(_) {
      A.ConstantSet__throwUnmodifiable();
    },
    add$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    },
    remove$1(_, value) {
      A.ConstantSet__throwUnmodifiable();
    },
    removeAll$1(elements) {
      A.ConstantSet__throwUnmodifiable();
    }
  };
  A.ConstantStringSet.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$iterator(_) {
      var t1, _this = this,
        keys = _this.$keys;
      if (keys == null) {
        keys = Object.keys(_this._jsIndex);
        _this.$keys = keys;
      }
      t1 = keys;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, _this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    contains$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, this.$ti._precomputed1);
    }
  };
  A.GeneralConstantSet.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return this._elements.length === 0;
    },
    get$isNotEmpty(_) {
      return this._elements.length !== 0;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    _getMap$0() {
      var t1, t2, _i, key, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,1>"));
        for (t1 = _this._elements, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          backingMap.$indexSet(0, key, key);
        }
        _this.$map = backingMap;
      }
      return backingMap;
    },
    contains$1(_, key) {
      return this._getMap$0().containsKey$1(0, key);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, this.$ti._precomputed1);
    }
  };
  A.Primitives_initTicker_closure.prototype = {
    call$0() {
      return B.JSNumber_methods.floor$0(1000 * this.performance.now());
    },
    $signature: 33
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    $isFunction: 1,
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A._CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys(_) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values(_) {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    containsValue$1(_, value) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>")).any$1(0, new A.JsLinkedHashMap_containsValue_closure(this, value));
    },
    addAll$1(_, other) {
      J.forEach$1$ax(other, new A.JsLinkedHashMap_addAll_closure(this));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else
        _this.internalSet$2(key, value);
    },
    internalSet$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        rest = _this.__js_helper$_rest = _this._newHashTable$0();
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._newLinkedCell$2(key, value)];
      else {
        index = _this.internalFindBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index].hashMapCellValue = value;
        else
          bucket.push(_this._newLinkedCell$2(key, value));
      }
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(0, key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var t1, _this = this,
        cell = new A.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    }
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = t1.$index(0, each);
      return t2 == null ? A._instanceType(t1)._rest[1]._as(t2) : t2;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_containsValue_closure.prototype = {
    call$1(each) {
      return J.$eq$(this.$this.$index(0, each), this.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("bool(1)");
    }
  };
  A.JsLinkedHashMap_addAll_closure.prototype = {
    call$2(key, value) {
      this.$this.$indexSet(0, key, value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(1,2)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
      t2._cell = t1._first;
      return t2;
    },
    contains$1(_, element) {
      return this._map.containsKey$1(0, element);
    },
    forEach$1(_, f) {
      var t1 = this._map,
        cell = t1._first,
        modifications = t1._modifications;
      for (; cell != null;) {
        f.call$1(cell.hashMapCellKey);
        if (modifications !== t1._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
        cell = cell._next;
      }
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current(_) {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.JsIdentityLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i) {
        t1 = bucket[i].hashMapCellKey;
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 76
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 97
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(tag);
    },
    $signature: 89
  };
  A._Record.prototype = {
    get$runtimeType(_) {
      return A.createRuntimeType(this._getRti$0());
    },
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "" + "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        $._Record__computedFieldKeys.push(null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        $._Record__computedFieldKeys[shapeTag] = t1;
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        t1 = type$.Object,
        result = J.JSArray_JSArray$allocateGrowable(arity, t1);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          result[last] = names[i];
        }
      }
      return A.List_List$unmodifiable(result, t1);
    }
  };
  A._Record2.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1];
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._Record2 && this.$shape === other.$shape && J.$eq$(this._0, other._0) && J.$eq$(this._1, other._1);
    },
    get$hashCode(_) {
      return A.Object_hash(this.$shape, this._0, this._1, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._Record3.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1, this._2];
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A._Record3 && _this.$shape === other.$shape && J.$eq$(_this._0, other._0) && J.$eq$(_this._1, other._1) && J.$eq$(_this._2, other._2);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.$shape, _this._0, _this._1, _this._2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    },
    get$_nativeGlobalVersion() {
      var _this = this,
        t1 = _this._nativeGlobalRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    get$_nativeAnchoredVersion() {
      var _this = this,
        t1 = _this._nativeAnchoredRegExp;
      if (t1 != null)
        return t1;
      t1 = _this._nativeRegExp;
      return _this._nativeAnchoredRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern + "|()", t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
    },
    firstMatch$1(string) {
      var m = this._nativeRegExp.exec(string);
      if (m == null)
        return null;
      return new A._MatchImplementation(m);
    },
    allMatches$2(_, string, start) {
      var t1 = string.length;
      if (start > t1)
        throw A.wrapException(A.RangeError$range(start, 0, t1, null, null));
      return new A._AllMatchesIterable(this, string, start);
    },
    allMatches$1(_, string) {
      return this.allMatches$2(0, string, 0);
    },
    _execGlobal$2(string, start) {
      var match,
        regexp = this.get$_nativeGlobalVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      return new A._MatchImplementation(match);
    },
    _execAnchored$2(string, start) {
      var match,
        regexp = this.get$_nativeAnchoredVersion();
      regexp.lastIndex = start;
      match = regexp.exec(string);
      if (match == null)
        return null;
      if (match.pop() != null)
        return null;
      return new A._MatchImplementation(match);
    },
    matchAsPrefix$2(_, string, start) {
      if (start < 0 || start > string.length)
        throw A.wrapException(A.RangeError$range(start, 0, string.length, null, null));
      return this._execAnchored$2(string, start);
    }
  };
  A._MatchImplementation.prototype = {
    get$start(_) {
      return this._match.index;
    },
    get$end(_) {
      var t1 = this._match;
      return t1.index + t1[0].length;
    },
    $isMatch: 1,
    $isRegExpMatch: 1
  };
  A._AllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._AllMatchesIterator(this._re, this.__js_helper$_string, this.__js_helper$_start);
    }
  };
  A._AllMatchesIterator.prototype = {
    get$current(_) {
      var t1 = this.__js_helper$_current;
      return t1 == null ? type$.RegExpMatch._as(t1) : t1;
    },
    moveNext$0() {
      var t1, t2, t3, match, nextIndex, t4, _this = this,
        string = _this.__js_helper$_string;
      if (string == null)
        return false;
      t1 = _this._nextIndex;
      t2 = string.length;
      if (t1 <= t2) {
        t3 = _this._regExp;
        match = t3._execGlobal$2(string, t1);
        if (match != null) {
          _this.__js_helper$_current = match;
          nextIndex = match.get$end(0);
          if (match._match.index === nextIndex) {
            t1 = false;
            if (t3._nativeRegExp.unicode) {
              t3 = _this._nextIndex;
              t4 = t3 + 1;
              if (t4 < t2) {
                t2 = string.charCodeAt(t3);
                if (t2 >= 55296 && t2 <= 56319) {
                  t1 = string.charCodeAt(t4);
                  t1 = t1 >= 56320 && t1 <= 57343;
                }
              }
            }
            nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
          }
          _this._nextIndex = nextIndex;
          return true;
        }
      }
      _this.__js_helper$_string = _this.__js_helper$_current = null;
      return false;
    }
  };
  A.StringMatch.prototype = {
    get$end(_) {
      return this.start + this.pattern.length;
    },
    $isMatch: 1,
    get$start(receiver) {
      return this.start;
    }
  };
  A._StringAllMatchesIterable.prototype = {
    get$iterator(_) {
      return new A._StringAllMatchesIterator(this._input, this._pattern, this.__js_helper$_index);
    },
    get$first(_) {
      var t1 = this._pattern,
        index = this._input.indexOf(t1, this.__js_helper$_index);
      if (index >= 0)
        return new A.StringMatch(index, t1);
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A._StringAllMatchesIterator.prototype = {
    moveNext$0() {
      var index, end, _this = this,
        t1 = _this.__js_helper$_index,
        t2 = _this._pattern,
        t3 = t2.length,
        t4 = _this._input,
        t5 = t4.length;
      if (t1 + t3 > t5) {
        _this.__js_helper$_current = null;
        return false;
      }
      index = t4.indexOf(t2, t1);
      if (index < 0) {
        _this.__js_helper$_index = t5 + 1;
        _this.__js_helper$_current = null;
        return false;
      }
      end = index + t3;
      _this.__js_helper$_current = new A.StringMatch(index, t2);
      _this.__js_helper$_index = end === _this.__js_helper$_index ? end + 1 : end;
      return true;
    },
    get$current(_) {
      var t1 = this.__js_helper$_current;
      t1.toString;
      return t1;
    }
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    },
    _readField$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(A.LateError$fieldNI(this.__late_helper$_name));
      return t1;
    },
    set$finalLocalValue(v) {
      var _this = this;
      if (_this._value !== _this)
        throw A.wrapException(new A.LateError("Local '" + _this.__late_helper$_name + "' has already been initialized."));
      _this._value = v;
    }
  };
  A._InitializedCell.prototype = {
    _readFinal$0() {
      var result, _this = this,
        t1 = _this._value;
      if (t1 === _this) {
        result = _this._initializer.call$0();
        if (_this._value !== _this)
          throw A.wrapException(new A.LateError("Local '" + _this.__late_helper$_name + string$.x27_has_));
        _this._value = result;
        t1 = result;
      }
      return t1;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_EOZ;
    },
    asInt64List$2(receiver, offsetInBytes, $length) {
      throw A.wrapException(A.UnsupportedError$("Int64List not supported by dart2js."));
    },
    $isTrustedGetRuntimeType: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {
    get$elementSizeInBytes(receiver) {
      return receiver.BYTES_PER_ELEMENT;
    },
    _invalidPosition$3(receiver, position, $length, $name) {
      var t1 = A.RangeError$range(position, 0, $length, $name, null);
      throw A.wrapException(t1);
    },
    _checkPosition$3(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    }
  };
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_mF8;
    },
    get$elementSizeInBytes(receiver) {
      return 1;
    },
    getInt64$2(receiver, byteOffset, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    setInt64$3(receiver, byteOffset, value, endian) {
      throw A.wrapException(A.UnsupportedError$("Int64 accessor not supported by dart2js."));
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    _setRangeFast$4(receiver, start, end, source, skipCount) {
      var count, sourceLength,
        targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        throw A.wrapException(A.RangeError$range(start, 0, end, null, null));
      count = end - start;
      if (skipCount < 0)
        throw A.wrapException(A.ArgumentError$(skipCount, null));
      sourceLength = source.length;
      if (sourceLength - skipCount < count)
        throw A.wrapException(A.StateError$("Not enough elements"));
      if (skipCount !== 0 || sourceLength !== count)
        source = source.subarray(skipCount, skipCount + count);
      receiver.set(source, start);
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      if (type$.NativeTypedArrayOfInt._is(iterable)) {
        this._setRangeFast$4(receiver, start, end, iterable, skipCount);
        return;
      }
      this.super$ListBase$setRange(receiver, start, end, iterable, skipCount);
    },
    setRange$3(receiver, start, end, iterable) {
      return this.setRange$4(receiver, start, end, iterable, 0);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_Ymk;
    },
    sublist$2(receiver, start, end) {
      return new Float32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_Ymk;
    },
    sublist$2(receiver, start, end) {
      return new Float64Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_cot;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Int16Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isInt16List: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_m1p;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Int32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_woc;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Int8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isInt8List: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_2mh;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint16Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isUint16List: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2mh;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint32Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_9Bb;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8ClampedArray(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isUint8ClampedList: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_CSc;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    },
    $isType: 1
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._StringStream.prototype = {
    readIntAsVerbatim$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this._data.charCodeAt(t1) - $.$get$_kMarshallIntBase();
    },
    readIntAsChar$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this._data.charCodeAt(t1);
    },
    readEventKey$0() {
      var char = A.Primitives_stringFromCharCode(this.readIntAsChar$0());
      if (char === $.$get$_kUseDead())
        return "Dead";
      else
        return char;
    }
  };
  A._StringStream__goalToEventCode_closure.prototype = {
    call$1(beforeEntry) {
      return new A.MapEntry(J.codeUnitAt$1$s(beforeEntry.value, 0), beforeEntry.key, type$.MapEntry_int_String);
    },
    $signature: 88
  };
  A.LocaleKeymap.prototype = {
    getLogicalKey$3(eventCode, eventKey, eventKeyCode) {
      var t2, heuristicResult, characterLogicalKey,
        t1 = this.__web_locale_keymap$_mapping.$index(0, eventCode),
        result = t1 == null ? null : t1.$index(0, eventKey);
      if (result === 255)
        return eventKeyCode;
      if (result == null) {
        t1 = eventCode == null;
        if ((t1 ? "" : eventCode).length === 0)
          t2 = (eventKey == null ? "" : eventKey).length === 0;
        else
          t2 = false;
        if (t2)
          return null;
        t1 = t1 ? "" : eventCode;
        heuristicResult = A.heuristicMapper(t1, eventKey == null ? "" : eventKey);
        if (heuristicResult != null)
          return heuristicResult;
        characterLogicalKey = A._characterToLogicalKey(eventKey);
        if (characterLogicalKey != null)
          return characterLogicalKey;
      }
      return result;
    }
  };
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 15
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 87
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 17
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 17
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    _TimerImpl$periodic$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setInterval(A.convertDartClosureToJS(new A._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("Periodic timer."));
    },
    cancel$0(_) {
      var t1;
      if (self.setTimeout != null) {
        t1 = this._handle;
        if (t1 == null)
          return;
        if (this._once)
          self.clearTimeout(t1);
        else
          self.clearInterval(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._handle = null;
      t1._tick = 1;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._TimerImpl$periodic_closure.prototype = {
    call$0() {
      var duration, _this = this,
        t1 = _this.$this,
        tick = t1._tick + 1,
        t2 = _this.milliseconds;
      if (t2 > 0) {
        duration = Date.now() - _this.start;
        if (duration > (tick + 1) * t2)
          tick = B.JSInt_methods.$tdiv(duration, t2);
      }
      t1._tick = tick;
      _this.callback.call$1(t1);
    },
    $signature: 17
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(_, value) {
      var t1, _this = this;
      if (value == null)
        value = _this.$ti._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t1 = _this._future;
        if (_this.$ti._eval$1("Future<1>")._is(value))
          t1._chainFuture$1(value);
        else
          t1._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 10
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, stackTrace));
    },
    $signature: 82
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 83
  };
  A._SyncStarIterator.prototype = {
    get$current(_) {
      return this._async$_current;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = errorCode;
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this._async$_current = J.get$current$z(nestedIterator);
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        t2.push(_this._body);
        _this._body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    }
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._BroadcastStream.prototype = {};
  A._BroadcastSubscription.prototype = {
    _onPause$0() {
    },
    _onResume$0() {
    }
  };
  A._BroadcastStreamController.prototype = {
    get$stream(_) {
      return new A._BroadcastStream(this, A._instanceType(this)._eval$1("_BroadcastStream<1>"));
    },
    get$_mayAddEvent() {
      return this._state < 4;
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      return t1 == null ? this._doneFuture = new A._Future($.Zone__current, type$._Future_void) : t1;
    },
    _removeListener$1(subscription) {
      var previous = subscription._async$_previous,
        next = subscription._async$_next;
      if (previous == null)
        this._firstSubscription = next;
      else
        previous._async$_next = next;
      if (next == null)
        this._lastSubscription = previous;
      else
        next._async$_previous = previous;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t1, t2, t3, subscription, oldLast, _this = this;
      if ((_this._state & 4) !== 0)
        return A._DoneStreamSubscription$(onDone, A._instanceType(_this)._precomputed1);
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t3 = onError != null ? 32 : 0;
      subscription = new A._BroadcastSubscription(_this, A._BufferingStreamSubscription__registerDataHandler(t1, onData), A._BufferingStreamSubscription__registerErrorHandler(t1, onError), A._BufferingStreamSubscription__registerDoneHandler(t1, onDone), t1, t2 | t3, A._instanceType(_this)._eval$1("_BroadcastSubscription<1>"));
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this._lastSubscription = subscription;
      subscription._async$_next = null;
      subscription._async$_previous = oldLast;
      if (oldLast == null)
        _this._firstSubscription = subscription;
      else
        oldLast._async$_next = subscription;
      if (_this._firstSubscription === subscription)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var t1, _this = this;
      A._instanceType(_this)._eval$1("_BroadcastSubscription<1>")._as(sub);
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _recordPause$1(subscription) {
    },
    _recordResume$1(subscription) {
    },
    _addEventError$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add new events after calling close");
      return new A.StateError("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      if (!this.get$_mayAddEvent())
        throw A.wrapException(this._addEventError$0());
      this._sendData$1(data);
    },
    close$0(_) {
      var t1, doneFuture, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._ensureDoneFuture$0();
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1(action) {
      var subscription, id, next, _this = this,
        t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw A.wrapException(A.StateError$(string$.Cannot));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0() {
      if ((this._state & 4) !== 0) {
        var doneFuture = this._doneFuture;
        if ((doneFuture._state & 30) === 0)
          doneFuture._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    }
  };
  A._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return A._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0() {
      if ((this._state & 2) !== 0)
        return new A.StateError(string$.Cannot);
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._add$1(0, data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new A._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendDone$0() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new A._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  A._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1(subscription) {
      subscription._add$1(0, this.data);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1(subscription) {
      subscription._close$0();
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription, t1;
      for (subscription = this._firstSubscription, t1 = this.$ti._eval$1("_DelayedData<1>"); subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedData(data, t1));
    },
    _sendDone$0() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(B.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A.Future_Future_closure.prototype = {
    call$0() {
      var e, s, exception, computationResult = null;
      try {
        computationResult = this.computation.call$0();
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._completeWithErrorCallback(this.result, e, s);
        return;
      }
      this.result._complete$1(computationResult);
    },
    $signature: 0
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      var computationResult, e, s, exception, _this = this,
        t1 = _this.computation;
      if (t1 == null) {
        _this.T._as(null);
        _this.result._complete$1(null);
      } else {
        computationResult = null;
        try {
          computationResult = t1.call$0();
        } catch (exception) {
          e = A.unwrapException(exception);
          s = A.getTraceFromException(exception);
          A._completeWithErrorCallback(_this.result, e, s);
          return;
        }
        _this.result._complete$1(computationResult);
      }
    },
    $signature: 0
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        t1.error = theError;
        t1.stackTrace = theStackTrace;
        if (t2 === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
      } else if (t2 === 0 && !_this.eagerError) {
        t2 = t1.error;
        t2.toString;
        t1 = t1.stackTrace;
        t1.toString;
        _this._future._completeError$2(t2, t1);
      }
    },
    $signature: 41
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var t1, value0, t3, t4, _i, t5, _this = this,
        t2 = _this._box_0,
        remainingResults = --t2.remaining,
        valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (J.$eq$(remainingResults, 0)) {
          t2 = _this.T;
          t1 = A._setArrayType([], t2._eval$1("JSArray<0>"));
          for (t3 = valueList, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
            value0 = t3[_i];
            t5 = value0;
            if (t5 == null)
              t5 = t2._as(t5);
            J.add$1$ax(t1, t5);
          }
          _this._future._completeWithValue$1(t1);
        }
      } else if (J.$eq$(remainingResults, 0) && !_this.eagerError) {
        t1 = t2.error;
        t1.toString;
        t2 = t2.stackTrace;
        t2.toString;
        _this._future._completeError$2(t1, t2);
      }
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      if ((this.future._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      this._completeError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(_, value) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    },
    complete$0(_) {
      return this.complete$1(0, null);
    },
    _completeError$2(error, stackTrace) {
      this.future._asyncCompleteError$2(error, stackTrace);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1(asyncError) {
      var exception,
        errorCallback = this.errorCallback,
        result = null,
        t1 = asyncError.error,
        t2 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t2.runBinary$3(errorCallback, t1, asyncError.stackTrace);
      else
        result = t2.runUnary$2(errorCallback, t1);
      try {
        t1 = result;
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    _setChained$1(source) {
      this._state = this._state & 1 | 4;
      this._resultOrListeners = source;
    },
    then$1$2$onError(f, onError, $R) {
      var result, t1,
        currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else if (onError != null)
        onError = A._registerErrorHandler(onError, currentZone);
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t1 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t1, f, onError, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, this.$ti._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    catchError$2$test(onError, test) {
      var t1 = this.$ti,
        t2 = $.Zone__current,
        result = new A._Future(t2, t1);
      if (t2 !== B.C__RootZone)
        onError = A._registerErrorHandler(onError, t2);
      t2 = test == null ? 2 : 6;
      this._addListener$1(new A._FutureListener(result, t2, test, onError, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    catchError$1(onError) {
      return this.catchError$2$test(onError, null);
    },
    whenComplete$1(action) {
      var t1 = this.$ti,
        result = new A._Future($.Zone__current, t1);
      this._addListener$1(new A._FutureListener(result, 8, action, null, t1._eval$1("_FutureListener<1,1>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(t1);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = _this._resultOrListeners;
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(t1);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var listeners, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("Future<1>")._is(value))
        if (t1._is(value))
          A._Future__chainCoreFutureSync(value, _this);
        else
          _this._chainForeignFuture$1(value);
      else {
        listeners = _this._removeListeners$0();
        _this._state = 8;
        _this._resultOrListeners = value;
        A._Future__propagateToListeners(_this, listeners);
      }
    },
    _completeWithValue$1(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1(value) {
      if (this.$ti._is(value)) {
        A._Future__chainCoreFutureAsync(value, this);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 15
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(error, stackTrace);
    },
    $signature: 85
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__chainCoreFutureAsync_closure.prototype = {
    call$0() {
      A._Future__chainCoreFutureSync(this._box_0.source, this.target);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && _this._box_1.source._resultOrListeners.error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = completeResult._resultOrListeners;
          t1.listenerHasError = true;
        }
        return;
      }
      if (type$.Future_dynamic._is(completeResult)) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 86
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t1.listenerValueOrError = t2.result._zone.runUnary$2(t2.callback, this.sourceResult);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      ++this._box_0.count;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("~(Stream.T)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A._StreamController.prototype = {
    get$stream(_) {
      return new A._ControllerStream(this, A._instanceType(this)._eval$1("_ControllerStream<1>"));
    },
    get$_pendingEvents() {
      if ((this._state & 8) === 0)
        return this._varData;
      return this._varData._varData;
    },
    _ensurePendingEvents$0() {
      var events, state, _this = this;
      if ((_this._state & 8) === 0) {
        events = _this._varData;
        return events == null ? _this._varData = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>")) : events;
      }
      state = _this._varData;
      events = state._varData;
      return events == null ? state._varData = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<1>")) : events;
    },
    get$_subscription() {
      var varData = this._varData;
      return (this._state & 8) !== 0 ? varData._varData : varData;
    },
    _badEventState$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add event after closing");
      return new A.StateError("Cannot add event while adding a stream");
    },
    _ensureDoneFuture$0() {
      var t1 = this._doneFuture;
      if (t1 == null)
        t1 = this._doneFuture = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new A._Future($.Zone__current, type$._Future_void);
      return t1;
    },
    add$1(_, value) {
      if (this._state >= 4)
        throw A.wrapException(this._badEventState$0());
      this._add$1(0, value);
    },
    close$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 4) !== 0)
        return _this._ensureDoneFuture$0();
      if (t1 >= 4)
        throw A.wrapException(_this._badEventState$0());
      _this._closeUnchecked$0();
      return _this._ensureDoneFuture$0();
    },
    _closeUnchecked$0() {
      var t1 = this._state |= 4;
      if ((t1 & 1) !== 0)
        this._sendDone$0();
      else if ((t1 & 3) === 0)
        this._ensurePendingEvents$0().add$1(0, B.C__DelayedDone);
    },
    _add$1(_, value) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 1) !== 0)
        _this._sendData$1(value);
      else if ((t1 & 3) === 0)
        _this._ensurePendingEvents$0().add$1(0, new A._DelayedData(value, A._instanceType(_this)._eval$1("_DelayedData<1>")));
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var subscription, pendingEvents, t1, addState, _this = this;
      if ((_this._state & 3) !== 0)
        throw A.wrapException(A.StateError$("Stream has already been listened to."));
      subscription = A._ControllerSubscription$(_this, onData, onError, onDone, cancelOnError, A._instanceType(_this)._precomputed1);
      pendingEvents = _this.get$_pendingEvents();
      t1 = _this._state |= 1;
      if ((t1 & 8) !== 0) {
        addState = _this._varData;
        addState._varData = subscription;
        addState.addSubscription.resume$0(0);
      } else
        _this._varData = subscription;
      subscription._setPendingEvents$1(pendingEvents);
      subscription._guardCallback$1(new A._StreamController__subscribe_closure(_this));
      return subscription;
    },
    _recordCancel$1(subscription) {
      var onCancel, cancelResult, e, s, exception, result0, t1, _this = this, result = null;
      if ((_this._state & 8) !== 0)
        result = _this._varData.cancel$0(0);
      _this._varData = null;
      _this._state = _this._state & 4294967286 | 2;
      onCancel = _this.onCancel;
      if (onCancel != null)
        if (result == null)
          try {
            cancelResult = onCancel.call$0();
            if (type$.Future_void._is(cancelResult))
              result = cancelResult;
          } catch (exception) {
            e = A.unwrapException(exception);
            s = A.getTraceFromException(exception);
            result0 = new A._Future($.Zone__current, type$._Future_void);
            result0._asyncCompleteError$2(e, s);
            result = result0;
          }
        else
          result = result.whenComplete$1(onCancel);
      t1 = new A._StreamController__recordCancel_complete(_this);
      if (result != null)
        result = result.whenComplete$1(t1);
      else
        t1.call$0();
      return result;
    },
    _recordPause$1(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.addSubscription.pause$0(0);
      A._runGuarded(this.onPause);
    },
    _recordResume$1(subscription) {
      if ((this._state & 8) !== 0)
        this._varData.addSubscription.resume$0(0);
      A._runGuarded(this.onResume);
    }
  };
  A._StreamController__subscribe_closure.prototype = {
    call$0() {
      A._runGuarded(this.$this.onListen);
    },
    $signature: 0
  };
  A._StreamController__recordCancel_complete.prototype = {
    call$0() {
      var doneFuture = this.$this._doneFuture;
      if (doneFuture != null && (doneFuture._state & 30) === 0)
        doneFuture._asyncComplete$1(null);
    },
    $signature: 0
  };
  A._SyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.get$_subscription()._add$1(0, data);
    },
    _sendDone$0() {
      this.get$_subscription()._close$0();
    }
  };
  A._AsyncStreamControllerDispatch.prototype = {
    _sendData$1(data) {
      this.get$_subscription()._addPending$1(new A._DelayedData(data, A._instanceType(this)._eval$1("_DelayedData<1>")));
    },
    _sendDone$0() {
      this.get$_subscription()._addPending$1(B.C__DelayedDone);
    }
  };
  A._AsyncStreamController.prototype = {};
  A._SyncStreamController.prototype = {};
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._ControllerStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
      this._controller._recordPause$1(this);
    },
    _onResume$0() {
      this._controller._recordResume$1(this);
    }
  };
  A._AddStreamState_cancel_closure.prototype = {
    call$0() {
      this.$this.addStreamFuture._asyncComplete$1(null);
    },
    $signature: 17
  };
  A._BufferingStreamSubscription.prototype = {
    _setPendingEvents$1(pendingEvents) {
      var _this = this;
      if (pendingEvents == null)
        return;
      _this._pending = pendingEvents;
      if (pendingEvents.lastPendingEvent != null) {
        _this._state = (_this._state | 128) >>> 0;
        pendingEvents.schedule$1(_this);
      }
    },
    pause$1(_, resumeSignal) {
      var t2, _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      _this._state = (t1 + 256 | 4) >>> 0;
      if (resumeSignal != null)
        resumeSignal.whenComplete$1(_this.get$resume(_this));
      if (t1 < 256) {
        t2 = _this._pending;
        if (t2 != null)
          if (t2._state === 1)
            t2._state = 3;
      }
      if ((t1 & 4) === 0 && (_this._state & 64) === 0)
        _this._guardCallback$1(_this.get$_onPause());
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 >= 256) {
        t1 = _this._state = t1 - 256;
        if (t1 < 256)
          if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent != null)
            _this._pending.schedule$1(_this);
          else {
            t1 = (t1 & 4294967291) >>> 0;
            _this._state = t1;
            if ((t1 & 64) === 0)
              _this._guardCallback$1(_this.get$_onResume());
          }
      }
    },
    cancel$0(_) {
      var _this = this,
        t1 = (_this._state & 4294967279) >>> 0;
      _this._state = t1;
      if ((t1 & 8) === 0)
        _this._cancel$0();
      t1 = _this._cancelFuture;
      return t1 == null ? $.$get$Future__nullFuture() : t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state = (_this._state | 8) >>> 0;
      if ((t1 & 128) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 64) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _add$1(_, data) {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 64)
        _this._sendData$1(data);
      else
        _this._addPending$1(new A._DelayedData(data, A._instanceType(_this)._eval$1("_DelayedData<_BufferingStreamSubscription.T>")));
    },
    _close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 = (t1 | 2) >>> 0;
      _this._state = t1;
      if (t1 < 64)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents(A._instanceType(_this)._eval$1("_PendingEvents<_BufferingStreamSubscription.T>"));
      pending.add$1(0, $event);
      t1 = _this._state;
      if ((t1 & 128) === 0) {
        t1 = (t1 | 128) >>> 0;
        _this._state = t1;
        if (t1 < 256)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 64) >>> 0;
      _this._zone.runUnaryGuarded$2(_this._onData, data);
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendDone$0() {
      var cancelFuture, _this = this,
        t1 = new A._BufferingStreamSubscription__sendDone_sendDone(_this);
      _this._cancel$0();
      _this._state = (_this._state | 16) >>> 0;
      cancelFuture = _this._cancelFuture;
      if (cancelFuture != null && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(t1);
      else
        t1.call$0();
    },
    _guardCallback$1(callback) {
      var _this = this,
        t1 = _this._state;
      _this._state = (t1 | 64) >>> 0;
      callback.call$0();
      _this._state = (_this._state & 4294967231) >>> 0;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = (t1 & 4294967167) >>> 0;
        t2 = false;
        if ((t1 & 4) !== 0)
          if (t1 < 256) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          }
        if (t2) {
          t1 = (t1 & 4294967291) >>> 0;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = (t1 ^ 64) >>> 0;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = (_this._state & 4294967231) >>> 0;
        _this._state = t1;
      }
      if ((t1 & 128) !== 0 && t1 < 256)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = (t2 | 74) >>> 0;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state = (t1._state & 4294967231) >>> 0;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._controller._subscribe$4(onData, onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  A._DelayedEvent.prototype = {
    get$next(receiver) {
      return this.next;
    },
    set$next(receiver, val) {
      return this.next = val;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next(_) {
      return null;
    },
    set$next(_, _0) {
      throw A.wrapException(A.StateError$("No events after a done."));
    }
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    },
    add$1(_, $event) {
      var _this = this,
        lastEvent = _this.lastPendingEvent;
      if (lastEvent == null)
        _this.firstPendingEvent = _this.lastPendingEvent = $event;
      else {
        lastEvent.set$next(0, $event);
        _this.lastPendingEvent = $event;
      }
    },
    handleNext$1(dispatch) {
      var $event = this.firstPendingEvent,
        nextEvent = $event.get$next($event);
      this.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        this.lastPendingEvent = null;
      $event.perform$1(dispatch);
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      t1.handleNext$1(this.dispatch);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    pause$1(_, resumeSignal) {
      var _this = this,
        t1 = _this._state;
      if (t1 >= 0) {
        _this._state = t1 + 2;
        if (resumeSignal != null)
          resumeSignal.whenComplete$1(_this.get$resume(_this));
      }
    },
    pause$0(_) {
      return this.pause$1(0, null);
    },
    resume$0(_) {
      var _this = this,
        resumeState = _this._state - 2;
      if (resumeState < 0)
        return;
      if (resumeState === 0) {
        _this._state = 1;
        A.scheduleMicrotask(_this.get$_onMicrotask());
      } else
        _this._state = resumeState;
    },
    cancel$0(_) {
      this._state = -1;
      this._onDone = null;
      return $.$get$Future__nullFuture();
    },
    _onMicrotask$0() {
      var _0_0, _this = this,
        unscheduledState = _this._state - 1;
      if (unscheduledState === 0) {
        _this._state = -1;
        _0_0 = _this._onDone;
        if (_0_0 != null) {
          _this._onDone = null;
          _this._zone.runGuarded$1(_0_0);
        }
      } else
        _this._state = unscheduledState;
    },
    $isStreamSubscription: 1
  };
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$1$2(f, arg) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$2(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    bindBinaryCallback$3$1(f, $R, T1, T2) {
      return new A._RootZone_bindBinaryCallback_closure(this, f, T1, T2, $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, f);
    },
    bindUnaryCallbackGuarded$1$1(f, $T) {
      return new A._RootZone_bindUnaryCallbackGuarded_closure(this, f, $T);
    },
    run$1$1(f) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f);
    },
    run$1(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2(f, arg) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2(f, arg) {
      var t1 = type$.dynamic;
      return this.runUnary$2$2(f, arg, t1, t1);
    },
    runBinary$3$3(f, arg1, arg2) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3(f, arg1, arg2) {
      var t1 = type$.dynamic;
      return this.runBinary$3$3(f, arg1, arg2, t1, t1, t1);
    },
    registerBinaryCallback$3$1(f) {
      return f;
    },
    registerBinaryCallback$1(f) {
      var t1 = type$.dynamic;
      return this.registerBinaryCallback$3$1(f, t1, t1, t1);
    }
  };
  A._RootZone_bindBinaryCallback_closure.prototype = {
    call$2(arg1, arg2) {
      return this.$this.runBinary$3(this.f, arg1, arg2);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T1)._bind$1(this.T2)._eval$1("1(2,3)");
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._RootZone_bindUnaryCallbackGuarded_closure.prototype = {
    call$1(arg) {
      return this.$this.runUnaryGuarded$2(this.f, arg);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys(_) {
      return new A._HashMapKeyIterable(this, A._instanceType(this)._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(_, key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(0, key);
    },
    _get$1(_, key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else
        _this._set$2(key, value);
    },
    _set$2(key, value) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashMap__newHashTable();
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      if (bucket == null) {
        A._HashMap__setTableEntry(rest, hash, [key, value]);
        ++_this._collection$_length;
        _this._keys = null;
      } else {
        index = _this._findBucketIndex$2(bucket, key);
        if (index >= 0)
          bucket[index + 1] = value;
        else {
          bucket.push(key, value);
          ++_this._collection$_length;
          _this._keys = null;
        }
      }
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(0, key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(0, key);
    },
    _remove$1(_, key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = _this._computeHashCode$1(key);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var $length, t1, i, key, t2, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, t1 = A._instanceType(_this)._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2 = _this.$index(0, key);
        action.call$2(key, t2 == null ? t1._as(t2) : t2);
        if (keys !== _this._keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._keys = null;
        return value;
      } else
        return null;
    },
    _computeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    _getBucket$2(table, key) {
      return table[this._computeHashCode$1(key)];
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2)
        if (J.$eq$(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._IdentityHashMap.prototype = {
    _computeHashCode$1(key) {
      return A.objectHashCode(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._CustomHashMap.prototype = {
    $index(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$_HashMap$_get(0, key);
    },
    $indexSet(_, key, value) {
      this.super$_HashMap$_set(key, value);
    },
    containsKey$1(_, key) {
      if (!this._validKey.call$1(key))
        return false;
      return this.super$_HashMap$_containsKey(key);
    },
    remove$1(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$_HashMap$_remove(0, key);
    },
    _computeHashCode$1(key) {
      return this._hashCode.call$1(key) & 1073741823;
    },
    _findBucketIndex$2(bucket, key) {
      var $length, t1, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this._equals, i = 0; i < $length; i += 2)
        if (t1.call$2(bucket[i], key))
          return i;
      return -1;
    }
  };
  A._CustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 80
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    },
    contains$1(_, element) {
      return this._collection$_map.containsKey$1(0, element);
    },
    forEach$1(_, f) {
      var $length, i,
        t1 = this._collection$_map,
        keys = t1._computeKeys$0();
      for ($length = keys.length, i = 0; i < $length; ++i) {
        f.call$1(keys[i]);
        if (keys !== t1._keys)
          throw A.wrapException(A.ConcurrentModificationError$(t1));
      }
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._LinkedCustomHashMap.prototype = {
    $index(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$JsLinkedHashMap$internalGet(key);
    },
    $indexSet(_, key, value) {
      this.super$JsLinkedHashMap$internalSet(key, value);
    },
    containsKey$1(_, key) {
      if (!this._validKey.call$1(key))
        return false;
      return this.super$JsLinkedHashMap$internalContainsKey(key);
    },
    remove$1(_, key) {
      if (!this._validKey.call$1(key))
        return null;
      return this.super$JsLinkedHashMap$internalRemove(key);
    },
    internalComputeHashCode$1(key) {
      return this._hashCode.call$1(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, t1, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (t1 = this._equals, i = 0; i < $length; ++i)
        if (t1.call$2(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A._LinkedCustomHashMap_closure.prototype = {
    call$1(v) {
      return this.K._is(v);
    },
    $signature: 80
  };
  A._HashSet.prototype = {
    _newSet$0() {
      return new A._HashSet(A._instanceType(this)._eval$1("_HashSet<1>"));
    },
    get$iterator(_) {
      return new A._HashSetIterator(this, this._computeElements$0(), A._instanceType(this)._eval$1("_HashSetIterator<1>"));
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._HashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._HashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(0, element);
    },
    _collection$_add$1(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._HashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [element];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(element);
      }
      ++_this._collection$_length;
      _this._collection$_elements = null;
      return true;
    },
    addAll$1(_, objects) {
      var t1;
      for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1(_, object) {
      var hash, bucket, index, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      --_this._collection$_length;
      _this._collection$_elements = null;
      bucket.splice(index, 1);
      if (0 === bucket.length)
        delete rest[hash];
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_elements = null;
        _this._collection$_length = 0;
      }
    },
    _computeElements$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._collection$_elements;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; ++i0) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._collection$_elements = result;
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = 0;
      ++this._collection$_length;
      this._collection$_elements = null;
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      if (table != null && table[element] != null) {
        delete table[element];
        --this._collection$_length;
        this._collection$_elements = null;
        return true;
      } else
        return false;
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i], element))
          return i;
      return -1;
    }
  };
  A._HashSetIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        elements = _this._collection$_elements,
        offset = _this._offset,
        t1 = _this._set;
      if (elements !== t1._collection$_elements)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= elements.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = elements[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._LinkedHashSet.prototype = {
    _newSet$0() {
      return new A._LinkedHashSet(A._instanceType(this)._eval$1("_LinkedHashSet<1>"));
    },
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, A._instanceType(_this)._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    contains$1(_, object) {
      var strings, nums;
      if (typeof object == "string" && object !== "__proto__") {
        strings = this._collection$_strings;
        if (strings == null)
          return false;
        return strings[object] != null;
      } else if (typeof object == "number" && (object & 1073741823) === object) {
        nums = this._collection$_nums;
        if (nums == null)
          return false;
        return nums[object] != null;
      } else
        return this._contains$1(object);
    },
    _contains$1(object) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._collection$_first,
        modifications = _this._collection$_modifications;
      for (; cell != null;) {
        action.call$1(cell._element);
        if (modifications !== _this._collection$_modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._collection$_next;
      }
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return first._element;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(0, element);
    },
    _collection$_add$1(_, element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = _this._computeHashCode$1(element);
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(0, object);
    },
    _remove$1(_, object) {
      var hash, bucket, index, cell, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return false;
      hash = _this._computeHashCode$1(object);
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      _this._collection$_unlinkCell$1(cell);
      return true;
    },
    clear$0(_) {
      var _this = this;
      if (_this._collection$_length > 0) {
        _this._collection$_strings = _this._collection$_nums = _this._collection$_rest = _this._collection$_first = _this._collection$_last = null;
        _this._collection$_length = 0;
        _this._collection$_modified$0();
      }
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _computeHashCode$1(element) {
      return J.get$hashCode$(element) & 1073741823;
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = cell._element;
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    }
  };
  A.LinkedHashMap_LinkedHashMap$from_closure.prototype = {
    call$2(k, v) {
      this.result.$indexSet(0, this.K._as(k), this.V._as(v));
    },
    $signature: 64
  };
  A._LinkedListIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this._collection$_list;
      if (_this._modificationCount !== t1._modificationCount)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      if (t1._collection$_length !== 0)
        t1 = _this._visitedFirst && _this._collection$_next === t1.get$first(0);
      else
        t1 = true;
      if (t1) {
        _this._collection$_current = null;
        return false;
      }
      _this._visitedFirst = true;
      t1 = _this._collection$_next;
      _this._collection$_current = t1;
      _this._collection$_next = t1.LinkedListEntry__next;
      return true;
    }
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1(receiver, action) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    get$single(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      if (this.get$length(receiver) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      return this.$index(receiver, 0);
    },
    contains$1(receiver, element) {
      var i,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        if (J.$eq$(this.$index(receiver, i), element))
          return true;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      return false;
    },
    firstWhere$2$orElse(receiver, test, orElse) {
      var i, element,
        $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        element = this.$index(receiver, i);
        if (test.call$1(element))
          return element;
        if ($length !== this.get$length(receiver))
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
      if (orElse != null)
        return orElse.call$0();
      throw A.wrapException(A.IterableElementError_noElement());
    },
    join$1(receiver, separator) {
      var t1;
      if (this.get$length(receiver) === 0)
        return "";
      t1 = A.StringBuffer__writeAll("", receiver, separator);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join$0(receiver) {
      return this.join$1(receiver, "");
    },
    where$1(receiver, test) {
      return new A.WhereIterable(receiver, test, A.instanceType(receiver)._eval$1("WhereIterable<ListBase.E>"));
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    take$1(receiver, count) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(count, "count", type$.int), A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    toList$1$growable(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$isEmpty(receiver)) {
        t1 = A.instanceType(receiver)._eval$1("ListBase.E");
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      first = _this.$index(receiver, 0);
      result = A.List_List$filled(_this.get$length(receiver), first, growable, A.instanceType(receiver)._eval$1("ListBase.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        result[i] = _this.$index(receiver, i);
      return result;
    },
    toList$0(receiver) {
      return this.toList$1$growable(receiver, true);
    },
    add$1(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    remove$1(receiver, element) {
      var i;
      for (i = 0; i < this.get$length(receiver); ++i)
        if (J.$eq$(this.$index(receiver, i), element)) {
          this._closeGap$2(receiver, i, i + 1);
          return true;
        }
      return false;
    },
    _closeGap$2(receiver, start, end) {
      var i, _this = this,
        $length = _this.get$length(receiver),
        size = end - start;
      for (i = end; i < $length; ++i)
        _this.$indexSet(receiver, i - size, _this.$index(receiver, i));
      _this.set$length(receiver, $length - size);
    },
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    removeLast$0(receiver) {
      var result, _this = this;
      if (_this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      result = _this.$index(receiver, _this.get$length(receiver) - 1);
      _this.set$length(receiver, _this.get$length(receiver) - 1);
      return result;
    },
    sublist$2(receiver, start, end) {
      var listLength = this.get$length(receiver);
      if (end == null)
        end = listLength;
      A.RangeError_checkValidRange(start, end, listLength, null, null);
      return A.List_List$from(this.getRange$2(receiver, start, end), true, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    sublist$1(receiver, start) {
      return this.sublist$2(receiver, start, null);
    },
    getRange$2(receiver, start, end) {
      A.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null);
      return A.SubListIterable$(receiver, start, end, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null);
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherStart, otherList, t1, i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (A.instanceType(receiver)._eval$1("List<ListBase.E>")._is(iterable)) {
        otherStart = skipCount;
        otherList = iterable;
      } else {
        t1 = J.skip$1$ax(iterable, skipCount);
        otherList = t1.toList$1$growable(t1, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      else
        for (i = 0; i < $length; ++i)
          this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    cast$2$0(receiver, RK, RV) {
      var t1 = A.instanceType(receiver);
      return A.Map_castFrom(receiver, t1._eval$1("MapBase.K"), t1._eval$1("MapBase.V"), RK, RV);
    },
    forEach$1(receiver, action) {
      var t1, t2, key, t3;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = A.instanceType(receiver)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        t3 = this.$index(receiver, key);
        action.call$2(key, t3 == null ? t2._as(t3) : t3);
      }
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      var t1;
      if (this.containsKey$1(receiver, key)) {
        t1 = this.$index(receiver, key);
        return t1 == null ? A.instanceType(receiver)._eval$1("MapBase.V")._as(t1) : t1;
      }
      t1 = ifAbsent.call$0();
      this.$indexSet(receiver, key, t1);
      return t1;
    },
    update$3$ifAbsent(receiver, key, update, ifAbsent) {
      var t1, _this = this;
      if (_this.containsKey$1(receiver, key)) {
        t1 = _this.$index(receiver, key);
        t1 = update.call$1(t1 == null ? A.instanceType(receiver)._eval$1("MapBase.V")._as(t1) : t1);
        _this.$indexSet(receiver, key, t1);
        return t1;
      }
      if (ifAbsent != null) {
        t1 = ifAbsent.call$0();
        _this.$indexSet(receiver, key, t1);
        return t1;
      }
      throw A.wrapException(A.ArgumentError$value(key, "key", "Key not in map."));
    },
    update$2(receiver, key, update) {
      return this.update$3$ifAbsent(receiver, key, update, null);
    },
    updateAll$1(receiver, update) {
      var t1, t2, key, t3;
      for (t1 = J.get$iterator$ax(this.get$keys(receiver)), t2 = A.instanceType(receiver)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current(t1);
        t3 = this.$index(receiver, key);
        this.$indexSet(receiver, key, update.call$2(key, t3 == null ? t2._as(t3) : t3));
      }
    },
    get$entries(receiver) {
      return J.map$1$1$ax(this.get$keys(receiver), new A.MapBase_entries_closure(receiver), A.instanceType(receiver)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    addEntries$1(receiver, newEntries) {
      var t1, t2;
      for (t1 = newEntries.get$iterator(newEntries); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        this.$indexSet(receiver, t2.key, t2.value);
      }
    },
    removeWhere$1(receiver, test) {
      var t2, key, t3, _i,
        t1 = A.instanceType(receiver),
        keysToRemove = A._setArrayType([], t1._eval$1("JSArray<MapBase.K>"));
      for (t2 = J.get$iterator$ax(this.get$keys(receiver)), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current(t2);
        t3 = this.$index(receiver, key);
        if (test.call$2(key, t3 == null ? t1._as(t3) : t3))
          keysToRemove.push(key);
      }
      for (t1 = keysToRemove.length, _i = 0; _i < keysToRemove.length; keysToRemove.length === t1 || (0, A.throwConcurrentModificationError)(keysToRemove), ++_i)
        this.remove$1(receiver, keysToRemove[_i]);
    },
    containsKey$1(receiver, key) {
      return J.contains$1$asx(this.get$keys(receiver), key);
    },
    get$length(receiver) {
      return J.get$length$asx(this.get$keys(receiver));
    },
    get$isEmpty(receiver) {
      return J.get$isEmpty$asx(this.get$keys(receiver));
    },
    toString$0(receiver) {
      return A.MapBase_mapToString(receiver);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = J.$index$asx(t1, key);
      if (t2 == null)
        t2 = A.instanceType(t1)._eval$1("MapBase.V")._as(t2);
      return new A.MapEntry(key, t2, A.instanceType(t1)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    $signature() {
      return A.instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = A.S(k);
      t2 = t1._contents += t2;
      t1._contents = t2 + ": ";
      t2 = A.S(v);
      t1._contents += t2;
    },
    $signature: 24
  };
  A._UnmodifiableMapMixin.prototype = {
    $indexSet(_, key, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    remove$1(_, key) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    },
    putIfAbsent$2(_, key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify unmodifiable map"));
    }
  };
  A.MapView.prototype = {
    cast$2$0(_, RK, RV) {
      return J.cast$2$0$ax(this._collection$_map, RK, RV);
    },
    $index(_, key) {
      return J.$index$asx(this._collection$_map, key);
    },
    $indexSet(_, key, value) {
      J.$indexSet$ax(this._collection$_map, key, value);
    },
    putIfAbsent$2(_, key, ifAbsent) {
      return J.putIfAbsent$2$x(this._collection$_map, key, ifAbsent);
    },
    containsKey$1(_, key) {
      return J.containsKey$1$x(this._collection$_map, key);
    },
    forEach$1(_, action) {
      J.forEach$1$ax(this._collection$_map, action);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this._collection$_map);
    },
    get$length(_) {
      return J.get$length$asx(this._collection$_map);
    },
    get$keys(_) {
      return J.get$keys$x(this._collection$_map);
    },
    remove$1(_, key) {
      return J.remove$1$ax(this._collection$_map, key);
    },
    toString$0(_) {
      return J.toString$0$(this._collection$_map);
    },
    get$entries(_) {
      return J.get$entries$x(this._collection$_map);
    },
    $isMap: 1
  };
  A.UnmodifiableMapView.prototype = {
    cast$2$0(_, RK, RV) {
      return new A.UnmodifiableMapView(J.cast$2$0$ax(this._collection$_map, RK, RV), RK._eval$1("@<0>")._bind$1(RV)._eval$1("UnmodifiableMapView<1,2>"));
    }
  };
  A._DoubleLinkedQueueEntry.prototype = {
    _link$2(previous, next) {
      var _this = this;
      _this._nextLink = next;
      _this._previousLink = previous;
      if (previous != null)
        previous._nextLink = _this;
      if (next != null)
        next._previousLink = _this;
    },
    _unlink$0() {
      var t2, _this = this,
        t1 = _this._previousLink;
      if (t1 != null)
        t1._nextLink = _this._nextLink;
      t2 = _this._nextLink;
      if (t2 != null)
        t2._previousLink = t1;
      _this._previousLink = _this._nextLink = null;
    }
  };
  A._DoubleLinkedQueueElement.prototype = {
    _remove$0(_) {
      var t1, t2, _this = this;
      _this._collection$_queue = null;
      t1 = _this._previousLink;
      if (t1 != null)
        t1._nextLink = _this._nextLink;
      t2 = _this._nextLink;
      if (t2 != null)
        t2._previousLink = t1;
      _this._previousLink = _this._nextLink = null;
      return _this.element;
    },
    remove$0(_) {
      var _this = this,
        t1 = _this._collection$_queue;
      if (t1 != null)
        --t1._elementCount;
      _this._collection$_queue = null;
      _this._unlink$0();
      return _this.element;
    },
    _asNonSentinelEntry$0() {
      return this;
    },
    $isDoubleLinkedQueueEntry: 1,
    get$element() {
      return this.element;
    }
  };
  A._DoubleLinkedQueueSentinel.prototype = {
    _asNonSentinelEntry$0() {
      return null;
    },
    _remove$0(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$element() {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.DoubleLinkedQueue.prototype = {
    get$length(_) {
      return this._elementCount;
    },
    addFirst$1(value) {
      var t1 = this._sentinel;
      new A._DoubleLinkedQueueElement(this, value, t1.$ti._eval$1("_DoubleLinkedQueueElement<1>"))._link$2(t1, t1._nextLink);
      ++this._elementCount;
    },
    removeLast$0(_) {
      var result = this._sentinel._previousLink._remove$0(0);
      --this._elementCount;
      return result;
    },
    get$first(_) {
      return this._sentinel._nextLink.get$element();
    },
    get$single(_) {
      var t1 = this._sentinel,
        t2 = t1._nextLink;
      if (t2 == t1._previousLink)
        return t2.get$element();
      throw A.wrapException(A.IterableElementError_tooMany());
    },
    get$isEmpty(_) {
      var t1 = this._sentinel;
      return t1._nextLink === t1;
    },
    get$iterator(_) {
      return new A._DoubleLinkedQueueIterator(this, this._sentinel._nextLink, this.$ti._eval$1("_DoubleLinkedQueueIterator<1>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    $isEfficientLengthIterable: 1
  };
  A._DoubleLinkedQueueIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._nextEntry,
        nextElement = t1 == null ? null : t1._asNonSentinelEntry$0();
      if (nextElement == null) {
        _this._collection$_queue = _this._nextEntry = _this._collection$_current = null;
        return false;
      }
      t1 = _this._collection$_queue;
      if (t1 != nextElement._collection$_queue)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      _this._collection$_current = nextElement.element;
      _this._nextEntry = nextElement._nextLink;
      return true;
    },
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    }
  };
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    forEach$1(_, f) {
      var i, t1, t2, _this = this,
        modificationCount = _this._modificationCount;
      for (i = _this._head, t1 = _this.$ti._precomputed1; i !== _this._tail; i = (i + 1 & _this._table.length - 1) >>> 0) {
        t2 = _this._table[i];
        f.call$1(t2 == null ? t1._as(t2) : t2);
        if (modificationCount !== _this._modificationCount)
          A.throwExpression(A.ConcurrentModificationError$(_this));
      }
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = _this._table[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    get$single(_) {
      var t1, _this = this;
      if (_this._head === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      if (_this.get$length(0) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      t1 = _this._table[_this._head];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var t1, _this = this;
      A.IndexError_check(index, _this.get$length(0), _this, null, null);
      t1 = _this._table;
      t1 = t1[(_this._head + index & t1.length - 1) >>> 0];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    toList$1$growable(_, growable) {
      var t1, list, t2, t3, i, t4, _this = this,
        mask = _this._table.length - 1,
        $length = (_this._tail - _this._head & mask) >>> 0;
      if ($length === 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      t1 = _this.$ti._precomputed1;
      list = A.List_List$filled($length, _this.get$first(0), growable, t1);
      for (t2 = _this._table, t3 = _this._head, i = 0; i < $length; ++i) {
        t4 = t2[(t3 + i & mask) >>> 0];
        list[i] = t4 == null ? t1._as(t4) : t4;
      }
      return list;
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    addAll$1(_, elements) {
      var addCount, $length, t2, t3, t4, newTable, endSpace, preSpace, _this = this,
        t1 = _this.$ti;
      if (t1._eval$1("List<1>")._is(elements)) {
        addCount = elements.length;
        $length = _this.get$length(0);
        t2 = $length + addCount;
        t3 = _this._table;
        t4 = t3.length;
        if (t2 >= t4) {
          newTable = A.List_List$filled(A.ListQueue__nextPowerOf2(t2 + (t2 >>> 1)), null, false, t1._eval$1("1?"));
          _this._tail = _this._writeToList$1(newTable);
          _this._table = newTable;
          _this._head = 0;
          B.JSArray_methods.setRange$4(newTable, $length, t2, elements, 0);
          _this._tail += addCount;
        } else {
          t1 = _this._tail;
          endSpace = t4 - t1;
          if (addCount < endSpace) {
            B.JSArray_methods.setRange$4(t3, t1, t1 + addCount, elements, 0);
            _this._tail += addCount;
          } else {
            preSpace = addCount - endSpace;
            B.JSArray_methods.setRange$4(t3, t1, t1 + endSpace, elements, 0);
            B.JSArray_methods.setRange$4(_this._table, 0, preSpace, elements, endSpace);
            _this._tail = preSpace;
          }
        }
        ++_this._modificationCount;
      } else
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          _this._collection$_add$1(0, t1.get$current(t1));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    removeFirst$0() {
      var t2, result, _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      ++_this._modificationCount;
      t2 = _this._table;
      result = t2[t1];
      if (result == null)
        result = _this.$ti._precomputed1._as(result);
      t2[t1] = null;
      _this._head = (t1 + 1 & t2.length - 1) >>> 0;
      return result;
    },
    _collection$_add$1(_, element) {
      var _this = this,
        t1 = _this._table,
        t2 = _this._tail;
      t1[t2] = element;
      t1 = (t2 + 1 & t1.length - 1) >>> 0;
      _this._tail = t1;
      if (_this._head === t1)
        _this._grow$0();
      ++_this._modificationCount;
    },
    _grow$0() {
      var _this = this,
        newTable = A.List_List$filled(_this._table.length * 2, null, false, _this.$ti._eval$1("1?")),
        t1 = _this._table,
        t2 = _this._head,
        split = t1.length - t2;
      B.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
      B.JSArray_methods.setRange$4(newTable, split, split + _this._head, _this._table, 0);
      _this._head = 0;
      _this._tail = _this._table.length;
      _this._table = newTable;
    },
    _writeToList$1(target) {
      var $length, firstPartSize, _this = this,
        t1 = _this._head,
        t2 = _this._tail,
        t3 = _this._table;
      if (t1 <= t2) {
        $length = t2 - t1;
        B.JSArray_methods.setRange$4(target, 0, $length, t3, t1);
        return $length;
      } else {
        firstPartSize = t3.length - t1;
        B.JSArray_methods.setRange$4(target, 0, firstPartSize, t3, t1);
        B.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + _this._tail, _this._table, 0);
        return _this._tail + firstPartSize;
      }
    }
  };
  A._ListQueueIterator.prototype = {
    get$current(_) {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._collection$_queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._collection$_position;
      if (t2 === _this._end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      _this._collection$_current = t1[t2];
      _this._collection$_position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    clear$0(_) {
      this.removeAll$1(this.toList$0(0));
    },
    addAll$1(_, elements) {
      var t1;
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        this.add$1(0, t1.get$current(t1));
    },
    removeAll$1(elements) {
      var t1, _i;
      for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, A.throwConcurrentModificationError)(elements), ++_i)
        this.remove$1(0, elements[_i]);
    },
    intersection$1(_, other) {
      var t1, element,
        result = this.toSet$0(0);
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.remove$1(0, element);
      }
      return result;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._precomputed1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    map$1$1(_, f, $T) {
      return new A.EfficientLengthMappedIterable(this, f, A._instanceType(this)._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    get$single(_) {
      var it, _this = this;
      if (_this.get$length(_this) > 1)
        throw A.wrapException(A.IterableElementError_tooMany());
      it = _this.get$iterator(_this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    forEach$1(_, f) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        f.call$1(t1.get$current(t1));
    },
    any$1(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    take$1(_, n) {
      return A.TakeIterable_TakeIterable(this, n, A._instanceType(this)._precomputed1);
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {
    difference$1(other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (!other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    intersection$1(_, other) {
      var t1, element,
        result = this._newSet$0();
      for (t1 = this.get$iterator(this); t1.moveNext$0();) {
        element = t1.get$current(t1);
        if (other.contains$1(0, element))
          result.add$1(0, element);
      }
      return result;
    },
    toSet$0(_) {
      var t1 = this._newSet$0();
      t1.addAll$1(0, this);
      return t1;
    }
  };
  A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$keys(_) {
      var t1;
      if (this._processed == null) {
        t1 = this._convert$_data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(0, key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(_, key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(0, key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    putIfAbsent$2(_, key, ifAbsent) {
      var value;
      if (this.containsKey$1(0, key))
        return this.$index(0, key);
      value = ifAbsent.call$0();
      this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      if (this._processed != null && !this.containsKey$1(0, key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = this._convert$_data;
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push("");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._convert$_parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._convert$_parent;
      return t1._processed == null ? t1.get$keys(0).elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator(_) {
      var t1 = this._convert$_parent;
      if (t1._processed == null) {
        t1 = t1.get$keys(0);
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    },
    contains$1(_, key) {
      return this._convert$_parent.containsKey$1(0, key);
    }
  };
  A._JsonDecoderSink.prototype = {
    close$0(_) {
      var t1, t2, _this = this;
      _this.super$_StringSinkConversionSink$close(0);
      t1 = _this._stringSink;
      t2 = t1._contents;
      t1._contents = "";
      t1 = _this._sink;
      t1.add$1(0, A._parseJson(t2.charCodeAt(0) == 0 ? t2 : t2, _this._reviver));
      t1.close$0(0);
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 78
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 78
  };
  A.Base64Codec.prototype = {
    normalize$3(_, source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length, _null = null,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length, _null, _null);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = _null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            digit2 = A.hexDigitValue(source.charCodeAt(i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = string$.ABCDEF.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? _null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2 = A.Primitives_stringFromCharCode(char);
            t1._contents += t2;
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = B.JSString_methods.substring$2(source, sliceStart, end);
        t1 = buffer._contents += t1;
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    startChunkedConversion$1(sink) {
      var _s64_ = string$.ABCDEF;
      if (type$.StringConversionSink._is(sink))
        return new A._Utf8Base64EncoderSink(new A._Utf8StringSinkAdapter(new A._Utf8Decoder(false), sink, sink._stringSink), new A._Base64Encoder(_s64_));
      return new A._AsciiBase64EncoderSink(sink, new A._BufferCachingBase64Encoder(_s64_));
    }
  };
  A._Base64Encoder.prototype = {
    createBuffer$1(_, bufferLength) {
      return new Uint8Array(bufferLength);
    },
    encode$4(bytes, start, end, isLast) {
      var output, _this = this,
        byteCount = (_this._convert$_state & 3) + (end - start),
        fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3),
        bufferLength = fullChunks * 4;
      if (isLast && byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = _this.createBuffer$1(0, bufferLength);
      _this._convert$_state = A._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A._BufferCachingBase64Encoder.prototype = {
    createBuffer$1(_, bufferLength) {
      var buffer = this.bufferCache;
      if (buffer == null || buffer.length < bufferLength)
        buffer = this.bufferCache = new Uint8Array(bufferLength);
      return A.NativeUint8List_NativeUint8List$view(buffer.buffer, buffer.byteOffset, bufferLength);
    }
  };
  A._Base64EncoderSink.prototype = {
    add$1(_, source) {
      this._convert$_add$4(0, source, 0, J.get$length$asx(source), false);
    },
    close$0(_) {
      this._convert$_add$4(0, B.List_empty0, 0, 0, true);
    }
  };
  A._AsciiBase64EncoderSink.prototype = {
    _convert$_add$4(_, source, start, end, isLast) {
      var buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        this._sink.add$1(0, A.String_String$fromCharCodes(buffer, 0, null));
      if (isLast)
        this._sink.close$0(0);
    }
  };
  A._Utf8Base64EncoderSink.prototype = {
    _convert$_add$4(_, source, start, end, isLast) {
      var buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        this._sink.addSlice$4(buffer, 0, buffer.length, isLast);
    }
  };
  A.ByteConversionSink.prototype = {};
  A._ByteAdapterSink.prototype = {
    add$1(_, chunk) {
      this._sink.add$1(0, chunk);
    },
    close$0(_) {
      this._sink.close$0(0);
    }
  };
  A.ChunkedConversionSink.prototype = {};
  A._SimpleCallbackSink.prototype = {
    add$1(_, chunk) {
      this._accumulated.push(chunk);
    },
    close$0(_) {
      this._convert$_callback.call$1(this._accumulated);
    }
  };
  A.Codec.prototype = {};
  A.Converter.prototype = {
    fuse$1$1(other, TT) {
      return new A._FusedConverter(this, other, A._instanceType(this)._eval$1("@<Converter.S,Converter.T>")._bind$1(TT)._eval$1("_FusedConverter<1,2,3>"));
    },
    startChunkedConversion$1(sink) {
      throw A.wrapException(A.UnsupportedError$("This converter does not support chunked conversions: " + this.toString$0(0)));
    }
  };
  A._FusedConverter.prototype = {
    startChunkedConversion$1(sink) {
      return this._convert$_first.startChunkedConversion$1(new A._JsonDecoderSink(this._second._reviver, sink, new A.StringBuffer("")));
    }
  };
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$2$reviver(_, source, reviver) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    decode$1(_, source) {
      return this.decode$2$reviver(0, source, null);
    },
    encode$2$toEncodable(value, toEncodable) {
      var t1;
      if (toEncodable == null)
        toEncodable = null;
      if (toEncodable == null) {
        t1 = this.get$encoder();
        return A._JsonStringStringifier_stringify(value, t1._toEncodable, t1.indent);
      }
      return A._JsonStringStringifier_stringify(value, toEncodable, null);
    },
    encode$1(value) {
      return this.encode$2$toEncodable(value, null);
    },
    get$encoder() {
      return B.JsonEncoder_null_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    startChunkedConversion$1(sink) {
      var t1 = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      return new A._JsonEncoderSink(this.indent, this._toEncodable, t1);
    }
  };
  A._JsonEncoderSink.prototype = {
    add$1(_, o) {
      var stringSink, _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("Only one call to add allowed"));
      _this._isDone = true;
      stringSink = _this._sink.asStringSink$0();
      A._JsonStringStringifier_printOn(o, stringSink, _this._toEncodable, _this._indent);
      stringSink.close$0(0);
    },
    close$0(_) {
    }
  };
  A.JsonDecoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonDecoderSink(this._reviver, sink, new A.StringBuffer(""));
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (s.charCodeAt(t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (s.charCodeAt(t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t2; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        _this.writeObject$1(keyValueList[i + 1]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 24
  };
  A._JsonPrettyPrintMixin.prototype = {
    writeList$1(list) {
      var i, _this = this,
        t1 = J.getInterceptor$asx(list);
      if (t1.get$isEmpty(list))
        _this.writeString$1("[]");
      else {
        _this.writeString$1("[\n");
        _this.writeIndentation$1(++_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",\n");
          _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
          _this.writeObject$1(t1.$index(list, i));
        }
        _this.writeString$1("\n");
        _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1("]");
      }
    },
    writeMap$1(map) {
      var t2, keyValueList, i, separator, _this = this, _box_0 = {},
        t1 = J.getInterceptor$asx(map);
      if (t1.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t2 = t1.get$length(map) * 2;
      keyValueList = A.List_List$filled(t2, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      t1.forEach$1(map, new A._JsonPrettyPrintMixin_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{\n");
      ++_this._JsonPrettyPrintMixin__indentLevel;
      for (separator = ""; i < t2; i += 2, separator = ",\n") {
        _this.writeString$1(separator);
        _this.writeIndentation$1(_this._JsonPrettyPrintMixin__indentLevel);
        _this.writeString$1('"');
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('": ');
        _this.writeObject$1(keyValueList[i + 1]);
      }
      _this.writeString$1("\n");
      _this.writeIndentation$1(--_this._JsonPrettyPrintMixin__indentLevel);
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonPrettyPrintMixin_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 24
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink;
      return t1 instanceof A.StringBuffer ? t1.toString$0(0) : null;
    },
    writeNumber$1(number) {
      this._sink.write$1(0, B.JSNumber_methods.toString$0(number));
    },
    writeString$1(string) {
      this._sink.write$1(0, string);
    },
    writeStringSlice$3(string, start, end) {
      this._sink.write$1(0, B.JSString_methods.substring$2(string, start, end));
    },
    writeCharCode$1(charCode) {
      this._sink.writeCharCode$1(charCode);
    }
  };
  A._JsonStringStringifierPretty.prototype = {
    writeIndentation$1(count) {
      var t1, t2, i;
      for (t1 = this._indent, t2 = this._sink, i = 0; i < count; ++i)
        t2.write$1(0, t1);
    }
  };
  A.StringConversionSink.prototype = {
    add$1(_, str) {
      this.addSlice$4(str, 0, str.length, false);
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8ConversionSink(new A._Utf8Decoder(allowMalformed), this, new A.StringBuffer(""));
    },
    asStringSink$0() {
      return new A._StringConversionSinkAsStringSinkAdapter(new A.StringBuffer(""), this);
    }
  };
  A._ClosableStringSink.prototype = {
    close$0(_) {
      this._convert$_callback.call$0();
    },
    writeCharCode$1(charCode) {
      var t1 = this._sink,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t1._contents += t2;
    },
    write$1(_, o) {
      this._sink._contents += o;
    }
  };
  A._StringConversionSinkAsStringSinkAdapter.prototype = {
    close$0(_) {
      if (this._buffer._contents.length !== 0)
        this._convert$_flush$0();
      this._chunkedSink.close$0(0);
    },
    writeCharCode$1(charCode) {
      var t1 = this._buffer,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t2 = t1._contents += t2;
      if (t2.length > 16)
        this._convert$_flush$0();
    },
    write$1(_, o) {
      if (this._buffer._contents.length !== 0)
        this._convert$_flush$0();
      this._chunkedSink.add$1(0, o);
    },
    _convert$_flush$0() {
      var t1 = this._buffer,
        t2 = t1._contents;
      t1._contents = "";
      this._chunkedSink.add$1(0, t2.charCodeAt(0) == 0 ? t2 : t2);
    }
  };
  A._StringSinkConversionSink.prototype = {
    close$0(_) {
    },
    addSlice$4(str, start, end, isLast) {
      var t1, i, t2;
      if (start !== 0 || end !== str.length)
        for (t1 = this._stringSink, i = start; i < end; ++i) {
          t2 = A.Primitives_stringFromCharCode(str.charCodeAt(i));
          t1._contents += t2;
        }
      else
        this._stringSink._contents += str;
      if (isLast)
        this.close$0(0);
    },
    add$1(_, str) {
      this._stringSink._contents += str;
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8StringSinkAdapter(new A._Utf8Decoder(allowMalformed), this, this._stringSink);
    },
    asStringSink$0() {
      return new A._ClosableStringSink(this.get$close(this), this._stringSink);
    }
  };
  A._StringAdapterSink.prototype = {
    add$1(_, str) {
      this._sink.add$1(0, str);
    },
    addSlice$4(str, start, end, isLast) {
      var t1 = start === 0 && end === str.length,
        t2 = this._sink;
      if (t1)
        t2.add$1(0, str);
      else
        t2.add$1(0, B.JSString_methods.substring$2(str, start, end));
      if (isLast)
        t2.close$0(0);
    },
    close$0(_) {
      this._sink.close$0(0);
    }
  };
  A._Utf8StringSinkAdapter.prototype = {
    close$0(_) {
      this._decoder.flush$1(0, this._stringSink);
      this._sink.close$0(0);
    },
    add$1(_, chunk) {
      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);
    },
    addSlice$4(codeUnits, startIndex, endIndex, isLast) {
      var t1 = this._stringSink,
        t2 = this._decoder._convertGeneral$4(codeUnits, startIndex, endIndex, false);
      t1._contents += t2;
      if (isLast)
        this.close$0(0);
    }
  };
  A._Utf8ConversionSink.prototype = {
    close$0(_) {
      var t2, t3, accumulated,
        t1 = this._buffer;
      this._decoder.flush$1(0, t1);
      t2 = t1._contents;
      t3 = this._chunkedSink;
      if (t2.length !== 0) {
        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;
        t1._contents = "";
        t3.addSlice$4(accumulated, 0, accumulated.length, true);
      } else
        t3.close$0(0);
    },
    add$1(_, chunk) {
      this.addSlice$4(chunk, 0, J.get$length$asx(chunk), false);
    },
    addSlice$4(chunk, startIndex, endIndex, isLast) {
      var accumulated,
        t1 = this._buffer,
        t2 = this._decoder._convertGeneral$4(chunk, startIndex, endIndex, false);
      t2 = t1._contents += t2;
      if (t2.length !== 0) {
        accumulated = t2.charCodeAt(0) == 0 ? t2 : t2;
        this._chunkedSink.addSlice$4(accumulated, 0, accumulated.length, false);
        t1._contents = "";
        return;
      }
    }
  };
  A.Utf8Codec.prototype = {
    decode$2$allowMalformed(_, codeUnits, allowMalformed) {
      return (allowMalformed === true ? B.Utf8Decoder_true : B.Utf8Decoder_false).convert$1(codeUnits);
    },
    decode$1(_, codeUnits) {
      return this.decode$2$allowMalformed(0, codeUnits, null);
    },
    encode$1(string) {
      return B.C_Utf8Encoder.convert$1(string);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var t1, encoder,
        end = A.RangeError_checkValidRange(0, null, string.length, null, null);
      if (end === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array(end * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeReplacementCharacter$0();
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    },
    startChunkedConversion$1(sink) {
      return new A._Utf8EncoderSink(new A._ByteAdapterSink(sink), new Uint8Array(1024));
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (str.charCodeAt(end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A._Utf8EncoderSink.prototype = {
    close$0(_) {
      if (this._carry !== 0) {
        this.addSlice$4("", 0, 0, true);
        return;
      }
      this._sink._sink.close$0(0);
    },
    addSlice$4(str, start, end, isLast) {
      var t1, t2, t3, t4, isLastSlice, _this = this;
      _this._bufferIndex = 0;
      t1 = start === end;
      if (t1 && !isLast)
        return;
      t2 = _this._carry;
      if (t2 !== 0) {
        if (_this._writeSurrogate$2(t2, !t1 ? str.charCodeAt(start) : 0))
          ++start;
        _this._carry = 0;
      }
      t1 = _this._sink;
      t2 = _this._buffer;
      t3 = end - 1;
      t4 = t2.length - 3;
      do {
        start = _this._fillBuffer$3(str, start, end);
        isLastSlice = isLast && start === end;
        if (start === t3 && (str.charCodeAt(start) & 64512) === 55296) {
          if (isLast && _this._bufferIndex < t4)
            _this._writeReplacementCharacter$0();
          else
            _this._carry = str.charCodeAt(start);
          ++start;
        }
        t1.add$1(0, B.NativeUint8List_methods.sublist$2(t2, 0, _this._bufferIndex));
        if (isLastSlice)
          t1.close$0(0);
        _this._bufferIndex = 0;
      } while (start < end);
      if (isLast)
        _this.close$0(0);
    }
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(codeUnits, 0, null, true);
    },
    startChunkedConversion$1(sink) {
      var stringSink = type$.StringConversionSink._is(sink) ? sink : new A._StringAdapterSink(sink);
      return stringSink.asUtf8Sink$1(this._allowMalformed);
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var casted, bytes, errorOffset, t1, result, message, _this = this,
        end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits), null, null);
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (single && end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, single);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    flush$1(_, sink) {
      var t1,
        state = this._convert$_state;
      this._convert$_state = 0;
      if (state <= 32)
        return;
      if (this.allowMalformed) {
        t1 = A.Primitives_stringFromCharCode(65533);
        sink._contents += t1;
      } else
        throw A.wrapException(A.FormatException$(A._Utf8Decoder_errorDescription(77), null, null));
    },
    decodeGeneral$4(bytes, start, end, single) {
      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        byte = bytes[start];
      $label0$0:
        for (t1 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE".charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA".charCodeAt(state + type);
            if (state === 0) {
              t2 = A.Primitives_stringFromCharCode(char);
              buffer._contents += t2;
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t1)
                switch (state) {
                  case 69:
                  case 67:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    break;
                  case 65:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    --i;
                    break;
                  default:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    t2 = buffer._contents += t2;
                    buffer._contents = t2 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            byte = bytes[i];
          }
          i0 = i + 1;
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                t2 = A.Primitives_stringFromCharCode(bytes[m]);
                buffer._contents += t2;
              }
            else {
              t2 = A.String_String$fromCharCodes(bytes, i, markEnd);
              buffer._contents += t2;
            }
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t1) {
          t1 = A.Primitives_stringFromCharCode(_65533);
          buffer._contents += t1;
        } else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin.prototype = {};
  A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink.prototype = {};
  A._Uri__makeQueryFromParameters_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (typeof value == "string")
        this.params.set(key, value);
      else if (value == null)
        this.params.set(key, "");
      else
        for (t1 = J.get$iterator$ax(value), t2 = this.params; t1.moveNext$0();) {
          value = t1.get$current(t1);
          if (typeof value == "string")
            t2.append(key, value);
          else if (value == null)
            t2.append(key, "");
          else
            A._asStringQ(value);
        }
    },
    $signature: 13
  };
  A.DateTime.prototype = {
    _addMicroseconds$1(durationMicroseconds) {
      var _1000 = 1000,
        durationLo = B.JSInt_methods.$mod(durationMicroseconds, _1000),
        durationHi = B.JSInt_methods._tdivFast$1(durationMicroseconds - durationLo, _1000),
        sumLo = this._microsecond + durationLo,
        microsecond = B.JSInt_methods.$mod(sumLo, _1000),
        t1 = this.isUtc;
      return new A.DateTime(A.DateTime__validate(this._core$_value + B.JSInt_methods._tdivFast$1(sumLo - microsecond, _1000) + durationHi, microsecond, t1), microsecond, t1);
    },
    difference$1(other) {
      return A.Duration$(0, 0, this._microsecond - other._microsecond, this._core$_value - other._core$_value, 0, 0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && this._microsecond === other._microsecond && this.isUtc === other.isUtc;
    },
    get$hashCode(_) {
      return A.Object_hash(this._core$_value, this._microsecond, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    isBefore$1(other) {
      var t1 = this._core$_value,
        t2 = other._core$_value;
      if (t1 >= t2)
        t1 = t1 === t2 && this._microsecond < other._microsecond;
      else
        t1 = true;
      return t1;
    },
    isAfter$1(other) {
      var t1 = this._core$_value,
        t2 = other._core$_value;
      if (t1 <= t2)
        t1 = t1 === t2 && this._microsecond > other._microsecond;
      else
        t1 = true;
      return t1;
    },
    compareTo$1(_, other) {
      var r = B.JSInt_methods.compareTo$1(this._core$_value, other._core$_value);
      if (r !== 0)
        return r;
      return B.JSInt_methods.compareTo$1(this._microsecond, other._microsecond);
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = _this._microsecond,
        us = t1 === 0 ? "" : A.DateTime__threeDigits(t1);
      t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us;
    }
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    compareTo$1(_, other) {
      return B.JSInt_methods.compareTo$1(this._duration, other._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    }
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.Primitives_extractStackTrace(this);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    },
    get$message(receiver) {
      return this.message;
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      var message = this.message;
      return message != null ? "UnimplementedError: " + message : "UnimplementedError";
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      var message = this.message;
      if (message == null)
        return "Exception";
      return "Exception: " + A.S(message);
    },
    $isException: 1
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, prefix, postfix, end, start,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        prefix = "";
        if (lineEnd - lineStart > 78) {
          postfix = "...";
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
            }
            prefix = "...";
          }
        } else {
          end = lineEnd;
          start = lineStart;
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    },
    $isException: 1
  };
  A.Iterable.prototype = {
    cast$1$0(_, $R) {
      return A.CastIterable_CastIterable(this, A.instanceType(this)._eval$1("Iterable.E"), $R);
    },
    followedBy$1(_, other) {
      var _this = this,
        t1 = A.instanceType(_this);
      if (t1._eval$1("EfficientLengthIterable<Iterable.E>")._is(_this))
        return A.FollowedByIterable_FollowedByIterable$firstEfficient(_this, other, t1._eval$1("Iterable.E"));
      return new A.FollowedByIterable(_this, other, t1._eval$1("FollowedByIterable<Iterable.E>"));
    },
    map$1$1(_, toElement, $T) {
      return A.MappedIterable_MappedIterable(this, toElement, A.instanceType(this)._eval$1("Iterable.E"), $T);
    },
    where$1(_, test) {
      return new A.WhereIterable(this, test, A.instanceType(this)._eval$1("WhereIterable<Iterable.E>"));
    },
    contains$1(_, element) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (J.$eq$(t1.get$current(t1), element))
          return true;
      return false;
    },
    forEach$1(_, action) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        action.call$1(t1.get$current(t1));
    },
    join$1(_, separator) {
      var first, t1,
        iterator = this.get$iterator(this);
      if (!iterator.moveNext$0())
        return "";
      first = J.toString$0$(iterator.get$current(iterator));
      if (!iterator.moveNext$0())
        return first;
      if (separator.length === 0) {
        t1 = first;
        do
          t1 += J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      } else {
        t1 = first;
        do
          t1 = t1 + separator + J.toString$0$(iterator.get$current(iterator));
        while (iterator.moveNext$0());
      }
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    join$0(_) {
      return this.join$1(0, "");
    },
    any$1(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current(t1)))
          return true;
      return false;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A.instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    },
    toSet$0(_) {
      return A.LinkedHashSet_LinkedHashSet$of(this, A.instanceType(this)._eval$1("Iterable.E"));
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    take$1(_, count) {
      return A.TakeIterable_TakeIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A.instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current(it);
    },
    get$last(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      do
        result = it.get$current(it);
      while (it.moveNext$0());
      return result;
    },
    get$single(_) {
      var result,
        it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      result = it.get$current(it);
      if (it.moveNext$0())
        throw A.wrapException(A.IterableElementError_tooMany());
      return result;
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current(iterator);
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.Stopwatch.prototype = {
    get$elapsedMicroseconds() {
      var ticks = this.get$elapsedTicks();
      if ($.$get$Stopwatch__frequency() === 1000000)
        return ticks;
      return ticks * 1000;
    },
    start$0(_) {
      var _this = this,
        $stop = _this._stop;
      if ($stop != null) {
        _this._core$_start = _this._core$_start + ($.Primitives_timerTicks.call$0() - $stop);
        _this._stop = null;
      }
    },
    reset$0(_) {
      var t1 = this._stop;
      this._core$_start = t1 == null ? $.Primitives_timerTicks.call$0() : t1;
    },
    get$elapsedTicks() {
      var t1 = this._stop;
      if (t1 == null)
        t1 = $.Primitives_timerTicks.call$0();
      return t1 - this._core$_start;
    }
  };
  A.RuneIterator.prototype = {
    get$current(_) {
      return this._currentCodePoint;
    },
    moveNext$0() {
      var codeUnit, nextPosition, nextCodeUnit, _this = this,
        t1 = _this._core$_position = _this._nextPosition,
        t2 = _this.string,
        t3 = t2.length;
      if (t1 === t3) {
        _this._currentCodePoint = -1;
        return false;
      }
      codeUnit = t2.charCodeAt(t1);
      nextPosition = t1 + 1;
      if ((codeUnit & 64512) === 55296 && nextPosition < t3) {
        nextCodeUnit = t2.charCodeAt(nextPosition);
        if ((nextCodeUnit & 64512) === 56320) {
          _this._nextPosition = nextPosition + 1;
          _this._currentCodePoint = A._combineSurrogatePair(codeUnit, nextCodeUnit);
          return true;
        }
      }
      _this._nextPosition = nextPosition;
      _this._currentCodePoint = codeUnit;
      return true;
    }
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    write$1(_, obj) {
      var t1 = A.S(obj);
      this._contents += t1;
    },
    writeCharCode$1(charCode) {
      var t1 = A.Primitives_stringFromCharCode(charCode);
      this._contents += t1;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 91
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 92
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 93
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && pathToSplit.charCodeAt(0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), A.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$queryParametersAll() {
      var t1, result, _this = this,
        value = _this.___Uri_queryParametersAll_FI;
      if (value === $) {
        t1 = _this._query;
        result = A._Uri__computeQueryParametersAll(t1 == null ? "" : t1);
        _this.___Uri_queryParametersAll_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_queryParametersAll_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host(_) {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port(_) {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query(_) {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasScheme() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host(0) === other.get$host(other))
                if (_this.get$port(0) === other.get$port(other))
                  if (_this.path === other.get$path(other)) {
                    t2 = _this._query;
                    t3 = t2 == null;
                    if (!t3 === other.get$hasQuery()) {
                      if (t3)
                        t2 = "";
                      if (t2 === other.get$query(other)) {
                        t2 = _this._fragment;
                        t3 = t2 == null;
                        if (!t3 === other.get$hasFragment()) {
                          t1 = t3 ? "" : t2;
                          t1 = t1 === other.get$fragment();
                        }
                      }
                    }
                  }
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path(receiver) {
      return this.path;
    }
  };
  A._Uri__makeQueryFromParametersDefault_writeParameter.prototype = {
    call$2(key, value) {
      var t1 = this.result,
        t2 = this._box_0;
      t1._contents += t2.separator;
      t2.separator = "&";
      t2 = A._Uri__uriEncode(B.List_piR, key, B.C_Utf8Codec, true);
      t2 = t1._contents += t2;
      if (value != null && value.length !== 0) {
        t1._contents = t2 + "=";
        t2 = A._Uri__uriEncode(B.List_piR, value, B.C_Utf8Codec, true);
        t1._contents += t2;
      }
    },
    $signature: 94
  };
  A._Uri__makeQueryFromParametersDefault_closure.prototype = {
    call$2(key, value) {
      var t1, t2;
      if (value == null || typeof value == "string")
        this.writeParameter.call$2(key, value);
      else
        for (t1 = J.get$iterator$ax(value), t2 = this.writeParameter; t1.moveNext$0();)
          t2.call$2(key, t1.get$current(t1));
    },
    $signature: 13
  };
  A._Uri__splitQueryStringAll_parsePair.prototype = {
    call$3(start, equalsIndex, end) {
      var t1, t2, key, value;
      if (start === end)
        return;
      t1 = this.query;
      t2 = this.encoding;
      if (equalsIndex < 0) {
        key = A._Uri__uriDecode(t1, start, end, t2, true);
        value = "";
      } else {
        key = A._Uri__uriDecode(t1, start, equalsIndex, t2, true);
        value = A._Uri__uriDecode(t1, equalsIndex + 1, end, t2, true);
      }
      J.add$1$ax(this.result.putIfAbsent$2(0, key, A.core__Uri__createList$closure()), value);
    },
    $signature: 95
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._text;
        t2 = _this._separatorIndices[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t1, "?", t2);
        end = t1.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, B.List_42A, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t1, t2, end, B.List_M2I, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 96
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i;
      for (t1 = chars.length, i = 0; i < t1; ++i)
        target[chars.charCodeAt(i) ^ 96] = transition;
    },
    $signature: 77
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n;
      for (i = range.charCodeAt(0), n = range.charCodeAt(1); i <= n; ++i)
        target[(i ^ 96) >>> 0] = transition;
    },
    $signature: 77
  };
  A._SimpleUri.prototype = {
    get$hasScheme() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasPort() {
      return this._hostStart > 0 && this._portStart + 1 < this._pathStart;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host(_) {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port(_) {
      var t1, _this = this;
      if (_this.get$hasPort())
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path(_) {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query(_) {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (t1.charCodeAt(i) === 47) {
          parts.push(B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    get$queryParametersAll() {
      if (this._queryStart >= this._fragmentStart)
        return B.Map_empty;
      var queryParameterLists = A._Uri__splitQueryStringAll(this.get$query(0));
      queryParameterLists.updateAll$1(queryParameterLists, A.core___toUnmodifiableStringList$closure());
      return A.ConstantMap_ConstantMap$from(queryParameterLists, type$.String, type$.List_String);
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.Expando.prototype = {
    $indexSet(_, object, value) {
      if (object instanceof A._Record)
        A.Expando__badExpandoKey(object);
      this._jsWeakMap.set(object, value);
    },
    toString$0(_) {
      return "Expando:null";
    }
  };
  A._performance_closure.prototype = {
    call$0() {
      var value = self.performance;
      if (value != null && A.JSAnyUtilityExtension_instanceOfString(value, "Object")) {
        type$.JSObject._as(value);
        if (value.measure != null && value.mark != null)
          return value;
      }
      return null;
    },
    $signature: 98
  };
  A._json_closure.prototype = {
    call$0() {
      var value = self.JSON;
      if (value != null && A.JSAnyUtilityExtension_instanceOfString(value, "Object"))
        return type$.JSObject._as(value);
      throw A.wrapException(A.UnsupportedError$("Missing JSON.parse() support"));
    },
    $signature: 44
  };
  A._FakeUserTag.prototype = {};
  A.ServiceExtensionResponse.prototype = {};
  A.TimelineTask.prototype = {
    start$2$arguments(_, $name, $arguments) {
      var block, t1, map, key, _this = this;
      A.ArgumentError_checkNotNull($name, "name");
      if ($.$get$_performance() == null) {
        _this._stack.push(null);
        return;
      }
      block = new A._AsyncBlock($name, _this._taskId);
      _this._stack.push(block);
      t1 = type$.nullable_Object;
      map = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      if ($arguments != null)
        for (t1 = A.LinkedHashMapKeyIterator$($arguments, $arguments._modifications, A._instanceType($arguments)._precomputed1); t1.moveNext$0();) {
          key = t1.__js_helper$_current;
          map.$indexSet(0, key, $arguments.$index(0, key));
        }
      t1 = _this._developer$_parent;
      if (t1 != null)
        map.$indexSet(0, "parentId", B.JSInt_methods.toRadixString$1(t1._taskId, 16));
      t1 = _this._filterKey;
      if (t1 != null)
        map.$indexSet(0, "filterKey", t1);
      A._reportTaskEvent(block._taskId, -1, 5, block.name, A._argumentsAsJson(map));
    },
    start$1(_, $name) {
      return this.start$2$arguments(0, $name, null);
    },
    finish$1$arguments(_, $arguments) {
      var t2, t3, block,
        t1 = this._stack;
      if (t1.length === 0)
        throw A.wrapException(A.StateError$("Uneven calls to start and finish"));
      t2 = this._filterKey;
      if (t2 != null) {
        if ($arguments == null) {
          t3 = type$.dynamic;
          $arguments = A.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
        }
        $arguments.$indexSet(0, "filterKey", t2);
      }
      block = t1.pop();
      if (block == null)
        return;
      A._reportTaskEvent(block._taskId, -1, 7, block.name, A._argumentsAsJson($arguments));
    },
    finish$0(_) {
      return this.finish$1$arguments(0, null);
    }
  };
  A._AsyncBlock.prototype = {};
  A._SyncBlock.prototype = {
    get$_jsonArguments() {
      var result, _this = this,
        value = _this.___SyncBlock__jsonArguments_FI;
      if (value === $) {
        result = A._argumentsAsJson(_this.$arguments);
        _this.___SyncBlock__jsonArguments_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___SyncBlock__jsonArguments_FI = result;
        value = result;
      }
      return value;
    }
  };
  A.HtmlElement.prototype = {};
  A.AccessibleNodeList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AnchorElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.AreaElement.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.Blob.prototype = {};
  A.CharacterData.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssPerspective.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssRule.prototype = {$isCssRule: 1};
  A.CssStyleDeclaration.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.CssStyleDeclarationBase.prototype = {};
  A.CssStyleValue.prototype = {};
  A.CssTransformComponent.prototype = {};
  A.CssTransformValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.CssUnparsedValue.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.DataTransferItemList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.DomException0.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.DomRectList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomRectReadOnly0.prototype = {
    toString$0(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(this.get$width(receiver)) + " x " + A.S(this.get$height(receiver));
    },
    $eq(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = false;
      if (type$.Rectangle_num._is(other)) {
        t2 = receiver.left;
        t2.toString;
        t3 = J.getInterceptor$x(other);
        if (t2 === t3.get$left(other)) {
          t1 = receiver.top;
          t1.toString;
          t1 = t1 === t3.get$top(other) && this.get$width(receiver) === t3.get$width(other) && this.get$height(receiver) === t3.get$height(other);
        }
      }
      return t1;
    },
    get$hashCode(receiver) {
      var t2,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      return A.Object_hash(t1, t2, this.get$width(receiver), this.get$height(receiver), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = this.get$_height(receiver);
      t1.toString;
      return t1;
    },
    get$left(receiver) {
      var t1 = receiver.left;
      t1.toString;
      return t1;
    },
    get$top(receiver) {
      var t1 = receiver.top;
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = this.get$_width(receiver);
      t1.toString;
      return t1;
    },
    $isRectangle: 1
  };
  A.DomStringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.DomTokenList0.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.Element.prototype = {
    toString$0(receiver) {
      var t1 = receiver.localName;
      t1.toString;
      return t1;
    }
  };
  A.EventTarget.prototype = {};
  A.File.prototype = {$isFile: 1};
  A.FileList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.FileWriter.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.FormElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Gamepad.prototype = {$isGamepad: 1};
  A.History.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.HtmlCollection.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Location.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.MediaList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.MidiInputMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiInputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiInputMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 13
  };
  A.MidiOutputMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.MidiOutputMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.MidiOutputMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 13
  };
  A.MimeType.prototype = {$isMimeType: 1};
  A.MimeTypeArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Node.prototype = {
    toString$0(receiver) {
      var value = receiver.nodeValue;
      return value == null ? this.super$Interceptor$toString(receiver) : value;
    },
    $isNode: 1
  };
  A.NodeList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Plugin.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isPlugin: 1
  };
  A.PluginArray.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.RtcStatsReport.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.RtcStatsReport_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.RtcStatsReport_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 13
  };
  A.SelectElement.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.SourceBuffer.prototype = {$isSourceBuffer: 1};
  A.SourceBufferList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechGrammar.prototype = {$isSpeechGrammar: 1};
  A.SpeechGrammarList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.SpeechRecognitionResult.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isSpeechRecognitionResult: 1
  };
  A.Storage.prototype = {
    containsKey$1(receiver, key) {
      return receiver.getItem(A._asString(key)) != null;
    },
    $index(receiver, key) {
      return receiver.getItem(A._asString(key));
    },
    $indexSet(receiver, key, value) {
      receiver.setItem(key, value);
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      var t1;
      if (receiver.getItem(key) == null)
        receiver.setItem(key, ifAbsent.call$0());
      t1 = receiver.getItem(key);
      return t1 == null ? A._asString(t1) : t1;
    },
    remove$1(receiver, key) {
      var value;
      A._asString(key);
      value = receiver.getItem(key);
      receiver.removeItem(key);
      return value;
    },
    forEach$1(receiver, f) {
      var i, key, t1;
      for (i = 0; true; ++i) {
        key = receiver.key(i);
        if (key == null)
          return;
        t1 = receiver.getItem(key);
        t1.toString;
        f.call$2(key, t1);
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.Storage_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      return receiver.key(0) == null;
    },
    $isMap: 1
  };
  A.Storage_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 99
  };
  A.StyleSheet.prototype = {$isStyleSheet: 1};
  A.TextTrack.prototype = {$isTextTrack: 1};
  A.TextTrackCue.prototype = {$isTextTrackCue: 1};
  A.TextTrackCueList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TextTrackList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TimeRanges.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    }
  };
  A.Touch.prototype = {$isTouch: 1};
  A.TouchList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.TrackDefaultList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.Url.prototype = {
    toString$0(receiver) {
      var t1 = String(receiver);
      t1.toString;
      return t1;
    }
  };
  A.VideoTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._CssRuleList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._DomRect.prototype = {
    toString$0(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return "Rectangle (" + A.S(t1) + ", " + A.S(t2) + ") " + A.S(t3) + " x " + A.S(t4);
    },
    $eq(receiver, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      t1 = false;
      if (type$.Rectangle_num._is(other)) {
        t2 = receiver.left;
        t2.toString;
        t3 = J.getInterceptor$x(other);
        if (t2 === t3.get$left(other)) {
          t2 = receiver.top;
          t2.toString;
          if (t2 === t3.get$top(other)) {
            t2 = receiver.width;
            t2.toString;
            if (t2 === t3.get$width(other)) {
              t1 = receiver.height;
              t1.toString;
              t3 = t1 === t3.get$height(other);
              t1 = t3;
            }
          }
        }
      }
      return t1;
    },
    get$hashCode(receiver) {
      var t2, t3, t4,
        t1 = receiver.left;
      t1.toString;
      t2 = receiver.top;
      t2.toString;
      t3 = receiver.width;
      t3.toString;
      t4 = receiver.height;
      t4.toString;
      return A.Object_hash(t1, t2, t3, t4, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$_height(receiver) {
      return receiver.height;
    },
    get$height(receiver) {
      var t1 = receiver.height;
      t1.toString;
      return t1;
    },
    get$_width(receiver) {
      return receiver.width;
    },
    get$width(receiver) {
      var t1 = receiver.width;
      t1.toString;
      return t1;
    }
  };
  A._GamepadList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var len = receiver.length;
      if (len === 1)
        return receiver[0];
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._NamedNodeMap.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._SpeechRecognitionResultList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._StyleSheetList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length,
        t2 = index >>> 0 !== index || index >= t1;
      t2.toString;
      if (t2)
        throw A.wrapException(A.IndexError$withLength(index, t1, receiver, null, null));
      t1 = receiver[index];
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1;
      if (receiver.length > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1,
        len = receiver.length;
      if (len === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (len === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    $isJSIndexable: 1,
    $isEfficientLengthIterable: 1,
    $isJavaScriptIndexingBehavior: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.ImmutableListMixin.prototype = {
    get$iterator(receiver) {
      return new A.FixedSizeListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("FixedSizeListIterator<ImmutableListMixin.E>"));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to immutable List."));
    },
    removeLast$0(receiver) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from immutable List."));
    },
    remove$1(receiver, object) {
      throw A.wrapException(A.UnsupportedError$("Cannot remove from immutable List."));
    }
  };
  A.FixedSizeListIterator.prototype = {
    moveNext$0() {
      var _this = this,
        nextPosition = _this._position + 1,
        t1 = _this._length;
      if (nextPosition < t1) {
        _this._current = J.$index$asx(_this._array, nextPosition);
        _this._position = nextPosition;
        return true;
      }
      _this._current = null;
      _this._position = t1;
      return false;
    },
    get$current(_) {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    }
  };
  A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin.prototype = {};
  A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin.prototype = {};
  A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin.prototype = {};
  A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin.prototype = {};
  A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._MidiInputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MidiOutputMap_JavaScriptObject_MapMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin.prototype = {};
  A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin.prototype = {};
  A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin.prototype = {};
  A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._RtcStatsReport_JavaScriptObject_MapMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin.prototype = {};
  A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin.prototype = {};
  A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._Storage_JavaScriptObject_MapMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin.prototype = {};
  A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin.prototype = {};
  A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin.prototype = {};
  A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin.prototype = {};
  A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin.prototype = {};
  A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin.prototype = {};
  A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin.prototype = {};
  A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin.prototype = {};
  A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, t2, key, convertedList;
      if (A._noJsifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (type$.Map_of_nullable_Object_and_nullable_Object._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = J.getInterceptor$x(o), t2 = J.get$iterator$ax(t1.get$keys(o)); t2.moveNext$0();) {
          key = t2.get$current(t2);
          convertedMap[key] = this.call$1(t1.$index(o, key));
        }
        return convertedMap;
      } else if (type$.Iterable_nullable_Object._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 75
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(0, r);
    },
    $signature: 10
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 10
  };
  A.dartify_convert.prototype = {
    call$1(o) {
      var t1, proto, t2, dartObject, originalKeys, dartKeys, i, jsKey, dartKey, l, $length;
      if (A._noDartifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      o.toString;
      if (t1.containsKey$1(0, o))
        return t1.$index(0, o);
      if (o instanceof Date)
        return new A.DateTime(A.DateTime__validate(o.getTime(), 0, true), 0, true);
      if (o instanceof RegExp)
        throw A.wrapException(A.ArgumentError$("structured clone of RegExp", null));
      if (typeof Promise != "undefined" && o instanceof Promise)
        return A.promiseToFuture(o, type$.nullable_Object);
      proto = Object.getPrototypeOf(o);
      if (proto === Object.prototype || proto === null) {
        t2 = type$.nullable_Object;
        dartObject = A.LinkedHashMap_LinkedHashMap$_empty(t2, t2);
        t1.$indexSet(0, o, dartObject);
        originalKeys = Object.keys(o);
        dartKeys = [];
        for (t1 = J.getInterceptor$ax(originalKeys), t2 = t1.get$iterator(originalKeys); t2.moveNext$0();)
          dartKeys.push(A.dartify(t2.get$current(t2)));
        for (i = 0; i < t1.get$length(originalKeys); ++i) {
          jsKey = t1.$index(originalKeys, i);
          dartKey = dartKeys[i];
          if (jsKey != null)
            dartObject.$indexSet(0, dartKey, this.call$1(o[jsKey]));
        }
        return dartObject;
      }
      if (o instanceof Array) {
        l = o;
        dartObject = [];
        t1.$indexSet(0, o, dartObject);
        $length = o.length;
        for (t1 = J.getInterceptor$asx(l), i = 0; i < $length; ++i)
          dartObject.push(this.call$1(t1.$index(l, i)));
        return dartObject;
      }
      return o;
    },
    $signature: 75
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    },
    $isException: 1
  };
  A._JSSecureRandom.prototype = {
    _JSSecureRandom$0() {
      var $crypto = self.crypto;
      if ($crypto != null)
        if ($crypto.getRandomValues != null)
          return;
      throw A.wrapException(A.UnsupportedError$("No source of cryptographically secure random numbers available."));
    }
  };
  A.Length.prototype = {$isLength: 1};
  A.LengthList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Number.prototype = {$isNumber: 1};
  A.NumberList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.PointList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.StringList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.Transform.prototype = {$isTransform: 1};
  A.TransformList.prototype = {
    get$length(receiver) {
      var t1 = receiver.length;
      t1.toString;
      return t1;
    },
    $index(receiver, index) {
      var t1 = receiver.length;
      t1.toString;
      t1 = index >>> 0 !== index || index >= t1;
      t1.toString;
      if (t1)
        throw A.wrapException(A.IndexError$withLength(index, this.get$length(receiver), receiver, null, null));
      t1 = receiver.getItem(index);
      t1.toString;
      return t1;
    },
    $indexSet(receiver, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot assign element of immutable List."));
    },
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot resize immutable List."));
    },
    get$first(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 > 0) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      throw A.wrapException(A.StateError$("No elements"));
    },
    get$single(receiver) {
      var t1 = receiver.length;
      t1.toString;
      if (t1 === 1) {
        t1 = receiver[0];
        t1.toString;
        return t1;
      }
      if (t1 === 0)
        throw A.wrapException(A.StateError$("No elements"));
      throw A.wrapException(A.StateError$("More than one element"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A._LengthList_JavaScriptObject_ListMixin.prototype = {};
  A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin.prototype = {};
  A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin.prototype = {};
  A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin.prototype = {};
  A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin.prototype = {};
  A.Endian.prototype = {};
  A._ChannelCallbackRecord.prototype = {
    invoke$2(dataArg, callbackArg) {
      A.invoke2(this._callback, this._ui$_zone, dataArg, callbackArg);
    }
  };
  A._StoredMessage.prototype = {
    invoke$1(dataArg) {
      A.invoke1(this._callback, this._ui$_zone, dataArg);
    }
  };
  A._Channel.prototype = {
    get$length(_) {
      return this._queue.get$length(0);
    },
    push$1(message) {
      var t1, result, _this = this;
      if (!_this._draining && _this._channelCallbackRecord != null) {
        _this._channelCallbackRecord.invoke$2(message.data, message.get$invoke());
        return false;
      }
      t1 = _this._capacity;
      if (t1 <= 0)
        return true;
      result = _this._dropOverflowMessages$1(t1 - 1);
      _this._queue._collection$_add$1(0, message);
      return result;
    },
    _dropOverflowMessages$1(lengthLimit) {
      var t1, result, message;
      for (t1 = this._queue, result = false; (t1._tail - t1._head & t1._table.length - 1) >>> 0 > lengthLimit; result = true) {
        message = t1.removeFirst$0();
        A.invoke1(message._callback, message._ui$_zone, null);
      }
      return result;
    },
    _drainStep$0() {
      var _this = this,
        t1 = _this._queue;
      if (!t1.get$isEmpty(0) && _this._channelCallbackRecord != null) {
        t1 = t1.removeFirst$0();
        _this._channelCallbackRecord.invoke$2(t1.data, t1.get$invoke());
        A.scheduleMicrotask(_this.get$_drainStep());
      } else
        _this._draining = false;
    }
  };
  A.ChannelBuffers.prototype = {
    push$3($name, data, callback) {
      this._channels.putIfAbsent$2(0, $name, new A.ChannelBuffers_push_closure()).push$1(new A._StoredMessage(data, callback, $.Zone__current));
    },
    setListener$2($name, callback) {
      var channel = this._channels.putIfAbsent$2(0, $name, new A.ChannelBuffers_setListener_closure()),
        t1 = channel._channelCallbackRecord;
      channel._channelCallbackRecord = new A._ChannelCallbackRecord(callback, $.Zone__current);
      if (t1 == null && !channel._draining) {
        channel._draining = true;
        A.scheduleMicrotask(channel.get$_drainStep());
      }
    },
    handleMessage$1(data) {
      var methodNameLength, t1, methodName, index, channelNameLength, channelName, parts,
        _s143_ = "Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and new capacity)",
        _s143_0 = "Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and flag state)",
        bytes = A.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset, data.byteLength);
      if (bytes[0] === 7) {
        methodNameLength = bytes[1];
        if (methodNameLength >= 254)
          throw A.wrapException(A.Exception_Exception("Unrecognized message sent to dev.flutter/channel-buffers (method name too long)"));
        t1 = 2 + methodNameLength;
        methodName = B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, 2, t1));
        switch (methodName) {
          case "resize":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            channelName = B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            if (bytes[t1] !== 3)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (second argument must be an integer in the range 0 to 2147483647)"));
            this.resize$2(0, channelName, data.getUint32(t1 + 1, B.C_Endian === $.$get$Endian_host()));
            break;
          case "overflow":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            B.C_Utf8Codec.decode$1(0, B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            t1 = bytes[t1];
            if (t1 !== 1 && t1 !== 2)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (second argument must be a boolean)"));
            break;
          default:
            throw A.wrapException(A.Exception_Exception("Unrecognized method '" + methodName + "' sent to dev.flutter/channel-buffers"));
        }
      } else {
        parts = A._setArrayType(B.C_Utf8Codec.decode$1(0, bytes).split("\r"), type$.JSArray_String);
        if (parts.length === 3 && J.$eq$(parts[0], "resize"))
          this.resize$2(0, parts[1], A.int_parse(parts[2], null));
        else
          throw A.wrapException(A.Exception_Exception("Unrecognized message " + A.S(parts) + " sent to dev.flutter/channel-buffers."));
      }
    },
    resize$2(_, $name, newSize) {
      var t1 = this._channels,
        channel = t1.$index(0, $name);
      if (channel == null)
        t1.$indexSet(0, $name, new A._Channel(A.ListQueue$(newSize, type$._StoredMessage), newSize));
      else {
        channel._capacity = newSize;
        channel._dropOverflowMessages$1(newSize);
      }
    }
  };
  A.ChannelBuffers_push_closure.prototype = {
    call$0() {
      return new A._Channel(A.ListQueue$(1, type$._StoredMessage), 1);
    },
    $signature: 73
  };
  A.ChannelBuffers_setListener_closure.prototype = {
    call$0() {
      return new A._Channel(A.ListQueue$(1, type$._StoredMessage), 1);
    },
    $signature: 73
  };
  A.OffsetBase.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.OffsetBase && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "OffsetBase(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Offset.prototype = {
    $sub(_, other) {
      return new A.Offset(this._dx - other._dx, this._dy - other._dy);
    },
    $add(_, other) {
      return new A.Offset(this._dx + other._dx, this._dy + other._dy);
    },
    $mul(_, operand) {
      return new A.Offset(this._dx * operand, this._dy * operand);
    },
    $div(_, operand) {
      return new A.Offset(this._dx / operand, this._dy / operand);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Offset && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Offset(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Size.prototype = {
    get$isEmpty(_) {
      return this._dx <= 0 || this._dy <= 0;
    },
    $mul(_, operand) {
      return new A.Size(this._dx * operand, this._dy * operand);
    },
    $div(_, operand) {
      return new A.Size(this._dx / operand, this._dy / operand);
    },
    bottomRight$1(_, origin) {
      return new A.Offset(origin._dx + this._dx, origin._dy + this._dy);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Size && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Size(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Rect.prototype = {
    get$hasNaN() {
      var _this = this;
      return isNaN(_this.left) || isNaN(_this.top) || isNaN(_this.right) || isNaN(_this.bottom);
    },
    get$isInfinite(_) {
      var _this = this;
      return _this.left >= 1 / 0 || _this.top >= 1 / 0 || _this.right >= 1 / 0 || _this.bottom >= 1 / 0;
    },
    get$isEmpty(_) {
      var _this = this;
      return _this.left >= _this.right || _this.top >= _this.bottom;
    },
    shift$1(offset) {
      var _this = this,
        t1 = offset._dx,
        t2 = offset._dy;
      return new A.Rect(_this.left + t1, _this.top + t2, _this.right + t1, _this.bottom + t2);
    },
    intersect$1(other) {
      var _this = this;
      return new A.Rect(Math.max(_this.left, other.left), Math.max(_this.top, other.top), Math.min(_this.right, other.right), Math.min(_this.bottom, other.bottom));
    },
    expandToInclude$1(other) {
      var _this = this;
      return new A.Rect(Math.min(_this.left, other.left), Math.min(_this.top, other.top), Math.max(_this.right, other.right), Math.max(_this.bottom, other.bottom));
    },
    overlaps$1(other) {
      var _this = this;
      if (_this.right <= other.left || other.right <= _this.left)
        return false;
      if (_this.bottom <= other.top || other.bottom <= _this.top)
        return false;
      return true;
    },
    get$topCenter() {
      var t1 = this.left;
      return new A.Offset(t1 + (this.right - t1) / 2, this.top);
    },
    get$centerLeft() {
      var t1 = this.top;
      return new A.Offset(this.left, t1 + (this.bottom - t1) / 2);
    },
    get$center() {
      var _this = this,
        t1 = _this.left,
        t2 = _this.top;
      return new A.Offset(t1 + (_this.right - t1) / 2, t2 + (_this.bottom - t2) / 2);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (A.getRuntimeTypeOfDartObject(_this) !== J.get$runtimeType$(other))
        return false;
      return other instanceof A.Rect && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.left, _this.top, _this.right, _this.bottom, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "Rect.fromLTRB(" + B.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ")";
    }
  };
  A.KeyEventType.prototype = {
    _enumToString$0() {
      return "KeyEventType." + this._name;
    },
    get$label(_) {
      var t1;
      switch (this.index) {
        case 0:
          t1 = "Key Down";
          break;
        case 1:
          t1 = "Key Up";
          break;
        case 2:
          t1 = "Key Repeat";
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A.KeyEventDeviceType.prototype = {
    _enumToString$0() {
      return "KeyEventDeviceType." + this._name;
    }
  };
  A.KeyData.prototype = {
    _logicalToString$0() {
      var t1 = this.logical;
      return "0x" + B.JSInt_methods.toRadixString$1(t1, 16) + new A.KeyData__logicalToString_closure(B.JSNumber_methods.floor$0(t1 / 4294967296)).call$0();
    },
    _escapeCharacter$0() {
      var t1 = this.character;
      if (t1 == null)
        return "<none>";
      switch (t1) {
        case "\n":
          return '"\\n"';
        case "\t":
          return '"\\t"';
        case "\r":
          return '"\\r"';
        case "\b":
          return '"\\b"';
        case "\f":
          return '"\\f"';
        default:
          return '"' + t1 + '"';
      }
    },
    _quotedCharCode$0() {
      var t1 = this.character;
      if (t1 == null)
        return "";
      return " (0x" + new A.MappedListIterable(new A.CodeUnits(t1), new A.KeyData__quotedCharCode_closure(), type$.CodeUnits._eval$1("MappedListIterable<ListBase.E,String>")).join$1(0, " ") + ")";
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.type.get$label(0),
        t2 = B.JSInt_methods.toRadixString$1(_this.physical, 16),
        t3 = _this._logicalToString$0(),
        t4 = _this._escapeCharacter$0(),
        t5 = _this._quotedCharCode$0(),
        t6 = _this.synthesized ? ", synthesized" : "";
      return "KeyData(" + t1 + ", physical: 0x" + t2 + ", logical: " + t3 + ", character: " + t4 + t5 + t6 + ")";
    }
  };
  A.KeyData__logicalToString_closure.prototype = {
    call$0() {
      switch (this.planeNum) {
        case 0:
          return " (Unicode)";
        case 1:
          return " (Unprintable)";
        case 2:
          return " (Flutter)";
        case 17:
          return " (Android)";
        case 18:
          return " (Fuchsia)";
        case 19:
          return " (iOS)";
        case 20:
          return " (macOS)";
        case 21:
          return " (GTK)";
        case 22:
          return " (Windows)";
        case 23:
          return " (Web)";
        case 24:
          return " (GLFW)";
      }
      return "";
    },
    $signature: 25
  };
  A.KeyData__quotedCharCode_closure.prototype = {
    call$1(code) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(code, 16), 2, "0");
    },
    $signature: 103
  };
  A.Color.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.Color && other.get$value(other) === _this.get$value(_this);
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.get$value(this));
    },
    toString$0(_) {
      return "Color(0x" + B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(this.get$value(this), 16), 8, "0") + ")";
    },
    get$value(receiver) {
      return this.value;
    }
  };
  A.StrokeCap.prototype = {
    _enumToString$0() {
      return "StrokeCap." + this._name;
    }
  };
  A.StrokeJoin.prototype = {
    _enumToString$0() {
      return "StrokeJoin." + this._name;
    }
  };
  A.PaintingStyle.prototype = {
    _enumToString$0() {
      return "PaintingStyle." + this._name;
    }
  };
  A.BlendMode.prototype = {
    _enumToString$0() {
      return "BlendMode." + this._name;
    }
  };
  A.FilterQuality.prototype = {
    _enumToString$0() {
      return "FilterQuality." + this._name;
    }
  };
  A.PlatformDispatcher.prototype = {};
  A.FrameTiming.prototype = {
    toString$0(_) {
      var t9,
        t1 = A.getRuntimeTypeOfDartObject(this).toString$0(0),
        t2 = this._ui$_data,
        t3 = A.Duration$(0, 0, t2[2], 0, 0, 0),
        t4 = t2[1],
        t5 = A.Duration$(0, 0, t4, 0, 0, 0),
        t6 = t2[4],
        t7 = A.Duration$(0, 0, t6, 0, 0, 0),
        t8 = A.Duration$(0, 0, t2[3], 0, 0, 0);
      t4 = A.Duration$(0, 0, t4, 0, 0, 0);
      t9 = t2[0];
      return t1 + "(buildDuration: " + (A.S((t3._duration - t5._duration) * 0.001) + "ms") + ", rasterDuration: " + (A.S((t7._duration - t8._duration) * 0.001) + "ms") + ", vsyncOverhead: " + (A.S((t4._duration - A.Duration$(0, 0, t9, 0, 0, 0)._duration) * 0.001) + "ms") + ", totalSpan: " + (A.S((A.Duration$(0, 0, t6, 0, 0, 0)._duration - A.Duration$(0, 0, t9, 0, 0, 0)._duration) * 0.001) + "ms") + ", layerCacheCount: " + t2[6] + ", layerCacheBytes: " + t2[7] + ", pictureCacheCount: " + t2[8] + ", pictureCacheBytes: " + t2[9] + ", frameNumber: " + B.JSArray_methods.get$last(t2) + ")";
    }
  };
  A.AppLifecycleState.prototype = {
    _enumToString$0() {
      return "AppLifecycleState." + this._name;
    }
  };
  A.AppExitResponse.prototype = {
    _enumToString$0() {
      return "AppExitResponse." + this._name;
    }
  };
  A.Locale.prototype = {
    get$languageCode(_) {
      var t1 = this._languageCode,
        t2 = B.Map_43kKQ.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    get$countryCode() {
      var t1 = this._countryCode,
        t2 = B.Map_jnSVN.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = false;
      if (other instanceof A.Locale)
        if (other.get$languageCode(0) === this.get$languageCode(0))
          t1 = other.get$countryCode() == this.get$countryCode();
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$languageCode(0), null, this.get$countryCode(), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return this._rawToString$1("_");
    },
    _rawToString$1(separator) {
      var t1 = this.get$languageCode(0);
      if (this._countryCode != null)
        t1 += separator + A.S(this.get$countryCode());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.SemanticsActionEvent.prototype = {
    toString$0(_) {
      return "SemanticsActionEvent(" + this.type.toString$0(0) + ", view: " + this.viewId + ", node: " + this.nodeId + ")";
    }
  };
  A.ViewFocusState.prototype = {
    _enumToString$0() {
      return "ViewFocusState." + this._name;
    }
  };
  A.ViewFocusDirection.prototype = {
    _enumToString$0() {
      return "ViewFocusDirection." + this._name;
    }
  };
  A.PointerChange.prototype = {
    _enumToString$0() {
      return "PointerChange." + this._name;
    }
  };
  A.PointerDeviceKind.prototype = {
    _enumToString$0() {
      return "PointerDeviceKind." + this._name;
    }
  };
  A.PointerSignalKind.prototype = {
    _enumToString$0() {
      return "PointerSignalKind." + this._name;
    }
  };
  A.PointerData.prototype = {
    respond$1$allowPlatformDefault(allowPlatformDefault) {
      var t1 = this._ui$_onRespond;
      if (t1 != null)
        t1.call$1$allowPlatformDefault(allowPlatformDefault);
    },
    toString$0(_) {
      return "PointerData(viewId: " + this.viewId + ", x: " + A.S(this.physicalX) + ", y: " + A.S(this.physicalY) + ")";
    }
  };
  A.PointerDataPacket.prototype = {};
  A.SemanticsAction.prototype = {
    toString$0(_) {
      return "SemanticsAction." + this.name;
    }
  };
  A.SemanticsUpdateBuilder.prototype = {};
  A.PlaceholderAlignment.prototype = {
    _enumToString$0() {
      return "PlaceholderAlignment." + this._name;
    }
  };
  A.GlyphInfo.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.GlyphInfo && _this.graphemeClusterLayoutBounds.$eq(0, other.graphemeClusterLayoutBounds) && _this.graphemeClusterCodeUnitRange.$eq(0, other.graphemeClusterCodeUnitRange) && _this.writingDirection === other.writingDirection;
    },
    get$hashCode(_) {
      return A.Object_hash(this.graphemeClusterLayoutBounds, this.graphemeClusterCodeUnitRange, this.writingDirection, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Glyph(" + this.graphemeClusterLayoutBounds.toString$0(0) + ", textRange: " + this.graphemeClusterCodeUnitRange.toString$0(0) + ", direction: " + this.writingDirection.toString$0(0) + ")";
    }
  };
  A.TextAlign.prototype = {
    _enumToString$0() {
      return "TextAlign." + this._name;
    }
  };
  A.TextDecoration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextDecoration && other._mask === this._mask;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._mask);
    },
    toString$0(_) {
      var values,
        t1 = this._mask;
      if (t1 === 0)
        return "TextDecoration.none";
      values = A._setArrayType([], type$.JSArray_String);
      if ((t1 & 1) !== 0)
        values.push("underline");
      if ((t1 & 2) !== 0)
        values.push("overline");
      if ((t1 & 4) !== 0)
        values.push("lineThrough");
      if (values.length === 1)
        return "TextDecoration." + values[0];
      return "TextDecoration.combine([" + B.JSArray_methods.join$1(values, ", ") + "])";
    }
  };
  A.TextLeadingDistribution.prototype = {
    _enumToString$0() {
      return "TextLeadingDistribution." + this._name;
    }
  };
  A.TextHeightBehavior.prototype = {
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      t1 = false;
      if (other instanceof A.TextHeightBehavior)
        t1 = other.leadingDistribution === this.leadingDistribution;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(true, true, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "TextHeightBehavior(applyHeightToFirstAscent: true, applyHeightToLastDescent: true, leadingDistribution: " + this.leadingDistribution.toString$0(0) + ")";
    }
  };
  A.TextDirection.prototype = {
    _enumToString$0() {
      return "TextDirection." + this._name;
    }
  };
  A.TextBox.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TextBox && other.left === _this.left && other.top === _this.top && other.right === _this.right && other.bottom === _this.bottom && other.direction === _this.direction;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.left, _this.top, _this.right, _this.bottom, _this.direction, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "TextBox.fromLTRBD(" + B.JSNumber_methods.toStringAsFixed$1(_this.left, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.top, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.right, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.bottom, 1) + ", " + _this.direction.toString$0(0) + ")";
    }
  };
  A.TextAffinity.prototype = {
    _enumToString$0() {
      return "TextAffinity." + this._name;
    }
  };
  A.TextPosition.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.TextPosition && other.offset === this.offset && other.affinity === this.affinity;
    },
    get$hashCode(_) {
      return A.Object_hash(this.offset, this.affinity, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(offset: " + this.offset + ", affinity: " + this.affinity.toString$0(0) + ")";
    }
  };
  A.TextRange.prototype = {
    get$isValid() {
      return this.start >= 0 && this.end >= 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.TextRange && other.start === this.start && other.end === this.end;
    },
    get$hashCode(_) {
      return A.Object_hash(B.JSInt_methods.get$hashCode(this.start), B.JSInt_methods.get$hashCode(this.end), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "TextRange(start: " + this.start + ", end: " + this.end + ")";
    }
  };
  A.ParagraphConstraints.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.ParagraphConstraints && other.width === this.width;
    },
    get$hashCode(_) {
      return B.JSNumber_methods.get$hashCode(this.width);
    },
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(width: " + A.S(this.width) + ")";
    }
  };
  A.BoxHeightStyle.prototype = {
    _enumToString$0() {
      return "BoxHeightStyle." + this._name;
    }
  };
  A.BoxWidthStyle.prototype = {
    _enumToString$0() {
      return "BoxWidthStyle." + this._name;
    }
  };
  A.Display.prototype = {};
  A.Brightness.prototype = {
    _enumToString$0() {
      return "Brightness." + this._name;
    }
  };
  A.GestureSettings.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.GestureSettings;
    },
    get$hashCode(_) {
      return A.Object_hash(null, null, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "GestureSettings(physicalTouchSlop: null, physicalDoubleTapSlop: null)";
    }
  };
  A.AssetManager.prototype = {
    getAssetUrl$1(asset) {
      var t1, fallbackBaseUrl, t2;
      if (A.Uri_parse(asset, 0, null).get$hasScheme())
        return A._Uri__uriEncode(B.List_w0I, asset, B.C_Utf8Codec, false);
      t1 = this._assetBase;
      if (t1 == null) {
        t1 = self.window.document.querySelector("meta[name=assetBase]");
        fallbackBaseUrl = t1 == null ? null : t1.content;
        t1 = fallbackBaseUrl == null;
        if (!t1)
          self.window.console.warn("The `assetBase` meta tag is now deprecated.\nUse engineInitializer.initializeEngine(config) instead.\nSee: https://docs.flutter.dev/development/platform-integration/web/initialization");
        t2 = this._assetBase = t1 ? "" : fallbackBaseUrl;
        t1 = t2;
      }
      return A._Uri__uriEncode(B.List_w0I, t1 + "assets/" + asset, B.C_Utf8Codec, false);
    }
  };
  A.BrowserEngine.prototype = {
    _enumToString$0() {
      return "BrowserEngine." + this._name;
    }
  };
  A.OperatingSystem.prototype = {
    _enumToString$0() {
      return "OperatingSystem." + this._name;
    }
  };
  A.BrowserDetection.prototype = {
    get$_userAgent() {
      var value = this.__BrowserDetection__userAgent_FI;
      if (value === $) {
        value = self.window.navigator.userAgent;
        this.__BrowserDetection__userAgent_FI !== $ && A.throwUnnamedLateFieldADI();
        this.__BrowserDetection__userAgent_FI = value;
      }
      return value;
    },
    get$browserEngine() {
      var t1, t2, result, _this = this,
        value = _this.__BrowserDetection__browserEngine_FI;
      if (value === $) {
        t1 = self.window.navigator.vendor;
        t2 = _this.get$_userAgent();
        result = _this.detectBrowserEngineByVendorAgent$2(t1, t2.toLowerCase());
        _this.__BrowserDetection__browserEngine_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__BrowserDetection__browserEngine_FI = result;
        value = result;
      }
      t1 = value;
      return t1;
    },
    detectBrowserEngineByVendorAgent$2(vendor, agent) {
      if (vendor === "Google Inc.")
        return B.BrowserEngine_0;
      else if (vendor === "Apple Computer, Inc.")
        return B.BrowserEngine_1;
      else if (B.JSString_methods.contains$1(agent, "Edg/"))
        return B.BrowserEngine_0;
      else if (vendor === "" && B.JSString_methods.contains$1(agent, "firefox"))
        return B.BrowserEngine_2;
      A.print("WARNING: failed to detect current browser engine. Assuming this is a Chromium-compatible browser.");
      return B.BrowserEngine_0;
    },
    get$operatingSystem() {
      var result, t1, _this = this,
        value = _this.__BrowserDetection__operatingSystem_FI;
      if (value === $) {
        result = _this.detectOperatingSystem$0();
        _this.__BrowserDetection__operatingSystem_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__BrowserDetection__operatingSystem_FI = result;
        value = result;
      }
      t1 = value;
      return t1;
    },
    detectOperatingSystem$0() {
      var platform, maxTouchPoints, _null = null,
        t1 = self.window;
      t1 = t1.navigator.platform;
      if (t1 == null)
        t1 = _null;
      t1.toString;
      platform = t1;
      if (B.JSString_methods.startsWith$1(platform, "Mac")) {
        t1 = self.window;
        t1 = t1.navigator.maxTouchPoints;
        if (t1 == null)
          t1 = _null;
        t1 = t1 == null ? _null : B.JSNumber_methods.toInt$0(t1);
        maxTouchPoints = t1;
        if ((maxTouchPoints == null ? 0 : maxTouchPoints) > 2)
          return B.OperatingSystem_0;
        return B.OperatingSystem_4;
      } else if (B.JSString_methods.contains$1(platform.toLowerCase(), "iphone") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipad") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipod"))
        return B.OperatingSystem_0;
      else {
        t1 = this.get$_userAgent();
        if (B.JSString_methods.contains$1(t1, "Android"))
          return B.OperatingSystem_1;
        else if (B.JSString_methods.startsWith$1(platform, "Linux"))
          return B.OperatingSystem_2;
        else if (B.JSString_methods.startsWith$1(platform, "Win"))
          return B.OperatingSystem_3;
        else
          return B.OperatingSystem_5;
      }
    }
  };
  A.bootstrapEngine_closure.prototype = {
    call$1(configuration) {
      return this.$call$body$bootstrapEngine_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $call$body$bootstrapEngine_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineServices(configuration), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 105
  };
  A.bootstrapEngine_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.registerPlugins.call$0();
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineUi(), $async$call$0);
            case 2:
              // returning from await.
              $async$self.runApp.call$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 6
  };
  A.BrowserPlatformLocation.prototype = {
    getOrCreateDomEventListener$1(fn) {
      return $._popStateListenersCache.putIfAbsent$2(0, fn, new A.BrowserPlatformLocation_getOrCreateDomEventListener_closure(fn));
    }
  };
  A.BrowserPlatformLocation_getOrCreateDomEventListener_closure.prototype = {
    call$0() {
      return A._functionToJS1(this.fn);
    },
    $signature: 42
  };
  A.HashUrlStrategy.prototype = {
    addPopStateListener$1(fn) {
      var t1 = new A.HashUrlStrategy_addPopStateListener_wrappedFn(fn);
      A.DomEventTargetExtension_addEventListener(self.window, "popstate", B.C_BrowserPlatformLocation.getOrCreateDomEventListener$1(t1), null);
      return new A.HashUrlStrategy_addPopStateListener_closure(this, t1);
    },
    getPath$0() {
      var t1 = self.window.location.hash;
      if (t1.length === 0 || t1 === "#")
        return "/";
      return B.JSString_methods.substring$1(t1, 1);
    },
    getState$0(_) {
      return A.DomHistoryExtension_get_state(self.window.history);
    },
    prepareExternalUrl$1(internalUrl) {
      var t2,
        hash = internalUrl.length === 0 || internalUrl === "/" ? "" : "#" + internalUrl,
        t1 = self.window.location.pathname;
      if (t1 == null)
        t1 = null;
      t1.toString;
      t2 = self.window.location.search;
      if (t2 == null)
        t2 = null;
      t2.toString;
      return t1 + t2 + hash;
    },
    pushState$3(_, state, title, url) {
      var _this = this.prepareExternalUrl$1(url),
        t1 = self.window.history,
        t2 = A.jsify(state);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      t1.pushState(t2, title, _this);
    },
    replaceState$3(_, state, title, url) {
      var t2,
        _this = this.prepareExternalUrl$1(url),
        t1 = self.window.history;
      if (state == null)
        t2 = null;
      else {
        t2 = A.jsify(state);
        if (t2 == null)
          t2 = type$.Object._as(t2);
      }
      t1.replaceState(t2, title, _this);
    },
    go$1(_, count) {
      var t1 = self.window.history;
      t1.go(count);
      return this._waitForPopState$0();
    },
    _waitForPopState$0() {
      var t1 = new A._Future($.Zone__current, type$._Future_void),
        unsubscribe = A._Cell$named("unsubscribe");
      unsubscribe._value = this.addPopStateListener$1(new A.HashUrlStrategy__waitForPopState_closure(unsubscribe, new A._AsyncCompleter(t1, type$._AsyncCompleter_void)));
      return t1;
    }
  };
  A.HashUrlStrategy_addPopStateListener_wrappedFn.prototype = {
    call$1($event) {
      var t1 = type$.JavaScriptObject._as($event).state;
      if (t1 == null)
        t1 = null;
      else {
        t1 = A.dartify(t1);
        t1.toString;
      }
      this.fn.call$1(t1);
    },
    $signature: 213
  };
  A.HashUrlStrategy_addPopStateListener_closure.prototype = {
    call$0() {
      var t1 = this.wrappedFn;
      A.DomEventTargetExtension_removeEventListener(self.window, "popstate", B.C_BrowserPlatformLocation.getOrCreateDomEventListener$1(t1), null);
      $._popStateListenersCache.remove$1(0, t1);
      return null;
    },
    $signature: 0
  };
  A.HashUrlStrategy__waitForPopState_closure.prototype = {
    call$1(_) {
      this.unsubscribe._readLocal$0().call$0();
      this.completer.complete$0(0);
    },
    $signature: 9
  };
  A.PlatformViewRegistry.prototype = {};
  A.AudioBuffer.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.AudioParamMap.prototype = {
    containsKey$1(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key)) != null;
    },
    $index(receiver, key) {
      return A.convertNativeToDart_Dictionary(receiver.get(key));
    },
    forEach$1(receiver, f) {
      var entry, t1,
        entries = receiver.entries();
      for (; true;) {
        entry = entries.next();
        t1 = entry.done;
        t1.toString;
        if (t1)
          return;
        t1 = entry.value[0];
        t1.toString;
        f.call$2(t1, A.convertNativeToDart_Dictionary(entry.value[1]));
      }
    },
    get$keys(receiver) {
      var keys = A._setArrayType([], type$.JSArray_String);
      this.forEach$1(receiver, new A.AudioParamMap_keys_closure(keys));
      return keys;
    },
    get$length(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1;
    },
    get$isEmpty(receiver) {
      var t1 = receiver.size;
      t1.toString;
      return t1 === 0;
    },
    $indexSet(receiver, key, value) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    putIfAbsent$2(receiver, key, ifAbsent) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    remove$1(receiver, key) {
      throw A.wrapException(A.UnsupportedError$("Not supported"));
    },
    $isMap: 1
  };
  A.AudioParamMap_keys_closure.prototype = {
    call$2(k, v) {
      return this.keys.push(k);
    },
    $signature: 13
  };
  A.AudioTrackList.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A.BaseAudioContext.prototype = {};
  A.OfflineAudioContext.prototype = {
    get$length(receiver) {
      return receiver.length;
    }
  };
  A._AudioParamMap_JavaScriptObject_MapMixin.prototype = {};
  A.StringCharacters.prototype = {
    get$iterator(_) {
      return new A.StringCharacterRange(this.string, 0, 0);
    },
    get$first(_) {
      var t1 = this.string,
        t2 = t1.length;
      return t2 === 0 ? A.throwExpression(A.StateError$("No element")) : B.JSString_methods.substring$2(t1, 0, new A.Breaks(t1, t2, 0, 176).nextBreak$0());
    },
    get$last(_) {
      var t1 = this.string,
        t2 = t1.length;
      return t2 === 0 ? A.throwExpression(A.StateError$("No element")) : B.JSString_methods.substring$1(t1, new A.BackBreaks(t1, 0, t2, 176).nextBreak$0());
    },
    get$single(_) {
      var t1 = this.string,
        t2 = t1.length;
      if (t2 === 0)
        throw A.wrapException(A.StateError$("No element"));
      if (new A.Breaks(t1, t2, 0, 176).nextBreak$0() === t2)
        return t1;
      throw A.wrapException(A.StateError$("Too many elements"));
    },
    get$isEmpty(_) {
      return this.string.length === 0;
    },
    get$isNotEmpty(_) {
      return this.string.length !== 0;
    },
    get$length(_) {
      var brk, $length,
        t1 = this.string,
        t2 = t1.length;
      if (t2 === 0)
        return 0;
      brk = new A.Breaks(t1, t2, 0, 176);
      for ($length = 0; brk.nextBreak$0() >= 0;)
        ++$length;
      return $length;
    },
    elementAt$1(_, index) {
      var t1, t2, count, breaks, start, end;
      A.RangeError_checkNotNegative(index, "index");
      t1 = this.string;
      t2 = t1.length;
      count = 0;
      if (t2 !== 0) {
        breaks = new A.Breaks(t1, t2, 0, 176);
        for (start = 0; end = breaks.nextBreak$0(), end >= 0; start = end) {
          if (count === index)
            return B.JSString_methods.substring$2(t1, start, end);
          ++count;
        }
      }
      throw A.wrapException(A.IndexError$(index, this, "index", null, count));
    },
    contains$1(_, singleCharacterString) {
      var t1;
      if (typeof singleCharacterString != "string")
        return false;
      t1 = singleCharacterString.length;
      if (t1 === 0)
        return false;
      if (new A.Breaks(singleCharacterString, t1, 0, 176).nextBreak$0() !== t1)
        return false;
      t1 = this.string;
      return A._indexOf(t1, singleCharacterString, 0, t1.length) >= 0;
    },
    _skipIndices$3(count, cursor, breaks) {
      var t1, nextBreak;
      if (count === 0 || cursor === this.string.length)
        return cursor;
      t1 = this.string;
      breaks = new A.Breaks(t1, t1.length, cursor, 176);
      do {
        nextBreak = breaks.nextBreak$0();
        if (nextBreak < 0)
          break;
        if (--count, count > 0) {
          cursor = nextBreak;
          continue;
        } else {
          cursor = nextBreak;
          break;
        }
      } while (true);
      return cursor;
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this._skip$1(count);
    },
    _skip$1(count) {
      var start = this._skipIndices$3(count, 0, null),
        t1 = this.string;
      if (start === t1.length)
        return B.StringCharacters_E8w;
      return new A.StringCharacters(B.JSString_methods.substring$1(t1, start));
    },
    take$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this._take$1(count);
    },
    _take$1(count) {
      var end = this._skipIndices$3(count, 0, null),
        t1 = this.string;
      if (end === t1.length)
        return this;
      return new A.StringCharacters(B.JSString_methods.substring$2(t1, 0, end));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.StringCharacters && this.string === other.string;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.string);
    },
    toString$0(_) {
      return this.string;
    }
  };
  A.StringCharacterRange.prototype = {
    get$current(_) {
      var _this = this,
        t1 = _this._currentCache;
      return t1 == null ? _this._currentCache = B.JSString_methods.substring$2(_this._characters_impl$_string, _this._characters_impl$_start, _this._characters_impl$_end) : t1;
    },
    moveNext$0() {
      return this._advanceEnd$2(1, this._characters_impl$_end);
    },
    _advanceEnd$2(count, newStart) {
      var index, t1, t2, state, char, nextIndex, category, nextChar, t3, _this = this;
      if (count > 0) {
        index = _this._characters_impl$_end;
        for (t1 = _this._characters_impl$_string, t2 = t1.length, state = 176; index < t2; index = nextIndex) {
          char = t1.charCodeAt(index);
          nextIndex = index + 1;
          if ((char & 64512) !== 55296)
            category = A.low(char);
          else {
            category = 2;
            if (nextIndex < t2) {
              nextChar = t1.charCodeAt(nextIndex);
              if ((nextChar & 64512) === 56320) {
                ++nextIndex;
                category = A.high(char, nextChar);
              }
            }
          }
          state = string$.x200_000.charCodeAt(state & 240 | category);
          if ((state & 1) === 0) {
            --count;
            t3 = count === 0;
          } else
            t3 = false;
          if (t3) {
            _this._characters_impl$_start = newStart;
            _this._characters_impl$_end = index;
            _this._currentCache = null;
            return true;
          }
        }
        _this._characters_impl$_start = newStart;
        _this._characters_impl$_end = t2;
        _this._currentCache = null;
        return count === 1 && state !== 176;
      } else {
        _this._characters_impl$_start = newStart;
        _this._currentCache = null;
        return true;
      }
    }
  };
  A.Breaks.prototype = {
    nextBreak$0() {
      var t1, t2, t3, t4, char, category, nextChar, _this = this,
        _s192_ = string$.x200_000;
      for (t1 = _this.end, t2 = _this.base; t3 = _this.cursor, t3 < t1;) {
        t4 = _this.cursor = t3 + 1;
        char = t2.charCodeAt(t3);
        if ((char & 64512) !== 55296) {
          t4 = _s192_.charCodeAt(_this.state & 240 | A.low(char));
          _this.state = t4;
          if ((t4 & 1) === 0)
            return t3;
          continue;
        }
        category = 2;
        if (t4 < t1) {
          nextChar = t2.charCodeAt(t4);
          if ((nextChar & 64512) === 56320) {
            category = A.high(char, nextChar);
            ++_this.cursor;
          }
        }
        t4 = _s192_.charCodeAt(_this.state & 240 | category);
        _this.state = t4;
        if ((t4 & 1) === 0)
          return t3;
      }
      t1 = _s192_.charCodeAt(_this.state & 240 | 15);
      _this.state = t1;
      if ((t1 & 1) === 0)
        return t3;
      return -1;
    }
  };
  A.BackBreaks.prototype = {
    nextBreak$0() {
      var t1, t2, t3, t4, char, category, prevChar, t5, _this = this,
        _s208_ = string$.x10__0__;
      for (t1 = _this.start, t2 = _this.base; t3 = _this.cursor, t3 > t1;) {
        t4 = _this.cursor = t3 - 1;
        char = t2.charCodeAt(t4);
        if ((char & 64512) !== 56320) {
          t4 = _this.state = _s208_.charCodeAt(_this.state & 240 | A.low(char));
          if (((t4 >= 208 ? _this.state = A.lookAhead(t2, t1, _this.cursor, t4) : t4) & 1) === 0)
            return t3;
          continue;
        }
        category = 2;
        if (t4 >= t1) {
          prevChar = t2.charCodeAt(t4 - 1);
          if ((prevChar & 64512) === 55296) {
            category = A.high(prevChar, char);
            t4 = --_this.cursor;
          }
        }
        t5 = _this.state = _s208_.charCodeAt(_this.state & 240 | category);
        if (((t5 >= 208 ? _this.state = A.lookAhead(t2, t1, t4, t5) : t5) & 1) === 0)
          return t3;
      }
      t4 = _this.state = _s208_.charCodeAt(_this.state & 240 | 15);
      if (((t4 >= 208 ? _this.state = A.lookAhead(t2, t1, t3, t4) : t4) & 1) === 0)
        return _this.cursor;
      return -1;
    }
  };
  A.DefaultEquality.prototype = {
    equals$2(e1, e2) {
      return J.$eq$(e1, e2);
    },
    hash$1(_, e) {
      return J.get$hashCode$(e);
    }
  };
  A._MapEntry.prototype = {
    get$hashCode(_) {
      var t1 = this.equality;
      return 3 * t1._keyEquality.hash$1(0, this.key) + 7 * t1._valueEquality.hash$1(0, this.value) & 2147483647;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (other instanceof A._MapEntry) {
        t1 = this.equality;
        t1 = t1._keyEquality.equals$2(this.key, other.key) && t1._valueEquality.equals$2(this.value, other.value);
      } else
        t1 = false;
      return t1;
    }
  };
  A.MapEquality.prototype = {
    equals$2(map1, map2) {
      var t1, t2, equalElementCounts, t3, key, entry, count;
      if (map1 === map2)
        return true;
      t1 = J.getInterceptor$asx(map1);
      t2 = J.getInterceptor$asx(map2);
      if (t1.get$length(map1) !== t2.get$length(map2))
        return false;
      equalElementCounts = A.HashMap_HashMap(null, null, null, type$._MapEntry, type$.int);
      for (t3 = J.get$iterator$ax(t1.get$keys(map1)); t3.moveNext$0();) {
        key = t3.get$current(t3);
        entry = new A._MapEntry(this, key, t1.$index(map1, key));
        count = equalElementCounts.$index(0, entry);
        equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
      }
      for (t1 = J.get$iterator$ax(t2.get$keys(map2)); t1.moveNext$0();) {
        key = t1.get$current(t1);
        entry = new A._MapEntry(this, key, t2.$index(map2, key));
        count = equalElementCounts.$index(0, entry);
        if (count == null || count === 0)
          return false;
        equalElementCounts.$indexSet(0, entry, count - 1);
      }
      return true;
    },
    hash$1(_, map) {
      var t1, t2, t3, t4, t5, hash, key, keyHash, t6;
      for (t1 = J.getInterceptor$x(map), t2 = J.get$iterator$ax(t1.get$keys(map)), t3 = this._keyEquality, t4 = this._valueEquality, t5 = this.$ti._rest[1], hash = 0; t2.moveNext$0();) {
        key = t2.get$current(t2);
        keyHash = t3.hash$1(0, key);
        t6 = t1.$index(map, key);
        hash = hash + 3 * keyHash + 7 * t4.hash$1(0, t6 == null ? t5._as(t6) : t6) & 2147483647;
      }
      hash = hash + (hash << 3 >>> 0) & 2147483647;
      hash ^= hash >>> 11;
      return hash + (hash << 15 >>> 0) & 2147483647;
    }
  };
  A.HeapPriorityQueue.prototype = {
    get$length(_) {
      return this._priority_queue$_length;
    },
    toString$0(_) {
      var t1 = this._priority_queue$_queue;
      return A.Iterable_iterableToShortString(A.SubListIterable$(t1, 0, A.checkNotNullable(this._priority_queue$_length, "count", type$.int), A._arrayInstanceType(t1)._precomputed1), "(", ")");
    }
  };
  A.FilePickerWeb.prototype = {};
  A.FilePicker.prototype = {};
  A.FirebaseAnalyticsPlatform.prototype = {};
  A.FirebaseAnalyticsWeb.prototype = {};
  A.FirebaseApp.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.FirebaseApp))
        return false;
      t1 = other._delegate;
      t2 = this._delegate;
      return t1.name === t2.name && t1.options.$eq(0, t2.options);
    },
    get$hashCode(_) {
      var t1 = this._delegate;
      return A.Object_hash(t1.name, t1.options, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return B.Type_FirebaseApp_IQI.toString$0(0) + "(" + this._delegate.name + ")";
    }
  };
  A.FirebaseException.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof A.FirebaseException))
        return false;
      return A.Object_hash(other.plugin, other.code, other.message, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue) === A.Object_hash(_this.plugin, _this.code, _this.message, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    get$hashCode(_) {
      return A.Object_hash(this.plugin, this.code, this.message, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "[" + this.plugin + "/" + this.code + "] " + this.message;
    },
    $isException: 1
  };
  A.FirebaseOptions.prototype = {
    get$asMap(_) {
      var _this = this;
      return A.LinkedHashMap_LinkedHashMap$_literal(["apiKey", _this.apiKey, "appId", _this.appId, "messagingSenderId", _this.messagingSenderId, "projectId", _this.projectId, "authDomain", _this.authDomain, "databaseURL", _this.databaseURL, "storageBucket", _this.storageBucket, "measurementId", _this.measurementId, "trackingId", _this.trackingId, "deepLinkURLScheme", _this.deepLinkURLScheme, "androidClientId", _this.androidClientId, "iosClientId", _this.iosClientId, "iosBundleId", _this.iosBundleId, "appGroupId", _this.appGroupId], type$.String, type$.nullable_String);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.FirebaseOptions))
        return false;
      return B.MapEquality_DefaultEquality_DefaultEquality.equals$2(this.get$asMap(0), other.get$asMap(0));
    },
    get$hashCode(_) {
      return B.MapEquality_DefaultEquality_DefaultEquality.hash$1(0, this.get$asMap(0));
    },
    toString$0(_) {
      return A.MapBase_mapToString(this.get$asMap(0));
    }
  };
  A.MethodChannelFirebase.prototype = {
    _initializeCore$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, $async$temp1;
      var $async$_initializeCore$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = J;
              $async$goto = 2;
              return A._asyncAwait($.$get$MethodChannelFirebase_api().initializeCore$0(), $async$_initializeCore$0);
            case 2:
              // returning from await.
              t1 = $async$temp1.where$1$ax($async$result, new A.MethodChannelFirebase__initializeCore_closure());
              A.CastIterable_CastIterable(t1, t1.$ti._eval$1("Iterable.E"), type$.PigeonInitializeResponse).forEach$1(0, $async$self.get$_initializeFirebaseAppFromMap());
              $.MethodChannelFirebase_isCoreInitialized = true;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_initializeCore$0, $async$completer);
    },
    _initializeFirebaseAppFromMap$1(response) {
      var t1 = response.name,
        t2 = A.FirebaseOptions$fromPigeon(response.options),
        t3 = $.$get$FirebaseAppPlatform__token(),
        methodChannelFirebaseApp = new A.MethodChannelFirebaseApp(new A.FirebaseAppHostApi(), t1, t2);
      $.$get$PlatformInterface__instanceTokens().$indexSet(0, methodChannelFirebaseApp, t3);
      $.MethodChannelFirebase_appInstances.$indexSet(0, t1, methodChannelFirebaseApp);
      $.FirebasePluginPlatform__constantsForPluginApps.$indexSet(0, t1, response.pluginConstants);
    },
    initializeApp$2$name$options($name, options) {
      return this.initializeApp$body$MethodChannelFirebase($name, options);
    },
    initializeApp$body$MethodChannelFirebase($name, options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FirebaseAppPlatform),
        $async$returnValue, $async$self = this, defaultApp, t1, t2, t3;
      var $async$initializeApp$2$name$options = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = !$.MethodChannelFirebase_isCoreInitialized ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self._initializeCore$0(), $async$initializeApp$2$name$options);
            case 5:
              // returning from await.
            case 4:
              // join
              defaultApp = $.MethodChannelFirebase_appInstances.$index(0, "[DEFAULT]");
              A.defaultTargetPlatform();
              $async$goto = defaultApp == null ? 6 : 7;
              break;
            case 6:
              // then
              $async$goto = 8;
              return A._asyncAwait($.$get$MethodChannelFirebase_api().initializeApp$2("[DEFAULT]", new A.PigeonFirebaseOptions(options.apiKey, options.appId, options.messagingSenderId, options.projectId, options.authDomain, options.databaseURL, options.storageBucket, options.measurementId, options.trackingId, options.deepLinkURLScheme, options.androidClientId, options.iosClientId, options.iosBundleId, options.appGroupId)), $async$initializeApp$2$name$options);
            case 8:
              // returning from await.
              $async$self._initializeFirebaseAppFromMap$1($async$result);
              defaultApp = $.MethodChannelFirebase_appInstances.$index(0, "[DEFAULT]");
            case 7:
              // join
              if (defaultApp != null && !B.JSString_methods.startsWith$1(options.projectId, "demo-")) {
                t1 = defaultApp.options;
                t2 = true;
                if (options.apiKey === t1.apiKey) {
                  t3 = options.databaseURL;
                  if (!(t3 != null && t3 !== t1.databaseURL)) {
                    t2 = options.storageBucket;
                    t1 = t2 != null && t2 !== t1.storageBucket;
                  } else
                    t1 = t2;
                } else
                  t1 = t2;
                if (t1)
                  throw A.wrapException(A.duplicateApp("[DEFAULT]"));
              }
              t1 = $.MethodChannelFirebase_appInstances.$index(0, "[DEFAULT]");
              t1.toString;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeApp$2$name$options, $async$completer);
    }
  };
  A.MethodChannelFirebase__initializeCore_closure.prototype = {
    call$1(element) {
      return element != null;
    },
    $signature: 108
  };
  A.MethodChannelFirebaseApp.prototype = {};
  A.FirebasePlatform.prototype = {};
  A.FirebaseAppPlatform.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.FirebaseAppPlatform))
        return false;
      return other.name === this.name && other.options.$eq(0, this.options);
    },
    get$hashCode(_) {
      return A.Object_hash(this.name, this.options, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return B.Type_FirebaseAppPlatform_Tis.toString$0(0) + "(" + this.name + ")";
    }
  };
  A.PigeonFirebaseOptions.prototype = {
    encode$0() {
      var _this = this;
      return [_this.apiKey, _this.appId, _this.messagingSenderId, _this.projectId, _this.authDomain, _this.databaseURL, _this.storageBucket, _this.measurementId, _this.trackingId, _this.deepLinkURLScheme, _this.androidClientId, _this.iosClientId, _this.iosBundleId, _this.appGroupId];
    }
  };
  A.PigeonInitializeResponse.prototype = {};
  A._FirebaseCoreHostApiCodec.prototype = {
    writeValue$2(_, buffer, value) {
      if (value instanceof A.PigeonFirebaseOptions) {
        buffer._serialization$_add$1(0, 128);
        this.writeValue$2(0, buffer, value.encode$0());
      } else if (value instanceof A.PigeonInitializeResponse) {
        buffer._serialization$_add$1(0, 129);
        this.writeValue$2(0, buffer, [value.name, value.options.encode$0(), value.isAutomaticDataCollectionEnabled, value.pluginConstants]);
      } else
        this.super$StandardMessageCodec$writeValue(0, buffer, value);
    },
    readValueOfType$2(type, buffer) {
      var t1, t2, t3, t4, t5;
      switch (type) {
        case 128:
          t1 = this.readValue$1(0, buffer);
          t1.toString;
          return A.PigeonFirebaseOptions_decode(t1);
        case 129:
          t1 = this.readValue$1(0, buffer);
          t1.toString;
          t2 = type$.List_nullable_Object;
          t2._as(t1);
          t3 = J.getInterceptor$asx(t1);
          t4 = t3.$index(t1, 0);
          t4.toString;
          A._asString(t4);
          t5 = t3.$index(t1, 1);
          t5.toString;
          t5 = A.PigeonFirebaseOptions_decode(t2._as(t5));
          t2 = A._asBoolQ(t3.$index(t1, 2));
          t1 = type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(t3.$index(t1, 3));
          t1.toString;
          return new A.PigeonInitializeResponse(t4, t5, t2, J.cast$2$0$ax(t1, type$.nullable_String, type$.nullable_Object));
        default:
          return this.super$StandardMessageCodec$readValueOfType(type, buffer);
      }
    }
  };
  A.FirebaseCoreHostApi.prototype = {
    initializeApp$2(arg_appName, arg_initializeAppRequest) {
      return this.initializeApp$body$FirebaseCoreHostApi(arg_appName, arg_initializeAppRequest);
    },
    initializeApp$body$FirebaseCoreHostApi(arg_appName, arg_initializeAppRequest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.PigeonInitializeResponse),
        $async$returnValue, t1, t2, t3, replyList, $async$temp1;
      var $async$initializeApp$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = type$.nullable_List_nullable_Object;
              $async$goto = 3;
              return A._asyncAwait(new A.BasicMessageChannel("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", B.C__FirebaseCoreHostApiCodec, null, type$.BasicMessageChannel_nullable_Object).send$1(0, [arg_appName, arg_initializeAppRequest]), $async$initializeApp$2);
            case 3:
              // returning from await.
              replyList = $async$temp1._as($async$result);
              if (replyList == null)
                throw A.wrapException(A.PlatformException$("channel-error", null, string$.Unable, null));
              else {
                t1 = J.getInterceptor$asx(replyList);
                if (t1.get$length(replyList) > 1) {
                  t2 = t1.$index(replyList, 0);
                  t2.toString;
                  A._asString(t2);
                  t3 = A._asStringQ(t1.$index(replyList, 1));
                  throw A.wrapException(A.PlatformException$(t2, t1.$index(replyList, 2), t3, null));
                } else if (t1.$index(replyList, 0) == null)
                  throw A.wrapException(A.PlatformException$("null-error", null, string$.Host_p, null));
                else {
                  t1 = type$.nullable_PigeonInitializeResponse._as(t1.$index(replyList, 0));
                  t1.toString;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeApp$2, $async$completer);
    },
    initializeCore$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.List_nullable_PigeonInitializeResponse),
        $async$returnValue, t2, t3, t1, replyList, $async$temp1;
      var $async$initializeCore$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.nullable_List_nullable_Object;
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait(new A.BasicMessageChannel("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", B.C__FirebaseCoreHostApiCodec, null, type$.BasicMessageChannel_nullable_Object).send$1(0, null), $async$initializeCore$0);
            case 3:
              // returning from await.
              replyList = $async$temp1._as($async$result);
              if (replyList == null)
                throw A.wrapException(A.PlatformException$("channel-error", null, string$.Unable, null));
              else {
                t2 = J.getInterceptor$asx(replyList);
                if (t2.get$length(replyList) > 1) {
                  t1 = t2.$index(replyList, 0);
                  t1.toString;
                  A._asString(t1);
                  t3 = A._asStringQ(t2.$index(replyList, 1));
                  throw A.wrapException(A.PlatformException$(t1, t2.$index(replyList, 2), t3, null));
                } else if (t2.$index(replyList, 0) == null)
                  throw A.wrapException(A.PlatformException$("null-error", null, string$.Host_p, null));
                else {
                  t1 = t1._as(t2.$index(replyList, 0));
                  t1.toString;
                  $async$returnValue = J.cast$1$0$ax(t1, type$.nullable_PigeonInitializeResponse);
                  // goto return
                  $async$goto = 1;
                  break;
                }
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeCore$0, $async$completer);
    }
  };
  A.FirebaseAppHostApi.prototype = {};
  A.FirebaseAppWeb.prototype = {};
  A.FirebaseWebService.prototype = {};
  A.FirebaseCoreWeb.prototype = {
    get$_ignoredServiceScripts() {
      var ignored, t1, t2, exception;
      try {
        ignored = type$.JSObject._as(self).flutterfire_ignore_scripts;
        t1 = type$.Iterable_dynamic;
        if (t1._is(ignored)) {
          t2 = ignored;
          t2.toString;
          t2 = J.map$1$1$ax(t1._as(t2), new A.FirebaseCoreWeb__ignoredServiceScripts_closure(), type$.String);
          t2 = A.List_List$of(t2, false, t2.$ti._eval$1("ListIterable.E"));
          return t2;
        }
      } catch (exception) {
      }
      return A._setArrayType([], type$.JSArray_String);
    },
    injectSrcScript$2(src, windowVar) {
      return this.injectSrcScript$body$FirebaseCoreWeb(src, windowVar);
    },
    injectSrcScript$body$FirebaseCoreWeb(src, windowVar) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        trustedTypePolicyName, policy, trustedUrl, stringUrl, trustedScript, e, t2, t3, exception, t1, script;
      var $async$injectSrcScript$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = self;
              script = t1.document.createElement("script");
              script.type = "text/javascript";
              script.crossOrigin = "anonymous";
              trustedTypePolicyName = "flutterfire-" + windowVar;
              if (t1.window.trustedTypes != null) {
                t1.console.debug("TrustedTypes available. Creating policy: " + A.S(trustedTypePolicyName));
                try {
                  t2 = t1.window.trustedTypes;
                  t3 = A._functionToJS1(new A.FirebaseCoreWeb_injectSrcScript_closure(src));
                  policy = t2.createPolicy(trustedTypePolicyName, {createScript: A._functionToJS2(new A.FirebaseCoreWeb_injectSrcScript_closure0()), createScriptURL: t3});
                  trustedUrl = policy.createScriptURL(src);
                  stringUrl = A.JSObjectUnsafeUtilExtension_callMethod(trustedUrl, "toString", null, type$.nullable_Object);
                  trustedScript = policy.createScript("            window.ff_trigger_" + windowVar + ' = async (callback) => {\n              console.debug("Initializing Firebase ' + windowVar + '");\n              callback(await import("' + A.S(stringUrl) + '"));\n            };\n          ', null);
                  script.text = trustedScript;
                  t1.document.head.appendChild(script);
                } catch (exception) {
                  e = A.unwrapException(exception);
                  t1 = J.toString$0$(e);
                  throw A.wrapException(new A.TrustedTypesException(t1));
                }
              } else {
                script.text = "      window.ff_trigger_" + windowVar + ' = async (callback) => {\n        console.debug("Initializing Firebase ' + windowVar + '");\n        callback(await import("' + src + '"));\n      };\n    ';
                t1.document.head.appendChild(script);
              }
              t2 = new A._Future($.Zone__current, type$._Future_dynamic);
              A.JSObjectUnsafeUtilExtension_callMethod(type$.JSObject._as(t1), "ff_trigger_" + windowVar, A._functionToJS1(new A.FirebaseCoreWeb_injectSrcScript_closure1(windowVar, new A._AsyncCompleter(t2, type$._AsyncCompleter_dynamic))), type$.nullable_Object);
              $async$goto = 2;
              return A._asyncAwait(t2, $async$injectSrcScript$2);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$injectSrcScript$2, $async$completer);
    },
    _firebase_core_web$_initializeCore$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, overridedWebSDKVersion, version, ignored, t1;
      var $async$_firebase_core_web$_initializeCore$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JSObject._as(self);
              if (t1.firebase_core != null) {
                // goto return
                $async$goto = 1;
                break;
              }
              overridedWebSDKVersion = A._asStringQ(t1.flutterfire_web_sdk_version);
              if (overridedWebSDKVersion == null)
                overridedWebSDKVersion = null;
              version = overridedWebSDKVersion == null ? "10.11.1" : overridedWebSDKVersion;
              ignored = $async$self.get$_ignoredServiceScripts();
              t1 = $.$get$FirebaseCoreWeb__services().get$values(0);
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(A.MappedIterable_MappedIterable(t1, new A.FirebaseCoreWeb__initializeCore_closure($async$self, ignored, version), A._instanceType(t1)._eval$1("Iterable.E"), type$.Future_void), false, type$.void), $async$_firebase_core_web$_initializeCore$0);
            case 3:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_firebase_core_web$_initializeCore$0, $async$completer);
    },
    initializeApp$2$name$options($name, options) {
      return this.initializeApp$body$FirebaseCoreWeb($name, options);
    },
    initializeApp$body$FirebaseCoreWeb($name, options) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FirebaseAppPlatform),
        $async$returnValue, $async$self = this, defaultAppExists, t2, exception, t3, t4, appCheck, t5, t6, t7, t8, t9, t10, t1;
      var $async$initializeApp$2$name$options = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              $async$goto = 3;
              return A._asyncAwait($async$self._firebase_core_web$_initializeCore$0(), $async$initializeApp$2$name$options);
            case 3:
              // returning from await.
              A.guardNotInitialized(new A.FirebaseCoreWeb_initializeApp_closure(), type$.String);
              t1.app = null;
              defaultAppExists = false;
              try {
                t2 = self;
                t1.app = A.App_getInstance(t2.firebase_core.getApp());
                defaultAppExists = true;
              } catch (exception) {
              }
              if (defaultAppExists) {
                t2 = t1.app.jsObject;
                t3 = t2.options.apiKey;
                if (t3 == null)
                  t3 = null;
                t4 = true;
                if (options.apiKey === t3) {
                  t3 = t2.options.databaseURL;
                  if (t3 == null)
                    t3 = null;
                  if (options.databaseURL == t3) {
                    t2 = t2.options.storageBucket;
                    if (t2 == null)
                      t2 = null;
                    t2 = options.storageBucket != t2;
                  } else
                    t2 = t4;
                } else
                  t2 = t4;
                if (t2)
                  throw A.wrapException(A.duplicateApp("[DEFAULT]"));
              } else
                t1.app = A.initializeApp(options.apiKey, options.appId, options.authDomain, options.databaseURL, options.measurementId, options.messagingSenderId, null, options.projectId, options.storageBucket);
              appCheck = $.$get$FirebaseCoreWeb__services().remove$1(0, "app-check");
              $async$goto = appCheck != null ? 4 : 5;
              break;
            case 4:
              // then
              t2 = appCheck.ensurePluginInitialized;
              t2.toString;
              t3 = t1.app;
              t3.toString;
              $async$goto = 6;
              return A._asyncAwait(t2.call$1(t3), $async$initializeApp$2$name$options);
            case 6:
              // returning from await.
            case 5:
              // join
              t2 = $.$get$FirebaseCoreWeb__services().get$values(0);
              $async$goto = 7;
              return A._asyncAwait(A.Future_wait(A.MappedIterable_MappedIterable(t2, new A.FirebaseCoreWeb_initializeApp_closure0(t1), A._instanceType(t2)._eval$1("Iterable.E"), type$.Future_void), false, type$.void), $async$initializeApp$2$name$options);
            case 7:
              // returning from await.
              t1 = t1.app.jsObject;
              t2 = t1.name;
              t1 = t1.options;
              t3 = t1.apiKey;
              if (t3 == null)
                t3 = null;
              if (t3 == null)
                t3 = "";
              t4 = t1.projectId;
              if (t4 == null)
                t4 = null;
              if (t4 == null)
                t4 = "";
              t5 = t1.authDomain;
              if (t5 == null)
                t5 = null;
              t6 = t1.databaseURL;
              if (t6 == null)
                t6 = null;
              t7 = t1.storageBucket;
              if (t7 == null)
                t7 = null;
              t8 = t1.messagingSenderId;
              if (t8 == null)
                t8 = null;
              if (t8 == null)
                t8 = "";
              t9 = t1.appId;
              if (t9 == null)
                t9 = null;
              if (t9 == null)
                t9 = "";
              t1 = t1.measurementId;
              if (t1 == null)
                t1 = null;
              t10 = $.$get$FirebaseAppPlatform__token();
              t1 = new A.FirebaseAppWeb(t2, new A.FirebaseOptions(t3, t9, t8, t4, t5, t6, t7, t1, null, null, null, null, null, null));
              $.$get$PlatformInterface__instanceTokens().$indexSet(0, t1, t10);
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeApp$2$name$options, $async$completer);
    }
  };
  A.FirebaseCoreWeb_registerService_closure.prototype = {
    call$0() {
      return new A.FirebaseWebService(this.service, this.productNameOverride, this.ensurePluginInitialized);
    },
    $signature: 109
  };
  A.FirebaseCoreWeb__ignoredServiceScripts_closure.prototype = {
    call$1(e) {
      return J.toString$0$(e);
    },
    $signature: 110
  };
  A.FirebaseCoreWeb_injectSrcScript_closure.prototype = {
    call$1(url) {
      return this.src;
    },
    $signature: 37
  };
  A.FirebaseCoreWeb_injectSrcScript_closure0.prototype = {
    call$2(script, type) {
      return script;
    },
    $signature: 111
  };
  A.FirebaseCoreWeb_injectSrcScript_closure1.prototype = {
    call$1(module) {
      var t1 = type$.JSObject._as(self),
        _this = this.windowVar;
      t1[_this] = module;
      delete t1["ff_trigger_" + _this];
      this.completer.complete$0(0);
    },
    $signature: 112
  };
  A.FirebaseCoreWeb__initializeCore_closure.prototype = {
    call$1(service) {
      var t1 = service.override,
        t2 = t1 == null,
        t3 = t2 ? service.name : t1;
      if (B.JSArray_methods.contains$1(this.ignored, t3))
        return A.Future_Future$value(null, type$.dynamic);
      t3 = service.name;
      if (t2)
        t1 = t3;
      return this.$this.injectSrcScript$2("https://www.gstatic.com/firebasejs/" + this.version + "/firebase-" + t3 + ".js", "firebase_" + t1);
    },
    $signature: 72
  };
  A.FirebaseCoreWeb_initializeApp_closure.prototype = {
    call$0() {
      return self.firebase_core.SDK_VERSION;
    },
    $signature: 25
  };
  A.FirebaseCoreWeb_initializeApp_closure0.prototype = {
    call$1(service) {
      var t1 = A.Future_Future$value(null, type$.dynamic);
      return t1;
    },
    $signature: 72
  };
  A.TrustedTypesException.prototype = {
    toString$0(_) {
      return "TrustedTypesException: " + this.message;
    },
    $isException: 1
  };
  A.App.prototype = {};
  A.JsObjectWrapper.prototype = {};
  A.AnimationStatus.prototype = {
    _enumToString$0() {
      return "AnimationStatus." + this._name;
    }
  };
  A.Animation0.prototype = {
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + this.toStringDetails$0() + ")";
    },
    toStringDetails$0() {
      switch (this.get$status(this).index) {
        case 1:
          var t1 = "\u25b6";
          break;
        case 2:
          t1 = "\u25c0";
          break;
        case 3:
          t1 = "\u23ed";
          break;
        case 0:
          t1 = "\u23ee";
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A._AnimationDirection.prototype = {
    _enumToString$0() {
      return "_AnimationDirection." + this._name;
    }
  };
  A.AnimationBehavior.prototype = {
    _enumToString$0() {
      return "AnimationBehavior." + this._name;
    }
  };
  A.AnimationController.prototype = {
    set$value(_, newValue) {
      var _this = this;
      _this.stop$0(0);
      _this._internalSetValue$1(newValue);
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    _internalSetValue$1(newValue) {
      var _this = this,
        t1 = _this.lowerBound,
        t2 = _this.upperBound,
        t3 = _this.__AnimationController__value_A = A.clampDouble(newValue, t1, t2);
      if (t3 === t1)
        _this.__AnimationController__status_A = B.AnimationStatus_0;
      else if (t3 === t2)
        _this.__AnimationController__status_A = B.AnimationStatus_3;
      else {
        switch (_this._direction.index) {
          case 0:
            t1 = B.AnimationStatus_1;
            break;
          case 1:
            t1 = B.AnimationStatus_2;
            break;
          default:
            t1 = null;
        }
        _this.__AnimationController__status_A = t1;
      }
    },
    get$status(_) {
      var t1 = this.__AnimationController__status_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    forward$1$from(_, from) {
      var _this = this;
      _this._direction = B._AnimationDirection_0;
      if (from != null)
        _this.set$value(0, from);
      return _this._animateToInternal$1(_this.upperBound);
    },
    forward$0(_) {
      return this.forward$1$from(0, null);
    },
    reverse$1$from(_, from) {
      this._direction = B._AnimationDirection_1;
      return this._animateToInternal$1(this.lowerBound);
    },
    reverse$0(_) {
      return this.reverse$1$from(0, null);
    },
    _animateToInternal$3$curve$duration(target, curve, duration) {
      var _0_2, t1, value, range, t2, remainingFraction, directionDuration, simulationDuration, t3, _this = this,
        _0_0 = _this.animationBehavior;
      $label0$0: {
        _0_2 = B.AnimationBehavior_0 === _0_0;
        if (_0_2) {
          t1 = $.SemanticsBinding__instance.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A;
          t1 === $ && A.throwUnnamedLateFieldNI();
          value = (t1.__engine$_index & 4) !== 0;
          t1 = value;
        } else
          t1 = false;
        if (t1) {
          t1 = 0.05;
          break $label0$0;
        }
        if (_0_2 || B.AnimationBehavior_1 === _0_0) {
          t1 = 1;
          break $label0$0;
        }
        t1 = null;
      }
      if (duration == null) {
        range = _this.upperBound - _this.lowerBound;
        if (isFinite(range)) {
          t2 = _this.__AnimationController__value_A;
          t2 === $ && A.throwUnnamedLateFieldNI();
          remainingFraction = Math.abs(target - t2) / range;
        } else
          remainingFraction = 1;
        if (_this._direction === B._AnimationDirection_1 && _this.reverseDuration != null) {
          t2 = _this.reverseDuration;
          t2.toString;
          directionDuration = t2;
        } else {
          t2 = _this.duration;
          t2.toString;
          directionDuration = t2;
        }
        simulationDuration = new A.Duration(B.JSNumber_methods.round$0(directionDuration._duration * remainingFraction));
      } else {
        t2 = _this.__AnimationController__value_A;
        t2 === $ && A.throwUnnamedLateFieldNI();
        simulationDuration = target === t2 ? B.Duration_0 : duration;
      }
      _this.stop$0(0);
      t2 = simulationDuration._duration;
      if (t2 === B.Duration_0._duration) {
        t1 = _this.__AnimationController__value_A;
        t1 === $ && A.throwUnnamedLateFieldNI();
        if (t1 !== target) {
          _this.__AnimationController__value_A = A.clampDouble(target, _this.lowerBound, _this.upperBound);
          _this.notifyListeners$0();
        }
        _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_3 : B.AnimationStatus_0;
        _this._checkStatusChanged$0();
        return A.TickerFuture$complete();
      }
      t3 = _this.__AnimationController__value_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      return _this._startSimulation$1(new A._InterpolationSimulation(t2 * t1 / 1000000, t3, target, curve, B.Tolerance_RoN));
    },
    _animateToInternal$1(target) {
      return this._animateToInternal$3$curve$duration(target, B.C__Linear, null);
    },
    animateWith$1(simulation) {
      this.stop$0(0);
      this._direction = B._AnimationDirection_0;
      return this._startSimulation$1(simulation);
    },
    _startSimulation$1(simulation) {
      var result, _this = this;
      _this._simulation = simulation;
      _this._lastElapsedDuration = B.Duration_0;
      _this.__AnimationController__value_A = A.clampDouble(simulation.x$1(0, 0), _this.lowerBound, _this.upperBound);
      result = _this._ticker.start$0(0);
      _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_1 : B.AnimationStatus_2;
      _this._checkStatusChanged$0();
      return result;
    },
    stop$1$canceled(_, canceled) {
      this._lastElapsedDuration = this._simulation = null;
      this._ticker.stop$1$canceled(0, canceled);
    },
    stop$0(_) {
      return this.stop$1$canceled(0, true);
    },
    _checkStatusChanged$0() {
      var _this = this,
        t1 = _this.__AnimationController__status_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (_this._lastReportedStatus !== t1) {
        _this._lastReportedStatus = t1;
        _this.notifyStatusListeners$1(t1);
      }
    },
    _animation_controller$_tick$1(elapsed) {
      var elapsedInSeconds, _this = this;
      _this._lastElapsedDuration = elapsed;
      elapsedInSeconds = elapsed._duration / 1000000;
      _this.__AnimationController__value_A = A.clampDouble(_this._simulation.x$1(0, elapsedInSeconds), _this.lowerBound, _this.upperBound);
      if (_this._simulation.isDone$1(elapsedInSeconds)) {
        _this.__AnimationController__status_A = _this._direction === B._AnimationDirection_0 ? B.AnimationStatus_3 : B.AnimationStatus_0;
        _this.stop$1$canceled(0, false);
      }
      _this.notifyListeners$0();
      _this._checkStatusChanged$0();
    },
    toStringDetails$0() {
      var ticker,
        t1 = this._ticker,
        t2 = t1 == null,
        paused = !t2 && t1._ticker$_future != null ? "" : "; paused";
      if (t2)
        ticker = "; DISPOSED";
      else
        ticker = t1._muted ? "; silenced" : "";
      t1 = this.super$Animation$toStringDetails();
      t2 = this.__AnimationController__value_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      return t1 + " " + B.JSNumber_methods.toStringAsFixed$1(t2, 3) + paused + ticker;
    }
  };
  A._InterpolationSimulation.prototype = {
    x$1(_, timeInSeconds) {
      var t1, _this = this,
        t = A.clampDouble(timeInSeconds / _this._durationInSeconds, 0, 1);
      $label0$0: {
        if (0 === t) {
          t1 = _this._begin;
          break $label0$0;
        }
        if (1 === t) {
          t1 = _this._animation_controller$_end;
          break $label0$0;
        }
        t1 = _this._begin;
        t1 += (_this._animation_controller$_end - t1) * _this._curve.transform$1(0, t);
        break $label0$0;
      }
      return t1;
    },
    isDone$1(timeInSeconds) {
      return timeInSeconds > this._durationInSeconds;
    }
  };
  A._AnimationController_Animation_AnimationEagerListenerMixin.prototype = {};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin.prototype = {};
  A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin.prototype = {};
  A.ParametricCurve.prototype = {
    transform$1(_, t) {
      return this.transformInternal$1(t);
    },
    transformInternal$1(t) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    toString$0(_) {
      return "ParametricCurve";
    }
  };
  A.Curve.prototype = {
    transform$1(_, t) {
      if (t === 0 || t === 1)
        return t;
      return this.super$ParametricCurve$transform(0, t);
    }
  };
  A._Linear.prototype = {
    transformInternal$1(t) {
      return t;
    }
  };
  A.Cubic.prototype = {
    _evaluateCubic$3(a, b, m) {
      var t1 = 1 - m;
      return 3 * a * t1 * t1 * m + 3 * b * t1 * m * m + m * m * m;
    },
    transformInternal$1(t) {
      var t1, t2, start, end, midpoint, estimate, _this = this;
      for (t1 = _this.a, t2 = _this.c, start = 0, end = 1; true;) {
        midpoint = (start + end) / 2;
        estimate = _this._evaluateCubic$3(t1, t2, midpoint);
        if (Math.abs(t - estimate) < 0.001)
          return _this._evaluateCubic$3(_this.b, _this.d, midpoint);
        if (estimate < t)
          start = midpoint;
        else
          end = midpoint;
      }
    },
    toString$0(_) {
      var _this = this;
      return "Cubic(" + B.JSNumber_methods.toStringAsFixed$1(_this.a, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.b, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.c, 2) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.d, 2) + ")";
    }
  };
  A._DecelerateCurve.prototype = {
    transformInternal$1(t) {
      t = 1 - t;
      return 1 - t * t;
    }
  };
  A.AnimationEagerListenerMixin.prototype = {
    didRegisterListener$0() {
    }
  };
  A.AnimationLocalListenersMixin.prototype = {
    notifyListeners$0() {
      var listener, collector, exception, stack, _i, exception0, t3, t4,
        t1 = this.AnimationLocalListenersMixin__listeners,
        t2 = t1._list,
        localListeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        collector = null;
        try {
          if (t1.contains$1(0, listener))
            listener.call$0();
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t3 = A.ErrorDescription$("while notifying listeners for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "animation library", t3, collector, false));
        }
      }
    }
  };
  A.AnimationLocalStatusListenersMixin.prototype = {
    notifyStatusListeners$1($status) {
      var listener, exception, stack, collector, _i, exception0, t3, t4,
        t1 = this.AnimationLocalStatusListenersMixin__statusListeners,
        t2 = t1._list,
        localListeners = J.JSArray_JSArray$markFixed(t2.slice(0), A._arrayInstanceType(t2)._precomputed1);
      for (t2 = localListeners.length, _i = 0; _i < localListeners.length; localListeners.length === t2 || (0, A.throwConcurrentModificationError)(localListeners), ++_i) {
        listener = localListeners[_i];
        try {
          if (t1.contains$1(0, listener))
            listener.call$1($status);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while notifying status listeners for " + A.getRuntimeTypeOfDartObject(this).toString$0(0));
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "animation library", t3, collector, false));
        }
      }
    }
  };
  A._ErrorDiagnostic.prototype = {
    toString$1$minLevel(_, minLevel) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this, 0);
      t1.toString;
      return J.join$0$ax(t1);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    },
    get$value(_) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this, 0);
      t1.toString;
      return t1;
    },
    valueToString$1$parentConfiguration(parentConfiguration) {
      var t1 = A.DiagnosticsProperty.prototype.get$value.call(this, 0);
      t1.toString;
      return J.join$0$ax(t1);
    }
  };
  A.ErrorDescription.prototype = {};
  A.ErrorSummary.prototype = {};
  A.ErrorHint.prototype = {};
  A.ErrorSpacer.prototype = {};
  A.FlutterErrorDetails.prototype = {
    exceptionAsString$0() {
      var message, fullMessage, t1, t2, position, body, splitPoint,
        longMessage = this.exception;
      if (type$.AssertionError._is(longMessage)) {
        message = longMessage.get$message(longMessage);
        fullMessage = longMessage.toString$0(0);
        longMessage = null;
        if (typeof message == "string" && message !== fullMessage) {
          t1 = fullMessage.length;
          t2 = message.length;
          if (t1 > t2) {
            position = B.JSString_methods.lastIndexOf$1(fullMessage, message);
            if (position === t1 - t2 && position > 2 && B.JSString_methods.substring$2(fullMessage, position - 2, position) === ": ") {
              body = B.JSString_methods.substring$2(fullMessage, 0, position - 2);
              splitPoint = B.JSString_methods.indexOf$1(body, " Failed assertion:");
              if (splitPoint >= 0)
                body = B.JSString_methods.substring$2(body, 0, splitPoint) + "\n" + B.JSString_methods.substring$1(body, splitPoint + 1);
              longMessage = B.JSString_methods.trimRight$0(message) + "\n" + body;
            }
          }
        }
        if (longMessage == null)
          longMessage = fullMessage;
      } else if (!(typeof longMessage == "string"))
        longMessage = type$.Error._is(longMessage) || type$.Exception._is(longMessage) ? J.toString$0$(longMessage) : "  " + A.S(longMessage);
      longMessage = B.JSString_methods.trimRight$0(longMessage);
      return longMessage.length === 0 ? "  <no message available>" : longMessage;
    },
    _exceptionToDiagnosticable$0() {
      var exception = this.exception;
      if (exception instanceof A.FlutterError)
        return exception;
      if (type$.AssertionError._is(exception))
        exception.get$message(exception);
      return null;
    },
    get$summary() {
      var t1, summary;
      if (this._exceptionToDiagnosticable$0() != null) {
        t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
        this.debugFillProperties$1(new A.DiagnosticPropertiesBuilder(t1, B.DiagnosticsTreeStyle_1));
        t1 = new A.CastList(t1, type$.CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode);
        summary = t1.firstWhere$2$orElse(t1, new A.FlutterErrorDetails_summary_closure(), new A.FlutterErrorDetails_summary_closure0());
      } else
        summary = null;
      return summary == null ? A.ErrorSummary$(new A.FlutterErrorDetails_summary_formatException(this).call$0()) : summary;
    },
    debugFillProperties$1(properties) {
      var t1, verb, diagnosticable, errorName, t2, t3, prefix, message, stackFrames, _this = this;
      _this.super$Diagnosticable$debugFillProperties(properties);
      t1 = _this.context;
      verb = A.ErrorDescription$("thrown" + A.S(t1 != null ? A.ErrorDescription$(" " + t1.toString$0(0)) : ""));
      diagnosticable = _this._exceptionToDiagnosticable$0();
      t1 = _this.exception;
      if (typeof t1 == "number")
        A.ErrorDescription$("The number " + A.S(t1) + " was " + verb.toString$0(0) + ".");
      else {
        if (type$.AssertionError._is(t1))
          errorName = A.ErrorDescription$("assertion");
        else if (typeof t1 == "string")
          errorName = A.ErrorDescription$("message");
        else {
          t2 = type$.Error._is(t1) || type$.Exception._is(t1);
          t3 = J.getInterceptor$(t1);
          errorName = t2 ? A.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0)) : A.ErrorDescription$(t3.get$runtimeType(t1).toString$0(0) + " object");
        }
        A.ErrorDescription$("The following " + errorName.toString$0(0) + " was " + verb.toString$0(0) + ":");
        if (diagnosticable != null)
          B.JSArray_methods.forEach$1(diagnosticable.diagnostics, properties.get$add(properties));
        else {
          prefix = J.get$runtimeType$(t1).toString$0(0) + ": ";
          message = _this.exceptionAsString$0();
          A.ErrorSummary$(B.JSString_methods.startsWith$1(message, prefix) ? B.JSString_methods.substring$1(message, prefix.length) : message);
        }
      }
      t2 = _this.stack;
      if (t2 != null) {
        if (type$.AssertionError._is(t1) && diagnosticable == null) {
          t1 = A.StackFrame_fromStackString(A.FlutterError__defaultStackTraceDemangler(t2).toString$0(0));
          t3 = A._arrayInstanceType(t1)._eval$1("SkipWhileIterable<1>");
          stackFrames = A.List_List$of(new A.SkipWhileIterable(t1, new A.FlutterErrorDetails_debugFillProperties_closure(), t3), true, t3._eval$1("Iterable.E"));
          if (stackFrames.length >= 2 && stackFrames[0].$package === "flutter" && stackFrames[1].$package === "flutter") {
            A.ErrorSpacer$();
            A.ErrorHint$("Either the assertion indicates an error in the framework itself, or we should provide substantially more information in this error message to help you determine and fix the underlying cause.\nIn either case, please report this assertion by filing a bug on GitHub:\n  https://github.com/flutter/flutter/issues/new?template=2_bug.yml");
          }
        }
        A.ErrorSpacer$();
        A.DiagnosticsStackTrace$("When the exception was thrown, this was the stack", t2, null);
      }
      t1 = _this.informationCollector;
      if (t1 != null) {
        A.ErrorSpacer$();
        J.forEach$1$ax(t1.call$0(), properties.get$add(properties));
      }
    },
    toStringShort$0() {
      return "Exception caught by " + this.library;
    },
    toString$0(_) {
      A._FlutterErrorDetailsNode$(null, B.DiagnosticsTreeStyle_5, this);
      return "";
    }
  };
  A.FlutterErrorDetails_summary_formatException.prototype = {
    call$0() {
      return J.trimLeft$0$s(this.$this.exceptionAsString$0().split("\n")[0]);
    },
    $signature: 25
  };
  A.FlutterErrorDetails_summary_closure.prototype = {
    call$1(node) {
      return node.get$level(node) === B.DiagnosticLevel_6;
    },
    $signature: 115
  };
  A.FlutterErrorDetails_summary_closure0.prototype = {
    call$0() {
      return null;
    },
    $signature: 17
  };
  A.FlutterErrorDetails_debugFillProperties_closure.prototype = {
    call$1(frame) {
      return frame.packageScheme === "dart";
    },
    $signature: 116
  };
  A.FlutterError.prototype = {
    get$message(_) {
      return this.toString$0(0);
    },
    toStringShort$0() {
      return "FlutterError";
    },
    toString$0(_) {
      var t1 = this.diagnostics;
      return new A.MappedListIterable(t1, new A.FlutterError_toString_closure(new A.TextTreeRenderer(4000000000, 65, -1)), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, "\n");
    },
    $isAssertionError: 1,
    $isDiagnosticableTree: 1
  };
  A.FlutterError_FlutterError_closure.prototype = {
    call$1(line) {
      return A.ErrorDescription$(line);
    },
    $signature: 117
  };
  A.FlutterError_defaultStackFilter_closure.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 70
  };
  A.FlutterError_defaultStackFilter_closure0.prototype = {
    call$1(value) {
      return value + 1;
    },
    $signature: 70
  };
  A.FlutterError_toString_closure.prototype = {
    call$1(node) {
      return B.JSString_methods.trimRight$0(this.renderer._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, null, "", null));
    },
    $signature: 119
  };
  A.debugPrintStack_closure.prototype = {
    call$1(line) {
      return B.JSString_methods.contains$1(line, "StackTrace.current") || B.JSString_methods.contains$1(line, "dart-sdk/lib/_internal") || B.JSString_methods.contains$1(line, "dart:sdk_internal");
    },
    $signature: 23
  };
  A.DiagnosticsStackTrace.prototype = {
    get$allowTruncate() {
      return false;
    }
  };
  A._FlutterErrorDetailsNode.prototype = {
    get$builder() {
      A.DiagnosticableNode.prototype.get$builder.call(this);
      return null;
    }
  };
  A._FlutterError_Error_DiagnosticableTreeMixin.prototype = {};
  A._FlutterErrorDetails_Object_Diagnosticable.prototype = {};
  A.BindingBase.prototype = {
    BindingBase$0() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this, _null = null;
      A.FlutterTimeline_startSync("Framework initialization", _null);
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances();
      $.WidgetsBinding__instance = _this;
      t1 = type$.Element;
      t2 = A.HashSet_HashSet(t1);
      t3 = type$.KeyEventResult_Function_KeyEvent;
      t4 = type$.int;
      t5 = type$.HashedObserverList_of_KeyEventResult_Function_KeyEvent;
      t5 = new A._HighlightModeManager(new A.HashedObserverList(A.LinkedHashMap_LinkedHashMap(_null, _null, t3, t4), t5), new A.HashedObserverList(A.LinkedHashMap_LinkedHashMap(_null, _null, t3, t4), t5), new A.HashedObserverList(A.LinkedHashMap_LinkedHashMap(_null, _null, type$.void_Function_FocusHighlightMode, t4), type$.HashedObserverList_of_void_Function_FocusHighlightMode));
      t3 = A.FocusScopeNode$(true, "Root Focus Scope", false);
      t6 = new A.FocusManager(t5, t3, A.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode), A._setArrayType([], type$.JSArray__Autofocus), $.$get$ChangeNotifier__emptyListeners());
      t6.get$_respondToWindowFocus();
      t7 = new A._AppLifecycleListener(t6.get$_appLifecycleChange());
      t6._appLifecycleListener = t7;
      $.WidgetsBinding__instance.WidgetsBinding__observers.push(t7);
      t3._manager = t6;
      t3 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__keyEventManager_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3.keyMessageHandler = t5.get$handleKeyMessage();
      $.GestureBinding__instance.GestureBinding_pointerRouter._globalRoutes.$indexSet(0, t5.get$handlePointerEvent(), _null);
      t1 = new A.BuildOwner(new A._InactiveElements(t2), t6, A.LinkedHashMap_LinkedHashMap$_empty(type$.GlobalKey_State_StatefulWidget, t1));
      _this.WidgetsBinding__buildOwner = t1;
      t1.onBuildScheduled = _this.get$_handleBuildScheduled();
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._onLocaleChanged = _this.get$handleLocaleChanged();
      t1._onLocaleChangedZone = $.Zone__current;
      B.OptionalMethodChannel_jjv.setMethodCallHandler$1(_this.get$_handleNavigationInvocation());
      B.OptionalMethodChannel_HJf.setMethodCallHandler$1(_this.get$_handleBackGestureInvocation());
      t1 = new A.DefaultPlatformMenuDelegate(A.LinkedHashMap_LinkedHashMap$_empty(t4, type$.PlatformMenuItem), B.OptionalMethodChannel_1R8);
      B.OptionalMethodChannel_1R8.setMethodCallHandler$1(t1.get$_methodCallHandler());
      _this.WidgetsBinding___WidgetsBinding_platformMenuDelegate_A = t1;
      _this.initServiceExtensions$0();
      t1 = type$.String;
      A.postEvent("Flutter.FrameworkInitialization", A.LinkedHashMap_LinkedHashMap$_empty(t1, t1));
      A.Timeline_finishSync();
    },
    initInstances$0() {
    },
    initServiceExtensions$0() {
      this.registerStringServiceExtension$3$getter$name$setter(new A.BindingBase_initServiceExtensions_closure(), "connectedVmServiceUri", new A.BindingBase_initServiceExtensions_closure0());
      this.registerStringServiceExtension$3$getter$name$setter(new A.BindingBase_initServiceExtensions_closure1(), "activeDevToolsServerAddress", new A.BindingBase_initServiceExtensions_closure2());
    },
    registerBoolServiceExtension$3$getter$name$setter(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new A.BindingBase_registerBoolServiceExtension_closure(this, setter, $name, getter), $name);
    },
    registerNumericServiceExtension$3$getter$name$setter(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new A.BindingBase_registerNumericServiceExtension_closure(this, $name, setter, getter), $name);
    },
    _postExtensionStateChangedEvent$2($name, value) {
      A.postEvent("Flutter.ServiceExtensionStateChanged", A.LinkedHashMap_LinkedHashMap$_literal(["extension", "ext.flutter." + $name, "value", value], type$.String, type$.dynamic));
    },
    registerStringServiceExtension$3$getter$name$setter(getter, $name, setter) {
      this.registerServiceExtension$2$callback$name(new A.BindingBase_registerStringServiceExtension_closure(this, setter, $name, getter), $name);
    },
    registerServiceExtension$2$callback$name(callback, $name) {
      A.registerExtension("ext.flutter." + $name, new A.BindingBase_registerServiceExtension_closure(callback));
    },
    toString$0(_) {
      return "<BindingBase>";
    }
  };
  A.BindingBase_initServiceExtensions_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.connectedVmServiceUri;
              $async$returnValue = t1 == null ? "" : t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 35
  };
  A.BindingBase_initServiceExtensions_closure0.prototype = {
    call$1(uri) {
      return this.$call$body$BindingBase_initServiceExtensions_closure0(uri);
    },
    $call$body$BindingBase_initServiceExtensions_closure0(uri) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.connectedVmServiceUri = uri;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 68
  };
  A.BindingBase_initServiceExtensions_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.activeDevToolsServerAddress;
              $async$returnValue = t1 == null ? "" : t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 35
  };
  A.BindingBase_initServiceExtensions_closure2.prototype = {
    call$1(serverAddress) {
      return this.$call$body$BindingBase_initServiceExtensions_closure(serverAddress);
    },
    $call$body$BindingBase_initServiceExtensions_closure(serverAddress) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.activeDevToolsServerAddress = serverAddress;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 68
  };
  A.BindingBase_registerBoolServiceExtension_closure.prototype = {
    call$1(parameters) {
      return this.$call$body$BindingBase_registerBoolServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerBoolServiceExtension_closure(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$x(parameters);
              $async$goto = t1.containsKey$1(parameters, "enabled") ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self.setter.call$1(J.$eq$(t1.$index(parameters, "enabled"), "true")), $async$call$1);
            case 5:
              // returning from await.
              $async$goto = 6;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              t1 = $async$result ? "true" : "false";
              $async$self.$this._postExtensionStateChangedEvent$2($async$self.name, t1);
            case 4:
              // join
              $async$temp1 = A;
              $async$goto = 7;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$result ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 18
  };
  A.BindingBase_registerNumericServiceExtension_closure.prototype = {
    call$1(parameters) {
      return this.$call$body$BindingBase_registerNumericServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerNumericServiceExtension_closure(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.name;
              t2 = J.getInterceptor$x(parameters);
              $async$goto = t2.containsKey$1(parameters, t1) ? 3 : 4;
              break;
            case 3:
              // then
              t2 = t2.$index(parameters, t1);
              t2.toString;
              $async$goto = 5;
              return A._asyncAwait($async$self.setter.call$1(A.double_parse(t2)), $async$call$1);
            case 5:
              // returning from await.
              $async$temp1 = $async$self.$this;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 6;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              $async$temp1._postExtensionStateChangedEvent$2($async$temp2, $async$temp3.toString$0$($async$result));
            case 4:
              // join
              $async$temp1 = A;
              $async$temp2 = t1;
              $async$temp3 = J;
              $async$goto = 7;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal([$async$temp2, $async$temp3.toString$0$($async$result)], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 18
  };
  A.BindingBase_registerStringServiceExtension_closure.prototype = {
    call$1(parameters) {
      return this.$call$body$BindingBase_registerStringServiceExtension_closure(parameters);
    },
    $call$body$BindingBase_registerStringServiceExtension_closure(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, t1, $async$temp1, $async$temp2;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$x(parameters);
              $async$goto = t1.containsKey$1(parameters, "value") ? 3 : 4;
              break;
            case 3:
              // then
              t1 = t1.$index(parameters, "value");
              t1.toString;
              $async$goto = 5;
              return A._asyncAwait($async$self.setter.call$1(t1), $async$call$1);
            case 5:
              // returning from await.
              $async$temp1 = $async$self.$this;
              $async$temp2 = $async$self.name;
              $async$goto = 6;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 6:
              // returning from await.
              $async$temp1._postExtensionStateChangedEvent$2($async$temp2, $async$result);
            case 4:
              // join
              $async$temp1 = A;
              $async$goto = 7;
              return A._asyncAwait($async$self.getter.call$0(), $async$call$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal(["value", $async$result], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 18
  };
  A.BindingBase_registerServiceExtension_closure.prototype = {
    call$2(method, parameters) {
      return this.$call$body$BindingBase_registerServiceExtension_closure(method, parameters);
    },
    $call$body$BindingBase_registerServiceExtension_closure(method, parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ServiceExtensionResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, result, exception, stack, exception0, t1, t2, $async$exception0, $async$temp1;
      var $async$call$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.debugInstrumentAction("Wait for outer event loop", new A.BindingBase_registerServiceExtension__closure(), type$.void), $async$call$2);
            case 3:
              // returning from await.
              result = A._Cell$named("result");
              $async$handler = 5;
              $async$temp1 = result;
              $async$goto = 8;
              return A._asyncAwait($async$self.callback.call$1(parameters), $async$call$2);
            case 8:
              // returning from await.
              $async$temp1._value = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 7;
              break;
            case 5:
              // catch
              $async$handler = 4;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$('during a service extension callback for "' + method + '"');
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "Flutter framework", t1, null, false));
              t1 = type$.String;
              t2 = B.C_JsonCodec.encode$1(A.LinkedHashMap_LinkedHashMap$_literal(["exception", J.toString$0$(exception), "stack", J.toString$0$(stack), "method", method], t1, t1));
              A.ServiceExtensionResponse__validateErrorCode(-32000);
              A.checkNotNullable(t2, "errorDetail", t1);
              $async$returnValue = new A.ServiceExtensionResponse();
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 7;
              break;
            case 4:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 7:
              // after finally
              J.$indexSet$ax(result._readLocal$0(), "type", "_extensionType");
              J.$indexSet$ax(result._readLocal$0(), "method", method);
              $async$returnValue = A.ServiceExtensionResponse$result(B.C_JsonCodec.encode$1(result._readLocal$0()));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 65
  };
  A.BindingBase_registerServiceExtension__closure.prototype = {
    call$0() {
      return A.Future_Future$delayed(B.Duration_0, null, type$.void);
    },
    $signature: 6
  };
  A.Listenable.prototype = {};
  A.ChangeNotifier.prototype = {
    addListener$1(_, listener) {
      var t1, newListeners, i, t2, _this = this;
      if (_this.get$_count(_this) === _this.get$_change_notifier$_listeners().length) {
        t1 = type$.nullable_void_Function;
        if (_this.get$_count(_this) === 0)
          _this.set$_change_notifier$_listeners(A.List_List$filled(1, null, false, t1));
        else {
          newListeners = A.List_List$filled(_this.get$_change_notifier$_listeners().length * 2, null, false, t1);
          for (i = 0; i < _this.get$_count(_this); ++i)
            newListeners[i] = _this.get$_change_notifier$_listeners()[i];
          _this.set$_change_notifier$_listeners(newListeners);
        }
      }
      t1 = _this.get$_change_notifier$_listeners();
      t2 = _this.get$_count(_this);
      _this.set$_count(0, t2 + 1);
      t1[t2] = listener;
    },
    dispose$0() {
      this.set$_change_notifier$_listeners($.$get$ChangeNotifier__emptyListeners());
      this.set$_count(0, 0);
    },
    notifyListeners$0() {
      var i, exception, stack, end, t1, exception0, t2, newLength, newListeners, newIndex, listener, newIndex0, swapIndex, _this = this;
      if (_this.get$_count(_this) === 0)
        return;
      _this.set$_notificationCallStackDepth(_this.get$_notificationCallStackDepth() + 1);
      end = _this.get$_count(_this);
      for (i = 0; i < end; ++i)
        try {
          t1 = _this.get$_change_notifier$_listeners()[i];
          if (t1 != null)
            t1.call$0();
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          t1 = A.ErrorDescription$("while dispatching notifications for " + A.getRuntimeTypeOfDartObject(_this).toString$0(0));
          t2 = $.FlutterError_onError;
          if (t2 != null)
            t2.call$1(new A.FlutterErrorDetails(exception, stack, "foundation library", t1, new A.ChangeNotifier_notifyListeners_closure(_this), false));
        }
      _this.set$_notificationCallStackDepth(_this.get$_notificationCallStackDepth() - 1);
      if (_this.get$_notificationCallStackDepth() === 0 && _this.get$_reentrantlyRemovedListeners() > 0) {
        newLength = _this.get$_count(_this) - _this.get$_reentrantlyRemovedListeners();
        if (newLength * 2 <= _this.get$_change_notifier$_listeners().length) {
          newListeners = A.List_List$filled(newLength, null, false, type$.nullable_void_Function);
          for (newIndex = 0, i = 0; i < _this.get$_count(_this); ++i) {
            listener = _this.get$_change_notifier$_listeners()[i];
            if (listener != null) {
              newIndex0 = newIndex + 1;
              newListeners[newIndex] = listener;
              newIndex = newIndex0;
            }
          }
          _this.set$_change_notifier$_listeners(newListeners);
        } else
          for (i = 0; i < newLength; ++i)
            if (_this.get$_change_notifier$_listeners()[i] == null) {
              swapIndex = i + 1;
              for (; _this.get$_change_notifier$_listeners()[swapIndex] == null;)
                ++swapIndex;
              _this.get$_change_notifier$_listeners()[i] = _this.get$_change_notifier$_listeners()[swapIndex];
              _this.get$_change_notifier$_listeners()[swapIndex] = null;
            }
        _this.set$_reentrantlyRemovedListeners(0);
        _this.set$_count(0, newLength);
      }
    },
    get$_count(receiver) {
      return this.ChangeNotifier__count;
    },
    get$_change_notifier$_listeners() {
      return this.ChangeNotifier__listeners;
    },
    get$_notificationCallStackDepth() {
      return this.ChangeNotifier__notificationCallStackDepth;
    },
    get$_reentrantlyRemovedListeners() {
      return this.ChangeNotifier__reentrantlyRemovedListeners;
    },
    set$_count(receiver, val) {
      return this.ChangeNotifier__count = val;
    },
    set$_change_notifier$_listeners(val) {
      return this.ChangeNotifier__listeners = val;
    },
    set$_notificationCallStackDepth(val) {
      return this.ChangeNotifier__notificationCallStackDepth = val;
    },
    set$_reentrantlyRemovedListeners(val) {
      return this.ChangeNotifier__reentrantlyRemovedListeners = val;
    }
  };
  A.ChangeNotifier_notifyListeners_closure.prototype = {
    call$0() {
      var _null = null,
        t1 = this.$this;
      return A._setArrayType([A.DiagnosticsProperty$("The " + A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " sending notification was", t1, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null, type$.ChangeNotifier)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 19
  };
  A.ValueNotifier.prototype = {
    get$value(_) {
      return this._change_notifier$_value;
    },
    set$value(_, newValue) {
      if (J.$eq$(this._change_notifier$_value, newValue))
        return;
      this._change_notifier$_value = newValue;
      this.notifyListeners$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + A.S(this.get$value(this)) + ")";
    }
  };
  A.DiagnosticLevel.prototype = {
    _enumToString$0() {
      return "DiagnosticLevel." + this._name;
    }
  };
  A.DiagnosticsTreeStyle.prototype = {
    _enumToString$0() {
      return "DiagnosticsTreeStyle." + this._name;
    }
  };
  A.TextTreeConfiguration.prototype = {};
  A._WordWrapParseMode.prototype = {
    _enumToString$0() {
      return "_WordWrapParseMode." + this._name;
    }
  };
  A._PrefixedStringBuilder.prototype = {
    incrementPrefixOtherLines$2$updateCurrentLine(suffix, updateCurrentLine) {
      var _this = this,
        t1 = _this._currentLine._contents.length === 0 || updateCurrentLine,
        t2 = _this._nextPrefixOtherLines;
      if (t1) {
        t1 = t2 == null ? _this._prefixOtherLines : t2;
        t1.toString;
        _this._prefixOtherLines = t1 + suffix;
        _this._nextPrefixOtherLines = null;
      } else {
        t1 = t2 == null ? _this._prefixOtherLines : t2;
        t1.toString;
        _this._nextPrefixOtherLines = t1 + suffix;
      }
    },
    get$requiresMultipleLines() {
      var _this = this,
        t1 = _this._numLines,
        t2 = true;
      if (t1 <= 1)
        if (!(t1 === 1 && _this._currentLine._contents.length !== 0)) {
          t1 = _this._currentLine._contents;
          t1 = t1.length + (_this._diagnostics$_buffer._contents.length === 0 ? _this.prefixLineOne : _this._prefixOtherLines).length > _this.wrapWidth;
        } else
          t1 = t2;
      else
        t1 = t2;
      return t1;
    },
    _finalizeLine$1(addTrailingLineBreak) {
      var lines, $length, i, _i, line, _this = this,
        firstLine = _this._diagnostics$_buffer._contents.length === 0,
        t1 = _this._currentLine,
        t2 = t1._contents,
        text = t2.charCodeAt(0) == 0 ? t2 : t2;
      t1._contents = "";
      t1 = _this._wrappableRanges;
      if (t1.length === 0) {
        _this._writeLine$3$firstLine$includeLineBreak(text, firstLine, addTrailingLineBreak);
        return;
      }
      t2 = firstLine ? _this.prefixLineOne.length : _this._prefixOtherLines.length;
      lines = A._PrefixedStringBuilder__wordWrapLine(text, t1, _this.wrapWidth, _this._prefixOtherLines.length, t2);
      $length = lines.length;
      for (t2 = !addTrailingLineBreak, i = 0, _i = 0; _i < lines.length; lines.length === $length || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        ++i;
        _this._writeLine$3$firstLine$includeLineBreak(line, firstLine, !t2 || i < $length);
      }
      B.JSArray_methods.clear$0(t1);
    },
    write$2$allowWrap(_, s, allowWrap) {
      var lines, t1, t2, i, t3, line, wrapStart, wrapEnd, _this = this;
      if (s.length === 0)
        return;
      lines = s.split("\n");
      for (t1 = _this._currentLine, t2 = _this._wrappableRanges, i = 0; i < lines.length; ++i) {
        if (i > 0) {
          _this._finalizeLine$1(true);
          t3 = _this._nextPrefixOtherLines;
          if (t3 != null) {
            _this._prefixOtherLines = t3;
            _this._nextPrefixOtherLines = null;
          }
        }
        line = lines[i];
        t3 = line.length;
        if (t3 !== 0) {
          if (allowWrap) {
            wrapStart = t1._contents.length;
            wrapEnd = wrapStart + t3;
            if (t2.length !== 0 && B.JSArray_methods.get$last(t2) === wrapStart)
              B.JSArray_methods.set$last(t2, wrapEnd);
            else {
              t2.push(wrapStart);
              t2.push(wrapEnd);
            }
          }
          t1._contents += line;
        }
      }
    },
    write$1(_, s) {
      return this.write$2$allowWrap(0, s, false);
    },
    _updatePrefix$0() {
      var t1 = this._nextPrefixOtherLines;
      if (t1 != null) {
        this._prefixOtherLines = t1;
        this._nextPrefixOtherLines = null;
      }
    },
    _writeLine$3$firstLine$includeLineBreak(line, firstLine, includeLineBreak) {
      var _this = this,
        t1 = _this._diagnostics$_buffer,
        t2 = B.JSString_methods.trimRight$0(A.S(t1._contents.length === 0 ? _this.prefixLineOne : _this._prefixOtherLines) + line);
      t2 = t1._contents += t2;
      if (includeLineBreak)
        t1._contents = t2 + "\n";
      ++_this._numLines;
    },
    writeRawLines$1(lines) {
      var t1, t2, _this = this;
      if (lines.length === 0)
        return;
      if (_this._currentLine._contents.length !== 0)
        _this._finalizeLine$1(true);
      t1 = _this._diagnostics$_buffer;
      t2 = t1._contents += lines;
      if (!B.JSString_methods.endsWith$1(lines, "\n"))
        t1._contents = t2 + "\n";
      ++_this._numLines;
      _this._updatePrefix$0();
    },
    writeStretched$2(text, targetLineLength) {
      var t1, t2, targetLength, _this = this;
      _this.write$1(0, text);
      t1 = _this._currentLine;
      t2 = t1._contents;
      targetLength = targetLineLength - (t2.length + (_this._diagnostics$_buffer._contents.length === 0 ? _this.prefixLineOne : _this._prefixOtherLines).length);
      if (targetLength > 0) {
        t2 = B.JSString_methods.$mul(text[text.length - 1], targetLength);
        t1._contents += t2;
      }
      B.JSArray_methods.clear$0(_this._wrappableRanges);
    }
  };
  A._PrefixedStringBuilder__wordWrapLine_noWrap.prototype = {
    call$1(index) {
      var t1, t2, t3;
      for (t1 = this._box_0, t2 = this.wrapRanges; true;) {
        t3 = t1.currentChunk;
        if (t3 >= t2.length)
          return true;
        if (index < t2[t3 + 1])
          break;
        t1.currentChunk = t3 + 2;
      }
      return index < t2[t1.currentChunk];
    },
    $signature: 51
  };
  A._NoDefaultValue.prototype = {};
  A.TextTreeRenderer.prototype = {
    _debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(node, parentConfiguration, prefixLineOne, prefixOtherLines) {
      var isSingleLine, t1, t2, descendants, t3, t4, t5, builder, children, description, wrapName, wrapDescription, uppercaseTitle, $name, includeName, propertiesIterable, properties, i, t6, property, propertyRender, propertyLines, t7, t8, t9, prefixChildrenRaw, child, childStyle, childPrefixOtherLines, nextChildStyle, _this = this, _s1_ = "\n", _box_0 = {};
      _box_0.prefixOtherLines = prefixOtherLines;
      if (node.get$style(node) === B.DiagnosticsTreeStyle_8)
        isSingleLine = (parentConfiguration == null ? null : parentConfiguration.lineBreakProperties) !== true;
      else
        isSingleLine = false;
      if (prefixOtherLines == null) {
        _box_0.prefixOtherLines = prefixLineOne;
        t1 = prefixLineOne;
      } else
        t1 = prefixOtherLines;
      t2 = node.get$textTreeConfiguration();
      t2.toString;
      if (t1.length === 0)
        t1 = _box_0.prefixOtherLines = t1 + t2.prefixOtherLinesRootNode;
      if (node.get$style(node) === B.DiagnosticsTreeStyle_11) {
        descendants = A._setArrayType([], type$.JSArray_String);
        _box_0.lines = _box_0.depth = 0;
        new A.TextTreeRenderer__debugRender_visitor(_box_0, descendants).call$1(node);
        if (_box_0.lines > 1)
          t1 = prefixLineOne + ("This " + A.S(node.name) + " had the following descendants (showing up to depth 5):\n");
        else {
          t1 = A.S(node.name);
          t1 = descendants.length === 1 ? prefixLineOne + ("This " + t1 + " had the following child:\n") : prefixLineOne + ("This " + t1 + " has no descendants.\n");
        }
        t1 = A.StringBuffer__writeAll(t1, descendants, _s1_);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      t3 = _this._wrapWidthProperties;
      t4 = Math.max(_this._wrapWidth, t1.length + t3);
      t5 = new A.StringBuffer("");
      builder = new A._PrefixedStringBuilder(prefixLineOne, t1, t4, new A.StringBuffer(""), t5, A._setArrayType([], type$.JSArray_int));
      children = node.getChildren$0();
      description = node.toDescription$1$parentConfiguration(parentConfiguration);
      t1 = t2.beforeName;
      if (t1.length !== 0)
        builder.write$1(0, t1);
      t1 = !isSingleLine;
      wrapName = t1 && node.get$allowNameWrap();
      wrapDescription = t1 && node.get$allowWrap();
      uppercaseTitle = node.get$style(node) === B.DiagnosticsTreeStyle_5;
      $name = node.name;
      if (uppercaseTitle)
        $name = $name == null ? null : $name.toUpperCase();
      if (description.length === 0) {
        if (node.get$showName() && $name != null)
          builder.write$2$allowWrap(0, $name, wrapName);
      } else {
        includeName = $name != null && $name.length !== 0 && node.get$showName();
        if (includeName) {
          builder.write$2$allowWrap(0, $name, wrapName);
          if (node.showSeparator)
            builder.write$2$allowWrap(0, t2.afterName, wrapName);
          builder.write$2$allowWrap(0, t2.isNameOnOwnLine || B.JSString_methods.contains$1(description, _s1_) ? _s1_ : " ", wrapName);
        }
        if (t1 && builder.get$requiresMultipleLines() && t5._contents.length !== 0)
          builder.write$1(0, _s1_);
        if (includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, true);
        if (uppercaseTitle)
          description = description.toUpperCase();
        builder.write$2$allowWrap(0, B.JSString_methods.trimRight$0(description), wrapDescription);
        if (!includeName)
          builder.incrementPrefixOtherLines$2$updateCurrentLine(children.length === 0 ? t2.propertyPrefixNoChildren : t2.propertyPrefixIfChildren, false);
      }
      t1 = t2.suffixLineOne;
      if (t1.length !== 0)
        builder.writeStretched$2(t1, t4);
      t1 = node.getProperties$0(0);
      t4 = A._arrayInstanceType(t1)._eval$1("WhereIterable<1>");
      propertiesIterable = new A.WhereIterable(t1, new A.TextTreeRenderer__debugRender_closure(_this), t4);
      t1 = _this._maxDescendentsTruncatableNode;
      if (t1 >= 0 && node.get$allowTruncate()) {
        t4 = t4._eval$1("Iterable.E");
        if (propertiesIterable.get$length(0) < t1) {
          t4 = A.TakeIterable_TakeIterable(propertiesIterable, t1, t4);
          properties = A.List_List$of(t4, true, A._instanceType(t4)._eval$1("Iterable.E"));
          B.JSArray_methods.add$1(properties, A.DiagnosticsNode_DiagnosticsNode$message("...", true, B.DiagnosticsTreeStyle_8));
        } else
          properties = A.List_List$of(propertiesIterable, true, t4);
        if (t1 < children.length) {
          children = A.SubListIterable$(children, 0, A.checkNotNullable(t1, "count", type$.int), A._arrayInstanceType(children)._precomputed1).toList$0(0);
          B.JSArray_methods.add$1(children, A.DiagnosticsNode_DiagnosticsNode$message("...", true, B.DiagnosticsTreeStyle_8));
        }
      } else
        properties = A.List_List$of(propertiesIterable, true, t4._eval$1("Iterable.E"));
      if (properties.length !== 0 || children.length !== 0 || node.get$emptyBodyDescription() != null)
        t1 = node.showSeparator || description.length !== 0;
      else
        t1 = false;
      if (t1)
        builder.write$1(0, t2.afterDescriptionIfBody);
      t1 = t2.lineBreakProperties;
      if (t1)
        builder.write$1(0, t2.lineBreak);
      if (properties.length !== 0)
        builder.write$1(0, t2.beforeProperties);
      t4 = t2.bodyIndent;
      builder.incrementPrefixOtherLines$2$updateCurrentLine(t4, false);
      if (node.get$emptyBodyDescription() != null && properties.length === 0 && children.length === 0 && prefixLineOne.length !== 0) {
        t5 = node.get$emptyBodyDescription();
        t5.toString;
        builder.write$1(0, t5);
        if (t1)
          builder.write$1(0, t2.lineBreak);
      }
      for (t5 = t2.propertySeparator, t1 = !t1, i = 0; t6 = properties.length, i < t6; ++i) {
        property = properties[i];
        if (i > 0)
          builder.write$1(0, t5);
        t6 = property.get$textTreeConfiguration();
        t6.toString;
        if (property.get$style(property) === B.DiagnosticsTreeStyle_8) {
          propertyRender = _this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, t6.prefixLineOne, t6.childLinkSpace + t6.prefixOtherLines);
          propertyLines = propertyRender.split(_s1_);
          if (propertyLines.length === 1 && t1)
            builder.write$1(0, B.JSArray_methods.get$first(propertyLines));
          else {
            builder.write$1(0, propertyRender);
            if (!B.JSString_methods.endsWith$1(propertyRender, _s1_))
              builder.write$1(0, _s1_);
          }
        } else {
          t7 = builder._nextPrefixOtherLines;
          t8 = t7 == null;
          t9 = t8 ? builder._prefixOtherLines : t7;
          if (t8)
            t7 = builder._prefixOtherLines;
          builder.writeRawLines$1(_this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(property, t2, A.S(t9) + t6.prefixLineOne, A.S(t7) + t6.childLinkSpace + t6.prefixOtherLines));
        }
      }
      if (t6 !== 0)
        builder.write$1(0, t2.afterProperties);
      builder.write$1(0, "");
      if (t1)
        builder.write$1(0, t2.lineBreak);
      prefixChildrenRaw = A.S(_box_0.prefixOtherLines) + t4;
      t1 = false;
      if (children.length === 0)
        if (t2.addBlankLineIfNoChildren)
          if (builder.get$requiresMultipleLines()) {
            t1 = builder._nextPrefixOtherLines;
            if (t1 == null)
              t1 = builder._prefixOtherLines;
            t1.toString;
            t1 = B.JSString_methods.trimRight$0(t1).length !== 0;
          }
      if (t1)
        builder.write$1(0, t2.lineBreak);
      if (children.length !== 0 && t2.showChildren) {
        if (t2.isBlankLineBetweenPropertiesAndChildren && properties.length !== 0 && B.JSArray_methods.get$first(children).get$textTreeConfiguration().isBlankLineBetweenPropertiesAndChildren)
          builder.write$1(0, t2.lineBreak);
        builder._prefixOtherLines = _box_0.prefixOtherLines;
        builder._nextPrefixOtherLines = null;
        for (t1 = t2.lineBreak, t4 = builder.wrapWidth, i = 0; i < children.length; ++i) {
          child = children[i];
          childStyle = child.get$style(child);
          if (childStyle === B.DiagnosticsTreeStyle_8 || childStyle === B.DiagnosticsTreeStyle_9)
            t5 = t2;
          else
            t5 = child.get$textTreeConfiguration();
          t5.toString;
          if (i === children.length - 1) {
            t6 = t5.childLinkSpace;
            childPrefixOtherLines = prefixChildrenRaw + t6 + t5.prefixOtherLines;
            builder.writeRawLines$1(_this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, prefixChildrenRaw + t5.prefixLastChildLineOne, childPrefixOtherLines));
            t7 = t5.footer;
            if (t7.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, t6 + t7);
              t5 = t5.mandatoryFooter;
              if (t5.length !== 0)
                builder.writeStretched$2(t5, Math.max(t4, t3 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          } else {
            t6 = children[i + 1];
            childStyle = t6.get$style(t6);
            if (childStyle === B.DiagnosticsTreeStyle_8 || childStyle === B.DiagnosticsTreeStyle_9)
              nextChildStyle = t2;
            else
              nextChildStyle = t6.get$textTreeConfiguration();
            childPrefixOtherLines = prefixChildrenRaw + nextChildStyle.linkCharacter + t5.prefixOtherLines;
            builder.writeRawLines$1(_this._debugRender$4$parentConfiguration$prefixLineOne$prefixOtherLines(child, t2, prefixChildrenRaw + t5.prefixLineOne, childPrefixOtherLines));
            t6 = t5.footer;
            if (t6.length !== 0) {
              builder._prefixOtherLines = prefixChildrenRaw;
              builder._nextPrefixOtherLines = null;
              builder.write$1(0, t5.linkCharacter + t6);
              t5 = t5.mandatoryFooter;
              if (t5.length !== 0)
                builder.writeStretched$2(t5, Math.max(t4, t3 + childPrefixOtherLines.length));
              builder.write$1(0, t1);
            }
          }
        }
      }
      if (parentConfiguration == null && t2.mandatoryFooter.length !== 0) {
        builder.writeStretched$2(t2.mandatoryFooter, builder.wrapWidth);
        builder.write$1(0, t2.lineBreak);
      }
      if (builder._currentLine._contents.length !== 0)
        builder._finalizeLine$1(false);
      t1 = builder._diagnostics$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.TextTreeRenderer__debugRender_visitor.prototype = {
    call$1(node) {
      var t1, t2, t3, t4, _i, child, t5;
      for (t1 = node.getChildren$0(), t2 = t1.length, t3 = this._box_0, t4 = this.descendants, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        child = t1[_i];
        t5 = t3.lines;
        if (t5 < 25) {
          t5 = ++t3.depth;
          t4.push(A.S(t3.prefixOtherLines) + B.JSString_methods.$mul("  ", t5) + A.S(child));
          if (t3.depth < 5)
            this.call$1(child);
          --t3.depth;
        } else if (t5 === 25)
          t4.push(A.S(t3.prefixOtherLines) + "  ...(descendants list truncated after " + t5 + " lines)");
        ++t3.lines;
      }
    },
    $signature: 81
  };
  A.TextTreeRenderer__debugRender_closure.prototype = {
    call$1(n) {
      var t1 = n.get$level(n);
      return t1.index >= 2;
    },
    $signature: 125
  };
  A.DiagnosticsNode.prototype = {
    get$level(_) {
      return B.DiagnosticLevel_3;
    },
    get$emptyBodyDescription() {
      return null;
    },
    get$allowWrap() {
      return false;
    },
    get$allowNameWrap() {
      return false;
    },
    get$allowTruncate() {
      return false;
    },
    toString$1$minLevel(_, minLevel) {
      return this.super$Object$toString(0);
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    },
    get$textTreeConfiguration() {
      var t1 = null;
      switch (this.get$style(this).index) {
        case 0:
          break;
        case 3:
          t1 = $.$get$denseTextConfiguration();
          break;
        case 1:
          t1 = $.$get$sparseTextConfiguration();
          break;
        case 2:
          t1 = $.$get$dashedTextConfiguration();
          break;
        case 6:
          t1 = $.$get$whitespaceTextConfiguration();
          break;
        case 4:
          t1 = $.$get$transitionTextConfiguration();
          break;
        case 8:
          t1 = $.$get$singleLineTextConfiguration();
          break;
        case 9:
          t1 = $.$get$errorPropertyTextConfiguration();
          break;
        case 10:
          t1 = $.$get$shallowTextConfiguration();
          break;
        case 5:
          t1 = $.$get$errorTextConfiguration();
          break;
        case 7:
          t1 = $.$get$flatTextConfiguration();
          break;
        case 11:
          t1 = $.$get$whitespaceTextConfiguration();
          break;
      }
      return t1;
    },
    get$showName() {
      return this.showName;
    },
    get$style(receiver) {
      return this.style;
    }
  };
  A.DiagnosticsProperty.prototype = {
    valueToString$1$parentConfiguration(parentConfiguration) {
      var v = this.get$value(this);
      return type$.DiagnosticableTree._is(v) ? v.toStringShort$0() : J.toString$0$(v);
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      var t2, result, _this = this,
        t1 = _this._description;
      if (t1 != null) {
        t2 = _this.tooltip;
        return t2 == null ? t1 : t1 + " (" + t2 + ")";
      }
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null) {
        _this._maybeCacheValue$0();
        return "EXCEPTION (" + J.get$runtimeType$(_this._diagnostics$_exception).toString$0(0) + ")";
      }
      t1 = _this.ifNull;
      if (t1 != null && _this.get$value(_this) == null) {
        t1.toString;
        t2 = _this.tooltip;
        if (!(t2 == null))
          t1 = t1 + " (" + t2 + ")";
        return t1;
      }
      result = _this.valueToString$1$parentConfiguration(parentConfiguration);
      if (result.length === 0 && _this.ifEmpty != null) {
        t1 = _this.ifEmpty;
        t1.toString;
        result = t1;
      }
      t1 = _this.tooltip;
      return t1 == null ? result : result + " (" + t1 + ")";
    },
    get$value(_) {
      this._maybeCacheValue$0();
      return this._diagnostics$_value;
    },
    _maybeCacheValue$0() {
      var exception, exception0, _this = this;
      if (_this._valueComputed)
        return;
      _this._valueComputed = true;
      try {
        _this._diagnostics$_value = _this._computeValue.call$0();
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        _this._diagnostics$_exception = exception;
        _this._diagnostics$_value = null;
      }
    },
    get$isInteresting() {
      var t1 = this.defaultValue;
      return J.$eq$(t1, B.C__NoDefaultValue) || !J.$eq$(this.get$value(this), t1);
    },
    get$level(_) {
      var _this = this,
        t1 = _this._defaultLevel;
      if (t1 === B.DiagnosticLevel_0)
        return t1;
      _this._maybeCacheValue$0();
      if (_this._diagnostics$_exception != null)
        return B.DiagnosticLevel_7;
      if (_this.get$value(_this) == null && _this.missingIfNull)
        return B.DiagnosticLevel_4;
      if (!_this.get$isInteresting())
        return B.DiagnosticLevel_1;
      return t1;
    },
    getProperties$0(_) {
      return B.List_empty1;
    },
    getChildren$0() {
      return B.List_empty1;
    },
    get$allowWrap() {
      return this.allowWrap;
    },
    get$allowNameWrap() {
      return true;
    }
  };
  A.DiagnosticableNode.prototype = {
    get$builder() {
      return null;
    },
    get$style(_) {
      var t1 = this.style;
      return t1 == null ? this.get$builder().defaultDiagnosticsTreeStyle : t1;
    },
    get$emptyBodyDescription() {
      return "";
    },
    getProperties$0(_) {
      return B.List_empty1;
    },
    getChildren$0() {
      return B.List_empty1;
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      return "";
    }
  };
  A.DiagnosticableTreeNode.prototype = {
    getChildren$0() {
      return this.value.debugDescribeChildren$0();
    }
  };
  A.DiagnosticPropertiesBuilder.prototype = {
    add$1(_, property) {
    }
  };
  A.Diagnosticable.prototype = {
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toString$1$minLevel(_, minLevel) {
      var t1 = this.toStringShort$0();
      return t1;
    },
    toString$0(_) {
      return this.toString$1$minLevel(0, B.DiagnosticLevel_3);
    },
    debugFillProperties$1(properties) {
    }
  };
  A.DiagnosticableTree.prototype = {
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    debugDescribeChildren$0() {
      return B.List_empty1;
    }
  };
  A.DiagnosticableTreeMixin.prototype = {
    toString$0(_) {
      return this.toDiagnosticsNode$1$style(B.DiagnosticsTreeStyle_8).super$Object$toString(0);
    },
    toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines(minLevel, prefixLineOne, prefixOtherLines) {
      this.toDiagnosticsNode$0();
      return "";
    },
    toStringShort$0() {
      return "<optimized out>#" + A.shortHash(this);
    },
    toDiagnosticsNode$2$name$style($name, style) {
      return A.DiagnosticableTreeNode$($name, style, this);
    },
    toDiagnosticsNode$1$style(style) {
      return this.toDiagnosticsNode$2$name$style(null, style);
    },
    toDiagnosticsNode$0() {
      return this.toDiagnosticsNode$2$name$style(null, null);
    },
    debugDescribeChildren$0() {
      return B.List_empty1;
    }
  };
  A.DiagnosticsBlock.prototype = {
    getChildren$0() {
      return this._diagnostics$_children;
    },
    getProperties$0(_) {
      return this._properties;
    },
    toDescription$1$parentConfiguration(parentConfiguration) {
      return this._description;
    },
    get$level() {
      return B.DiagnosticLevel_3;
    },
    get$allowTruncate() {
      return this.allowTruncate;
    }
  };
  A._DiagnosticableTree_Object_Diagnosticable.prototype = {};
  A.Key.prototype = {};
  A.LicenseEntry.prototype = {};
  A.LicenseEntryWithLineBreaks.prototype = {};
  A.ObserverList.prototype = {
    get$_observer_list$_set() {
      var result, _this = this,
        value = _this.__ObserverList__set_FI;
      if (value === $) {
        result = A.HashSet_HashSet(_this.$ti._precomputed1);
        _this.__ObserverList__set_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ObserverList__set_FI = result;
        value = result;
      }
      return value;
    },
    contains$1(_, element) {
      var _this = this,
        t1 = _this._list;
      if (t1.length < 3)
        return B.JSArray_methods.contains$1(t1, element);
      if (_this._isDirty) {
        _this.get$_observer_list$_set().addAll$1(0, t1);
        _this._isDirty = false;
      }
      return _this.get$_observer_list$_set().contains$1(0, element);
    },
    get$iterator(_) {
      var t1 = this._list;
      return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
    },
    get$isEmpty(_) {
      return this._list.length === 0;
    },
    get$isNotEmpty(_) {
      return this._list.length !== 0;
    },
    toList$1$growable(_, growable) {
      var t1 = this._list,
        t2 = A._arrayInstanceType(t1);
      return growable ? A._setArrayType(t1.slice(0), t2) : J.JSArray_JSArray$markFixed(t1.slice(0), t2._precomputed1);
    },
    toList$0(_) {
      return this.toList$1$growable(0, true);
    }
  };
  A.HashedObserverList.prototype = {
    contains$1(_, element) {
      return this._observer_list$_map.containsKey$1(0, element);
    },
    get$iterator(_) {
      var t1 = this._observer_list$_map;
      return A.LinkedHashMapKeyIterator$(t1, t1._modifications, A._instanceType(t1)._precomputed1);
    },
    get$isEmpty(_) {
      return this._observer_list$_map.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._observer_list$_map.__js_helper$_length !== 0;
    }
  };
  A.TargetPlatform.prototype = {
    _enumToString$0() {
      return "TargetPlatform." + this._name;
    }
  };
  A.WriteBuffer.prototype = {
    _serialization$_add$1(_, byte) {
      var t1, t2, _this = this;
      if (_this._currentSize === _this._serialization$_buffer.length)
        _this._resize$0();
      t1 = _this._serialization$_buffer;
      t2 = _this._currentSize;
      t1[t2] = byte;
      _this._currentSize = t2 + 1;
    },
    _append$1(other) {
      var _this = this,
        t1 = other.length,
        newSize = _this._currentSize + t1;
      if (newSize >= _this._serialization$_buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._serialization$_buffer, _this._currentSize, newSize, other);
      _this._currentSize += t1;
    },
    _addAll$3(data, start, end) {
      var _this = this,
        newEnd = end == null ? _this._eightBytesAsList.length : end,
        newSize = _this._currentSize + (newEnd - start);
      if (newSize >= _this._serialization$_buffer.length)
        _this._resize$1(newSize);
      B.NativeUint8List_methods.setRange$3(_this._serialization$_buffer, _this._currentSize, newSize, data);
      _this._currentSize = newSize;
    },
    _addAll$1(data) {
      return this._addAll$3(data, 0, null);
    },
    _resize$1(requiredLength) {
      var t1 = this._serialization$_buffer,
        t2 = t1.length,
        t3 = requiredLength == null ? 0 : requiredLength,
        newLength = Math.max(t3, t2 * 2),
        newBuffer = new Uint8Array(newLength);
      B.NativeUint8List_methods.setRange$3(newBuffer, 0, t2, t1);
      this._serialization$_buffer = newBuffer;
    },
    _resize$0() {
      return this._resize$1(null);
    },
    _alignTo$1(alignment) {
      var mod = B.JSInt_methods.$mod(this._currentSize, alignment);
      if (mod !== 0)
        this._addAll$3($.$get$WriteBuffer__zeroBuffer(), 0, alignment - mod);
    },
    done$0() {
      var result, _this = this;
      if (_this._serialization$_isDone)
        throw A.wrapException(A.StateError$("done() must not be called more than once on the same " + A.getRuntimeTypeOfDartObject(_this).toString$0(0) + "."));
      result = A.NativeByteData_NativeByteData$view(_this._serialization$_buffer.buffer, 0, _this._currentSize);
      _this._serialization$_buffer = new Uint8Array(0);
      _this._serialization$_isDone = true;
      return result;
    }
  };
  A.ReadBuffer.prototype = {
    getUint8$0(_) {
      return this.data.getUint8(this._serialization$_position++);
    },
    getInt64$0(_) {
      var t1 = this._serialization$_position,
        t2 = $.$get$Endian_host();
      B.NativeByteData_methods.getInt64$2(this.data, t1, t2);
    },
    getUint8List$1($length) {
      var t1 = this.data,
        list = A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
      this._serialization$_position += $length;
      return list;
    },
    getInt64List$1($length) {
      var t1;
      this._alignTo$1(8);
      t1 = this.data;
      B.NativeByteBuffer_methods.asInt64List$2(t1.buffer, t1.byteOffset + this._serialization$_position, $length);
    },
    _alignTo$1(alignment) {
      var t1 = this._serialization$_position,
        mod = B.JSInt_methods.$mod(t1, alignment);
      if (mod !== 0)
        this._serialization$_position = t1 + (alignment - mod);
    }
  };
  A.StackFrame.prototype = {
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.number, _this.$package, _this.line, _this.column, _this.className, _this.method, _this.source, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.StackFrame && other.number === _this.number && other.$package === _this.$package && other.line === _this.line && other.column === _this.column && other.className === _this.className && other.method === _this.method && other.source === _this.source;
    },
    toString$0(_) {
      var _this = this;
      return "StackFrame(#" + _this.number + ", " + _this.packageScheme + ":" + _this.$package + "/" + _this.packagePath + ":" + _this.line + ":" + _this.column + ", className: " + _this.className + ", method: " + _this.method + ")";
    }
  };
  A.StackFrame_fromStackString_closure.prototype = {
    call$1(line) {
      return line.length !== 0;
    },
    $signature: 23
  };
  A.GestureArenaManager.prototype = {
    close$1(_, pointer) {
      var state = this._arenas.$index(0, pointer);
      if (state == null)
        return;
      state.isOpen = false;
      this._tryToResolveArena$2(pointer, state);
    },
    sweep$1(pointer) {
      var i,
        t1 = this._arenas,
        state = t1.$index(0, pointer);
      if (state == null)
        return;
      if (state.isHeld) {
        state.hasPendingSweep = true;
        return;
      }
      t1.remove$1(0, pointer);
      t1 = state.members;
      if (t1.length !== 0) {
        B.JSArray_methods.get$first(t1).acceptGesture$1(pointer);
        for (i = 1; i < t1.length; ++i)
          t1[i].rejectGesture$1(pointer);
      }
    },
    _tryToResolveArena$2(pointer, state) {
      var t1 = state.members.length;
      if (t1 === 1)
        A.scheduleMicrotask(new A.GestureArenaManager__tryToResolveArena_closure(this, pointer, state));
      else if (t1 === 0)
        this._arenas.remove$1(0, pointer);
      else {
        t1 = state.eagerWinner;
        if (t1 != null)
          this._resolveInFavorOf$3(pointer, state, t1);
      }
    },
    _resolveByDefault$2(pointer, state) {
      var t1 = this._arenas;
      if (!t1.containsKey$1(0, pointer))
        return;
      t1.remove$1(0, pointer);
      B.JSArray_methods.get$first(state.members).acceptGesture$1(pointer);
    },
    _resolveInFavorOf$3(pointer, state, member) {
      var t1, t2, _i, rejectedMember;
      this._arenas.remove$1(0, pointer);
      for (t1 = state.members, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        rejectedMember = t1[_i];
        if (rejectedMember !== member)
          rejectedMember.rejectGesture$1(pointer);
      }
      member.acceptGesture$1(pointer);
    }
  };
  A.GestureArenaManager__tryToResolveArena_closure.prototype = {
    call$0() {
      return this.$this._resolveByDefault$2(this.pointer, this.state);
    },
    $signature: 0
  };
  A._Resampler.prototype = {
    stop$0(_) {
      var t1, t2, t3, t4, t5, _this = this;
      for (t1 = _this._resamplers, t2 = t1.get$values(0), t3 = A._instanceType(t2), t2 = new A.MappedIterator(J.get$iterator$ax(t2.__internal$_iterable), t2._f, t3._eval$1("MappedIterator<1,2>")), t4 = _this._handlePointerEvent, t3 = t3._rest[1]; t2.moveNext$0();) {
        t5 = t2.__internal$_current;
        (t5 == null ? t3._as(t5) : t5).stop$1(0, t4);
      }
      t1.clear$0(0);
      _this._frameTime = B.Duration_0;
      t1 = _this._binding3$_timer;
      if (t1 != null)
        t1.cancel$0(0);
    }
  };
  A.GestureBinding.prototype = {
    _handlePointerDataPacket$1(packet) {
      var error, stack, exception, t1, _this = this;
      try {
        _this.GestureBinding__pendingPointerEvents.addAll$1(0, A.PointerEventConverter_expand(packet.data, _this.get$_devicePixelRatioForView()));
        if (_this._lockCount <= 0)
          _this._flushPointerEventQueue$0();
      } catch (exception) {
        error = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        t1 = A.ErrorDescription$("while handling a pointer data packet");
        A.FlutterError_reportError(new A.FlutterErrorDetails(error, stack, "gestures library", t1, null, false));
      }
    },
    _devicePixelRatioForView$1(viewId) {
      var t1;
      if ($.$get$EnginePlatformDispatcher__instance().get$viewManager()._viewData.$index(0, viewId) == null)
        t1 = null;
      else {
        t1 = $.$get$EngineFlutterDisplay__instance()._debugDevicePixelRatioOverride;
        if (t1 == null) {
          t1 = self.window.devicePixelRatio;
          if (t1 === 0)
            t1 = 1;
        }
      }
      return t1;
    },
    _flushPointerEventQueue$0() {
      for (var t1 = this.GestureBinding__pendingPointerEvents; !t1.get$isEmpty(0);)
        this.handlePointerEvent$1(t1.removeFirst$0());
    },
    handlePointerEvent$1($event) {
      this.get$_resampler().stop$0(0);
      this._handlePointerEventImmediately$1($event);
    },
    _handlePointerEventImmediately$1($event) {
      var hitTestResult, _this = this,
        t1 = !type$.PointerDownEvent._is($event);
      if (!t1 || type$.PointerSignalEvent._is($event) || type$.PointerHoverEvent._is($event) || type$.PointerPanZoomStartEvent._is($event)) {
        hitTestResult = A.HitTestResult$();
        _this.hitTestInView$3(hitTestResult, $event.get$position($event), $event.get$viewId());
        if (!t1 || type$.PointerPanZoomStartEvent._is($event))
          _this.GestureBinding__hitTests.$indexSet(0, $event.get$pointer(), hitTestResult);
      } else if (type$.PointerUpEvent._is($event) || type$.PointerCancelEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        hitTestResult = _this.GestureBinding__hitTests.remove$1(0, $event.get$pointer());
      else
        hitTestResult = $event.get$down() || type$.PointerPanZoomUpdateEvent._is($event) ? _this.GestureBinding__hitTests.$index(0, $event.get$pointer()) : null;
      if (hitTestResult != null || type$.PointerAddedEvent._is($event) || type$.PointerRemovedEvent._is($event)) {
        t1 = _this.RendererBinding__mouseTracker;
        t1.toString;
        t1.updateWithEvent$2($event, type$.PointerMoveEvent._is($event) ? null : hitTestResult);
        _this.super$GestureBinding$dispatchEvent(0, $event, hitTestResult);
      }
    },
    hitTestInView$3(result, position, viewId) {
      result.add$1(0, new A.HitTestEntry(this, type$.HitTestEntry_HitTestTarget));
    },
    dispatchEvent$2(_, $event, hitTestResult) {
      var exception, stack, entry, exception0, stack0, t1, t2, _i, t3, t4,
        _s15_ = "gesture library";
      if (hitTestResult == null) {
        try {
          this.GestureBinding_pointerRouter.route$1($event);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          A.FlutterError_reportError(A.FlutterErrorDetailsForPointerEventDispatcher$(A.ErrorDescription$("while dispatching a non-hit-tested pointer event"), $event, exception, null, new A.GestureBinding_dispatchEvent_closure($event), _s15_, stack));
        }
        return;
      }
      for (t1 = hitTestResult._path, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        try {
          entry.target.handleEvent$2($event.transformed$1(entry._transform), entry);
        } catch (exception) {
          exception0 = A.unwrapException(exception);
          stack0 = A.getTraceFromException(exception);
          t3 = A.ErrorDescription$("while dispatching a pointer event");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetailsForPointerEventDispatcher(exception0, stack0, _s15_, t3, new A.GestureBinding_dispatchEvent_closure0($event, entry), false));
        }
      }
    },
    handleEvent$2($event, entry) {
      var _this = this;
      _this.GestureBinding_pointerRouter.route$1($event);
      if (type$.PointerDownEvent._is($event) || type$.PointerPanZoomStartEvent._is($event))
        _this.GestureBinding_gestureArena.close$1(0, $event.get$pointer());
      else if (type$.PointerUpEvent._is($event) || type$.PointerPanZoomEndEvent._is($event))
        _this.GestureBinding_gestureArena.sweep$1($event.get$pointer());
      else if (type$.PointerSignalEvent._is($event))
        _this.GestureBinding_pointerSignalResolver.resolve$1($event);
    },
    _handleSampleTimeChanged$0() {
      if (this._lockCount <= 0)
        this.get$_resampler().stop$0(0);
    },
    get$_resampler() {
      var _this = this,
        value = _this.GestureBinding___GestureBinding__resampler_FI;
      if (value === $) {
        $.$get$Stopwatch__frequency();
        value !== $ && A.throwUnnamedLateFieldADI();
        value = _this.GestureBinding___GestureBinding__resampler_FI = new A._Resampler(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.PointerEventResampler), B.Duration_0, new A.Stopwatch(), _this.get$_handlePointerEventImmediately(), _this.get$_handleSampleTimeChanged(), B.Duration_16667);
      }
      return value;
    }
  };
  A.GestureBinding_dispatchEvent_closure.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("Event", this.event, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null, type$.PointerEvent)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 19
  };
  A.GestureBinding_dispatchEvent_closure0.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("Event", this.event, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null, type$.PointerEvent), A.DiagnosticsProperty$("Target", this.entry.target, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null, type$.HitTestTarget)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 19
  };
  A.FlutterErrorDetailsForPointerEventDispatcher.prototype = {};
  A.PointerEventConverter_expand_closure.prototype = {
    call$1(datum) {
      return datum.signalKind !== B.PointerSignalKind_4;
    },
    $signature: 129
  };
  A.PointerEventConverter_expand_closure0.prototype = {
    call$1(datum) {
      var position, delta, radiusMinor, radiusMajor, radiusMin, radiusMax, timeStamp, kind, t2,
        t1 = datum.viewId,
        devicePixelRatio = this.devicePixelRatioForView.call$1(t1);
      if (devicePixelRatio == null)
        return null;
      position = new A.Offset(datum.physicalX, datum.physicalY).$div(0, devicePixelRatio);
      delta = new A.Offset(datum.physicalDeltaX, datum.physicalDeltaY).$div(0, devicePixelRatio);
      radiusMinor = datum.radiusMinor / devicePixelRatio;
      radiusMajor = datum.radiusMajor / devicePixelRatio;
      radiusMin = datum.radiusMin / devicePixelRatio;
      radiusMax = datum.radiusMax / devicePixelRatio;
      timeStamp = datum.timeStamp;
      kind = datum.kind;
      t2 = datum.signalKind;
      switch ((t2 == null ? B.PointerSignalKind_0 : t2).index) {
        case 0:
          switch (datum.change.index) {
            case 1:
              return A.PointerAddedEvent$(datum.device, datum.distance, datum.distanceMax, 0, kind, false, datum.orientation, position, datum.pressureMax, datum.pressureMin, radiusMax, radiusMin, datum.tilt, timeStamp, t1);
            case 3:
              return A.PointerHoverEvent$(datum.buttons, delta, datum.device, datum.distance, datum.distanceMax, 0, kind, false, datum.orientation, position, datum.pressureMax, datum.pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, datum.size, datum.synthesized, datum.tilt, timeStamp, t1);
            case 4:
              return A.PointerDownEvent$(A._synthesiseDownButtons(datum.buttons, kind), datum.device, datum.distanceMax, 0, kind, false, datum.orientation, datum.pointerIdentifier, position, datum.pressure, datum.pressureMax, datum.pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, datum.size, datum.tilt, timeStamp, t1);
            case 5:
              return A.PointerMoveEvent$(A._synthesiseDownButtons(datum.buttons, kind), delta, datum.device, datum.distanceMax, 0, kind, false, datum.orientation, datum.platformData, datum.pointerIdentifier, position, datum.pressure, datum.pressureMax, datum.pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, datum.size, datum.synthesized, datum.tilt, timeStamp, t1);
            case 6:
              return A.PointerUpEvent$(datum.buttons, datum.device, datum.distance, datum.distanceMax, 0, kind, false, datum.orientation, datum.pointerIdentifier, position, datum.pressure, datum.pressureMax, datum.pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, datum.size, datum.tilt, timeStamp, t1);
            case 0:
              return A.PointerCancelEvent$(datum.buttons, datum.device, datum.distance, datum.distanceMax, 0, kind, false, datum.orientation, datum.pointerIdentifier, position, datum.pressureMax, datum.pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, datum.size, datum.tilt, timeStamp, t1);
            case 2:
              return A.PointerRemovedEvent$(datum.device, datum.distanceMax, 0, kind, false, position, datum.pressureMax, datum.pressureMin, radiusMax, radiusMin, timeStamp, t1);
            case 7:
              return A.PointerPanZoomStartEvent$(datum.device, 0, datum.pointerIdentifier, position, datum.synthesized, timeStamp, t1);
            case 8:
              return A.PointerPanZoomUpdateEvent$(datum.device, 0, new A.Offset(0, 0).$div(0, devicePixelRatio), new A.Offset(0, 0).$div(0, devicePixelRatio), datum.pointerIdentifier, position, 0, datum.scale, datum.synthesized, timeStamp, t1);
            case 9:
              return A.PointerPanZoomEndEvent$(datum.device, 0, datum.pointerIdentifier, position, datum.synthesized, timeStamp, t1);
          }
          break;
        case 1:
          t2 = datum.scrollDeltaX;
          if (!isFinite(t2) || !isFinite(datum.scrollDeltaY) || devicePixelRatio <= 0)
            return null;
          return A.PointerScrollEvent$(datum.device, 0, kind, datum.get$respond(), position, new A.Offset(t2, datum.scrollDeltaY).$div(0, devicePixelRatio), timeStamp, t1);
        case 2:
          return A.PointerScrollInertiaCancelEvent$(datum.device, 0, kind, position, timeStamp, t1);
        case 3:
          return A.PointerScaleEvent$(datum.device, 0, kind, position, datum.scale, timeStamp, t1);
        case 4:
          throw A.wrapException(A.StateError$("Unreachable"));
      }
    },
    $signature: 130
  };
  A.PointerEvent.prototype = {
    get$viewId() {
      return this.viewId;
    },
    get$timeStamp(receiver) {
      return this.timeStamp;
    },
    get$pointer() {
      return this.pointer;
    },
    get$kind(receiver) {
      return this.kind;
    },
    get$device(receiver) {
      return this.device;
    },
    get$position(receiver) {
      return this.position;
    },
    get$delta() {
      return this.delta;
    },
    get$buttons(receiver) {
      return this.buttons;
    },
    get$down() {
      return this.down;
    },
    get$obscured() {
      return this.obscured;
    },
    get$pressureMin() {
      return this.pressureMin;
    },
    get$pressureMax() {
      return this.pressureMax;
    },
    get$distance() {
      return this.distance;
    },
    get$distanceMax() {
      return this.distanceMax;
    },
    get$size(receiver) {
      return this.size;
    },
    get$radiusMajor() {
      return this.radiusMajor;
    },
    get$radiusMinor() {
      return this.radiusMinor;
    },
    get$radiusMin() {
      return this.radiusMin;
    },
    get$radiusMax() {
      return this.radiusMax;
    },
    get$orientation(receiver) {
      return this.orientation;
    },
    get$tilt() {
      return this.tilt;
    },
    get$synthesized() {
      return this.synthesized;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._PointerEventDescription.prototype = {$isPointerEvent: 1};
  A._AbstractPointerEvent.prototype = {$isPointerEvent: 1};
  A._TransformedPointerEvent.prototype = {
    get$timeStamp(_) {
      return this.get$original().timeStamp;
    },
    get$pointer() {
      return this.get$original().pointer;
    },
    get$kind(_) {
      return this.get$original().kind;
    },
    get$device(_) {
      return this.get$original().device;
    },
    get$position(_) {
      return this.get$original().position;
    },
    get$delta() {
      return this.get$original().delta;
    },
    get$buttons(_) {
      return this.get$original().buttons;
    },
    get$down() {
      return this.get$original().down;
    },
    get$obscured() {
      this.get$original();
      return false;
    },
    get$pressureMin() {
      return this.get$original().pressureMin;
    },
    get$pressureMax() {
      return this.get$original().pressureMax;
    },
    get$distance() {
      return this.get$original().distance;
    },
    get$distanceMax() {
      return this.get$original().distanceMax;
    },
    get$size(_) {
      return this.get$original().size;
    },
    get$radiusMajor() {
      return this.get$original().radiusMajor;
    },
    get$radiusMinor() {
      return this.get$original().radiusMinor;
    },
    get$radiusMin() {
      return this.get$original().radiusMin;
    },
    get$radiusMax() {
      return this.get$original().radiusMax;
    },
    get$orientation(_) {
      return this.get$original().orientation;
    },
    get$tilt() {
      return this.get$original().tilt;
    },
    get$synthesized() {
      return this.get$original().synthesized;
    },
    get$viewId() {
      return this.get$original().viewId;
    }
  };
  A._CopyPointerAddedEvent.prototype = {};
  A.PointerAddedEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerAddedEvent(this, transform);
    }
  };
  A._TransformedPointerAddedEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerAddedEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerRemovedEvent.prototype = {};
  A.PointerRemovedEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerRemovedEvent(this, transform);
    }
  };
  A._TransformedPointerRemovedEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerRemovedEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerHoverEvent.prototype = {};
  A.PointerHoverEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerHoverEvent(this, transform);
    }
  };
  A._TransformedPointerHoverEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerHoverEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerEnterEvent.prototype = {};
  A.PointerEnterEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerEnterEvent(this, transform);
    }
  };
  A._TransformedPointerEnterEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerExitEvent.prototype = {};
  A.PointerExitEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerExitEvent(this, transform);
    }
  };
  A._TransformedPointerExitEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerDownEvent.prototype = {};
  A.PointerDownEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerDownEvent(this, transform);
    }
  };
  A._TransformedPointerDownEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerDownEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerMoveEvent.prototype = {};
  A.PointerMoveEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerMoveEvent(this, transform);
    }
  };
  A._TransformedPointerMoveEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerMoveEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerUpEvent.prototype = {};
  A.PointerUpEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerUpEvent(this, transform);
    }
  };
  A._TransformedPointerUpEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerUpEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A.PointerSignalEvent.prototype = {};
  A._RespondablePointerEvent.prototype = {
    respond$1$allowPlatformDefault(allowPlatformDefault) {
    }
  };
  A._CopyPointerScrollEvent.prototype = {};
  A.PointerScrollEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerScrollEvent(this, transform);
    },
    respond$1$allowPlatformDefault(allowPlatformDefault) {
      this._onRespond.call$1$allowPlatformDefault(allowPlatformDefault);
    }
  };
  A._TransformedPointerScrollEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    respond$1$allowPlatformDefault(allowPlatformDefault) {
      this.original.respond$1$allowPlatformDefault(allowPlatformDefault);
    },
    $isPointerSignalEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerScrollInertiaCancelEvent.prototype = {};
  A.PointerScrollInertiaCancelEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerScrollInertiaCancelEvent(this, transform);
    }
  };
  A._TransformedPointerScrollInertiaCancelEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerSignalEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerScaleEvent.prototype = {};
  A.PointerScaleEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerScaleEvent(this, transform);
    }
  };
  A._TransformedPointerScaleEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerSignalEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerPanZoomStartEvent.prototype = {};
  A.PointerPanZoomStartEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerPanZoomStartEvent(this, transform);
    }
  };
  A._TransformedPointerPanZoomStartEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerPanZoomStartEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerPanZoomUpdateEvent.prototype = {};
  A.PointerPanZoomUpdateEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerPanZoomUpdateEvent(this, transform);
    }
  };
  A._TransformedPointerPanZoomUpdateEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerPanZoomUpdateEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerPanZoomEndEvent.prototype = {};
  A.PointerPanZoomEndEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerPanZoomEndEvent(this, transform);
    }
  };
  A._TransformedPointerPanZoomEndEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerPanZoomEndEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._CopyPointerCancelEvent.prototype = {};
  A.PointerCancelEvent.prototype = {
    transformed$1(transform) {
      if (transform == null || transform.$eq(0, this.transform))
        return this;
      return new A._TransformedPointerCancelEvent(this, transform);
    }
  };
  A._TransformedPointerCancelEvent.prototype = {
    transformed$1(transform) {
      return this.original.transformed$1(transform);
    },
    $isPointerCancelEvent: 1,
    get$original() {
      return this.original;
    },
    get$transform(receiver) {
      return this.transform;
    }
  };
  A._PointerAddedEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent.prototype = {};
  A._PointerCancelEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent.prototype = {};
  A._PointerDownEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent.prototype = {};
  A._PointerEnterEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent.prototype = {};
  A._PointerEvent_Object_Diagnosticable.prototype = {};
  A._PointerExitEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent.prototype = {};
  A._PointerHoverEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent.prototype = {};
  A._PointerMoveEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent.prototype = {};
  A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent.prototype = {};
  A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent.prototype = {};
  A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent.prototype = {};
  A._PointerRemovedEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent.prototype = {};
  A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription.prototype = {};
  A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent.prototype = {};
  A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription.prototype = {};
  A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent.prototype = {};
  A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription.prototype = {};
  A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent.prototype = {};
  A._PointerSignalEvent_PointerEvent__RespondablePointerEvent.prototype = {};
  A._PointerUpEvent_PointerEvent__PointerEventDescription.prototype = {};
  A._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent.prototype = {};
  A.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent.prototype = {};
  A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent.prototype = {};
  A.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent.prototype = {};
  A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent.prototype = {};
  A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable.prototype = {};
  A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription.prototype = {};
  A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent.prototype = {};
  A.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent.prototype = {};
  A.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent.prototype = {};
  A.__TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent.prototype = {};
  A.__TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent.prototype = {};
  A.__TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent.prototype = {};
  A.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent.prototype = {};
  A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent.prototype = {};
  A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent.prototype = {};
  A.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent.prototype = {};
  A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent.prototype = {};
  A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent.prototype = {};
  A.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent.prototype = {};
  A.HitTestEntry.prototype = {
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "(" + this.target.toString$0(0) + ")";
    }
  };
  A.HitTestResult.prototype = {
    _globalizeTransforms$0() {
      var t2, last, t3, _i,
        t1 = this._localTransforms;
      if (t1.length === 0)
        return;
      t2 = this._transforms;
      last = B.JSArray_methods.get$last(t2);
      for (t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        last = t1[_i].multiply$1(0, last);
        t2.push(last);
      }
      B.JSArray_methods.clear$0(t1);
    },
    add$1(_, entry) {
      this._globalizeTransforms$0();
      entry._transform = B.JSArray_methods.get$last(this._transforms);
      this._path.push(entry);
    },
    toString$0(_) {
      var t1 = this._path;
      return "HitTestResult(" + (t1.length === 0 ? "<empty path>" : B.JSArray_methods.join$1(t1, ", ")) + ")";
    }
  };
  A.PointerRouter.prototype = {
    _dispatch$3($event, route, transform) {
      var exception, stack, collector, exception0, t1;
      $event = $event;
      try {
        $event = $event.transformed$1(transform);
        route.call$1($event);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        collector = null;
        t1 = A.ErrorDescription$("while routing a pointer event");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "gesture library", t1, collector, false));
      }
    },
    route$1($event) {
      var _this = this,
        routes = _this._routeMap.$index(0, $event.get$pointer()),
        t1 = _this._globalRoutes,
        t2 = type$.void_Function_PointerEvent,
        t3 = type$.nullable_Matrix4,
        copiedGlobalRoutes = A.LinkedHashMap_LinkedHashMap$of(t1, t2, t3);
      if (routes != null)
        _this._dispatchEventToRoutes$3($event, routes, A.LinkedHashMap_LinkedHashMap$of(routes, t2, t3));
      _this._dispatchEventToRoutes$3($event, t1, copiedGlobalRoutes);
    },
    _dispatchEventToRoutes$3($event, referenceRoutes, copiedRoutes) {
      copiedRoutes.forEach$1(0, new A.PointerRouter__dispatchEventToRoutes_closure(this, referenceRoutes, $event));
    }
  };
  A.PointerRouter__dispatchEventToRoutes_closure.prototype = {
    call$2(route, transform) {
      if (J.containsKey$1$x(this.referenceRoutes, route))
        this.$this._dispatch$3(this.event, route, transform);
    },
    $signature: 131
  };
  A.PointerSignalResolver.prototype = {
    resolve$1($event) {
      var exception, stack, collector, t2, exception0, _this = this,
        t1 = _this._firstRegisteredCallback;
      if (t1 == null) {
        $event.respond$1$allowPlatformDefault(true);
        return;
      }
      try {
        t2 = _this._currentEvent;
        t2.toString;
        t1.call$1(t2);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        collector = null;
        t1 = A.ErrorDescription$("while resolving a PointerSignalEvent");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "gesture library", t1, collector, false));
      }
      _this._currentEvent = _this._firstRegisteredCallback = null;
    }
  };
  A.DragStartBehavior.prototype = {
    _enumToString$0() {
      return "DragStartBehavior." + this._name;
    }
  };
  A.Axis.prototype = {
    _enumToString$0() {
      return "Axis." + this._name;
    }
  };
  A.PaintingBinding.prototype = {};
  A._SystemFontsNotifier.prototype = {
    notifyListeners$0() {
      var t1, t2, callback;
      for (t1 = this._systemFontsCallbacks, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        callback = t1._collection$_current;
        (callback == null ? t2._as(callback) : callback).call$0();
      }
    }
  };
  A.ClipContext.prototype = {};
  A.EdgeInsetsGeometry.prototype = {
    toString$0(_) {
      var _this = this;
      if (_this.get$_edge_insets$_start(_this) === 0 && _this.get$_edge_insets$_end() === 0) {
        if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0 && _this.get$_top(_this) === 0 && _this.get$_bottom(_this) === 0)
          return "EdgeInsets.zero";
        if (_this.get$_left(_this) === _this.get$_right(_this) && _this.get$_right(_this) === _this.get$_top(_this) && _this.get$_top(_this) === _this.get$_bottom(_this))
          return "EdgeInsets.all(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ")";
        return "EdgeInsets(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_right(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ")";
      }
      if (_this.get$_left(_this) === 0 && _this.get$_right(_this) === 0)
        return "EdgeInsetsDirectional(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ")";
      return "EdgeInsets(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_left(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_top(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_right(_this), 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_bottom(_this), 1) + ") + EdgeInsetsDirectional(" + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_start(_this), 1) + ", 0.0, " + B.JSNumber_methods.toStringAsFixed$1(_this.get$_edge_insets$_end(), 1) + ", 0.0)";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.EdgeInsetsGeometry && other.get$_left(other) === _this.get$_left(_this) && other.get$_right(other) === _this.get$_right(_this) && other.get$_edge_insets$_start(other) === _this.get$_edge_insets$_start(_this) && other.get$_edge_insets$_end() === _this.get$_edge_insets$_end() && other.get$_top(other) === _this.get$_top(_this) && other.get$_bottom(other) === _this.get$_bottom(_this);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$_left(_this), _this.get$_right(_this), _this.get$_edge_insets$_start(_this), _this.get$_edge_insets$_end(), _this.get$_top(_this), _this.get$_bottom(_this), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.EdgeInsets.prototype = {
    get$_left(_) {
      return this.left;
    },
    get$_top(_) {
      return this.top;
    },
    get$_right(_) {
      return this.right;
    },
    get$_bottom(_) {
      return this.bottom;
    },
    get$_edge_insets$_start(_) {
      return 0;
    },
    get$_edge_insets$_end() {
      return 0;
    },
    inflateRect$1(rect) {
      var _this = this;
      return new A.Rect(rect.left - _this.left, rect.top - _this.top, rect.right + _this.right, rect.bottom + _this.bottom);
    },
    $mul(_, other) {
      var _this = this;
      return new A.EdgeInsets(_this.left * other, _this.top * other, _this.right * other, _this.bottom * other);
    },
    copyWith$4$bottom$left$right$top(bottom, left, right, $top) {
      var _this = this,
        t1 = left == null ? _this.left : left,
        t2 = $top == null ? _this.top : $top,
        t3 = right == null ? _this.right : right;
      return new A.EdgeInsets(t1, t2, t3, bottom == null ? _this.bottom : bottom);
    },
    copyWith$1$bottom(bottom) {
      return this.copyWith$4$bottom$left$right$top(bottom, null, null, null);
    }
  };
  A.ImageCache.prototype = {
    clear$0(_) {
      var t3, t4, t5, _this = this,
        t1 = _this._pendingImages,
        t2 = _this._image_cache$_cache;
      A.Timeline_instantSync("ImageCache.clear", A.LinkedHashMap_LinkedHashMap$_literal(["pendingImages", t1.__js_helper$_length, "keepAliveImages", t2.__js_helper$_length, "liveImages", _this._liveImages.__js_helper$_length, "currentSizeInBytes", _this._currentSizeBytes], type$.String, type$.dynamic));
      for (t3 = t2.get$values(0), t4 = A._instanceType(t3), t3 = new A.MappedIterator(J.get$iterator$ax(t3.__internal$_iterable), t3._f, t4._eval$1("MappedIterator<1,2>")), t4 = t4._rest[1]; t3.moveNext$0();) {
        t5 = t3.__internal$_current;
        (t5 == null ? t4._as(t5) : t5).dispose$0();
      }
      t2.clear$0(0);
      for (t2 = t1.get$values(0), t3 = A._instanceType(t2), t2 = new A.MappedIterator(J.get$iterator$ax(t2.__internal$_iterable), t2._f, t3._eval$1("MappedIterator<1,2>")), t3 = t3._rest[1]; t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        if (t4 == null)
          t4 = t3._as(t4);
        t4.completer.removeListener$1(0, t4.listener);
      }
      t1.clear$0(0);
      _this._currentSizeBytes = 0;
    }
  };
  A._CachedImageBase_dispose_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this,
        t2 = t1.handle;
      if (t2 != null)
        t2.dispose$0();
      t1.handle = null;
    },
    $signature: 2
  };
  A.InlineSpan.prototype = {
    toPlainText$1$includeSemanticsLabels(includeSemanticsLabels) {
      var t1,
        buffer = new A.StringBuffer("");
      this.computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, includeSemanticsLabels);
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.InlineSpan && J.$eq$(other.style, this.style);
    },
    get$hashCode(_) {
      return J.get$hashCode$(this.style);
    }
  };
  A.PlaceholderSpan.prototype = {
    computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, includePlaceholders, includeSemanticsLabels) {
      var t1 = A.Primitives_stringFromCharCode(65532);
      buffer._contents += t1;
    }
  };
  A._TextLayout.prototype = {
    _computeEndOfTextCaretAnchorOffset$0() {
      var _0_0, t2, baseline, lastGlyph, dx, glyphBounds, _this = this,
        rawString = _this._painter.get$plainText(),
        t1 = _this._paragraph.get$numberOfLines();
      t1 = _this._paragraph.getLineMetricsAt$1(t1 - 1);
      t1.toString;
      _0_0 = rawString.charCodeAt(rawString.length - 1);
      $label0$0: {
        t2 = 9 === _0_0 || 12288 === _0_0 || 32 === _0_0;
        if (t2)
          break $label0$0;
        break $label0$0;
      }
      baseline = t1.get$baseline();
      lastGlyph = A._InitializedCell$named("lastGlyph", new A._TextLayout__computeEndOfTextCaretAnchorOffset_closure(_this, rawString));
      dx = null;
      if (t2 && lastGlyph._readFinal$0() != null) {
        glyphBounds = lastGlyph._readFinal$0().graphemeClusterLayoutBounds;
        t1 = _this.writingDirection;
        switch (t1.index) {
          case 1:
            t2 = glyphBounds.right;
            break;
          case 0:
            t2 = glyphBounds.left;
            break;
          default:
            t2 = dx;
        }
        dx = t2;
      } else {
        t2 = _this.writingDirection;
        switch (t2.index) {
          case 1:
            t1 = t1.get$left(t1) + t1.get$width(t1);
            break;
          case 0:
            t1 = t1.get$left(t1);
            break;
          default:
            t1 = dx;
        }
        dx = t1;
        t1 = t2;
      }
      return new A._LineCaretMetrics(new A.Offset(dx, baseline), t1);
    },
    _contentWidthFor$3(minWidth, maxWidth, widthBasis) {
      var t1;
      switch (widthBasis.index) {
        case 1:
          t1 = A.clampDouble(this._paragraph.get$longestLine(), minWidth, maxWidth);
          break;
        case 0:
          t1 = A.clampDouble(this._paragraph.get$maxIntrinsicWidth(), minWidth, maxWidth);
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A._TextLayout__computeEndOfTextCaretAnchorOffset_closure.prototype = {
    call$0() {
      return this.$this._paragraph.getGlyphInfoAt$1(this.rawString.length - 1);
    },
    $signature: 132
  };
  A._TextPainterLayoutCacheWithOffset.prototype = {
    get$paintOffset() {
      var t2, t3,
        t1 = this.textAlignment;
      if (t1 === 0)
        return B.Offset_0_0;
      t2 = this.layout;
      t3 = t2._paragraph;
      if (!isFinite(t3.get$width(t3)))
        return B.Offset_y9W;
      t3 = this.contentWidth;
      t2 = t2._paragraph;
      return new A.Offset(t1 * (t3 - t2.get$width(t2)), 0);
    },
    _resizeToFit$3(minWidth, maxWidth, widthBasis) {
      var maxIntrinsicWidth, t2, skipLineBreaking, _this = this,
        t1 = _this.contentWidth;
      if (maxWidth === t1 && minWidth === t1) {
        _this.contentWidth = _this.layout._contentWidthFor$3(minWidth, maxWidth, widthBasis);
        return true;
      }
      if (!isFinite(_this.get$paintOffset()._dx)) {
        t1 = _this.layout._paragraph;
        t1 = !isFinite(t1.get$width(t1)) && isFinite(minWidth);
      } else
        t1 = false;
      if (t1)
        return false;
      t1 = _this.layout;
      maxIntrinsicWidth = t1._paragraph.get$maxIntrinsicWidth();
      if (maxWidth !== _this.layoutMaxWidth) {
        t2 = t1._paragraph;
        skipLineBreaking = t2.get$width(t2) - maxIntrinsicWidth > -1e-10 && maxWidth - maxIntrinsicWidth > -1e-10;
      } else
        skipLineBreaking = true;
      if (skipLineBreaking) {
        _this.contentWidth = t1._contentWidthFor$3(minWidth, maxWidth, widthBasis);
        return true;
      }
      return false;
    }
  };
  A._LineCaretMetrics.prototype = {};
  A.TextPainter_getBoxesForSelection_closure.prototype = {
    call$1(box) {
      return A.TextPainter__shiftTextBox(box, this.offset);
    },
    $signature: 62
  };
  A._LinearTextScaler.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._LinearTextScaler && other.textScaleFactor === this.textScaleFactor;
    },
    get$hashCode(_) {
      return B.JSNumber_methods.get$hashCode(this.textScaleFactor);
    },
    toString$0(_) {
      var t1 = this.textScaleFactor;
      return t1 === 1 ? "no scaling" : "linear (" + A.S(t1) + "x)";
    }
  };
  A.TextSpan.prototype = {
    get$cursor(_) {
      return this.mouseCursor;
    },
    get$validForMouseTracker() {
      return true;
    },
    handleEvent$2($event, entry) {
    },
    build$3$dimensions$textScaler(builder, dimensions, textScaler) {
      var exception, stack, exception0, children, _i,
        t1 = this.style,
        hasStyle = t1 != null;
      if (hasStyle)
        builder.pushStyle$1(t1.getTextStyle$1$textScaler(textScaler));
      t1 = this.text;
      if (t1 != null)
        try {
          builder.addText$1(t1);
        } catch (exception0) {
          t1 = A.unwrapException(exception0);
          if (t1 instanceof A.ArgumentError) {
            exception = t1;
            stack = A.getTraceFromException(exception0);
            A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "painting library", A.ErrorDescription$("while building a TextSpan"), null, true));
            builder.addText$1("\ufffd");
          } else
            throw exception0;
        }
      children = this.children;
      if (children != null)
        for (t1 = children.length, _i = 0; _i < children.length; children.length === t1 || (0, A.throwConcurrentModificationError)(children), ++_i)
          children[_i].build$3$dimensions$textScaler(builder, dimensions, textScaler);
      if (hasStyle)
        builder.pop$0();
    },
    computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, includePlaceholders, includeSemanticsLabels) {
      var t2, _i,
        t1 = this.text;
      if (t1 != null)
        buffer._contents += t1;
      t1 = this.children;
      if (t1 != null)
        for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].computeToPlainText$3$includePlaceholders$includeSemanticsLabels(buffer, true, includeSemanticsLabels);
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      if (!_this.super$InlineSpan$$eq(0, other))
        return false;
      return other instanceof A.TextSpan && other.text == _this.text && _this.mouseCursor.$eq(0, other.mouseCursor) && A.listEquals0(other.children, _this.children);
    },
    get$hashCode(_) {
      var _this = this, _null = null,
        t1 = A.InlineSpan.prototype.get$hashCode.call(_this, 0),
        t2 = _this.children;
      t2 = t2 == null ? _null : A.Object_hashAll(t2);
      return A.Object_hash(t1, _this.text, _null, _null, _null, _null, _this.mouseCursor, t2, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toStringShort$0() {
      return "TextSpan";
    },
    debugDescribeChildren$0() {
      var t2,
        t1 = this.children;
      if (t1 == null)
        t1 = null;
      else {
        t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,DiagnosticsNode>");
        t2 = A.List_List$of(new A.MappedListIterable(t1, new A.TextSpan_debugDescribeChildren_closure(), t2), true, t2._eval$1("ListIterable.E"));
        t1 = t2;
      }
      return t1 == null ? B.List_empty1 : t1;
    },
    $isHitTestTarget: 1,
    $isMouseTrackerAnnotation: 1,
    get$onEnter() {
      return null;
    },
    get$onExit() {
      return null;
    }
  };
  A.TextSpan_debugDescribeChildren_closure.prototype = {
    call$1(child) {
      return A.DiagnosticableTreeNode$(null, null, child);
    },
    $signature: 134
  };
  A.TextStyle.prototype = {
    get$fontFamilyFallback() {
      return this._fontFamilyFallback;
    },
    get$_text_style$_fontFamily(_) {
      return this.fontFamily;
    },
    copyWith$26$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$inherit$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, inherit, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      var t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, _this = this,
        t1 = inherit == null ? _this.inherit : inherit,
        t2 = _this.foreground;
      if (t2 == null && foreground == null)
        t3 = color == null ? _this.color : color;
      else
        t3 = null;
      t4 = _this.background;
      if (t4 == null && background == null)
        t5 = backgroundColor == null ? _this.backgroundColor : backgroundColor;
      else
        t5 = null;
      t6 = fontSize == null ? _this.fontSize : fontSize;
      t7 = fontWeight == null ? _this.fontWeight : fontWeight;
      t8 = letterSpacing == null ? _this.letterSpacing : letterSpacing;
      t9 = wordSpacing == null ? _this.wordSpacing : wordSpacing;
      t10 = textBaseline == null ? _this.textBaseline : textBaseline;
      t11 = height == null ? _this.height : height;
      t12 = leadingDistribution == null ? _this.leadingDistribution : leadingDistribution;
      t2 = foreground == null ? t2 : foreground;
      t4 = background == null ? t4 : background;
      t13 = shadows == null ? _this.shadows : shadows;
      t14 = fontVariations == null ? _this.fontVariations : fontVariations;
      t15 = decoration == null ? _this.decoration : decoration;
      t16 = decorationColor == null ? _this.decorationColor : decorationColor;
      t17 = decorationStyle == null ? _this.decorationStyle : decorationStyle;
      t18 = decorationThickness == null ? _this.decorationThickness : decorationThickness;
      t19 = fontFamily == null ? _this.get$_text_style$_fontFamily(0) : fontFamily;
      t20 = fontFamilyFallback == null ? _this._fontFamilyFallback : fontFamilyFallback;
      return A.TextStyle$(t4, t5, t3, null, t15, t16, t17, t18, t19, t20, _this.fontFeatures, t6, _this.fontStyle, t14, t7, t2, t11, t1, t12, t8, _this.locale, _this.overflow, _this._package, t13, t10, t9);
    },
    copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing) {
      return this.copyWith$26$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$inherit$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(background, backgroundColor, color, debugLabel, decoration, decorationColor, decorationStyle, decorationThickness, fontFamily, fontFamilyFallback, fontFeatures, fontSize, fontStyle, fontVariations, fontWeight, foreground, height, null, leadingDistribution, letterSpacing, locale, overflow, $package, shadows, textBaseline, wordSpacing);
    },
    merge$1(other) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23;
      if (other == null)
        return this;
      if (!other.inherit)
        return other;
      t1 = other.color;
      t2 = other.backgroundColor;
      t3 = other.fontSize;
      t4 = other.fontWeight;
      t5 = other.fontStyle;
      t6 = other.letterSpacing;
      t7 = other.wordSpacing;
      t8 = other.textBaseline;
      t9 = other.height;
      t10 = other.leadingDistribution;
      t11 = other.locale;
      t12 = other.foreground;
      t13 = other.background;
      t14 = other.shadows;
      t15 = other.fontFeatures;
      t16 = other.fontVariations;
      t17 = other.decoration;
      t18 = other.decorationColor;
      t19 = other.decorationStyle;
      t20 = other.decorationThickness;
      t21 = other.get$_text_style$_fontFamily(0);
      t22 = other._fontFamilyFallback;
      t23 = other._package;
      return this.copyWith$25$background$backgroundColor$color$debugLabel$decoration$decorationColor$decorationStyle$decorationThickness$fontFamily$fontFamilyFallback$fontFeatures$fontSize$fontStyle$fontVariations$fontWeight$foreground$height$leadingDistribution$letterSpacing$locale$overflow$package$shadows$textBaseline$wordSpacing(t13, t2, t1, null, t17, t18, t19, t20, t21, t22, t15, t3, t5, t16, t4, t12, t9, t10, t6, t11, other.overflow, t23, t14, t8, t7);
    },
    getTextStyle$1$textScaler(textScaler) {
      var t1, t2, _1_1, _1_2, t3, paint, color, _this = this,
        _0_0 = _this.fontSize;
      $label0$0: {
        t1 = null;
        if (_0_0 == null)
          break $label0$0;
        t2 = textScaler.$eq(0, B._LinearTextScaler_1);
        if (t2) {
          t1 = _0_0;
          break $label0$0;
        }
        t2 = _0_0 * textScaler.textScaleFactor;
        t1 = t2;
        break $label0$0;
      }
      t2 = _this.get$fontFamilyFallback();
      _1_1 = _this.background;
      _1_2 = _this.backgroundColor;
      $label1$1: {
        t3 = type$.Paint;
        if (t3._is(_1_1)) {
          paint = _1_1 == null ? t3._as(_1_1) : _1_1;
          t3 = paint;
          break $label1$1;
        }
        if (_1_2 instanceof A.Color) {
          color = _1_2 == null ? type$.Color._as(_1_2) : _1_2;
          t3 = $.$get$_renderer().createPaint$0();
          t3.set$color(0, color);
          break $label1$1;
        }
        t3 = null;
        break $label1$1;
      }
      return A.TextStyle_TextStyle(t3, _this.color, _this.decoration, _this.decorationColor, _this.decorationStyle, _this.decorationThickness, _this.fontFamily, t2, _this.fontFeatures, t1, _this.fontStyle, _this.fontVariations, _this.fontWeight, _this.foreground, _this.height, _this.leadingDistribution, _this.letterSpacing, _this.locale, _this.shadows, _this.textBaseline, _this.wordSpacing);
    },
    getParagraphStyle$8$ellipsis$locale$maxLines$strutStyle$textAlign$textDirection$textHeightBehavior$textScaler(ellipsis, locale, maxLines, strutStyle, textAlign, textDirection, textHeightBehavior, textScaler) {
      var t2, t3, t4, _0_0, t5, t6, t7, t8, t9, t10, t11, _this = this,
        leadingDistribution = _this.leadingDistribution,
        effectiveTextHeightBehavior = leadingDistribution == null ? null : new A.TextHeightBehavior(leadingDistribution),
        t1 = _this.fontSize;
      if (t1 == null)
        t1 = 14;
      t2 = textScaler.textScaleFactor;
      if (strutStyle == null)
        t3 = null;
      else {
        t3 = strutStyle.fontFamily;
        t4 = strutStyle.get$fontFamilyFallback();
        _0_0 = strutStyle.fontSize;
        $label0$0: {
          t5 = null;
          if (_0_0 == null)
            break $label0$0;
          t6 = _0_0 * t2;
          t5 = t6;
          break $label0$0;
        }
        t6 = strutStyle.height;
        t7 = strutStyle.leading;
        t8 = strutStyle.leadingDistribution;
        t9 = strutStyle.fontWeight;
        t10 = strutStyle.fontStyle;
        t11 = strutStyle.forceStrutHeight;
        t8 = $.$get$_renderer().createStrutStyle$9$fontFamily$fontFamilyFallback$fontSize$fontStyle$fontWeight$forceStrutHeight$height$leading$leadingDistribution(t3, t4, t5, t10, t9, t11, t6, t7, t8);
        t3 = t8;
      }
      return A.ParagraphStyle_ParagraphStyle(ellipsis, _this.fontFamily, t1 * t2, _this.fontStyle, _this.fontWeight, _this.height, locale, maxLines, t3, textAlign, textDirection, effectiveTextHeightBehavior);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.TextStyle)
        if (other.inherit === _this.inherit)
          if (J.$eq$(other.color, _this.color))
            if (J.$eq$(other.backgroundColor, _this.backgroundColor))
              if (other.fontSize == _this.fontSize)
                if (other.fontWeight == _this.fontWeight)
                  if (other.letterSpacing == _this.letterSpacing)
                    if (other.wordSpacing == _this.wordSpacing)
                      if (other.textBaseline == _this.textBaseline)
                        if (other.height == _this.height)
                          if (other.leadingDistribution == _this.leadingDistribution)
                            if (other.foreground == _this.foreground)
                              if (other.background == _this.background)
                                if (A.listEquals0(other.shadows, _this.shadows))
                                  if (A.listEquals0(other.fontFeatures, _this.fontFeatures))
                                    if (A.listEquals0(other.fontVariations, _this.fontVariations))
                                      if (J.$eq$(other.decoration, _this.decoration))
                                        if (J.$eq$(other.decorationColor, _this.decorationColor))
                                          if (other.decorationStyle == _this.decorationStyle)
                                            if (other.decorationThickness == _this.decorationThickness)
                                              if (other.fontFamily == _this.fontFamily)
                                                t1 = A.listEquals0(other.get$fontFamilyFallback(), _this.get$fontFamilyFallback());
      return t1;
    },
    get$hashCode(_) {
      var t2, _this = this, _null = null,
        fontFamilyFallback = _this.get$fontFamilyFallback(),
        t1 = fontFamilyFallback == null ? _null : A.Object_hashAll(fontFamilyFallback),
        fontHash = A.Object_hash(_this.decorationStyle, _this.decorationThickness, _this.fontFamily, t1, _this._package, _this.overflow, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue),
        shadows = _this.shadows,
        fontVariations = _this.fontVariations;
      t1 = shadows == null ? _null : A.Object_hashAll(shadows);
      t2 = fontVariations == null ? _null : A.Object_hashAll(fontVariations);
      return A.Object_hash(_this.inherit, _this.color, _this.backgroundColor, _this.fontSize, _this.fontWeight, _this.fontStyle, _this.letterSpacing, _this.wordSpacing, _this.textBaseline, _this.height, _this.leadingDistribution, _this.locale, _this.foreground, _this.background, t1, _null, t2, _this.decoration, _this.decorationColor, fontHash);
    },
    toStringShort$0() {
      return "TextStyle";
    }
  };
  A._TextStyle_Object_Diagnosticable.prototype = {};
  A.Simulation.prototype = {
    toString$0(_) {
      return "Simulation";
    }
  };
  A.Tolerance.prototype = {
    toString$0(_) {
      return "Tolerance(distance: \xb1" + A.S(this.distance) + ", time: \xb10.001, velocity: \xb1" + A.S(this.velocity) + ")";
    }
  };
  A.RendererBinding.prototype = {
    handleMetricsChanged$0() {
      var t1, t2, forceFrame, t3, t4, t5, dpr, t6, t7, t8, devicePixelRatio;
      for (t1 = this.RendererBinding__viewIdToRenderView.get$values(0), t2 = A._instanceType(t1), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1], forceFrame = false; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        forceFrame = forceFrame || t3.RenderObjectWithChildMixin__child != null;
        t4 = t3._view;
        t5 = $.$get$EngineFlutterDisplay__instance();
        dpr = t5._debugDevicePixelRatioOverride;
        if (dpr == null) {
          t6 = self.window.devicePixelRatio;
          dpr = t6 === 0 ? 1 : t6;
        }
        t6 = t4._physicalSize;
        if (t6 == null) {
          t6 = t4.dimensionsProvider.computePhysicalSize$0();
          t4._physicalSize = t6;
        }
        t6 = A.ViewConstraints_ViewConstraints$fromJs(t4._jsViewConstraints, new A.Size(t6._dx / dpr, t6._dy / dpr));
        t4 = t6.minWidth * dpr;
        t7 = t6.maxWidth * dpr;
        t8 = t6.minHeight * dpr;
        t6 = t6.maxHeight * dpr;
        devicePixelRatio = t5._debugDevicePixelRatioOverride;
        if (devicePixelRatio == null) {
          t5 = self.window.devicePixelRatio;
          devicePixelRatio = t5 === 0 ? 1 : t5;
        }
        t3.set$configuration(new A.ViewConfiguration(new A.BoxConstraints(t4 / devicePixelRatio, t7 / devicePixelRatio, t8 / devicePixelRatio, t6 / devicePixelRatio), new A.BoxConstraints(t4, t7, t8, t6), devicePixelRatio));
      }
      if (forceFrame)
        this.scheduleForcedFrame$0();
    },
    handleTextScaleFactorChanged$0() {
    },
    handlePlatformBrightnessChanged$0() {
    },
    initMouseTracker$0() {
      var t2,
        t1 = this.RendererBinding__mouseTracker;
      if (t1 != null) {
        t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
        t1.ChangeNotifier__count = 0;
      }
      t1 = type$.int;
      t2 = $.$get$ChangeNotifier__emptyListeners();
      this.RendererBinding__mouseTracker = new A.MouseTracker(new A.RendererBinding_initMouseTracker_closure(this), new A.MouseCursorManager(B.SystemMouseCursor_basic, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.MouseCursorSession)), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._MouseState), t2);
    },
    _handleWebFirstFrame$1(_) {
      B.MethodChannel_gD3._invokeMethod$1$3$arguments$missingOk("first-frame", null, false, type$.void);
    },
    _handlePersistentFrameCallback$1(timeStamp) {
      this.drawFrame$0();
      this._scheduleMouseTrackerUpdate$0();
    },
    _scheduleMouseTrackerUpdate$0() {
      $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RendererBinding__scheduleMouseTrackerUpdate_closure(this));
    },
    drawFrame$0() {
      var t2, t3, _this = this,
        t1 = _this.RendererBinding___RendererBinding__rootPipelineOwner_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.flushLayout$0();
      _this.RendererBinding___RendererBinding__rootPipelineOwner_A.flushCompositingBits$0();
      _this.RendererBinding___RendererBinding__rootPipelineOwner_A.flushPaint$0();
      if (_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0) {
        for (t1 = _this.RendererBinding__viewIdToRenderView.get$values(0), t2 = A._instanceType(t1), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          (t3 == null ? t2._as(t3) : t3).compositeFrame$0();
        }
        _this.RendererBinding___RendererBinding__rootPipelineOwner_A.flushSemantics$0();
        _this.RendererBinding__firstFrameSent = true;
      }
    }
  };
  A.RendererBinding_initMouseTracker_closure.prototype = {
    call$2(position, viewId) {
      var result = A.HitTestResult$();
      this.$this.hitTestInView$3(result, position, viewId);
      return result;
    },
    $signature: 135
  };
  A.RendererBinding__scheduleMouseTrackerUpdate_closure.prototype = {
    call$1(duration) {
      this.$this.RendererBinding__mouseTracker.updateAllDevices$0();
    },
    $signature: 2
  };
  A._BindingPipelineManifold.prototype = {};
  A._DefaultRootPipelineOwner.prototype = {};
  A.BoxConstraints.prototype = {
    constrain$1(size) {
      var _this = this;
      return new A.Size(A.clampDouble(size._dx, _this.minWidth, _this.maxWidth), A.clampDouble(size._dy, _this.minHeight, _this.maxHeight));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.BoxConstraints && other.minWidth === _this.minWidth && other.maxWidth === _this.maxWidth && other.minHeight === _this.minHeight && other.maxHeight === _this.maxHeight;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.minWidth, _this.maxWidth, _this.minHeight, _this.maxHeight, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var annotation, _this = this,
        t1 = _this.minWidth,
        t2 = false;
      if (t1 >= 0)
        if (t1 <= _this.maxWidth) {
          t2 = _this.minHeight;
          t2 = t2 >= 0 && t2 <= _this.maxHeight;
        }
      annotation = t2 ? "" : "; NOT NORMALIZED";
      if (t1 === 1 / 0 && _this.minHeight === 1 / 0)
        return "BoxConstraints(biggest" + annotation + ")";
      if (t1 === 0 && _this.maxWidth === 1 / 0 && _this.minHeight === 0 && _this.maxHeight === 1 / 0)
        return "BoxConstraints(unconstrained" + annotation + ")";
      t2 = new A.BoxConstraints_toString_describe();
      return "BoxConstraints(" + t2.call$3(t1, _this.maxWidth, "w") + ", " + t2.call$3(_this.minHeight, _this.maxHeight, "h") + annotation + ")";
    }
  };
  A.BoxConstraints_toString_describe.prototype = {
    call$3(min, max, dim) {
      if (min === max)
        return dim + "=" + B.JSNumber_methods.toStringAsFixed$1(min, 1);
      return B.JSNumber_methods.toStringAsFixed$1(min, 1) + "<=" + dim + "<=" + B.JSNumber_methods.toStringAsFixed$1(max, 1);
    },
    $signature: 74
  };
  A.BoxHitTestResult.prototype = {};
  A.TextSelectionPoint.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.TextSelectionPoint && other.point.$eq(0, _this.point) && other.direction == _this.direction;
    },
    toString$0(_) {
      var t1, _this = this;
      switch (_this.direction) {
        case B.TextDirection_1:
          t1 = _this.point.toString$0(0) + "-ltr";
          break;
        case B.TextDirection_0:
          t1 = _this.point.toString$0(0) + "-rtl";
          break;
        case null:
        case void 0:
          t1 = _this.point.toString$0(0);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.point, this.direction, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.RenderEditable_getBoxesForSelection_closure.prototype = {
    call$1(textBox) {
      var t1 = this.$this;
      return new A.TextBox(textBox.left + t1.get$_paintOffset()._dx, textBox.top + t1.get$_paintOffset()._dy, textBox.right + t1.get$_paintOffset()._dx, textBox.bottom + t1.get$_paintOffset()._dy, textBox.direction);
    },
    $signature: 62
  };
  A.RenderEditable_getRectForComposingRange_closure.prototype = {
    call$2(accum, incoming) {
      var t1 = accum == null ? null : accum.expandToInclude$1(new A.Rect(incoming.left, incoming.top, incoming.right, incoming.bottom));
      return t1 == null ? new A.Rect(incoming.left, incoming.top, incoming.right, incoming.bottom) : t1;
    },
    $signature: 136
  };
  A.RenderEditablePainter.prototype = {};
  A._CaretPainter.prototype = {
    set$floatingCursorRect(value) {
      if (J.$eq$(this._floatingCursorRect, value))
        return;
      this._floatingCursorRect = value;
      this.notifyListeners$0();
    }
  };
  A.AnnotationResult.prototype = {};
  A._MouseState.prototype = {
    replaceAnnotations$1(value) {
      var previous = this._annotations;
      this._annotations = value;
      return previous;
    },
    toString$0(_) {
      var _s16_ = "<optimized out>#",
        t1 = A.shortHash(this._latestEvent),
        t2 = this._annotations.__js_helper$_length;
      return _s16_ + A.shortHash(this) + "(" + ("latestEvent: " + (_s16_ + t1)) + ", " + ("annotations: [list of " + t2 + "]") + ")";
    }
  };
  A._MouseTrackerUpdateDetails.prototype = {
    get$device(_) {
      var t1 = this.previousEvent;
      return t1.get$device(t1);
    }
  };
  A.MouseTracker.prototype = {
    _hitTestInViewResultToAnnotations$1(result) {
      var t2, t3, _i, entry, target, t4,
        t1 = type$.MouseTrackerAnnotation,
        annotations = A.LinkedHashMap_LinkedHashMap(null, null, t1, type$.Matrix4);
      for (t2 = result._path, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        entry = t2[_i];
        target = entry.target;
        if (t1._is(target)) {
          t4 = entry._transform;
          t4.toString;
          annotations.$indexSet(0, target, t4);
        }
      }
      return annotations;
    },
    _findAnnotations$1(state) {
      var device, viewId,
        t1 = state._latestEvent,
        globalPosition = t1.get$position(t1);
      t1 = state._latestEvent;
      device = t1.get$device(t1);
      viewId = state._latestEvent.get$viewId();
      if (!this._mouseStates.containsKey$1(0, device))
        return A.LinkedHashMap_LinkedHashMap(null, null, type$.MouseTrackerAnnotation, type$.Matrix4);
      return this._hitTestInViewResultToAnnotations$1(this._hitTestInView.call$2(globalPosition, viewId));
    },
    _handleDeviceUpdate$1(details) {
      var t1, t2;
      A.MouseTracker__handleDeviceUpdateMouseEvents(details);
      t1 = details.nextAnnotations;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      this._mouseCursorMixin.handleDeviceCursorUpdate$3(details.get$device(0), details.triggeringEvent, A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(t1, t2), new A.MouseTracker__handleDeviceUpdate_closure(), t2._eval$1("Iterable.E"), type$.MouseCursor));
    },
    updateWithEvent$2($event, hitTestResult) {
      var viewId, device, t2, existingState, t3, _this = this, t1 = {};
      if ($event.get$kind($event) !== B.PointerDeviceKind_1 && $event.get$kind($event) !== B.PointerDeviceKind_2)
        return;
      if (type$.PointerSignalEvent._is($event))
        return;
      t1.result = null;
      if (type$.PointerRemovedEvent._is($event))
        t1.result = A.HitTestResult$();
      else {
        viewId = $event.get$viewId();
        t1.result = hitTestResult == null ? _this._hitTestInView.call$2($event.get$position($event), viewId) : hitTestResult;
      }
      device = $event.get$device($event);
      t2 = _this._mouseStates;
      existingState = t2.$index(0, device);
      if (!A.MouseTracker__shouldMarkStateDirty(existingState, $event))
        return;
      t3 = t2.__js_helper$_length;
      new A.MouseTracker_updateWithEvent_closure(t1, _this, existingState, $event, device).call$0();
      if (t3 !== 0 !== (t2.__js_helper$_length !== 0))
        _this.notifyListeners$0();
    },
    updateAllDevices$0() {
      new A.MouseTracker_updateAllDevices_closure(this).call$0();
    }
  };
  A.MouseTracker__handleDeviceUpdate_closure.prototype = {
    call$1(annotation) {
      return annotation.get$cursor(annotation);
    },
    $signature: 137
  };
  A.MouseTracker_updateWithEvent_closure.prototype = {
    call$0() {
      var _this = this;
      new A.MouseTracker_updateWithEvent__closure(_this._box_0, _this.$this, _this.existingState, _this.event, _this.device).call$0();
    },
    $signature: 0
  };
  A.MouseTracker_updateWithEvent__closure.prototype = {
    call$0() {
      var t2, t3, targetState, previous, nextAnnotations, _this = this, _null = null,
        t1 = _this.existingState;
      if (t1 == null) {
        t2 = _this.event;
        if (type$.PointerRemovedEvent._is(t2))
          return;
        _this.$this._mouseStates.$indexSet(0, _this.device, new A._MouseState(A.LinkedHashMap_LinkedHashMap(_null, _null, type$.MouseTrackerAnnotation, type$.Matrix4), t2));
      } else {
        t2 = _this.event;
        if (type$.PointerRemovedEvent._is(t2))
          _this.$this._mouseStates.remove$1(0, t2.get$device(t2));
      }
      t3 = _this.$this;
      targetState = t3._mouseStates.$index(0, _this.device);
      if (targetState == null) {
        t1.toString;
        targetState = t1;
      }
      previous = targetState._latestEvent;
      targetState._latestEvent = t2;
      nextAnnotations = type$.PointerRemovedEvent._is(t2) ? A.LinkedHashMap_LinkedHashMap(_null, _null, type$.MouseTrackerAnnotation, type$.Matrix4) : t3._hitTestInViewResultToAnnotations$1(_this._box_0.result);
      t3._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(targetState.replaceAnnotations$1(nextAnnotations), nextAnnotations, previous, t2));
    },
    $signature: 0
  };
  A.MouseTracker_updateAllDevices_closure.prototype = {
    call$0() {
      var t1, t2, t3, t4, lastEvent, nextAnnotations, previous;
      for (t1 = this.$this, t2 = t1._mouseStates.get$values(0), t3 = A._instanceType(t2), t2 = new A.MappedIterator(J.get$iterator$ax(t2.__internal$_iterable), t2._f, t3._eval$1("MappedIterator<1,2>")), t3 = t3._rest[1]; t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        if (t4 == null)
          t4 = t3._as(t4);
        lastEvent = t4._latestEvent;
        nextAnnotations = t1._findAnnotations$1(t4);
        previous = t4._annotations;
        t4._annotations = nextAnnotations;
        t1._handleDeviceUpdate$1(new A._MouseTrackerUpdateDetails(previous, nextAnnotations, lastEvent, null));
      }
    },
    $signature: 0
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure.prototype = {
    call$2(annotation, transform) {
      var t1;
      if (annotation.get$validForMouseTracker() && !this.nextAnnotations.containsKey$1(0, annotation)) {
        t1 = annotation.get$onExit(annotation);
        if (t1 != null)
          t1.call$1(this.baseExitEvent.transformed$1(this.lastAnnotations.$index(0, annotation)));
      }
    },
    $signature: 138
  };
  A.MouseTracker__handleDeviceUpdateMouseEvents_closure0.prototype = {
    call$1(annotation) {
      return !this.lastAnnotations.containsKey$1(0, annotation);
    },
    $signature: 139
  };
  A.__MouseTrackerUpdateDetails_Object_Diagnosticable.prototype = {};
  A.PaintingContext.prototype = {
    stopRecordingIfNeeded$0() {
      var t1, _this = this;
      if (_this._canvas == null)
        return;
      t1 = _this._currentLayer;
      t1.toString;
      t1.set$picture(_this._recorder.endRecording$0());
      _this._canvas = _this._recorder = _this._currentLayer = null;
    },
    toString$0(_) {
      return "PaintingContext#" + A.Primitives_objectHashCode(this) + "(layer: " + this._containerLayer.toString$0(0) + ", canvas bounds: " + this.estimatedBounds.toString$0(0) + ")";
    }
  };
  A.Constraints.prototype = {};
  A.PipelineOwner.prototype = {
    flushLayout$0() {
      var dirtyNodes, i, node, child, t1, t2, t3, t4, t5, t6, t7, _this = this;
      A.FlutterTimeline_startSync("LAYOUT" + (_this._debugParent == null ? " (root)" : ""), null);
      try {
        for (t1 = type$.JSArray_RenderObject; t2 = _this._nodesNeedingLayout, t2.length !== 0;) {
          dirtyNodes = t2;
          _this._nodesNeedingLayout = A._setArrayType([], t1);
          J.sort$1$ax(dirtyNodes, new A.PipelineOwner_flushLayout_closure());
          for (i = 0; i < J.get$length$asx(dirtyNodes); ++i) {
            if (_this._shouldMergeDirtyNodes) {
              _this._shouldMergeDirtyNodes = false;
              t2 = _this._nodesNeedingLayout;
              if (t2.length !== 0) {
                t3 = dirtyNodes;
                t4 = i;
                t5 = J.get$length$asx(dirtyNodes);
                A.RangeError_checkValidRange(t4, t5, J.get$length$asx(t3), null, null);
                t6 = A._arrayInstanceType(t3);
                t7 = new A.SubListIterable(t3, t4, t5, t6._eval$1("SubListIterable<1>"));
                t7.SubListIterable$3(t3, t4, t5, t6._precomputed1);
                B.JSArray_methods.addAll$1(t2, t7);
                break;
              }
            }
            node = J.$index$asx(dirtyNodes, i);
            if (node._needsLayout && node._object$_owner === _this)
              node._layoutWithoutResize$0();
          }
          _this._shouldMergeDirtyNodes = false;
        }
        for (t1 = _this._children, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          child = t3 == null ? t2._as(t3) : t3;
          child.flushLayout$0();
        }
      } finally {
        _this._shouldMergeDirtyNodes = false;
        A.Timeline_finishSync();
      }
    },
    flushCompositingBits$0() {
      var t1, t2, _i, node, t3, _this = this;
      A.FlutterTimeline_startSync("UPDATING COMPOSITING BITS" + (_this._debugParent == null ? " (root)" : ""), null);
      t1 = _this._nodesNeedingCompositingBitsUpdate;
      B.JSArray_methods.sort$1(t1, new A.PipelineOwner_flushCompositingBits_closure());
      for (t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (node._needsCompositingBitsUpdate && node._object$_owner === _this)
          node._updateCompositingBits$0();
      }
      B.JSArray_methods.clear$0(t1);
      for (t1 = _this._children, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).flushCompositingBits$0();
      }
      A.Timeline_finishSync();
    },
    flushPaint$0() {
      var dirtyNodes, node, child, t1, t2, t3, _i, t4, t5, _this = this;
      A.FlutterTimeline_startSync("PAINT" + (_this._debugParent == null ? " (root)" : ""), null);
      try {
        dirtyNodes = _this._nodesNeedingPaint;
        _this._nodesNeedingPaint = A._setArrayType([], type$.JSArray_RenderObject);
        for (t1 = dirtyNodes, J.sort$1$ax(t1, new A.PipelineOwner_flushPaint_closure()), t2 = t1.length, t3 = type$.OffsetLayer, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if ((node._needsPaint || node._needsCompositedLayerUpdate) && node._object$_owner === _this)
            if (node._layerHandle._layer._layer$_owner != null)
              if (node._needsPaint)
                A.PaintingContext__repaintCompositedChild(node, false);
              else {
                t4 = node;
                t5 = t4._layerHandle._layer;
                t5.toString;
                t4.updateCompositedLayer$1$oldLayer(t3._as(t5));
                t4._needsCompositedLayerUpdate = false;
              }
            else
              node._skippedPaintingOnLayer$0();
        }
        for (t1 = _this._children, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          child = t3 == null ? t2._as(t3) : t3;
          child.flushPaint$0();
        }
      } finally {
        A.Timeline_finishSync();
      }
    },
    _updateSemanticsOwner$0() {
      var _this = this,
        t1 = _this._manifold;
      t1 = t1 == null ? null : t1._binding.get$_binding1$_semanticsEnabled()._change_notifier$_value;
      if (t1 === true) {
        if (_this._semanticsOwner == null) {
          t1 = type$.SemanticsNode;
          _this._semanticsOwner = new A.SemanticsOwner(_this.onSemanticsUpdate, A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1), A.LinkedHashSet_LinkedHashSet$_empty(t1), $.$get$ChangeNotifier__emptyListeners());
          t1 = _this.onSemanticsOwnerCreated;
          if (t1 != null)
            t1.call$0();
        }
      } else {
        t1 = _this._semanticsOwner;
        if (t1 != null) {
          t1.dispose$0();
          _this._semanticsOwner = null;
          t1 = _this.onSemanticsOwnerDisposed;
          if (t1 != null)
            t1.call$0();
        }
      }
    },
    flushSemantics$0() {
      var nodesToProcess, node, child, t1, nodesToProcess0, t2, _i, t3, _this = this;
      if (_this._semanticsOwner == null)
        return;
      A.FlutterTimeline_startSync("SEMANTICS" + (_this._debugParent == null ? " (root)" : ""), null);
      try {
        t1 = _this._nodesNeedingSemantics;
        nodesToProcess0 = A.List_List$of(t1, true, A._instanceType(t1)._precomputed1);
        B.JSArray_methods.sort$1(nodesToProcess0, new A.PipelineOwner_flushSemantics_closure());
        nodesToProcess = nodesToProcess0;
        t1.clear$0(0);
        for (t1 = nodesToProcess, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          if (node._needsSemanticsUpdate && node._object$_owner === _this)
            node._updateSemantics$0();
        }
        _this._semanticsOwner.sendSemanticsUpdate$0();
        for (t1 = _this._children, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
          t3 = t1._collection$_current;
          child = t3 == null ? t2._as(t3) : t3;
          child.flushSemantics$0();
        }
      } finally {
        A.Timeline_finishSync();
      }
    },
    debugDescribeChildren$0() {
      var t2, t3, t4,
        t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode);
      for (t2 = this._children, t2 = A._LinkedHashSetIterator$(t2, t2._collection$_modifications, A._instanceType(t2)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t4 = t2._collection$_current;
        t1.push(new A.DiagnosticableTreeNode(t4 == null ? t3._as(t4) : t4, null, true, true, null, null));
      }
      return t1;
    },
    attach$1(manifold) {
      var t1, t2, t3, _this = this;
      _this._manifold = manifold;
      manifold.addListener$1(0, _this.get$_updateSemanticsOwner());
      _this._updateSemanticsOwner$0();
      for (t1 = _this._children, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        (t3 == null ? t2._as(t3) : t3).attach$1(manifold);
      }
    },
    $isDiagnosticableTree: 1
  };
  A.PipelineOwner_flushLayout_closure.prototype = {
    call$2(a, b) {
      return a._object$_depth - b._object$_depth;
    },
    $signature: 26
  };
  A.PipelineOwner_flushCompositingBits_closure.prototype = {
    call$2(a, b) {
      return a._object$_depth - b._object$_depth;
    },
    $signature: 26
  };
  A.PipelineOwner_flushPaint_closure.prototype = {
    call$2(a, b) {
      return b._object$_depth - a._object$_depth;
    },
    $signature: 26
  };
  A.PipelineOwner_flushSemantics_closure.prototype = {
    call$2(a, b) {
      return a._object$_depth - b._object$_depth;
    },
    $signature: 26
  };
  A.RenderObject__reportException_closure.prototype = {
    call$0() {
      var t1 = A._setArrayType([], type$.JSArray_DiagnosticsNode),
        t2 = this.$this;
      t1.push(A.DiagnosticableTreeNode$("The following RenderObject was being processed when the exception was fired", B.DiagnosticsTreeStyle_10, t2));
      t1.push(A.DiagnosticableTreeNode$("RenderObject", B.DiagnosticsTreeStyle_11, t2));
      return t1;
    },
    $signature: 19
  };
  A.RenderObject__updateCompositingBits_closure.prototype = {
    call$1(child) {
      var t1;
      child._updateCompositingBits$0();
      t1 = child.__RenderObject__needsCompositing_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1)
        this.$this.__RenderObject__needsCompositing_A = true;
    },
    $signature: 178
  };
  A.RenderObject_toStringDeep_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.super$DiagnosticableTreeMixin$toStringDeep(_this.minLevel, _this.prefixLineOne, _this.prefixOtherLines);
    },
    $signature: 25
  };
  A._PipelineOwner_Object_DiagnosticableTreeMixin.prototype = {};
  A.HitTestBehavior.prototype = {
    _enumToString$0() {
      return "HitTestBehavior." + this._name;
    }
  };
  A.TextSelectionHandleType.prototype = {
    _enumToString$0() {
      return "TextSelectionHandleType." + this._name;
    }
  };
  A.ViewConfiguration.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.ViewConfiguration && other.logicalConstraints.$eq(0, _this.logicalConstraints) && other.physicalConstraints.$eq(0, _this.physicalConstraints) && other.devicePixelRatio === _this.devicePixelRatio;
    },
    get$hashCode(_) {
      return A.Object_hash(this.logicalConstraints, this.physicalConstraints, this.devicePixelRatio, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return this.logicalConstraints.toString$0(0) + " at " + A.debugFormatDouble(this.devicePixelRatio) + "x";
    }
  };
  A.RevealedOffset.prototype = {
    toString$0(_) {
      return "RevealedOffset(offset: " + A.S(this.offset) + ", rect: " + this.rect.toString$0(0) + ")";
    }
  };
  A._FrameCallbackEntry.prototype = {};
  A.SchedulerPhase.prototype = {
    _enumToString$0() {
      return "SchedulerPhase." + this._name;
    }
  };
  A.SchedulerBinding.prototype = {
    addTimingsCallback$1(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      t1.push(callback);
      if (t1.length === 1) {
        t1 = $.$get$EnginePlatformDispatcher__instance();
        t1._onReportTimings = this.get$_executeTimingsCallbacks();
        t1._onReportTimingsZone = $.Zone__current;
      }
    },
    removeTimingsCallback$1(callback) {
      var t1 = this.SchedulerBinding__timingsCallbacks;
      B.JSArray_methods.remove$1(t1, callback);
      if (t1.length === 0) {
        t1 = $.$get$EnginePlatformDispatcher__instance();
        t1._onReportTimings = null;
        t1._onReportTimingsZone = $.Zone__current;
      }
    },
    _executeTimingsCallbacks$1(timings) {
      var callback, exception, stack, collector, t2, _i, exception0, t3, t4,
        t1 = this.SchedulerBinding__timingsCallbacks,
        clonedCallbacks = A.List_List$of(t1, true, type$.void_Function_List_FrameTiming);
      for (t2 = clonedCallbacks.length, _i = 0; _i < t2; ++_i) {
        callback = clonedCallbacks[_i];
        try {
          if (B.JSArray_methods.contains$1(t1, callback))
            callback.call$1(timings);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while executing callbacks for FrameTiming");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "Flutter framework", t3, collector, false));
        }
      }
    },
    handleAppLifecycleStateChanged$1(state) {
      var _this = this;
      if (_this.SchedulerBinding__lifecycleState === state)
        return;
      _this.SchedulerBinding__lifecycleState = state;
      switch (state.index) {
        case 1:
        case 2:
          _this._setFramesEnabledState$1(true);
          break;
        case 3:
        case 4:
        case 0:
          _this._setFramesEnabledState$1(false);
          break;
      }
    },
    scheduleFrameCallback$2$rescheduling(callback, rescheduling) {
      var t1, _this = this;
      _this.scheduleFrame$0();
      t1 = ++_this.SchedulerBinding__nextFrameCallbackId;
      _this.SchedulerBinding__transientCallbacks.$indexSet(0, t1, new A._FrameCallbackEntry(callback));
      return _this.SchedulerBinding__nextFrameCallbackId;
    },
    get$framesEnabled() {
      return this.SchedulerBinding__framesEnabled;
    },
    _setFramesEnabledState$1(enabled) {
      if (this.SchedulerBinding__framesEnabled === enabled)
        return;
      this.SchedulerBinding__framesEnabled = enabled;
      if (enabled)
        this.scheduleFrame$0();
    },
    ensureFrameCallbacksRegistered$0() {
      var t1 = $.$get$EnginePlatformDispatcher__instance();
      if (t1._onBeginFrame == null) {
        t1._onBeginFrame = this.get$_handleBeginFrame();
        t1._onBeginFrameZone = $.Zone__current;
      }
      if (t1._onDrawFrame == null) {
        t1._onDrawFrame = this.get$_handleDrawFrame();
        t1._onDrawFrameZone = $.Zone__current;
      }
    },
    ensureVisualUpdate$0() {
      switch (this.SchedulerBinding__schedulerPhase.index) {
        case 0:
        case 4:
          this.scheduleFrame$0();
          return;
        case 1:
        case 2:
        case 3:
          return;
      }
    },
    scheduleFrame$0() {
      var t1, _this = this;
      if (!_this.SchedulerBinding__hasScheduledFrame)
        t1 = !(A.SchedulerBinding.prototype.get$framesEnabled.call(_this) && _this.WidgetsBinding__readyToProduceFrames);
      else
        t1 = true;
      if (t1)
        return;
      _this.ensureFrameCallbacksRegistered$0();
      $.$get$EnginePlatformDispatcher__instance().scheduleFrame$0();
      _this.SchedulerBinding__hasScheduledFrame = true;
    },
    scheduleForcedFrame$0() {
      if (this.SchedulerBinding__hasScheduledFrame)
        return;
      this.ensureFrameCallbacksRegistered$0();
      $.$get$EnginePlatformDispatcher__instance().scheduleFrame$0();
      this.SchedulerBinding__hasScheduledFrame = true;
    },
    resetEpoch$0() {
      var _this = this;
      _this.SchedulerBinding__epochStart = _this._adjustForEpoch$1(_this.SchedulerBinding__lastRawTimeStamp);
      _this.SchedulerBinding__firstRawTimeStampInEpoch = null;
    },
    _adjustForEpoch$1(rawTimeStamp) {
      var t1 = this.SchedulerBinding__firstRawTimeStampInEpoch,
        rawDurationSinceEpoch = t1 == null ? B.Duration_0 : new A.Duration(rawTimeStamp._duration - t1._duration);
      return A.Duration$(0, 0, B.JSNumber_methods.round$0(rawDurationSinceEpoch._duration / $._timeDilation) + this.SchedulerBinding__epochStart._duration, 0, 0, 0);
    },
    _handleBeginFrame$1(rawTimeStamp) {
      if (this.SchedulerBinding__warmUpFrame) {
        this.SchedulerBinding__rescheduleAfterWarmUpFrame = true;
        return;
      }
      this.handleBeginFrame$1(rawTimeStamp);
    },
    _handleDrawFrame$0() {
      var _this = this;
      if (_this.SchedulerBinding__rescheduleAfterWarmUpFrame) {
        _this.SchedulerBinding__rescheduleAfterWarmUpFrame = false;
        _this.SchedulerBinding__postFrameCallbacks.push(new A.SchedulerBinding__handleDrawFrame_closure(_this));
        return;
      }
      _this.handleDrawFrame$0();
    },
    handleBeginFrame$1(rawTimeStamp) {
      var callbacks, t2, _this = this,
        t1 = _this.SchedulerBinding__frameTimelineTask;
      t1.start$1(0, "Frame");
      if (_this.SchedulerBinding__firstRawTimeStampInEpoch == null)
        _this.SchedulerBinding__firstRawTimeStampInEpoch = rawTimeStamp;
      t2 = rawTimeStamp == null;
      _this.SchedulerBinding__currentFrameTimeStamp = _this._adjustForEpoch$1(t2 ? _this.SchedulerBinding__lastRawTimeStamp : rawTimeStamp);
      if (!t2)
        _this.SchedulerBinding__lastRawTimeStamp = rawTimeStamp;
      _this.SchedulerBinding__hasScheduledFrame = false;
      try {
        t1.start$1(0, "Animate");
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_1;
        callbacks = _this.SchedulerBinding__transientCallbacks;
        _this.SchedulerBinding__transientCallbacks = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._FrameCallbackEntry);
        J.forEach$1$ax(callbacks, new A.SchedulerBinding_handleBeginFrame_closure(_this));
        _this.SchedulerBinding__removedIds.clear$0(0);
      } finally {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_2;
      }
    },
    handleDrawFrame$0() {
      var callback, localPostFrameCallbacks, callback0, t2, t3, t4, _i, t5, _this = this,
        t1 = _this.SchedulerBinding__frameTimelineTask;
      t1.finish$0(0);
      try {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_3;
        for (t2 = type$.void_Function_Duration, t3 = A.List_List$of(_this.SchedulerBinding__persistentCallbacks, true, t2), t4 = t3.length, _i = 0; _i < t4; ++_i) {
          callback = t3[_i];
          t5 = _this.SchedulerBinding__currentFrameTimeStamp;
          t5.toString;
          _this._invokeFrameCallback$2(callback, t5);
        }
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_4;
        t3 = _this.SchedulerBinding__postFrameCallbacks;
        localPostFrameCallbacks = A.List_List$of(t3, true, t2);
        B.JSArray_methods.clear$0(t3);
        A.FlutterTimeline_startSync("POST_FRAME", null);
        try {
          for (t2 = localPostFrameCallbacks, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
            callback0 = t2[_i];
            t4 = _this.SchedulerBinding__currentFrameTimeStamp;
            t4.toString;
            _this._invokeFrameCallback$2(callback0, t4);
          }
        } finally {
          A.Timeline_finishSync();
        }
      } finally {
        _this.SchedulerBinding__schedulerPhase = B.SchedulerPhase_0;
        t1.finish$0(0);
        _this.SchedulerBinding__currentFrameTimeStamp = null;
      }
    },
    _profileFramePostEvent$1(frameTiming) {
      var t1 = frameTiming._ui$_data,
        t2 = B.JSArray_methods.get$last(t1),
        t3 = t1[1],
        t4 = t1[4],
        t5 = A.Duration$(0, 0, t4, 0, 0, 0),
        t6 = t1[0];
      A.postEvent("Flutter.Frame", A.LinkedHashMap_LinkedHashMap$_literal(["number", t2, "startTime", t3, "elapsed", t5._duration - A.Duration$(0, 0, t6, 0, 0, 0)._duration, "build", A.Duration$(0, 0, t1[2], 0, 0, 0)._duration - A.Duration$(0, 0, t3, 0, 0, 0)._duration, "raster", A.Duration$(0, 0, t4, 0, 0, 0)._duration - A.Duration$(0, 0, t1[3], 0, 0, 0)._duration, "vsyncOverhead", A.Duration$(0, 0, t3, 0, 0, 0)._duration - A.Duration$(0, 0, t6, 0, 0, 0)._duration], type$.String, type$.dynamic));
    },
    _invokeFrameCallback$3(callback, timeStamp, callbackStack) {
      var exception, exceptionStack, exception0, t1;
      try {
        callback.call$1(timeStamp);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        exceptionStack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("during a scheduler callback");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, exceptionStack, "scheduler library", t1, null, false));
      }
    },
    _invokeFrameCallback$2(callback, timeStamp) {
      return this._invokeFrameCallback$3(callback, timeStamp, null);
    }
  };
  A.SchedulerBinding__handleDrawFrame_closure.prototype = {
    call$1(timeStamp) {
      var t1 = this.$this;
      t1.SchedulerBinding__hasScheduledFrame = false;
      t1.scheduleFrame$0();
    },
    $signature: 2
  };
  A.SchedulerBinding_handleBeginFrame_closure.prototype = {
    call$2(id, callbackEntry) {
      var t2,
        t1 = this.$this;
      if (!t1.SchedulerBinding__removedIds.contains$1(0, id)) {
        t2 = t1.SchedulerBinding__currentFrameTimeStamp;
        t2.toString;
        t1._invokeFrameCallback$3(callbackEntry.callback, t2, null);
      }
    },
    $signature: 144
  };
  A.TickerFuture.prototype = {
    _ticker$_complete$0() {
      this._completed = true;
      this._primaryCompleter.complete$0(0);
      var t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.complete$0(0);
    },
    _ticker$_cancel$1(ticker) {
      var t1;
      this._completed = false;
      t1 = this._secondaryCompleter;
      if (t1 != null)
        t1.completeError$1(new A.TickerCanceled(ticker));
    },
    catchError$2$test(onError, test) {
      return this._primaryCompleter.future.catchError$2$test(onError, test);
    },
    catchError$1(onError) {
      return this.catchError$2$test(onError, null);
    },
    then$1$2$onError(onValue, onError, $R) {
      return this._primaryCompleter.future.then$1$2$onError(onValue, onError, $R);
    },
    then$1$1(onValue, $R) {
      return this.then$1$2$onError(onValue, null, $R);
    },
    whenComplete$1(action) {
      return this._primaryCompleter.future.whenComplete$1(action);
    },
    toString$0(_) {
      var t1 = A.shortHash(this),
        t2 = this._completed;
      if (t2 == null)
        t2 = "active";
      else
        t2 = t2 ? "complete" : "canceled";
      return "<optimized out>#" + t1 + "(" + t2 + ")";
    },
    $isFuture: 1
  };
  A.TickerCanceled.prototype = {
    toString$0(_) {
      var t1 = this.ticker;
      if (t1 != null)
        return "This ticker was canceled: " + t1.toString$0(0);
      return 'The ticker was canceled before the "orCancel" property was first used.';
    },
    $isException: 1
  };
  A.SemanticsBinding.prototype = {
    get$_binding1$_semanticsEnabled() {
      var t1, t2,
        value = this.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI;
      if (value === $) {
        t1 = $.$get$EnginePlatformDispatcher__instance().configuration;
        t2 = $.$get$ChangeNotifier__emptyListeners();
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.SemanticsBinding___SemanticsBinding__semanticsEnabled_FI = new A.ValueNotifier(t1.semanticsEnabled, t2, type$.ValueNotifier_bool);
      }
      return value;
    },
    ensureSemantics$0() {
      ++this.SemanticsBinding__outstandingHandles;
      this.get$_binding1$_semanticsEnabled().set$value(0, true);
      return new A.SemanticsHandle(this.get$_didDisposeSemanticsHandle());
    },
    _didDisposeSemanticsHandle$0() {
      --this.SemanticsBinding__outstandingHandles;
      this.get$_binding1$_semanticsEnabled().set$value(0, this.SemanticsBinding__outstandingHandles > 0);
    },
    _handleSemanticsEnabledChanged$0() {
      var t1, _this = this;
      if ($.$get$EnginePlatformDispatcher__instance().configuration.semanticsEnabled) {
        if (_this.SemanticsBinding__semanticsHandle == null)
          _this.SemanticsBinding__semanticsHandle = _this.ensureSemantics$0();
      } else {
        t1 = _this.SemanticsBinding__semanticsHandle;
        if (t1 != null)
          t1._onDispose.call$0();
        _this.SemanticsBinding__semanticsHandle = null;
      }
    },
    _handleSemanticsActionEvent$1(action) {
      var t1, decodedAction,
        $arguments = action.$arguments;
      if (type$.ByteData._is($arguments)) {
        t1 = B.C_StandardMessageCodec.decodeMessage$1($arguments);
        if (J.$eq$(t1, B.C_Object))
          t1 = $arguments;
        decodedAction = new A.SemanticsActionEvent(action.type, action.viewId, action.nodeId, t1);
      } else
        decodedAction = action;
      t1 = this.RendererBinding__viewIdToRenderView.$index(0, decodedAction.viewId);
      if (t1 != null) {
        t1 = t1._object$_owner;
        if (t1 != null) {
          t1 = t1._semanticsOwner;
          if (t1 != null)
            t1.performAction$3(decodedAction.nodeId, decodedAction.type, decodedAction.$arguments);
        }
      }
    }
  };
  A.SemanticsHandle.prototype = {};
  A._SemanticsDiagnosticableNode.prototype = {
    getChildren$0() {
      return this.value.debugDescribeChildren$1$childOrder(this.childOrder);
    }
  };
  A.SemanticsOwner.prototype = {
    dispose$0() {
      var _this = this;
      _this._semantics$_dirtyNodes.clear$0(0);
      _this._nodes.clear$0(0);
      _this._detachedNodes.clear$0(0);
      _this.super$ChangeNotifier$dispose();
    },
    sendSemanticsUpdate$0() {
      var customSemanticsActionIds, visitedNodes, t2, t3, t4, localDirtyNodes, t5, _i, node, t6, t7, builder, _this = this,
        t1 = _this._semantics$_dirtyNodes;
      if (t1._collection$_length === 0)
        return;
      customSemanticsActionIds = A.LinkedHashSet_LinkedHashSet$_empty(type$.int);
      visitedNodes = A._setArrayType([], type$.JSArray_SemanticsNode);
      for (t2 = A._instanceType(t1)._eval$1("WhereIterable<1>"), t3 = t2._eval$1("Iterable.E"), t4 = _this._detachedNodes; t1._collection$_length !== 0;) {
        localDirtyNodes = A.List_List$of(new A.WhereIterable(t1, new A.SemanticsOwner_sendSemanticsUpdate_closure(_this), t2), true, t3);
        t1.clear$0(0);
        t4.clear$0(0);
        B.JSArray_methods.sort$1(localDirtyNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure0());
        B.JSArray_methods.addAll$1(visitedNodes, localDirtyNodes);
        for (t5 = localDirtyNodes.length, _i = 0; _i < localDirtyNodes.length; localDirtyNodes.length === t5 || (0, A.throwConcurrentModificationError)(localDirtyNodes), ++_i) {
          node = localDirtyNodes[_i];
          if (!node._mergeAllDescendantsIntoThisNode)
            t6 = node._semantics$_parent != null && node._isMergedIntoParent;
          else
            t6 = true;
          if (t6) {
            t6 = node._semantics$_parent;
            if (t6 != null)
              if (!t6._mergeAllDescendantsIntoThisNode)
                t7 = t6._semantics$_parent != null && t6._isMergedIntoParent;
              else
                t7 = true;
            else
              t7 = false;
            if (t7) {
              t6._markDirty$0();
              node._semantics$_dirty = false;
            }
          }
        }
      }
      B.JSArray_methods.sort$1(visitedNodes, new A.SemanticsOwner_sendSemanticsUpdate_closure1());
      $.SemanticsBinding__instance.toString;
      builder = new A.SemanticsUpdateBuilder(A._setArrayType([], type$.JSArray_SemanticsNodeUpdate));
      for (t2 = visitedNodes.length, _i = 0; _i < visitedNodes.length; visitedNodes.length === t2 || (0, A.throwConcurrentModificationError)(visitedNodes), ++_i) {
        node = visitedNodes[_i];
        if (node._semantics$_dirty && node._semantics$_owner != null)
          node._addToUpdate$2(builder, customSemanticsActionIds);
      }
      t1.clear$0(0);
      for (t1 = A._LinkedHashSetIterator$(customSemanticsActionIds, customSemanticsActionIds._collection$_modifications, customSemanticsActionIds.$ti._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        $.CustomSemanticsAction__actions.$index(0, t3 == null ? t2._as(t3) : t3).toString;
      }
      _this.onSemanticsUpdate.call$1(new A.SemanticsUpdate(builder._nodeUpdates));
      _this.notifyListeners$0();
    },
    _getSemanticsActionHandlerForId$2(id, action) {
      var t2, t1 = {},
        result = t1.result = this._nodes.$index(0, id);
      if (result != null) {
        if (!result._mergeAllDescendantsIntoThisNode)
          t2 = result._semantics$_parent != null && result._isMergedIntoParent;
        else
          t2 = true;
        t2 = t2 && !result._actions.containsKey$1(0, action);
      } else
        t2 = false;
      if (t2)
        result._visitDescendants$1(new A.SemanticsOwner__getSemanticsActionHandlerForId_closure(t1, action));
      t2 = t1.result;
      if (t2 == null || !t2._actions.containsKey$1(0, action))
        return null;
      return t1.result._actions.$index(0, action);
    },
    performAction$3(id, action, args) {
      var t1,
        handler = this._getSemanticsActionHandlerForId$2(id, action);
      if (handler != null) {
        handler.call$1(args);
        return;
      }
      if (action === B.SemanticsAction_256_showOnScreen) {
        t1 = this._nodes.$index(0, id);
        t1 = (t1 == null ? null : t1._showOnScreen) != null;
      } else
        t1 = false;
      if (t1)
        this._nodes.$index(0, id)._showOnScreen.call$0();
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this);
    }
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure.prototype = {
    call$1(node) {
      return !this.$this._detachedNodes.contains$1(0, node);
    },
    $signature: 60
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure0.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 59
  };
  A.SemanticsOwner_sendSemanticsUpdate_closure1.prototype = {
    call$2(a, b) {
      return a._depth - b._depth;
    },
    $signature: 59
  };
  A.SemanticsOwner__getSemanticsActionHandlerForId_closure.prototype = {
    call$1(node) {
      if (node._actions.containsKey$1(0, this.action)) {
        this._box_0.result = node;
        return false;
      }
      return true;
    },
    $signature: 60
  };
  A.DebugSemanticsDumpOrder.prototype = {
    _enumToString$0() {
      return "DebugSemanticsDumpOrder." + this._name;
    }
  };
  A.AssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      return this.loadString$body$AssetBundle(key, true);
    },
    loadString$body$AssetBundle(key, cache) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, t1, data;
      var $async$loadString$2$cache = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.load$1(0, key), $async$loadString$2$cache);
            case 3:
              // returning from await.
              data = $async$result;
              data.byteLength;
              t1 = B.C_Utf8Codec.decode$1(0, A.Uint8List_Uint8List$sublistView(data, 0, null));
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadString$2$cache, $async$completer);
    },
    toString$0(_) {
      return "<optimized out>#" + A.shortHash(this) + "()";
    }
  };
  A.CachingAssetBundle.prototype = {
    loadString$2$cache(key, cache) {
      if (cache)
        return this._stringCache.putIfAbsent$2(0, key, new A.CachingAssetBundle_loadString_closure(this, key));
      return this.super$AssetBundle$loadString(key, true);
    }
  };
  A.CachingAssetBundle_loadString_closure.prototype = {
    call$0() {
      return this.$this.super$AssetBundle$loadString(this.key, true);
    },
    $signature: 35
  };
  A.PlatformAssetBundle.prototype = {
    load$1(_, key) {
      var future, _null = null,
        encoded = B.C_Utf8Encoder.convert$1(A._Uri__Uri(_null, _null, A._Uri__uriEncode(B.List_w0I, key, B.C_Utf8Codec, false), _null, _null).path),
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      future = t1.send$2(0, "flutter/assets", A.ByteData_ByteData$sublistView(encoded)).then$1$1(new A.PlatformAssetBundle_load_closure(key), type$.ByteData);
      return future;
    }
  };
  A.PlatformAssetBundle_load_closure.prototype = {
    call$1(asset) {
      if (asset == null)
        throw A.wrapException(A.FlutterError$fromParts(A._setArrayType([A._errorSummaryWithKey(this.key), A.ErrorDescription$("The asset does not exist or has empty data.")], type$.JSArray_DiagnosticsNode)));
      return asset;
    },
    $signature: 148
  };
  A.BinaryMessenger.prototype = {};
  A.ServicesBinding.prototype = {
    _initKeyboard$0() {
      var t3, t4, _this = this,
        t1 = type$.PhysicalKeyboardKey,
        t2 = new A.HardwareKeyboard(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.LogicalKeyboardKey), A.LinkedHashSet_LinkedHashSet$_empty(type$.KeyboardLockMode), A._setArrayType([], type$.JSArray_of_bool_Function_KeyEvent));
      _this.ServicesBinding___ServicesBinding__keyboard_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__keyboard_F = t2;
      t3 = $.$get$RawKeyboard_instance();
      t4 = A._setArrayType([], type$.JSArray_KeyEvent);
      _this.ServicesBinding___ServicesBinding__keyEventManager_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__keyEventManager_F = new A.KeyEventManager(t2, t3, t4, A.LinkedHashSet_LinkedHashSet$_empty(t1));
      t1 = _this.ServicesBinding___ServicesBinding__keyboard_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.syncKeyboardState$0().then$1$1(new A.ServicesBinding__initKeyboard_closure(_this), type$.Null);
    },
    handleMemoryPressure$0() {
      var t1 = $.$get$rootBundle();
      t1._stringCache.clear$0(0);
      t1._structuredDataCache.clear$0(0);
      t1._structuredBinaryDataCache.clear$0(0);
    },
    handleSystemMessage$1(systemMessage) {
      return this.handleSystemMessage$body$ServicesBinding(systemMessage);
    },
    handleSystemMessage$body$ServicesBinding(systemMessage) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              switch (A._asString(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "memoryPressure":
                  $async$self.handleMemoryPressure$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    },
    _addLicenses$0() {
      var controller = A._Cell$named("controller");
      controller.set$finalLocalValue(A.StreamController_StreamController(null, new A.ServicesBinding__addLicenses_closure(controller), null, null, false, type$.LicenseEntry));
      return J.get$stream$z(controller._readLocal$0());
    },
    readInitialLifecycleStateFromNativeWindow$0() {
      if (this.SchedulerBinding__lifecycleState == null)
        $.$get$EnginePlatformDispatcher__instance();
      return;
    },
    _handleLifecycleMessage$1(message) {
      return this._handleLifecycleMessage$body$ServicesBinding(message);
    },
    _handleLifecycleMessage$body$ServicesBinding(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_String),
        $async$returnValue, $async$self = this, state, t1;
      var $async$_handleLifecycleMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              message.toString;
              state = A.ServicesBinding__parseAppLifecycleMessage(message);
              t1 = $async$self.SchedulerBinding__lifecycleState;
              state.toString;
              B.JSArray_methods.forEach$1($async$self._generateStateTransitions$2(t1, state), $async$self.get$handleAppLifecycleStateChanged());
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleLifecycleMessage$1, $async$completer);
    },
    _generateStateTransitions$2(previousState, state) {
      var stateChanges, previousStateIndex, stateIndex, i;
      if (previousState === state)
        return B.List_empty2;
      stateChanges = A._setArrayType([], type$.JSArray_AppLifecycleState);
      if (previousState == null)
        stateChanges.push(state);
      else {
        previousStateIndex = B.JSArray_methods.indexOf$1(B.List_Gbn, previousState);
        stateIndex = B.JSArray_methods.indexOf$1(B.List_Gbn, state);
        if (state === B.AppLifecycleState_0) {
          for (i = previousStateIndex + 1; i < 5; ++i)
            stateChanges.push(B.List_Gbn[i]);
          stateChanges.push(B.AppLifecycleState_0);
        } else if (previousStateIndex > stateIndex)
          for (i = stateIndex; i < previousStateIndex; ++i)
            B.JSArray_methods.insert$2(stateChanges, 0, B.List_Gbn[i]);
        else
          for (i = previousStateIndex + 1; i <= stateIndex; ++i)
            stateChanges.push(B.List_Gbn[i]);
      }
      return stateChanges;
    },
    _handleAccessibilityMessage$1(accessibilityMessage) {
      return this._handleAccessibilityMessage$body$ServicesBinding(accessibilityMessage);
    },
    _handleAccessibilityMessage$body$ServicesBinding(accessibilityMessage) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, message;
      var $async$_handleAccessibilityMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              message = J.cast$2$0$ax(type$.Map_of_nullable_Object_and_nullable_Object._as(accessibilityMessage), type$.String, type$.dynamic);
              switch (A._asString(message.$index(0, "type"))) {
                case "didGainFocus":
                  $async$self.ServicesBinding_accessibilityFocus.set$value(0, A._asInt(message.$index(0, "nodeId")));
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleAccessibilityMessage$1, $async$completer);
    },
    handleViewFocusChanged$1($event) {
    },
    _handlePlatformMessage$1(methodCall) {
      return this._handlePlatformMessage$body$ServicesBinding(methodCall);
    },
    _handlePlatformMessage$body$ServicesBinding(methodCall) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, t1, t2, t3, method, $async$temp1;
      var $async$_handlePlatformMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              method = methodCall.method;
            case 3:
              // switch
              switch (method) {
                case "ContextMenu.onDismissSystemContextMenu":
                  // goto case
                  $async$goto = 5;
                  break;
                case "SystemChrome.systemUIChange":
                  // goto case
                  $async$goto = 6;
                  break;
                case "System.requestAppExit":
                  // goto case
                  $async$goto = 7;
                  break;
                default:
                  // goto default
                  $async$goto = 8;
                  break;
              }
              break;
            case 5:
              // case
              for (t1 = $async$self.ServicesBinding__systemContextMenuClients, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1; t1.moveNext$0();) {
                t3 = t1._collection$_current;
                (t3 == null ? t2._as(t3) : t3).handleSystemHide$0();
              }
              // goto after switch
              $async$goto = 4;
              break;
            case 6:
              // case
              type$.List_dynamic._as(methodCall.$arguments);
              // goto after switch
              $async$goto = 4;
              break;
            case 7:
              // case
              $async$temp1 = A;
              $async$goto = 9;
              return A._asyncAwait($async$self.handleRequestAppExit$0(), $async$_handlePlatformMessage$1);
            case 9:
              // returning from await.
              $async$returnValue = $async$temp1.LinkedHashMap_LinkedHashMap$_literal(["response", $async$result._name], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // default
              throw A.wrapException(A.AssertionError$('Method "' + method + '" not handled.'));
            case 4:
              // after switch
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handlePlatformMessage$1, $async$completer);
    },
    initializationComplete$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$initializationComplete$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_kW8.invokeMethod$1$1("System.initializationComplete", type$.dynamic), $async$initializationComplete$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializationComplete$0, $async$completer);
    }
  };
  A.ServicesBinding__initKeyboard_closure.prototype = {
    call$1(_) {
      var t1 = $.$get$EnginePlatformDispatcher__instance(),
        t2 = this.$this.ServicesBinding___ServicesBinding__keyEventManager_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t1._onKeyData = t2.get$handleKeyData();
      t1._onKeyDataZone = $.Zone__current;
      B.BasicMessageChannel_CNb.setMessageHandler$1(t2.get$handleRawKeyMessage());
    },
    $signature: 8
  };
  A.ServicesBinding__addLicenses_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, rawLicenses, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              rawLicenses = A._Cell$named("rawLicenses");
              $async$temp1 = rawLicenses;
              $async$goto = 2;
              return A._asyncAwait($.$get$rootBundle().loadString$2$cache("NOTICES", false), $async$call$0);
            case 2:
              // returning from await.
              $async$temp1.set$finalLocalValue($async$result);
              t1 = $async$self.controller;
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.compute(A.binding2_ServicesBinding__parseLicenses$closure(), rawLicenses._readLocal$0(), "parseLicenses", type$.String, type$.List_LicenseEntry), $async$call$0);
            case 3:
              // returning from await.
              $async$temp1.forEach$1$ax($async$result, J.get$add$ax(t1._readLocal$0()));
              $async$goto = 4;
              return A._asyncAwait(J.close$0$x(t1._readLocal$0()), $async$call$0);
            case 4:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 6
  };
  A._DefaultBinaryMessenger.prototype = {
    send$2(_, channel, message) {
      var t1 = new A._Future($.Zone__current, type$._Future_nullable_ByteData);
      $.$get$EnginePlatformDispatcher__instance()._sendPlatformMessage$3(channel, message, A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback(new A._DefaultBinaryMessenger_send_closure(new A._AsyncCompleter(t1, type$._AsyncCompleter_nullable_ByteData))));
      return t1;
    },
    setMessageHandler$2(channel, handler) {
      if (handler == null) {
        channel = $.$get$channelBuffers()._channels.$index(0, channel);
        if (channel != null)
          channel._channelCallbackRecord = null;
      } else
        $.$get$channelBuffers().setListener$2(channel, new A._DefaultBinaryMessenger_setMessageHandler_closure(handler));
    }
  };
  A._DefaultBinaryMessenger_send_closure.prototype = {
    call$1(reply) {
      var exception, stack, exception0, t1;
      try {
        this.completer.complete$1(0, reply);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("during a platform message response callback");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
      }
    },
    $signature: 3
  };
  A._DefaultBinaryMessenger_setMessageHandler_closure.prototype = {
    call$2(data, callback) {
      return this.$call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback);
    },
    $call$body$_DefaultBinaryMessenger_setMessageHandler_closure(data, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, exception, stack, t1, exception0, response, $async$exception0;
      var $async$call$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              response = null;
              $async$handler = 3;
              t1 = $async$self.handler.call$1(data);
              $async$goto = 6;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t1) ? t1 : A._Future$value(t1, type$.nullable_ByteData), $async$call$2);
            case 6:
              // returning from await.
              response = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during a platform message callback");
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, null, false));
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$2, $async$completer);
    },
    $signature: 152
  };
  A.BrowserContextMenu.prototype = {};
  A.KeyboardLockMode.prototype = {
    _enumToString$0() {
      return "KeyboardLockMode." + this._name;
    }
  };
  A.KeyEvent.prototype = {};
  A.KeyDownEvent.prototype = {};
  A.KeyUpEvent.prototype = {};
  A.KeyRepeatEvent.prototype = {};
  A.HardwareKeyboard.prototype = {
    syncKeyboardState$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t3, t4, t5, t1, keyboardState;
      var $async$syncKeyboardState$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.int;
              $async$goto = 2;
              return A._asyncAwait(B.OptionalMethodChannel_Cp5.invokeMapMethod$2$1("getKeyboardState", t1, t1), $async$syncKeyboardState$0);
            case 2:
              // returning from await.
              keyboardState = $async$result;
              if (keyboardState != null)
                for (t1 = J.getInterceptor$x(keyboardState), t2 = J.get$iterator$ax(t1.get$keys(keyboardState)), t3 = $async$self._pressedKeys; t2.moveNext$0();) {
                  t4 = t2.get$current(t2);
                  t5 = t1.$index(keyboardState, t4);
                  t5.toString;
                  t3.$indexSet(0, new A.PhysicalKeyboardKey(t4), new A.LogicalKeyboardKey(t5));
                }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$syncKeyboardState$0, $async$completer);
    },
    _dispatchKeyEvent$1($event) {
      var handled, handler, thisResult, exception, stack, collector, t1, t2, _i, exception0, t3, t4, _this = this;
      _this._duringDispatch = true;
      handled = false;
      for (t1 = _this._handlers, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        handler = t1[_i];
        try {
          thisResult = handler.call$1($event);
          handled = handled || thisResult;
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t3 = A.ErrorDescription$("while processing a key handler");
          t4 = $.FlutterError_onError;
          if (t4 != null)
            t4.call$1(new A.FlutterErrorDetails(exception, stack, "services library", t3, collector, false));
        }
      }
      _this._duringDispatch = false;
      t1 = _this._modifiedHandlers;
      if (t1 != null) {
        _this._handlers = t1;
        _this._modifiedHandlers = null;
      }
      return handled;
    },
    handleKeyEvent$1($event) {
      var lockMode, t1, _this = this,
        physicalKey = $event.physicalKey,
        logicalKey = $event.logicalKey;
      if ($event instanceof A.KeyDownEvent) {
        _this._pressedKeys.$indexSet(0, physicalKey, logicalKey);
        lockMode = $.$get$KeyboardLockMode__knownLockModes().$index(0, logicalKey.keyId);
        if (lockMode != null) {
          t1 = _this._lockModes;
          if (t1.contains$1(0, lockMode))
            t1.remove$1(0, lockMode);
          else
            t1.add$1(0, lockMode);
        }
      } else if ($event instanceof A.KeyUpEvent)
        _this._pressedKeys.remove$1(0, physicalKey);
      return _this._dispatchKeyEvent$1($event);
    }
  };
  A.KeyDataTransitMode.prototype = {
    _enumToString$0() {
      return "KeyDataTransitMode." + this._name;
    }
  };
  A.KeyMessage.prototype = {
    toString$0(_) {
      return "KeyMessage(" + A.S(this.events) + ")";
    }
  };
  A.KeyEventManager.prototype = {
    handleKeyData$1(data) {
      var $event, _this = this,
        t1 = _this._transitMode;
      switch ((t1 == null ? _this._transitMode = B.KeyDataTransitMode_1 : t1).index) {
        case 0:
          return false;
        case 1:
          if (data.physical === 0 && data.logical === 0)
            return false;
          $event = A.KeyEventManager__eventFromData(data);
          if (data.synthesized && _this._keyEventsSinceLastMessage.length === 0) {
            _this._hardwareKeyboard.handleKeyEvent$1($event);
            _this._dispatchKeyMessage$2(A._setArrayType([$event], type$.JSArray_KeyEvent), null);
          } else
            _this._keyEventsSinceLastMessage.push($event);
          return false;
      }
    },
    _dispatchKeyMessage$2(keyEvents, rawEvent) {
      var message, exception, stack, collector, exception0,
        t1 = this.keyMessageHandler;
      if (t1 != null) {
        message = new A.KeyMessage(keyEvents, rawEvent);
        try {
          t1 = t1.call$1(message);
          return t1;
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t1 = A.ErrorDescription$("while processing the key message handler");
          A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, collector, false));
        }
      }
      return false;
    },
    handleRawKeyMessage$1(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this, rawEvent, shouldDispatch, t1, t2, t3, handled, _i;
      var $async$handleRawKeyMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._transitMode == null) {
                $async$self._transitMode = B.KeyDataTransitMode_0;
                $async$self._rawKeyboard._raw_keyboard$_listeners.push($async$self.get$_convertRawEventAndStore());
              }
              rawEvent = A.RawKeyEvent_RawKeyEvent$fromMessage(type$.Map_String_dynamic._as(message));
              shouldDispatch = true;
              if (rawEvent instanceof A.RawKeyDownEvent)
                $async$self._skippedRawKeysPressed.remove$1(0, rawEvent.data.get$physicalKey());
              else if (rawEvent instanceof A.RawKeyUpEvent) {
                t1 = $async$self._skippedRawKeysPressed;
                t2 = rawEvent.data;
                t3 = t1.contains$1(0, t2.get$physicalKey());
                if (t3)
                  t1.remove$1(0, t2.get$physicalKey());
                shouldDispatch = !t3;
              }
              if (shouldDispatch) {
                $async$self._rawKeyboard.handleRawKeyEvent$1(rawEvent);
                for (t1 = $async$self._keyEventsSinceLastMessage, t2 = t1.length, t3 = $async$self._hardwareKeyboard, handled = false, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
                  handled = t3.handleKeyEvent$1(t1[_i]) || handled;
                handled = $async$self._dispatchKeyMessage$2(t1, rawEvent) || handled;
                B.JSArray_methods.clear$0(t1);
              } else
                handled = true;
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["handled", handled], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleRawKeyMessage$1, $async$completer);
    },
    _convertDeviceType$1(rawEvent) {
      return B.KeyEventDeviceType_0;
    },
    _convertRawEventAndStore$1(rawEvent) {
      var t2, physicalKeysPressed, eventAfterwards, recordedLogicalMain, timeStamp, character, deviceType, mainEvent, t3, t4, t5, t6, t7, t8, _this = this, _null = null,
        t1 = rawEvent.data,
        physicalKey = t1.get$physicalKey(),
        logicalKey = t1.get$logicalKey();
      t1 = _this._hardwareKeyboard._pressedKeys;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      physicalKeysPressed = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeyIterable(t1, t2), t2._eval$1("Iterable.E"));
      eventAfterwards = A._setArrayType([], type$.JSArray_KeyEvent);
      recordedLogicalMain = t1.$index(0, physicalKey);
      timeStamp = $.ServicesBinding__instance.SchedulerBinding__lastRawTimeStamp;
      character = rawEvent.character;
      if (character === "")
        character = _null;
      deviceType = _this._convertDeviceType$1(rawEvent);
      if (rawEvent instanceof A.RawKeyDownEvent)
        if (recordedLogicalMain == null) {
          mainEvent = new A.KeyDownEvent(physicalKey, logicalKey, character, timeStamp, false);
          physicalKeysPressed.add$1(0, physicalKey);
        } else
          mainEvent = A.KeyRepeatEvent$(character, deviceType, recordedLogicalMain, physicalKey, timeStamp);
      else if (recordedLogicalMain == null)
        mainEvent = _null;
      else {
        mainEvent = A.KeyUpEvent$(deviceType, recordedLogicalMain, physicalKey, false, timeStamp);
        physicalKeysPressed.remove$1(0, physicalKey);
      }
      for (t2 = _this._rawKeyboard._keysPressed, t3 = A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>"), t4 = t3._eval$1("Iterable.E"), t5 = physicalKeysPressed.difference$1(A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeyIterable(t2, t3), t4)), t5 = t5.get$iterator(t5), t6 = _this._keyEventsSinceLastMessage; t5.moveNext$0();) {
        t7 = t5.get$current(t5);
        if (t7.$eq(0, physicalKey))
          eventAfterwards.push(new A.KeyUpEvent(t7, logicalKey, _null, timeStamp, true));
        else {
          t8 = t1.$index(0, t7);
          t8.toString;
          t6.push(new A.KeyUpEvent(t7, t8, _null, timeStamp, true));
        }
      }
      for (t1 = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeyIterable(t2, t3), t4).difference$1(physicalKeysPressed), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        t4 = t2.$index(0, t3);
        t4.toString;
        t6.push(new A.KeyDownEvent(t3, t4, _null, timeStamp, true));
      }
      if (mainEvent != null)
        t6.push(mainEvent);
      B.JSArray_methods.addAll$1(t6, eventAfterwards);
    }
  };
  A._KeyEvent_Object_Diagnosticable.prototype = {};
  A.KeyboardInsertedContent.prototype = {
    toString$0(_) {
      return "KeyboardInsertedContent(" + this.mimeType + ", " + this.uri + ", " + A.S(this.data) + ")";
    },
    $eq(_, other) {
      var t1, t2, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.KeyboardInsertedContent)
        if (other.mimeType === _this.mimeType)
          if (other.uri === _this.uri) {
            t1 = other.data;
            t2 = _this.data;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          }
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.mimeType, this.uri, this.data, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.KeyboardKey.prototype = {};
  A.LogicalKeyboardKey.prototype = {
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.keyId);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.LogicalKeyboardKey && other.keyId === this.keyId;
    }
  };
  A.PhysicalKeyboardKey.prototype = {
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.usbHidUsage);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.PhysicalKeyboardKey && other.usbHidUsage === this.usbHidUsage;
    }
  };
  A._KeyboardKey_Object_Diagnosticable.prototype = {};
  A.MethodCall.prototype = {
    toString$0(_) {
      return "MethodCall(" + this.method + ", " + A.S(this.$arguments) + ")";
    }
  };
  A.PlatformException.prototype = {
    toString$0(_) {
      var _this = this;
      return "PlatformException(" + _this.code + ", " + A.S(_this.message) + ", " + A.S(_this.details) + ", " + A.S(_this.stacktrace) + ")";
    },
    $isException: 1
  };
  A.MissingPluginException.prototype = {
    toString$0(_) {
      return "MissingPluginException(" + A.S(this.message) + ")";
    },
    $isException: 1
  };
  A.StringCodec.prototype = {
    decodeMessage$1(message) {
      if (message == null)
        return null;
      return B.C_Utf8Codec.decode$1(0, A.Uint8List_Uint8List$sublistView(message, 0, null));
    },
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return A.ByteData_ByteData$sublistView(B.C_Utf8Encoder.convert$1(message));
    }
  };
  A.JSONMessageCodec0.prototype = {
    encodeMessage$1(message) {
      if (message == null)
        return null;
      return B.C_StringCodec.encodeMessage$1(B.C_JsonCodec.encode$1(message));
    },
    decodeMessage$1(message) {
      var t1;
      if (message == null)
        return message;
      t1 = B.C_StringCodec.decodeMessage$1(message);
      t1.toString;
      return B.C_JsonCodec.decode$1(0, t1);
    }
  };
  A.JSONMethodCodec0.prototype = {
    encodeMethodCall$1(methodCall) {
      var t1 = B.C_JSONMessageCodec0.encodeMessage$1(A.LinkedHashMap_LinkedHashMap$_literal(["method", methodCall.method, "args", methodCall.$arguments], type$.String, type$.nullable_Object));
      t1.toString;
      return t1;
    },
    decodeMethodCall$1(methodCall) {
      var t1, method, $arguments, _null = null,
        decoded = B.C_JSONMessageCodec0.decodeMessage$1(methodCall);
      if (!type$.Map_dynamic_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected method call Map, got " + A.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      method = t1.$index(decoded, "method");
      $arguments = t1.$index(decoded, "args");
      if (typeof method == "string")
        return new A.MethodCall(method, $arguments);
      throw A.wrapException(A.FormatException$("Invalid method call: " + A.S(decoded), _null, _null));
    },
    decodeEnvelope$1(envelope) {
      var t1, t2, t3, _null = null,
        decoded = B.C_JSONMessageCodec0.decodeMessage$1(envelope);
      if (!type$.List_dynamic._is(decoded))
        throw A.wrapException(A.FormatException$("Expected envelope List, got " + A.S(decoded), _null, _null));
      t1 = J.getInterceptor$asx(decoded);
      if (t1.get$length(decoded) === 1)
        return t1.$index(decoded, 0);
      t2 = false;
      if (t1.get$length(decoded) === 3)
        if (typeof t1.$index(decoded, 0) == "string")
          t2 = t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string";
      if (t2) {
        t2 = A._asString(t1.$index(decoded, 0));
        t3 = A._asStringQ(t1.$index(decoded, 1));
        throw A.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, _null));
      }
      t2 = false;
      if (t1.get$length(decoded) === 4)
        if (typeof t1.$index(decoded, 0) == "string")
          if (t1.$index(decoded, 1) == null || typeof t1.$index(decoded, 1) == "string")
            t2 = t1.$index(decoded, 3) == null || typeof t1.$index(decoded, 3) == "string";
      if (t2) {
        t2 = A._asString(t1.$index(decoded, 0));
        t3 = A._asStringQ(t1.$index(decoded, 1));
        throw A.wrapException(A.PlatformException$(t2, t1.$index(decoded, 2), t3, A._asStringQ(t1.$index(decoded, 3))));
      }
      throw A.wrapException(A.FormatException$("Invalid envelope: " + A.S(decoded), _null, _null));
    },
    encodeSuccessEnvelope$1(result) {
      var t1 = B.C_JSONMessageCodec0.encodeMessage$1([result]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var t1 = B.C_JSONMessageCodec0.encodeMessage$1([code, message, details]);
      t1.toString;
      return t1;
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    }
  };
  A.StandardMessageCodec0.prototype = {
    encodeMessage$1(message) {
      var buffer;
      if (message == null)
        return null;
      buffer = A.WriteBuffer_WriteBuffer(64);
      this.writeValue$2(0, buffer, message);
      return buffer.done$0();
    },
    decodeMessage$1(message) {
      var buffer, result;
      if (message == null)
        return null;
      buffer = new A.ReadBuffer(message);
      result = this.readValue$1(0, buffer);
      if (buffer._serialization$_position < message.byteLength)
        throw A.wrapException(B.FormatException_rh8);
      return result;
    },
    writeValue$2(_, buffer, value) {
      var t1, t2, asciiBytes, utf8Bytes, utf8Offset, i, char, _this = this;
      if (value == null)
        buffer._serialization$_add$1(0, 0);
      else if (A._isBool(value))
        buffer._serialization$_add$1(0, value ? 1 : 2);
      else if (typeof value == "number") {
        buffer._serialization$_add$1(0, 6);
        buffer._alignTo$1(8);
        t1 = $.$get$Endian_host();
        buffer._eightBytes.setFloat64(0, value, B.C_Endian === t1);
        buffer._addAll$1(buffer._eightBytesAsList);
      } else if (A._isInt(value)) {
        t1 = -2147483648 <= value && value <= 2147483647;
        t2 = buffer._eightBytes;
        if (t1) {
          buffer._serialization$_add$1(0, 3);
          t1 = $.$get$Endian_host();
          t2.setInt32(0, value, B.C_Endian === t1);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 4);
        } else {
          buffer._serialization$_add$1(0, 4);
          t1 = $.$get$Endian_host();
          B.NativeByteData_methods.setInt64$3(t2, 0, value, t1);
        }
      } else if (typeof value == "string") {
        buffer._serialization$_add$1(0, 7);
        t1 = value.length;
        asciiBytes = new Uint8Array(t1);
        i = 0;
        while (true) {
          if (!(i < t1)) {
            utf8Bytes = null;
            utf8Offset = 0;
            break;
          }
          char = value.charCodeAt(i);
          if (char <= 127)
            asciiBytes[i] = char;
          else {
            utf8Bytes = B.C_Utf8Encoder.convert$1(B.JSString_methods.substring$1(value, i));
            utf8Offset = i;
            break;
          }
          ++i;
        }
        if (utf8Bytes != null) {
          _this.writeSize$2(buffer, utf8Offset + utf8Bytes.length);
          buffer._append$1(A.Uint8List_Uint8List$sublistView(asciiBytes, 0, utf8Offset));
          buffer._append$1(utf8Bytes);
        } else {
          _this.writeSize$2(buffer, t1);
          buffer._append$1(asciiBytes);
        }
      } else if (type$.Uint8List._is(value)) {
        buffer._serialization$_add$1(0, 8);
        _this.writeSize$2(buffer, value.length);
        buffer._append$1(value);
      } else if (type$.Int32List._is(value)) {
        buffer._serialization$_add$1(0, 9);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float32List._is(value)) {
        buffer._serialization$_add$1(0, 14);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(4);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 4 * t1));
      } else if (type$.Float64List._is(value)) {
        buffer._serialization$_add$1(0, 11);
        t1 = value.length;
        _this.writeSize$2(buffer, t1);
        buffer._alignTo$1(8);
        buffer._append$1(A.NativeUint8List_NativeUint8List$view(value.buffer, value.byteOffset, 8 * t1));
      } else if (type$.List_dynamic._is(value)) {
        buffer._serialization$_add$1(0, 12);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        for (t1 = t1.get$iterator(value); t1.moveNext$0();)
          _this.writeValue$2(0, buffer, t1.get$current(t1));
      } else if (type$.Map_dynamic_dynamic._is(value)) {
        buffer._serialization$_add$1(0, 13);
        t1 = J.getInterceptor$asx(value);
        _this.writeSize$2(buffer, t1.get$length(value));
        t1.forEach$1(value, new A.StandardMessageCodec_writeValue_closure(_this, buffer));
      } else
        throw A.wrapException(A.ArgumentError$value(value, null, null));
    },
    readValue$1(_, buffer) {
      if (buffer._serialization$_position >= buffer.data.byteLength)
        throw A.wrapException(B.FormatException_rh8);
      return this.readValueOfType$2(buffer.getUint8$0(0), buffer);
    },
    readValueOfType$2(type, buffer) {
      var t1, t2, value, $length, list, result, i, t3, _this = this;
      switch (type) {
        case 0:
          return null;
        case 1:
          return true;
        case 2:
          return false;
        case 3:
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getInt32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          return value;
        case 4:
          return buffer.getInt64$0(0);
        case 6:
          buffer._alignTo$1(8);
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getFloat64(t1, B.C_Endian === t2);
          buffer._serialization$_position += 8;
          return value;
        case 5:
        case 7:
          $length = _this.readSize$1(buffer);
          return B.Utf8Decoder_false.convert$1(buffer.getUint8List$1($length));
        case 8:
          return buffer.getUint8List$1(_this.readSize$1(buffer));
        case 9:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          list = A.NativeInt32List_NativeInt32List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 10:
          return buffer.getInt64List$1(_this.readSize$1(buffer));
        case 14:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(4);
          t1 = buffer.data;
          t2 = t1.buffer;
          t1 = t1.byteOffset + buffer._serialization$_position;
          A._checkViewArguments(t2, t1, $length);
          list = new Float32Array(t2, t1, $length);
          buffer._serialization$_position = buffer._serialization$_position + 4 * $length;
          return list;
        case 11:
          $length = _this.readSize$1(buffer);
          buffer._alignTo$1(8);
          t1 = buffer.data;
          list = A.NativeFloat64List_NativeFloat64List$view(t1.buffer, t1.byteOffset + buffer._serialization$_position, $length);
          buffer._serialization$_position = buffer._serialization$_position + 8 * $length;
          return list;
        case 12:
          $length = _this.readSize$1(buffer);
          result = A.List_List$filled($length, null, false, type$.nullable_Object);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer._serialization$_position = t2 + 1;
            result[i] = _this.readValueOfType$2(t1.getUint8(t2), buffer);
          }
          return result;
        case 13:
          $length = _this.readSize$1(buffer);
          t1 = type$.nullable_Object;
          result = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
          for (t1 = buffer.data, i = 0; i < $length; ++i) {
            t2 = buffer._serialization$_position;
            if (t2 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer._serialization$_position = t2 + 1;
            t2 = _this.readValueOfType$2(t1.getUint8(t2), buffer);
            t3 = buffer._serialization$_position;
            if (t3 >= t1.byteLength)
              A.throwExpression(B.FormatException_rh8);
            buffer._serialization$_position = t3 + 1;
            result.$indexSet(0, t2, _this.readValueOfType$2(t1.getUint8(t3), buffer));
          }
          return result;
        default:
          throw A.wrapException(B.FormatException_rh8);
      }
    },
    writeSize$2(buffer, value) {
      var t1, t2;
      if (value < 254)
        buffer._serialization$_add$1(0, value);
      else {
        t1 = buffer._eightBytes;
        if (value <= 65535) {
          buffer._serialization$_add$1(0, 254);
          t2 = $.$get$Endian_host();
          t1.setUint16(0, value, B.C_Endian === t2);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 2);
        } else {
          buffer._serialization$_add$1(0, 255);
          t2 = $.$get$Endian_host();
          t1.setUint32(0, value, B.C_Endian === t2);
          buffer._addAll$3(buffer._eightBytesAsList, 0, 4);
        }
      }
    },
    readSize$1(buffer) {
      var t1, t2,
        value = buffer.getUint8$0(0);
      $label0$0: {
        if (254 === value) {
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint16(t1, B.C_Endian === t2);
          buffer._serialization$_position += 2;
          t1 = value;
          break $label0$0;
        }
        if (255 === value) {
          t1 = buffer._serialization$_position;
          t2 = $.$get$Endian_host();
          value = buffer.data.getUint32(t1, B.C_Endian === t2);
          buffer._serialization$_position += 4;
          t1 = value;
          break $label0$0;
        }
        t1 = value;
        break $label0$0;
      }
      return t1;
    }
  };
  A.StandardMessageCodec_writeValue_closure.prototype = {
    call$2(key, value) {
      var t1 = this.$this,
        t2 = this.buffer;
      t1.writeValue$2(0, t2, key);
      t1.writeValue$2(0, t2, value);
    },
    $signature: 24
  };
  A.StandardMethodCodec0.prototype = {
    encodeMethodCall$1(methodCall) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, methodCall.method);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, methodCall.$arguments);
      return buffer.done$0();
    },
    decodeMethodCall$1(methodCall) {
      var buffer, method, $arguments;
      methodCall.toString;
      buffer = new A.ReadBuffer(methodCall);
      method = B.C_StandardMessageCodec.readValue$1(0, buffer);
      $arguments = B.C_StandardMessageCodec.readValue$1(0, buffer);
      if (typeof method == "string" && buffer._serialization$_position >= methodCall.byteLength)
        return new A.MethodCall(method, $arguments);
      else
        throw A.wrapException(B.FormatException_4CA);
    },
    encodeSuccessEnvelope$1(result) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      buffer._serialization$_add$1(0, 0);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, result);
      return buffer.done$0();
    },
    encodeErrorEnvelope$3$code$details$message(code, details, message) {
      var buffer = A.WriteBuffer_WriteBuffer(64);
      buffer._serialization$_add$1(0, 1);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, code);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, message);
      B.C_StandardMessageCodec.writeValue$2(0, buffer, details);
      return buffer.done$0();
    },
    encodeErrorEnvelope$2$code$message(code, message) {
      return this.encodeErrorEnvelope$3$code$details$message(code, null, message);
    },
    decodeEnvelope$1(envelope) {
      var buffer, errorCode, errorMessage, errorDetails, errorStacktrace, t1;
      if (envelope.byteLength === 0)
        throw A.wrapException(B.FormatException_MKb);
      buffer = new A.ReadBuffer(envelope);
      if (buffer.getUint8$0(0) === 0)
        return B.C_StandardMessageCodec.readValue$1(0, buffer);
      errorCode = B.C_StandardMessageCodec.readValue$1(0, buffer);
      errorMessage = B.C_StandardMessageCodec.readValue$1(0, buffer);
      errorDetails = B.C_StandardMessageCodec.readValue$1(0, buffer);
      errorStacktrace = buffer._serialization$_position < envelope.byteLength ? A._asStringQ(B.C_StandardMessageCodec.readValue$1(0, buffer)) : null;
      if (typeof errorCode == "string")
        t1 = (errorMessage == null || typeof errorMessage == "string") && buffer._serialization$_position >= envelope.byteLength;
      else
        t1 = false;
      if (t1)
        throw A.wrapException(A.PlatformException$(errorCode, errorDetails, A._asStringQ(errorMessage), errorStacktrace));
      else
        throw A.wrapException(B.FormatException_E36);
    }
  };
  A.MouseCursorManager.prototype = {
    handleDeviceCursorUpdate$3(device, triggeringEvent, cursorCandidates) {
      var t1, lastSession, nextCursor, t2, nextSession;
      if (type$.PointerRemovedEvent._is(triggeringEvent)) {
        this._lastSession.remove$1(0, device);
        return;
      }
      t1 = this._lastSession;
      lastSession = t1.$index(0, device);
      nextCursor = A._DeferringMouseCursor_firstNonDeferred(cursorCandidates);
      if (nextCursor == null)
        nextCursor = this.fallbackMouseCursor;
      t2 = lastSession == null;
      if (J.$eq$(t2 ? null : lastSession.get$cursor(lastSession), nextCursor))
        return;
      nextSession = nextCursor.createSession$1(device);
      t1.$indexSet(0, device, nextSession);
      if (!t2)
        lastSession.dispose$0();
      nextSession.activate$0();
    }
  };
  A.MouseCursorSession.prototype = {
    get$cursor(receiver) {
      return this.cursor;
    }
  };
  A.MouseCursor0.prototype = {
    toString$0(_) {
      var debugDescription = this.get$debugDescription();
      return debugDescription;
    }
  };
  A._DeferringMouseCursor.prototype = {
    createSession$1(device) {
      throw A.wrapException(A.UnimplementedError$(null));
    },
    get$debugDescription() {
      return "defer";
    }
  };
  A._SystemMouseCursorSession.prototype = {
    get$cursor(_) {
      return type$.SystemMouseCursor._as(this.cursor);
    },
    activate$0() {
      return B.OptionalMethodChannel_A0x.invokeMethod$1$2("activateSystemCursor", A.LinkedHashMap_LinkedHashMap$_literal(["device", this.device, "kind", type$.SystemMouseCursor._as(this.cursor).kind], type$.String, type$.dynamic), type$.void);
    },
    dispose$0() {
    }
  };
  A.SystemMouseCursor.prototype = {
    get$debugDescription() {
      return "SystemMouseCursor(" + this.kind + ")";
    },
    createSession$1(device) {
      return new A._SystemMouseCursorSession(this, device);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.SystemMouseCursor && other.kind === this.kind;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.kind);
    }
  };
  A._MouseCursor_Object_Diagnosticable.prototype = {};
  A._ProfiledBinaryMessenger.prototype = {
    sendWithPostfix$3(channel, postfix, message) {
      return this.sendWithPostfix$body$_ProfiledBinaryMessenger(channel, postfix, message);
    },
    sendWithPostfix$body$_ProfiledBinaryMessenger(channel, postfix, message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, timelineTask, result, t4, timelineTask0, t1, t2, t3, stats;
      var $async$sendWithPostfix$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.channelTypeName;
              t2 = channel + postfix;
              t3 = $async$self.codecTypeName;
              stats = $._profilePlatformChannelsStats.$index(0, t2);
              if (stats == null) {
                stats = new A._PlatformChannelStats(t2, t3, t1);
                $._profilePlatformChannelsStats.$indexSet(0, t2, stats);
              }
              t4 = message == null ? null : message.byteLength;
              if (t4 == null)
                t4 = 0;
              ++stats._upCount;
              stats._upBytes += t4;
              A._debugLaunchProfilePlatformChannels();
              t4 = A._setArrayType([], type$.JSArray_nullable__AsyncBlock);
              timelineTask0 = new A.TimelineTask(null, null, A._getNextTaskId(), t4);
              timelineTask0.start$1(0, "Platform Channel send " + channel + postfix);
              timelineTask = timelineTask0;
              result = null;
              $async$handler = 3;
              t4 = $async$self.proxy.send$2(0, channel, message);
              $async$goto = 6;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t4) ? t4 : A._Future$value(t4, type$.nullable_ByteData), $async$sendWithPostfix$3);
            case 6:
              // returning from await.
              result = $async$result;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              J.finish$0$z(timelineTask);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              t4 = result;
              stats = $._profilePlatformChannelsStats.$index(0, t2);
              if (stats == null) {
                stats = new A._PlatformChannelStats(t2, t3, t1);
                $._profilePlatformChannelsStats.$indexSet(0, t2, stats);
              }
              t1 = t4 == null ? null : t4.byteLength;
              if (t1 == null)
                t1 = 0;
              ++stats._downCount;
              stats._downBytes += t1;
              A._debugLaunchProfilePlatformChannels();
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$sendWithPostfix$3, $async$completer);
    },
    send$2(_, channel, message) {
      return this.sendWithPostfix$3(channel, "", message);
    },
    setMessageHandler$2(channel, handler) {
      this.proxy.setMessageHandler$2(channel, handler);
    }
  };
  A._PlatformChannelStats.prototype = {};
  A._debugLaunchProfilePlatformChannels_closure.prototype = {
    call$2(x, y) {
      return y._upBytes + y._downBytes - (x._upBytes + x._downBytes);
    },
    $signature: 155
  };
  A.BasicMessageChannel.prototype = {
    get$binaryMessenger() {
      var t2, t3, _this = this,
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = $.debugProfilePlatformChannels;
      if (t2) {
        t2 = $.$get$_profiledBinaryMessengers();
        A.Expando__checkType(_this);
        t3 = t2._jsWeakMap.get(_this);
        if (t3 == null) {
          t1 = new A._ProfiledBinaryMessenger(t1, A._rtiToString(A.getRuntimeTypeOfDartObject(_this)._rti, null), A._rtiToString(A.getRuntimeTypeOfDartObject(_this.codec)._rti, null));
          t2.$indexSet(0, _this, t1);
        } else
          t1 = t3;
      }
      return t1;
    },
    send$1(_, message) {
      return this.send$body$BasicMessageChannel(0, message, this.$ti._eval$1("1?"));
    },
    send$body$BasicMessageChannel(_, message, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, t1, t2, $async$temp1;
      var $async$send$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              t2 = $async$self.get$binaryMessenger().send$2(0, $async$self.name, t1.encodeMessage$1(message));
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t2) ? t2 : A._Future$value(t2, type$.nullable_ByteData), $async$send$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.decodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$send$1, $async$completer);
    },
    setMessageHandler$1(handler) {
      this.get$binaryMessenger().setMessageHandler$2(this.name, new A.BasicMessageChannel_setMessageHandler_closure(this, handler));
    }
  };
  A.BasicMessageChannel_setMessageHandler_closure.prototype = {
    call$1(message) {
      return this.$call$body$BasicMessageChannel_setMessageHandler_closure(message);
    },
    $call$body$BasicMessageChannel_setMessageHandler_closure(message) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$self = this, t1, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this.codec;
              $async$temp1 = t1;
              $async$goto = 3;
              return A._asyncAwait($async$self.handler.call$1(t1.decodeMessage$1(message)), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1.encodeMessage$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 57
  };
  A.MethodChannel.prototype = {
    get$binaryMessenger() {
      var t1, t2, _this = this,
        result = _this._binaryMessenger;
      if (result == null) {
        t1 = $.ServicesBinding__instance.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        result = t1;
      }
      t1 = $.debugProfilePlatformChannels;
      if (t1) {
        t1 = $.$get$_profiledBinaryMessengers();
        A.Expando__checkType(_this);
        t2 = t1._jsWeakMap.get(_this);
        if (t2 == null) {
          t2 = new A._ProfiledBinaryMessenger(result, A._rtiToString(A.getRuntimeTypeOfDartObject(_this)._rti, null), A._rtiToString(A.getRuntimeTypeOfDartObject(_this.codec)._rti, null));
          t1.$indexSet(0, _this, t2);
          t1 = t2;
        } else
          t1 = t2;
      } else
        t1 = result;
      return t1;
    },
    _invokeMethod$1$3$arguments$missingOk(method, $arguments, missingOk, $T) {
      return this._invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $T._eval$1("0?"));
    },
    _invokeMethod$body$MethodChannel(method, $arguments, missingOk, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result, t1, input, t2, t3, t4;
      var $async$_invokeMethod$1$3$arguments$missingOk = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              input = t1.encodeMethodCall$1(new A.MethodCall(method, $arguments));
              t2 = $.debugProfilePlatformChannels;
              t3 = type$.nullable_ByteData;
              t4 = $async$self.name;
              $async$goto = t2 ? 3 : 5;
              break;
            case 3:
              // then
              t2 = type$._ProfiledBinaryMessenger._as($async$self.get$binaryMessenger()).sendWithPostfix$3(t4, "#" + method, input);
              $async$goto = 6;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t2) ? t2 : A._Future$value(t2, t3), $async$_invokeMethod$1$3$arguments$missingOk);
            case 6:
              // returning from await.
              result = $async$result;
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              t2 = $async$self.get$binaryMessenger().send$2(0, t4, input);
              $async$goto = 7;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t2) ? t2 : A._Future$value(t2, t3), $async$_invokeMethod$1$3$arguments$missingOk);
            case 7:
              // returning from await.
              result = $async$result;
            case 4:
              // join
              if (result == null) {
                if (missingOk) {
                  $async$returnValue = null;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                throw A.wrapException(A.MissingPluginException$("No implementation found for method " + method + " on channel " + t4));
              }
              $async$returnValue = $T._eval$1("0?")._as(t1.decodeEnvelope$1(result));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_invokeMethod$1$3$arguments$missingOk, $async$completer);
    },
    invokeMethod$1$2(method, $arguments, $T) {
      return this._invokeMethod$1$3$arguments$missingOk(method, $arguments, false, $T);
    },
    invokeMapMethod$2$2(method, $arguments, $K, $V) {
      return this.invokeMapMethod$body$MethodChannel(method, $arguments, $K, $V, $K._eval$1("@<0>")._bind$1($V)._eval$1("Map<1,2>?"));
    },
    invokeMapMethod$2$1(method, $K, $V) {
      return this.invokeMapMethod$2$2(method, null, $K, $V);
    },
    invokeMapMethod$body$MethodChannel(method, $arguments, $K, $V, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, result;
      var $async$invokeMapMethod$2$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.invokeMethod$1$2(method, $arguments, type$.Map_dynamic_dynamic), $async$invokeMapMethod$2$2);
            case 3:
              // returning from await.
              result = $async$result;
              $async$returnValue = result == null ? null : J.cast$2$0$ax(result, $K, $V);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$invokeMapMethod$2$2, $async$completer);
    },
    setMethodCallHandler$1(handler) {
      var t1 = this.get$binaryMessenger();
      t1.setMessageHandler$2(this.name, new A.MethodChannel_setMethodCallHandler_closure(this, handler));
    },
    _handleAsMethodCall$2(message, handler) {
      return this._handleAsMethodCall$body$MethodChannel(message, handler);
    },
    _handleAsMethodCall$body$MethodChannel(message, handler) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ByteData),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, e, error, t2, exception, t3, t1, $call, $async$exception, $async$temp1;
      var $async$_handleAsMethodCall$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.codec;
              $call = t1.decodeMethodCall$1(message);
              $async$handler = 4;
              $async$temp1 = t1;
              $async$goto = 7;
              return A._asyncAwait(handler.call$1($call), $async$_handleAsMethodCall$2);
            case 7:
              // returning from await.
              t2 = $async$temp1.encodeSuccessEnvelope$1($async$result);
              $async$returnValue = t2;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t2 = A.unwrapException($async$exception);
              if (t2 instanceof A.PlatformException) {
                e = t2;
                t2 = e.code;
                t3 = e.message;
                $async$returnValue = t1.encodeErrorEnvelope$3$code$details$message(t2, e.details, t3);
                // goto return
                $async$goto = 1;
                break;
              } else if (t2 instanceof A.MissingPluginException) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              } else {
                error = t2;
                t1 = t1.encodeErrorEnvelope$2$code$message("error", J.toString$0$(error));
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleAsMethodCall$2, $async$completer);
    }
  };
  A.MethodChannel_setMethodCallHandler_closure.prototype = {
    call$1(message) {
      return this.$this._handleAsMethodCall$2(message, this.handler);
    },
    $signature: 57
  };
  A.OptionalMethodChannel.prototype = {
    invokeMethod$1$2(method, $arguments, $T) {
      return this.invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $T._eval$1("0?"));
    },
    invokeMethod$1$1(method, $T) {
      return this.invokeMethod$1$2(method, null, $T);
    },
    invokeMethod$body$OptionalMethodChannel(method, $arguments, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this;
      var $async$invokeMethod$1$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $async$self.super$MethodChannel$_invokeMethod(method, $arguments, true, $T);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$invokeMethod$1$2, $async$completer);
    }
  };
  A.EventChannel.prototype = {};
  A.SwipeEdge.prototype = {
    _enumToString$0() {
      return "SwipeEdge." + this._name;
    }
  };
  A.PredictiveBackEvent.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.PredictiveBackEvent && J.$eq$(_this.touchOffset, other.touchOffset) && _this.progress === other.progress && _this.swipeEdge === other.swipeEdge;
    },
    get$hashCode(_) {
      return A.Object_hash(this.touchOffset, this.progress, this.swipeEdge, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "PredictiveBackEvent{touchOffset: " + A.S(this.touchOffset) + ", progress: " + A.S(this.progress) + ", swipeEdge: " + this.swipeEdge.toString$0(0) + "}";
    }
  };
  A.KeyboardSide.prototype = {
    _enumToString$0() {
      return "KeyboardSide." + this._name;
    }
  };
  A.ModifierKey.prototype = {
    _enumToString$0() {
      return "ModifierKey." + this._name;
    }
  };
  A.RawKeyEventData.prototype = {
    get$modifiersPressed() {
      var _i, key,
        result = A.LinkedHashMap_LinkedHashMap$_empty(type$.ModifierKey, type$.KeyboardSide);
      for (_i = 0; _i < 9; ++_i) {
        key = B.List_jV0[_i];
        if (this.isModifierPressed$1(key))
          result.$indexSet(0, key, B.KeyboardSide_0);
      }
      return result;
    }
  };
  A.RawKeyEvent.prototype = {};
  A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb.prototype = {
    call$0() {
      var t4, t5, t6,
        t1 = this.message,
        t2 = J.getInterceptor$asx(t1),
        key = A._asStringQ(t2.$index(t1, "key")),
        t3 = key == null;
      if (!t3) {
        t4 = key.length;
        t4 = t4 !== 0 && t4 === 1;
      } else
        t4 = false;
      if (t4)
        this._box_0.character = key;
      t4 = A._asStringQ(t2.$index(t1, "code"));
      if (t4 == null)
        t4 = "";
      t3 = t3 ? "" : key;
      t5 = A._asIntQ(t2.$index(t1, "location"));
      if (t5 == null)
        t5 = 0;
      t6 = A._asIntQ(t2.$index(t1, "metaState"));
      if (t6 == null)
        t6 = 0;
      t1 = A._asIntQ(t2.$index(t1, "keyCode"));
      return new A.RawKeyEventDataWeb(t4, t3, t5, t6, t1 == null ? 0 : t1);
    },
    $signature: 157
  };
  A.RawKeyDownEvent.prototype = {};
  A.RawKeyUpEvent.prototype = {};
  A.RawKeyboard0.prototype = {
    handleRawKeyEvent$1($event) {
      var listener, exception, stack, collector, t1, t2, t3, _i, exception0, t4, t5, _this = this;
      if ($event instanceof A.RawKeyDownEvent) {
        t1 = $event.data;
        _this._keysPressed.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
      } else if ($event instanceof A.RawKeyUpEvent)
        _this._keysPressed.remove$1(0, $event.data.get$physicalKey());
      _this._synchronizeModifiers$1($event);
      for (t1 = _this._raw_keyboard$_listeners, t2 = A.List_List$of(t1, true, type$.void_Function_RawKeyEvent), t3 = t2.length, _i = 0; _i < t3; ++_i) {
        listener = t2[_i];
        try {
          if (B.JSArray_methods.contains$1(t1, listener))
            listener.call$1($event);
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t4 = A.ErrorDescription$("while processing a raw key listener");
          t5 = $.FlutterError_onError;
          if (t5 != null)
            t5.call$1(new A.FlutterErrorDetails(exception, stack, "services library", t4, collector, false));
        }
      }
      return false;
    },
    _synchronizeModifiers$1($event) {
      var t6, thisKeyModifier, _i, key, t7, thisModifierKeys, t8, mappedKeys, t9, t10, nonModifierCapsLock, skipReleasingKey,
        t1 = $event.data,
        modifiersPressed = t1.get$modifiersPressed(),
        t2 = type$.PhysicalKeyboardKey,
        modifierKeys = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.LogicalKeyboardKey),
        anySideKeys = A.LinkedHashSet_LinkedHashSet$_empty(t2),
        t3 = this._keysPressed,
        t4 = A.LinkedHashSet_LinkedHashSet$of(new A.LinkedHashMapKeyIterable(t3, A._instanceType(t3)._eval$1("LinkedHashMapKeyIterable<1>")), t2),
        t5 = $event instanceof A.RawKeyDownEvent;
      if (t5)
        t4.add$1(0, t1.get$physicalKey());
      for (t6 = t1.code, thisKeyModifier = null, _i = 0; _i < 9; ++_i) {
        key = B.List_jV0[_i];
        t7 = $.$get$RawKeyboard__modifierKeyMap();
        thisModifierKeys = t7.$index(0, new A._ModifierSidePair(key, B.KeyboardSide_3));
        if (thisModifierKeys == null)
          continue;
        t8 = B.Map_xwOPX.$index(0, t6);
        if (thisModifierKeys.contains$1(0, t8 == null ? new A.PhysicalKeyboardKey(98784247808 + B.JSString_methods.get$hashCode(t6)) : t8))
          thisKeyModifier = key;
        if (modifiersPressed.$index(0, key) === B.KeyboardSide_0) {
          anySideKeys.addAll$1(0, thisModifierKeys);
          if (thisModifierKeys.any$1(0, t4.get$contains(t4)))
            continue;
        }
        mappedKeys = modifiersPressed.$index(0, key) == null ? A.LinkedHashSet_LinkedHashSet$_empty(t2) : t7.$index(0, new A._ModifierSidePair(key, modifiersPressed.$index(0, key)));
        if (mappedKeys == null)
          continue;
        for (t7 = A._instanceType(mappedKeys), t8 = new A._LinkedHashSetIterator(mappedKeys, mappedKeys._collection$_modifications, t7._eval$1("_LinkedHashSetIterator<1>")), t8._collection$_cell = mappedKeys._collection$_first, t7 = t7._precomputed1; t8.moveNext$0();) {
          t9 = t8._collection$_current;
          if (t9 == null)
            t9 = t7._as(t9);
          t10 = $.$get$RawKeyboard__allModifiers().$index(0, t9);
          t10.toString;
          modifierKeys.$indexSet(0, t9, t10);
        }
      }
      nonModifierCapsLock = t3.$index(0, B.PhysicalKeyboardKey_458809) != null && !J.$eq$(t3.$index(0, B.PhysicalKeyboardKey_458809), B.LogicalKeyboardKey_4294967556);
      for (t2 = $.$get$RawKeyboard__allModifiersExceptFn(), t2 = A.LinkedHashMapKeyIterator$(t2, t2._modifications, A._instanceType(t2)._precomputed1); t2.moveNext$0();) {
        t4 = t2.__js_helper$_current;
        skipReleasingKey = nonModifierCapsLock && t4.$eq(0, B.PhysicalKeyboardKey_458809);
        if (!anySideKeys.contains$1(0, t4) && !skipReleasingKey)
          t3.remove$1(0, t4);
      }
      t3.remove$1(0, B.PhysicalKeyboardKey_18);
      t3.addAll$1(0, modifierKeys);
      if (t5 && thisKeyModifier != null && !t3.containsKey$1(0, t1.get$physicalKey())) {
        t2 = t1.get$physicalKey().$eq(0, B.PhysicalKeyboardKey_458982);
        if (t2)
          t3.$indexSet(0, t1.get$physicalKey(), t1.get$logicalKey());
      }
    }
  };
  A._ModifierSidePair.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A._ModifierSidePair && other.modifier === this.modifier && other.side == this.side;
    },
    get$hashCode(_) {
      return A.Object_hash(this.modifier, this.side, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A._RawKeyEvent_Object_Diagnosticable.prototype = {};
  A._RawKeyEventData_Object_Diagnosticable.prototype = {};
  A.RawKeyEventDataWeb.prototype = {
    get$physicalKey() {
      var t1 = this.code,
        t2 = B.Map_xwOPX.$index(0, t1);
      return t2 == null ? new A.PhysicalKeyboardKey(98784247808 + B.JSString_methods.get$hashCode(t1)) : t2;
    },
    get$logicalKey() {
      var newKey,
        t1 = this.key,
        t2 = B.Map_08qt.$index(0, t1),
        maybeLocationKey = t2 == null ? null : t2[this.location];
      if (maybeLocationKey != null)
        return maybeLocationKey;
      newKey = B.Map_o0QDz.$index(0, t1);
      if (newKey != null)
        return newKey;
      if (t1.length === 1)
        return new A.LogicalKeyboardKey(t1.toLowerCase().charCodeAt(0));
      return new A.LogicalKeyboardKey(B.JSString_methods.get$hashCode(this.code) + 98784247808);
    },
    isModifierPressed$1(key) {
      var t1, _this = this;
      $label0$0: {
        if (B.ModifierKey_0 === key) {
          t1 = (_this.metaState & 4) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_1 === key) {
          t1 = (_this.metaState & 1) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_2 === key) {
          t1 = (_this.metaState & 2) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_3 === key) {
          t1 = (_this.metaState & 8) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_5 === key) {
          t1 = (_this.metaState & 16) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_4 === key) {
          t1 = (_this.metaState & 32) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_6 === key) {
          t1 = (_this.metaState & 64) !== 0;
          break $label0$0;
        }
        if (B.ModifierKey_7 === key || B.ModifierKey_8 === key) {
          t1 = false;
          break $label0$0;
        }
        t1 = null;
      }
      return t1;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.RawKeyEventDataWeb && other.code === _this.code && other.key === _this.key && other.location === _this.location && other.metaState === _this.metaState && other.keyCode === _this.keyCode;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.code, _this.key, _this.location, _this.metaState, _this.keyCode, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.RestorationManager.prototype = {
    _parseAndHandleRestorationUpdateFromEngine$1(update) {
      var t2,
        t1 = update == null;
      if (!t1) {
        t2 = J.$index$asx(update, "enabled");
        t2.toString;
        A._asBool(t2);
      } else
        t2 = false;
      this.handleRestorationUpdateFromEngine$2$data$enabled(t1 ? null : type$.nullable_Uint8List._as(J.$index$asx(update, "data")), t2);
    },
    handleRestorationUpdateFromEngine$2$data$enabled(data, enabled) {
      var oldRoot, t2, _this = this,
        t1 = _this._rootBucketIsValid && enabled;
      _this._isReplacing = t1;
      if (t1)
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RestorationManager_handleRestorationUpdateFromEngine_closure(_this));
      oldRoot = _this._rootBucket;
      if (enabled) {
        t1 = _this._decodeRestorationData$1(data);
        t2 = type$.String;
        if (t1 == null) {
          t1 = type$.nullable_Object;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        }
        t2 = new A.RestorationBucket(t1, _this, null, "root", A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.RestorationBucket), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_RestorationBucket));
        t1 = t2;
      } else
        t1 = null;
      _this._rootBucket = t1;
      _this._rootBucketIsValid = true;
      t2 = _this._pendingRootBucket;
      if (t2 != null)
        t2.complete$1(0, t1);
      _this._pendingRootBucket = null;
      if (_this._rootBucket != oldRoot) {
        _this.notifyListeners$0();
        if (oldRoot != null)
          oldRoot.dispose$0();
      }
    },
    _methodHandler$1($call) {
      return this._methodHandler$body$RestorationManager($call);
    },
    _methodHandler$body$RestorationManager($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$_methodHandler$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $call.method;
              switch (t1) {
                case "push":
                  $async$self._parseAndHandleRestorationUpdateFromEngine$1(type$.Map_of_nullable_Object_and_nullable_Object._as($call.$arguments));
                  break;
                default:
                  throw A.wrapException(A.UnimplementedError$(t1 + " was invoked but isn't implemented by " + A.getRuntimeTypeOfDartObject($async$self).toString$0(0)));
              }
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_methodHandler$1, $async$completer);
    },
    _decodeRestorationData$1(data) {
      if (data == null)
        return null;
      return type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(B.C_StandardMessageCodec.decodeMessage$1(A.NativeByteData_NativeByteData$view(data.buffer, data.byteOffset, data.byteLength)));
    },
    scheduleSerializationFor$1(bucket) {
      var _this = this;
      _this._bucketsNeedingSerialization.add$1(0, bucket);
      if (!_this._serializationScheduled) {
        _this._serializationScheduled = true;
        $.SchedulerBinding__instance.SchedulerBinding__postFrameCallbacks.push(new A.RestorationManager_scheduleSerializationFor_closure(_this));
      }
    },
    _doSerialization$0() {
      var t1, t2, t3, t4, encoded, _this = this;
      if (!_this._serializationScheduled)
        return;
      _this._serializationScheduled = false;
      for (t1 = _this._bucketsNeedingSerialization, t2 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t4 = t2._collection$_current;
        (t4 == null ? t3._as(t4) : t4)._needsSerialization = false;
      }
      t1.clear$0(0);
      encoded = B.C_StandardMessageCodec.encodeMessage$1(_this._rootBucket._rawData);
      B.OptionalMethodChannel_2Kx.invokeMethod$1$2("put", A.NativeUint8List_NativeUint8List$view(encoded.buffer, encoded.byteOffset, encoded.byteLength), type$.void);
    }
  };
  A.RestorationManager_handleRestorationUpdateFromEngine_closure.prototype = {
    call$1(_) {
      this.$this._isReplacing = false;
    },
    $signature: 2
  };
  A.RestorationManager_scheduleSerializationFor_closure.prototype = {
    call$1(_) {
      return this.$this._doSerialization$0();
    },
    $signature: 2
  };
  A.RestorationBucket.prototype = {
    get$_rawChildren() {
      var t1 = J.putIfAbsent$2$x(this._rawData, "c", new A.RestorationBucket__rawChildren_closure());
      t1.toString;
      return type$.Map_of_nullable_Object_and_nullable_Object._as(t1);
    },
    _restoration$_dropChild$1(child) {
      this._removeChildData$1(child);
      child._restoration$_parent = null;
      if (child._restoration$_manager != null) {
        child._updateManager$1(null);
        child._visitChildren$1(this.get$_recursivelyUpdateManager());
      }
    },
    _markNeedsSerialization$0() {
      var t1, _this = this;
      if (!_this._needsSerialization) {
        _this._needsSerialization = true;
        t1 = _this._restoration$_manager;
        if (t1 != null)
          t1.scheduleSerializationFor$1(_this);
      }
    },
    _recursivelyUpdateManager$1(bucket) {
      bucket._updateManager$1(this._restoration$_manager);
      bucket._visitChildren$1(this.get$_recursivelyUpdateManager());
    },
    _updateManager$1(newManager) {
      var _this = this,
        t1 = _this._restoration$_manager;
      if (t1 == newManager)
        return;
      if (_this._needsSerialization)
        if (t1 != null)
          t1._bucketsNeedingSerialization.remove$1(0, _this);
      _this._restoration$_manager = newManager;
      if (_this._needsSerialization && newManager != null) {
        _this._needsSerialization = false;
        _this._markNeedsSerialization$0();
      }
    },
    _removeChildData$1(child) {
      var t1, pendingChildren, t2, _this = this;
      if (J.$eq$(_this._claimedChildren.remove$1(0, child._restorationId), child)) {
        J.remove$1$ax(_this.get$_rawChildren(), child._restorationId);
        t1 = _this._childrenToAdd;
        pendingChildren = t1.$index(0, child._restorationId);
        if (pendingChildren != null) {
          t2 = J.getInterceptor$ax(pendingChildren);
          _this._finalizeAddChildData$1(t2.removeLast$0(pendingChildren));
          if (t2.get$isEmpty(pendingChildren))
            t1.remove$1(0, child._restorationId);
        }
        if (J.get$isEmpty$asx(_this.get$_rawChildren()))
          J.remove$1$ax(_this._rawData, "c");
        _this._markNeedsSerialization$0();
        return;
      }
      t1 = _this._childrenToAdd;
      t2 = t1.$index(0, child._restorationId);
      if (t2 != null)
        J.remove$1$ax(t2, child);
      t2 = t1.$index(0, child._restorationId);
      t2 = t2 == null ? null : J.get$isEmpty$asx(t2);
      if (t2 === true)
        t1.remove$1(0, child._restorationId);
    },
    _finalizeAddChildData$1(child) {
      this._claimedChildren.$indexSet(0, child._restorationId, child);
      J.$indexSet$ax(this.get$_rawChildren(), child._restorationId, child._rawData);
    },
    _visitChildren$2$concurrentModification(visitor, concurrentModification) {
      var t1 = this._claimedChildren.get$values(0),
        t2 = this._childrenToAdd.get$values(0),
        children = t1.followedBy$1(0, new A.ExpandIterable(t2, new A.RestorationBucket__visitChildren_closure(), A._instanceType(t2)._eval$1("ExpandIterable<Iterable.E,RestorationBucket>")));
      J.forEach$1$ax(concurrentModification ? A.List_List$of(children, false, A._instanceType(children)._eval$1("Iterable.E")) : children, visitor);
    },
    _visitChildren$1(visitor) {
      return this._visitChildren$2$concurrentModification(visitor, false);
    },
    dispose$0() {
      var t1, _this = this;
      _this._visitChildren$2$concurrentModification(_this.get$_restoration$_dropChild(), true);
      _this._claimedChildren.clear$0(0);
      _this._childrenToAdd.clear$0(0);
      t1 = _this._restoration$_parent;
      if (t1 != null)
        t1._removeChildData$1(_this);
      _this._restoration$_parent = null;
      _this._updateManager$1(null);
    },
    toString$0(_) {
      return "RestorationBucket(restorationId: " + this._restorationId + ", owner: null)";
    }
  };
  A.RestorationBucket__rawChildren_closure.prototype = {
    call$0() {
      var t1 = type$.nullable_Object;
      return A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    },
    $signature: 160
  };
  A.RestorationBucket__visitChildren_closure.prototype = {
    call$1(buckets) {
      return buckets;
    },
    $signature: 161
  };
  A.SuggestionSpan.prototype = {
    $eq(_, other) {
      var t1, t2;
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (other instanceof A.SuggestionSpan) {
        t1 = other.range;
        t2 = this.range;
        t1 = t1.start === t2.start && t1.end === t2.end && A.listEquals0(other.suggestions, this.suggestions);
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this.range;
      return A.Object_hash(t1.start, t1.end, A.Object_hashAll(this.suggestions), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.SpellCheckResults.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A.SpellCheckResults && other.spellCheckedText === this.spellCheckedText && A.listEquals0(other.suggestionSpans, this.suggestionSpans);
    },
    get$hashCode(_) {
      return A.Object_hash(this.spellCheckedText, A.Object_hashAll(this.suggestionSpans), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.SystemUiOverlayStyle.prototype = {
    _toMap$0() {
      var t2, t3, t4, t5, _this = this,
        t1 = _this.systemNavigationBarColor;
      t1 = t1 == null ? null : t1.value;
      t2 = _this.statusBarColor;
      t2 = t2 == null ? null : t2.value;
      t3 = _this.statusBarBrightness._enumToString$0();
      t4 = _this.statusBarIconBrightness._enumToString$0();
      t5 = _this.systemNavigationBarIconBrightness;
      t5 = t5 == null ? null : t5._enumToString$0();
      return A.LinkedHashMap_LinkedHashMap$_literal(["systemNavigationBarColor", t1, "systemNavigationBarDividerColor", null, "systemStatusBarContrastEnforced", _this.systemStatusBarContrastEnforced, "statusBarColor", t2, "statusBarBrightness", t3, "statusBarIconBrightness", t4, "systemNavigationBarIconBrightness", t5, "systemNavigationBarContrastEnforced", _this.systemNavigationBarContrastEnforced], type$.String, type$.dynamic);
    },
    toString$0(_) {
      return "SystemUiOverlayStyle(" + this._toMap$0().toString$0(0) + ")";
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.systemNavigationBarColor, _this.systemNavigationBarDividerColor, _this.systemNavigationBarContrastEnforced, _this.statusBarColor, _this.statusBarBrightness, _this.statusBarIconBrightness, _this.systemStatusBarContrastEnforced, _this.systemNavigationBarIconBrightness, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      t1 = false;
      if (other instanceof A.SystemUiOverlayStyle)
        if (J.$eq$(other.systemNavigationBarColor, _this.systemNavigationBarColor))
          if (J.$eq$(other.statusBarColor, _this.statusBarColor))
            if (other.statusBarIconBrightness === _this.statusBarIconBrightness)
              if (other.statusBarBrightness === _this.statusBarBrightness)
                t1 = other.systemNavigationBarIconBrightness == _this.systemNavigationBarIconBrightness;
      return t1;
    }
  };
  A.SystemChrome_setSystemUIOverlayStyle_closure.prototype = {
    call$0() {
      if (!J.$eq$($.SystemChrome__pendingStyle, $.SystemChrome__latestStyle)) {
        B.OptionalMethodChannel_kW8.invokeMethod$1$2("SystemChrome.setSystemUIOverlayStyle", $.SystemChrome__pendingStyle._toMap$0(), type$.void);
        $.SystemChrome__latestStyle = $.SystemChrome__pendingStyle;
      }
      $.SystemChrome__pendingStyle = null;
    },
    $signature: 0
  };
  A.TextSelection.prototype = {
    get$base() {
      var affinity, _this = this;
      if (!_this.get$isValid() || _this.baseOffset === _this.extentOffset)
        affinity = _this.affinity;
      else
        affinity = _this.baseOffset < _this.extentOffset ? B.TextAffinity_1 : B.TextAffinity_0;
      return new A.TextPosition(_this.baseOffset, affinity);
    },
    get$extent() {
      var affinity, _this = this;
      if (!_this.get$isValid() || _this.baseOffset === _this.extentOffset)
        affinity = _this.affinity;
      else
        affinity = _this.baseOffset < _this.extentOffset ? B.TextAffinity_0 : B.TextAffinity_1;
      return new A.TextPosition(_this.extentOffset, affinity);
    },
    toString$0(_) {
      var t1, t2, _this = this,
        _s17_ = ", isDirectional: ";
      if (!_this.get$isValid())
        return "TextSelection.invalid";
      t1 = "" + _this.baseOffset;
      t2 = "" + _this.isDirectional;
      return _this.start === _this.end ? "TextSelection.collapsed(offset: " + t1 + ", affinity: " + _this.affinity.toString$0(0) + _s17_ + t2 + ")" : "TextSelection(baseOffset: " + t1 + ", extentOffset: " + _this.extentOffset + _s17_ + t2 + ")";
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (!(other instanceof A.TextSelection))
        return false;
      if (!_this.get$isValid())
        return !other.get$isValid();
      t1 = false;
      if (other.baseOffset === _this.baseOffset)
        if (other.extentOffset === _this.extentOffset)
          t1 = (_this.start !== _this.end || other.affinity === _this.affinity) && other.isDirectional === _this.isDirectional;
      return t1;
    },
    get$hashCode(_) {
      var affinityHash, _this = this;
      if (!_this.get$isValid())
        return A.Object_hash(-B.JSInt_methods.get$hashCode(1), -B.JSInt_methods.get$hashCode(1), A.Primitives_objectHashCode(B.TextAffinity_1), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
      affinityHash = _this.start === _this.end ? A.Primitives_objectHashCode(_this.affinity) : A.Primitives_objectHashCode(B.TextAffinity_1);
      return A.Object_hash(B.JSInt_methods.get$hashCode(_this.baseOffset), B.JSInt_methods.get$hashCode(_this.extentOffset), affinityHash, B.JSBool_methods.get$hashCode(_this.isDirectional), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    copyWith$3$affinity$baseOffset$extentOffset(affinity, baseOffset, extentOffset) {
      var _this = this,
        t1 = baseOffset == null ? _this.baseOffset : baseOffset,
        t2 = extentOffset == null ? _this.extentOffset : extentOffset,
        t3 = affinity == null ? _this.affinity : affinity;
      return A.TextSelection$(t3, t1, t2, _this.isDirectional);
    },
    copyWith$1$affinity(affinity) {
      return this.copyWith$3$affinity$baseOffset$extentOffset(affinity, null, null);
    }
  };
  A.TextEditingDelta.prototype = {};
  A.TextEditingDeltaInsertion.prototype = {};
  A.TextEditingDeltaDeletion.prototype = {};
  A.TextEditingDeltaReplacement.prototype = {};
  A.TextEditingDeltaNonTextUpdate.prototype = {};
  A._TextEditingDelta_Object_Diagnosticable.prototype = {};
  A.TextInputType.prototype = {
    toJson$0() {
      return A.LinkedHashMap_LinkedHashMap$_literal(["name", "TextInputType." + B.List_cRy[this.index], "signed", this.signed, "decimal", this.decimal], type$.String, type$.dynamic);
    },
    toString$0(_) {
      return "TextInputType(name: " + ("TextInputType." + B.List_cRy[this.index]) + ", signed: " + A.S(this.signed) + ", decimal: " + A.S(this.decimal) + ")";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.TextInputType && other.index === this.index && other.signed == this.signed && other.decimal == this.decimal;
    },
    get$hashCode(_) {
      return A.Object_hash(this.index, this.signed, this.decimal, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.TextInputAction.prototype = {
    _enumToString$0() {
      return "TextInputAction." + this._name;
    }
  };
  A.FloatingCursorDragState.prototype = {
    _enumToString$0() {
      return "FloatingCursorDragState." + this._name;
    }
  };
  A.RawFloatingCursorPoint.prototype = {};
  A.TextEditingValue.prototype = {
    copyWith$3$composing$selection$text(composing, selection, text) {
      var t1 = text == null ? this.text : text,
        t2 = selection == null ? this.selection : selection;
      return new A.TextEditingValue(t1, t2, composing == null ? this.composing : composing);
    },
    copyWith$1$selection(selection) {
      return this.copyWith$3$composing$selection$text(null, selection, null);
    },
    copyWith$1$composing(composing) {
      return this.copyWith$3$composing$selection$text(composing, null, null);
    },
    get$isComposingRangeValid() {
      var t2,
        t1 = this.composing;
      if (t1.get$isValid()) {
        t2 = t1.end;
        t1 = t2 >= t1.start && t2 <= this.text.length;
      } else
        t1 = false;
      return t1;
    },
    toJSON$0() {
      var t1 = this.selection,
        t2 = this.composing;
      return A.LinkedHashMap_LinkedHashMap$_literal(["text", this.text, "selectionBase", t1.baseOffset, "selectionExtent", t1.extentOffset, "selectionAffinity", t1.affinity._enumToString$0(), "selectionIsDirectional", t1.isDirectional, "composingBase", t2.start, "composingExtent", t2.end], type$.String, type$.dynamic);
    },
    toString$0(_) {
      return "TextEditingValue(text: \u2524" + this.text + "\u251c, selection: " + this.selection.toString$0(0) + ", composing: " + this.composing.toString$0(0) + ")";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      return other instanceof A.TextEditingValue && other.text === _this.text && other.selection.$eq(0, _this.selection) && other.composing.$eq(0, _this.composing);
    },
    get$hashCode(_) {
      var t1 = this.composing;
      return A.Object_hash(B.JSString_methods.get$hashCode(this.text), this.selection.get$hashCode(0), A.Object_hash(B.JSInt_methods.get$hashCode(t1.start), B.JSInt_methods.get$hashCode(t1.end), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue), B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.SelectionChangedCause.prototype = {
    _enumToString$0() {
      return "SelectionChangedCause." + this._name;
    }
  };
  A.TextInputConnection.prototype = {};
  A.TextInput.prototype = {
    _attach$2(connection, configuration) {
      this._currentConnection = connection;
      this.__TextInput__currentConfiguration_A = configuration;
      this._setClient$2(connection._client, configuration);
    },
    get$_channel() {
      var t1 = this.__TextInput__channel_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    _loudlyHandleTextInputInvocation$1($call) {
      return this._loudlyHandleTextInputInvocation$body$TextInput($call);
    },
    _loudlyHandleTextInputInvocation$body$TextInput($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, exception, stack, t1, exception0, $async$exception0;
      var $async$_loudlyHandleTextInputInvocation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait($async$self._handleTextInputInvocation$1($call), $async$_loudlyHandleTextInputInvocation$1);
            case 7:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during method call " + $call.method);
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "services library", t1, new A.TextInput__loudlyHandleTextInputInvocation_closure($call), false));
              throw $async$exception0;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_loudlyHandleTextInputInvocation$1, $async$completer);
    },
    _handleTextInputInvocation$1(methodCall) {
      return this._handleTextInputInvocation$body$TextInput(methodCall);
    },
    _handleTextInputInvocation$body$TextInput(methodCall) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, $async$self = this, args, t1, t2, t3, t4, t5, editingValue, client, value, encoded, selectors, firstArg, offset, method;
      var $async$_handleTextInputInvocation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                method = methodCall.method;
                switch (method) {
                  case "TextInputClient.focusElement":
                    args = type$.List_dynamic._as(methodCall.$arguments);
                    t1 = J.getInterceptor$asx(args);
                    t2 = $async$self._scribbleClients.$index(0, t1.$index(args, 0));
                    if (t2 != null) {
                      t3 = A._asNum(t1.$index(args, 1));
                      t1 = A._asNum(t1.$index(args, 2));
                      t2._widget.focusNode.requestFocus$0();
                      t4 = t2.get$renderEditable();
                      if (t4 != null)
                        t4.selectPositionAt$2$cause$from(B.SelectionChangedCause_7, new A.Offset(t3, t1));
                      t2._widget.updateSelectionRects$0();
                    }
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "TextInputClient.requestElementsInRect":
                    t1 = J.cast$1$0$ax(type$.List_dynamic._as(methodCall.$arguments), type$.num);
                    t2 = t1.$ti._eval$1("MappedListIterable<ListBase.E,double>");
                    t3 = $async$self._scribbleClients;
                    t4 = A._instanceType(t3)._eval$1("LinkedHashMapKeyIterable<1>");
                    t5 = t4._eval$1("MappedIterable<Iterable.E,List<@>>");
                    $async$returnValue = A.List_List$of(new A.MappedIterable(new A.WhereIterable(new A.LinkedHashMapKeyIterable(t3, t4), new A.TextInput__handleTextInputInvocation_closure($async$self, A.List_List$of(new A.MappedListIterable(t1, new A.TextInput__handleTextInputInvocation_closure0(), t2), true, t2._eval$1("ListIterable.E"))), t4._eval$1("WhereIterable<Iterable.E>")), new A.TextInput__handleTextInputInvocation_closure1($async$self), t5), true, t5._eval$1("Iterable.E"));
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "TextInputClient.scribbleInteractionBegan":
                    $async$self._scribbleInProgress = true;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  case "TextInputClient.scribbleInteractionFinished":
                    $async$self._scribbleInProgress = false;
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                }
                t1 = $async$self._currentConnection;
                if (t1 == null) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                if (method === "TextInputClient.requestExistingInputState") {
                  t2 = $async$self.__TextInput__currentConfiguration_A;
                  t2 === $ && A.throwUnnamedLateFieldNI();
                  $async$self._attach$2(t1, t2);
                  $async$self._setEditingState$1($async$self._currentConnection._client._widget.controller._change_notifier$_value);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = type$.List_dynamic;
                args = t1._as(methodCall.$arguments);
                if (method === string$.TextInT) {
                  t1 = type$.Map_String_dynamic;
                  editingValue = t1._as(J.$index$asx(args, 1));
                  for (t2 = J.getInterceptor$x(editingValue), t3 = J.get$iterator$ax(t2.get$keys(editingValue)); t3.moveNext$0();)
                    A.TextEditingValue_TextEditingValue$fromJSON(t1._as(t2.$index(editingValue, t3.get$current(t3))));
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t2 = J.getInterceptor$asx(args);
                client = A._asInt(t2.$index(args, 0));
                t3 = $async$self._currentConnection;
                if (client !== t3._id) {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                switch (method) {
                  case "TextInputClient.updateEditingState":
                    value = A.TextEditingValue_TextEditingValue$fromJSON(type$.Map_String_dynamic._as(t2.$index(args, 1)));
                    $.$get$TextInput__instance()._updateEditingValue$2$exclude(value, $.$get$_PlatformTextInputControl_instance());
                    break;
                  case string$.TextInD:
                    t3 = type$.Map_String_dynamic;
                    encoded = t3._as(t2.$index(args, 1));
                    t2 = A._setArrayType([], type$.JSArray_TextEditingDelta);
                    for (t1 = J.get$iterator$ax(t1._as(J.$index$asx(encoded, "deltas"))); t1.moveNext$0();)
                      t2.push(A.TextEditingDelta_TextEditingDelta$fromJSON(t3._as(t1.get$current(t1))));
                    type$.DeltaTextInputClient._as($async$self._currentConnection._client).updateEditingValueWithDeltas$1(t2);
                    break;
                  case "TextInputClient.performAction":
                    if (A._asString(t2.$index(args, 1)) === "TextInputAction.commitContent") {
                      t1 = type$.Map_String_dynamic._as(t2.$index(args, 2));
                      t2 = J.getInterceptor$asx(t1);
                      A._asString(t2.$index(t1, "mimeType"));
                      A._asString(t2.$index(t1, "uri"));
                      if (t2.$index(t1, "data") != null)
                        new Uint8Array(A._ensureNativeList(A.List_List$from(type$.Iterable_dynamic._as(t2.$index(t1, "data")), true, type$.int)));
                      $async$self._currentConnection._client._widget.toString;
                    } else
                      $async$self._currentConnection._client.performAction$1(A._toTextInputAction(A._asString(t2.$index(args, 1))));
                    break;
                  case "TextInputClient.performSelectors":
                    selectors = J.cast$1$0$ax(t1._as(t2.$index(args, 1)), type$.String);
                    selectors.forEach$1(selectors, $async$self._currentConnection._client.get$performSelector());
                    break;
                  case "TextInputClient.performPrivateCommand":
                    t1 = type$.Map_String_dynamic;
                    firstArg = t1._as(t2.$index(args, 1));
                    t2 = $async$self._currentConnection._client;
                    t3 = J.getInterceptor$asx(firstArg);
                    A._asString(t3.$index(firstArg, "action"));
                    if (t3.$index(firstArg, "data") != null)
                      t1._as(t3.$index(firstArg, "data"));
                    t2._widget.toString;
                    break;
                  case "TextInputClient.updateFloatingCursor":
                    t1 = t3._client;
                    t3 = A._toTextCursorAction(A._asString(t2.$index(args, 1)));
                    t2 = type$.Map_String_dynamic._as(t2.$index(args, 2));
                    if (t3 === B.FloatingCursorDragState_1) {
                      t4 = J.getInterceptor$asx(t2);
                      offset = new A.Offset(A._asNum(t4.$index(t2, "X")), A._asNum(t4.$index(t2, "Y")));
                    } else
                      offset = B.Offset_0_0;
                    t1.updateFloatingCursor$1(new A.RawFloatingCursorPoint(offset, null, t3));
                    break;
                  case "TextInputClient.onConnectionClosed":
                    t1 = t3._client;
                    if (t1.get$_hasInputConnection()) {
                      t1._textInputConnection.toString;
                      t1._lastKnownRemoteTextEditingValue = t1._textInputConnection = $.$get$TextInput__instance()._currentConnection = null;
                      t1._widget.focusNode.unfocus$0();
                    }
                    break;
                  case "TextInputClient.showAutocorrectionPromptRect":
                    t3._client.showAutocorrectionPromptRect$2(A._asInt(t2.$index(args, 1)), A._asInt(t2.$index(args, 2)));
                    break;
                  case "TextInputClient.showToolbar":
                    t3._client.showToolbar$0();
                    break;
                  case "TextInputClient.insertTextPlaceholder":
                    t3._client.insertTextPlaceholder$1(new A.Size(A._asNum(t2.$index(args, 1)), A._asNum(t2.$index(args, 2))));
                    break;
                  case "TextInputClient.removeTextPlaceholder":
                    t3._client.removeTextPlaceholder$0();
                    break;
                  default:
                    throw A.wrapException(A.MissingPluginException$(null));
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$_handleTextInputInvocation$1, $async$completer);
    },
    _setClient$2(client, configuration) {
      var t1, t2, t3, t4, t5, t6, t7;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = type$.JSArray_Object, t3 = type$.void, t4 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t5 = t1._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t6 = $.$get$TextInput__instance();
        t7 = t6.__TextInput__channel_A;
        t7 === $ && A.throwUnnamedLateFieldNI();
        t7.invokeMethod$1$2("TextInput.setClient", A._setArrayType([t6._currentConnection._id, t5._configurationToJson$1(configuration)], t2), t3);
      }
    },
    _setEditingState$1(value) {
      var t1, t2, t3, t4;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = type$.void, t3 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        if (t4 == null)
          t3._as(t4);
        t4 = $.$get$TextInput__instance().__TextInput__channel_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        t4.invokeMethod$1$2("TextInput.setEditingState", value.toJSON$0(), t2);
      }
    },
    _show$0() {
      var t1, t2, t3, t4;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = type$.void, t3 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        if (t4 == null)
          t3._as(t4);
        t4 = $.$get$TextInput__instance().__TextInput__channel_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        t4.invokeMethod$1$1("TextInput.show", t2);
      }
    },
    _setEditableSizeAndTransform$2(editableBoxSize, transform) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = editableBoxSize._dx, t3 = editableBoxSize._dy, t4 = transform._vector_math_64$_m4storage, t5 = type$.String, t6 = type$.dynamic, t7 = type$.void, t8 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t9 = t1._collection$_current;
        if (t9 == null)
          t8._as(t9);
        t9 = $.$get$TextInput__instance().__TextInput__channel_A;
        t9 === $ && A.throwUnnamedLateFieldNI();
        t9.invokeMethod$1$2("TextInput.setEditableSizeAndTransform", A.LinkedHashMap_LinkedHashMap$_literal(["width", t2, "height", t3, "transform", t4], t5, t6), t7);
      }
    },
    _setStyle$5$fontFamily$fontSize$fontWeight$textAlign$textDirection(fontFamily, fontSize, fontWeight, textAlign, textDirection) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = textAlign.index, t3 = textDirection.index, t4 = type$.String, t5 = type$.dynamic, t6 = type$.void, t7 = fontWeight == null, t8 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t9 = t1._collection$_current;
        if (t9 == null)
          t8._as(t9);
        t9 = $.$get$TextInput__instance().__TextInput__channel_A;
        t9 === $ && A.throwUnnamedLateFieldNI();
        t9.invokeMethod$1$2("TextInput.setStyle", A.LinkedHashMap_LinkedHashMap$_literal(["fontFamily", fontFamily, "fontSize", fontSize, "fontWeightIndex", t7 ? null : fontWeight.index, "textAlignIndex", t2, "textDirectionIndex", t3], t4, t5), t6);
      }
    },
    _requestAutofill$0() {
      var t1, t2, t3, t4;
      for (t1 = this._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = type$.void, t3 = t1.$ti._precomputed1; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        if (t4 == null)
          t3._as(t4);
        t4 = $.$get$TextInput__instance().__TextInput__channel_A;
        t4 === $ && A.throwUnnamedLateFieldNI();
        t4.invokeMethod$1$1("TextInput.requestAutofill", t2);
      }
    },
    _updateEditingValue$2$exclude(value, exclude) {
      var t1, t2, t3, t4;
      if (this._currentConnection == null)
        return;
      for (t1 = $.$get$TextInput__instance()._inputControls, t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t2 = t1.$ti._precomputed1, t3 = type$.void; t1.moveNext$0();) {
        t4 = t1._collection$_current;
        if ((t4 == null ? t2._as(t4) : t4) !== exclude) {
          t4 = $.$get$TextInput__instance().__TextInput__channel_A;
          t4 === $ && A.throwUnnamedLateFieldNI();
          t4.invokeMethod$1$2("TextInput.setEditingState", value.toJSON$0(), t3);
        }
      }
      $.$get$TextInput__instance()._currentConnection._client.updateEditingValue$1(value);
    }
  };
  A.TextInput__loudlyHandleTextInputInvocation_closure.prototype = {
    call$0() {
      var _null = null;
      return A._setArrayType([A.DiagnosticsProperty$("call", this.$call, true, B.C__NoDefaultValue, _null, _null, _null, B.DiagnosticLevel_3, false, true, true, B.DiagnosticsTreeStyle_9, _null, type$.MethodCall)], type$.JSArray_DiagnosticsNode);
    },
    $signature: 19
  };
  A.TextInput__handleTextInputInvocation_closure0.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 162
  };
  A.TextInput__handleTextInputInvocation_closure.prototype = {
    call$1(elementIdentifier) {
      var t5, t6, bounds,
        t1 = this.args,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      t5 = this.$this._scribbleClients;
      t6 = t5.$index(0, elementIdentifier);
      t1 = t6 == null ? null : t6.isInScribbleRect$1(new A.Rect(t2, t3, t2 + t4, t3 + t1));
      if (t1 !== true)
        return false;
      t1 = t5.$index(0, elementIdentifier);
      bounds = t1 == null ? null : t1.get$bounds(0);
      if (bounds == null)
        bounds = B.Rect_0_0_0_0;
      return !(bounds.$eq(0, B.Rect_0_0_0_0) || bounds.get$hasNaN() || bounds.get$isInfinite(0));
    },
    $signature: 23
  };
  A.TextInput__handleTextInputInvocation_closure1.prototype = {
    call$1(elementIdentifier) {
      var bounds = this.$this._scribbleClients.$index(0, elementIdentifier).get$bounds(0),
        t1 = [elementIdentifier],
        t2 = bounds.left,
        t3 = bounds.top;
      B.JSArray_methods.addAll$1(t1, [t2, t3, bounds.right - t2, bounds.bottom - t3]);
      return t1;
    },
    $signature: 163
  };
  A.TextInputControl.prototype = {};
  A._PlatformTextInputControl.prototype = {
    _configurationToJson$1(configuration) {
      var none,
        json = configuration.toJson$0();
      if ($.$get$TextInput__instance()._currentControl !== $.$get$_PlatformTextInputControl_instance()) {
        none = B.TextInputType_10_null_null.toJson$0();
        none.$indexSet(0, "isMultiline", configuration.inputType.$eq(0, B.TextInputType_1_null_null));
        json.$indexSet(0, "inputType", none);
      }
      return json;
    }
  };
  A.__PlatformTextInputControl_Object_TextInputControl.prototype = {};
  A._getParent_closure.prototype = {
    call$1(ancestor) {
      this.parent.set$finalLocalValue(ancestor);
      return false;
    },
    $signature: 28
  };
  A.ActionDispatcher.prototype = {
    invokeAction$3(action, intent, context) {
      return action._invoke$2(intent, context);
    }
  };
  A.Actions__findDispatcher_closure.prototype = {
    call$1(element) {
      type$._ActionsScope._as(element.get$widget());
      return false;
    },
    $signature: 46
  };
  A.Actions_maybeInvoke_closure.prototype = {
    call$1(element) {
      var _this = this,
        t1 = _this.intent,
        result = A.Actions__castAction(type$._ActionsScope._as(element.get$widget()), t1, _this.T),
        t2 = result != null;
      if (t2 && result._isEnabled$2(t1, _this.context))
        _this._box_0.returnValue = A.Actions__findDispatcher(element).invokeAction$3(result, t1, _this.context);
      return t2;
    },
    $signature: 46
  };
  A._ActionDispatcher_Object_Diagnosticable.prototype = {};
  A.SizedBox.prototype = {
    toStringShort$0() {
      var _0_4_isSet, t1, _0_40, t2,
        _0_1 = this.width,
        _0_4 = this.height;
      $label0$0: {
        _0_4_isSet = 1 / 0 === _0_1;
        if (_0_4_isSet) {
          t1 = 1 / 0 === _0_4;
          _0_40 = _0_4;
        } else {
          _0_40 = null;
          t1 = false;
        }
        if (t1) {
          t1 = "SizedBox.expand";
          break $label0$0;
        }
        if (0 === _0_1)
          t1 = 0 === (_0_4_isSet ? _0_40 : _0_4);
        else
          t1 = false;
        if (t1) {
          t1 = "SizedBox.shrink";
          break $label0$0;
        }
        t1 = "SizedBox";
        break $label0$0;
      }
      t2 = this.key;
      return t2 == null ? t1 : t1 + "-" + t2.toString$0(0);
    }
  };
  A.ExcludeSemantics.prototype = {};
  A.Builder.prototype = {};
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure.prototype = {
    call$1(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["data", A._debugCollectRenderTrees()], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 20
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0.prototype = {
    call$1(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["data", A._debugCollectSemanticsTrees(B.DebugSemanticsDumpOrder_1)], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 20
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1.prototype = {
    call$1(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["data", A._debugCollectSemanticsTrees(B.DebugSemanticsDumpOrder_0)], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 20
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfilePaintsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.debugProfilePaintsEnabled !== value)
                $.debugProfilePaintsEnabled = value;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 21
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure4.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileLayoutsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure5.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($.debugProfileLayoutsEnabled !== value)
                $.debugProfileLayoutsEnabled = value;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 21
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure.prototype = {
    call$1(timings) {
      J.forEach$1$ax(timings, this.$this.get$_profileFramePostEvent());
    },
    $signature: 40
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.double),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $._timeDilation;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 168
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              A.timeDilation(value);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 169
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure.prototype = {
    call$1(message) {
      var t1 = message == null ? type$.Object._as(message) : message;
      return this.$this.handleSystemMessage$1(t1);
    },
    $signature: 58
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure0.prototype = {
    call$1(message) {
      var t1 = message == null ? type$.Object._as(message) : message;
      return this.$this._handleAccessibilityMessage$1(t1);
    },
    $signature: 58
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfilePlatformChannels;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure0.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.debugProfilePlatformChannels = value;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 21
  };
  A.WidgetsBindingObserver.prototype = {
    didPopRoute$0() {
      return A.Future_Future$value(false, type$.bool);
    },
    didPushRouteInformation$1(routeInformation) {
      var _null = null,
        uri = routeInformation.get$uri(),
        t1 = uri.get$path(uri).length === 0 ? "/" : uri.get$path(uri),
        t2 = uri.get$queryParametersAll();
      t2 = t2.get$isEmpty(t2) ? _null : uri.get$queryParametersAll();
      t1 = A._Uri__Uri(uri.get$fragment().length === 0 ? _null : uri.get$fragment(), _null, t1, _null, t2).get$_text();
      A._Uri__uriDecode(t1, 0, t1.length, B.C_Utf8Codec, false);
      return A.Future_Future$value(false, type$.bool);
    },
    didChangeMetrics$0() {
    },
    didChangeTextScaleFactor$0() {
    },
    didChangePlatformBrightness$0() {
    },
    didChangeLocales$1(locales) {
    },
    didChangeAppLifecycleState$1(state) {
    },
    didChangeViewFocus$1($event) {
    },
    didRequestAppExit$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AppExitResponse),
        $async$returnValue;
      var $async$didRequestAppExit$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = B.AppExitResponse_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$didRequestAppExit$0, $async$completer);
    }
  };
  A.WidgetsBinding.prototype = {
    handleRequestAppExit$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AppExitResponse),
        $async$returnValue, $async$self = this, t1, t2, didCancel, _i;
      var $async$handleRequestAppExit$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.List_List$of($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, didCancel = false, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didRequestAppExit$0(), $async$handleRequestAppExit$0);
            case 6:
              // returning from await.
              if ($async$result === B.AppExitResponse_1)
                didCancel = true;
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = didCancel ? B.AppExitResponse_1 : B.AppExitResponse_0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleRequestAppExit$0, $async$completer);
    },
    handleLocaleChanged$0() {
      this.dispatchLocalesChanged$1($.$get$EnginePlatformDispatcher__instance().configuration.locales);
    },
    dispatchLocalesChanged$1(locales) {
      var t1, t2, _i;
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangeLocales$1(locales);
    },
    handlePopRoute$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$handlePopRoute$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A.List_List$of($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPopRoute$0(), $async$handlePopRoute$0);
            case 6:
              // returning from await.
              if ($async$result) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              A.SystemNavigator_pop();
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handlePopRoute$0, $async$completer);
    },
    _handleStartBackGesture$1($arguments) {
      var t1, _i;
      this.WidgetsBinding__backGestureObserver = null;
      A.PredictiveBackEvent_PredictiveBackEvent$fromMap($arguments);
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver).length, _i = 0; _i < t1; ++_i)
        ;
      return A.Future_Future$value(false, type$.bool);
    },
    _handleUpdateBackGestureProgress$1($arguments) {
      return this._handleUpdateBackGestureProgress$body$WidgetsBinding($arguments);
    },
    _handleUpdateBackGestureProgress$body$WidgetsBinding($arguments) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$_handleUpdateBackGestureProgress$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.WidgetsBinding__backGestureObserver == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              A.PredictiveBackEvent_PredictiveBackEvent$fromMap($arguments);
              $async$self.WidgetsBinding__backGestureObserver.toString;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleUpdateBackGestureProgress$1, $async$completer);
    },
    _handleCommitBackGesture$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$_handleCommitBackGesture$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = $async$self.WidgetsBinding__backGestureObserver == null ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait($async$self.handlePopRoute$0(), $async$_handleCommitBackGesture$0);
            case 5:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleCommitBackGesture$0, $async$completer);
    },
    _handleCancelBackGesture$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$_handleCancelBackGesture$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self.WidgetsBinding__backGestureObserver == null) {
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handleCancelBackGesture$0, $async$completer);
    },
    handlePushRoute$1(route) {
      return this.handlePushRoute$body$WidgetsBinding(route);
    },
    handlePushRoute$body$WidgetsBinding(route) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t1, t2, _i, routeInformation;
      var $async$handlePushRoute$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              routeInformation = new A.RouteInformation(A.Uri_parse(route, 0, null), null);
              t1 = A.List_List$of($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPushRouteInformation$1(routeInformation), $async$handlePushRoute$1);
            case 6:
              // returning from await.
              if ($async$result) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handlePushRoute$1, $async$completer);
    },
    _handlePushRouteInformation$1(routeArguments) {
      return this._handlePushRouteInformation$body$WidgetsBinding(routeArguments);
    },
    _handlePushRouteInformation$body$WidgetsBinding(routeArguments) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue, $async$self = this, t2, _i, t1, routeInformation;
      var $async$_handlePushRouteInformation$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = J.getInterceptor$asx(routeArguments);
              routeInformation = new A.RouteInformation(A.Uri_parse(A._asString(t1.$index(routeArguments, "location")), 0, null), t1.$index(routeArguments, "state"));
              t1 = A.List_List$of($async$self.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].didPushRouteInformation$1(routeInformation), $async$_handlePushRouteInformation$1);
            case 6:
              // returning from await.
              if ($async$result) {
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = false;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_handlePushRouteInformation$1, $async$completer);
    },
    _handleNavigationInvocation$1(methodCall) {
      var t1,
        _0_0 = methodCall.method;
      $label0$0: {
        if ("popRoute" === _0_0) {
          t1 = this.handlePopRoute$0();
          break $label0$0;
        }
        if ("pushRoute" === _0_0) {
          t1 = this.handlePushRoute$1(A._asString(methodCall.$arguments));
          break $label0$0;
        }
        if ("pushRouteInformation" === _0_0) {
          t1 = this._handlePushRouteInformation$1(type$.Map_dynamic_dynamic._as(methodCall.$arguments));
          break $label0$0;
        }
        t1 = A.Future_Future$value(false, type$.bool);
        break $label0$0;
      }
      return t1;
    },
    _handleBackGestureInvocation$1(methodCall) {
      var _this = this,
        t1 = type$.nullable_Map_of_nullable_Object_and_nullable_Object._as(methodCall.$arguments),
        $arguments = t1 == null ? null : J.cast$2$0$ax(t1, type$.nullable_String, type$.nullable_Object),
        _0_0 = methodCall.method;
      $label0$0: {
        if ("startBackGesture" === _0_0) {
          $arguments.toString;
          t1 = _this._handleStartBackGesture$1($arguments);
          break $label0$0;
        }
        if ("updateBackGestureProgress" === _0_0) {
          $arguments.toString;
          t1 = _this._handleUpdateBackGestureProgress$1($arguments);
          break $label0$0;
        }
        if ("commitBackGesture" === _0_0) {
          t1 = _this._handleCommitBackGesture$0();
          break $label0$0;
        }
        if ("cancelBackGesture" === _0_0) {
          t1 = _this._handleCancelBackGesture$0();
          break $label0$0;
        }
        t1 = A.throwExpression(A.MissingPluginException$(null));
      }
      return t1;
    },
    _handleBuildScheduled$0() {
      this.ensureVisualUpdate$0();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure.prototype = {
    call$1(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, t2, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.WidgetsBinding__instance;
              t1.toString;
              t1 = "" + (A.getRuntimeTypeOfDartObject(t1).toString$0(0) + " - PROFILE MODE\n");
              t2 = $.WidgetsBinding__instance.WidgetsBinding__rootElement;
              if (t2 != null) {
                t2.toDiagnosticsNode$0();
                t1 += "\n";
              } else
                t1 += "<no tree currently mounted>\n";
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["data", t1.charCodeAt(0) == 0 ? t1 : t1], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 20
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0.prototype = {
    call$1(parameters) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(parameters);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(parameters) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_Object),
        $async$returnValue, $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.$this.WidgetsBinding__buildOwner.focusManager.toDiagnosticsNode$0();
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["data", ""], type$.String, type$.Object);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 20
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1.prototype = {
    call$1(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["enabled", $async$self.$this.WidgetsBinding__needToReportFirstFrame ? "false" : "true"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 18
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2.prototype = {
    call$1(_) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Map_String_dynamic),
        $async$returnValue, $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = A.LinkedHashMap_LinkedHashMap$_literal(["enabled", ($async$self.$this.WidgetsBinding__firstFrameCompleter.future._state & 30) !== 0 ? "true" : "false"], type$.String, type$.dynamic);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 18
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileBuildsEnabled;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.debugProfileBuildsEnabled = value;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 21
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure5.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.bool),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.debugProfileBuildsEnabledUserWidgets;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 11
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure6.prototype = {
    call$1(value) {
      return this.$call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(value);
    },
    $call$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $.debugProfileBuildsEnabledUserWidgets = value;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 21
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure.prototype = {
    call$1(timings) {
      var t2, t3,
        t1 = $.$get$_FakeUserTag__defaultTag();
      $.$get$_currentTag();
      $._currentTag = t1;
      A.Timeline_instantSync("Rasterized first useful frame", null);
      A.postEvent("Flutter.FirstFrame", A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic));
      t1 = $.SchedulerBinding__instance;
      t1.toString;
      t2 = this._box_0;
      t3 = t2.firstFrameCallback;
      t3.toString;
      t1.removeTimingsCallback$1(t3);
      t2.firstFrameCallback = null;
      this.$this.WidgetsBinding__firstFrameCompleter.complete$0(0);
    },
    $signature: 40
  };
  A.WidgetsFlutterBinding.prototype = {$isHitTestTarget: 1};
  A._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype = {
    initInstances$0() {
      this.super$BindingBase$initInstances();
      $.GestureBinding__instance = this;
      var t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._onPointerDataPacket = this.get$_handlePointerDataPacket();
      t1._onPointerDataPacketZone = $.Zone__current;
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype = {
    initInstances$0() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances();
      $.SchedulerBinding__instance = _this;
      _this.addTimingsCallback$1(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure(_this));
    },
    initServiceExtensions$0() {
      this.super$BindingBase$initServiceExtensions();
      this.registerNumericServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure(), "timeDilation", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0());
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype = {
    initInstances$0() {
      var t1, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances();
      $.ServicesBinding__instance = _this;
      _this.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F !== $ && A.throwUnnamedLateFieldAI();
      _this.ServicesBinding___ServicesBinding__defaultBinaryMessenger_F = B.C__DefaultBinaryMessenger;
      t1 = new A.RestorationManager(A.LinkedHashSet_LinkedHashSet$_empty(type$.RestorationBucket), $.$get$ChangeNotifier__emptyListeners());
      B.OptionalMethodChannel_2Kx.setMethodCallHandler$1(t1.get$_methodHandler());
      _this.ServicesBinding___ServicesBinding__restorationManager_A = t1;
      _this._initKeyboard$0();
      t1 = $.LicenseRegistry__collectors;
      if (t1 == null)
        t1 = $.LicenseRegistry__collectors = A._setArrayType([], type$.JSArray_of_Stream_LicenseEntry_Function);
      t1.push(_this.get$_addLicenses());
      B.BasicMessageChannel_oyU.setMessageHandler$1(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure(_this));
      B.BasicMessageChannel_VwG.setMessageHandler$1(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure0(_this));
      B.BasicMessageChannel_Rss.setMessageHandler$1(_this.get$_handleLifecycleMessage());
      B.OptionalMethodChannel_kW8.setMethodCallHandler$1(_this.get$_handlePlatformMessage());
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._onViewFocusChange = _this.get$handleViewFocusChanged();
      t1._onViewFocusChangeZone = $.Zone__current;
      $.$get$TextInput__instance();
      _this.readInitialLifecycleStateFromNativeWindow$0();
      _this.initializationComplete$0();
    },
    initServiceExtensions$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions();
      this.registerBoolServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure(), "profilePlatformChannels", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure0());
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype = {
    initInstances$0() {
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances();
      $.PaintingBinding__instance = this;
      var t1 = type$.Object;
      this.PaintingBinding___PaintingBinding__imageCache_A = new A.ImageCache(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._PendingImage), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._CachedImage), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$._LiveImage));
    },
    handleMemoryPressure$0() {
      this.super$ServicesBinding$handleMemoryPressure();
      var t1 = this.PaintingBinding___PaintingBinding__imageCache_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.clear$0(0);
    },
    handleSystemMessage$1(systemMessage) {
      return this.handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding(systemMessage);
    },
    handleSystemMessage$body$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding(systemMessage) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this;
      var $async$handleSystemMessage$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.super$ServicesBinding$handleSystemMessage(systemMessage), $async$handleSystemMessage$1);
            case 3:
              // returning from await.
              switch (A._asString(J.$index$asx(type$.Map_String_dynamic._as(systemMessage), "type"))) {
                case "fontsChange":
                  $async$self.PaintingBinding__systemFonts.notifyListeners$0();
                  break;
              }
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleSystemMessage$1, $async$completer);
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype = {
    initInstances$0() {
      var t1, t2, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances();
      $.SemanticsBinding__instance = _this;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      _this.SemanticsBinding___SemanticsBinding__accessibilityFeatures_A = t1.configuration.accessibilityFeatures;
      t1._onSemanticsEnabledChanged = _this.get$_handleSemanticsEnabledChanged();
      t2 = $.Zone__current;
      t1._onSemanticsEnabledChangedZone = t2;
      t1._onSemanticsActionEvent = _this.get$_handleSemanticsActionEvent();
      t1._onSemanticsActionEventZone = t2;
      _this._handleSemanticsEnabledChanged$0();
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype = {
    initInstances$0() {
      var t1, t2, value, result, _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances();
      $.RendererBinding__instance = _this;
      t1 = type$.JSArray_RenderObject;
      _this.RendererBinding___RendererBinding__rootPipelineOwner_A = new A._DefaultRootPipelineOwner(null, A.binding0__DefaultRootPipelineOwner__onSemanticsUpdate$closure(), null, A._setArrayType([], t1), A._setArrayType([], t1), A._setArrayType([], t1), A.LinkedHashSet_LinkedHashSet$_empty(type$.RenderObject), A.LinkedHashSet_LinkedHashSet$_empty(type$.PipelineOwner));
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t1._onMetricsChanged = _this.get$handleMetricsChanged();
      t2 = t1._onMetricsChangedZone = $.Zone__current;
      t1._onTextScaleFactorChanged = _this.get$handleTextScaleFactorChanged();
      t1._onTextScaleFactorChangedZone = t2;
      t1._onPlatformBrightnessChanged = _this.get$handlePlatformBrightnessChanged();
      t1._onPlatformBrightnessChangedZone = t2;
      _this.SchedulerBinding__persistentCallbacks.push(_this.get$_handlePersistentFrameCallback());
      _this.initMouseTracker$0();
      _this.SchedulerBinding__postFrameCallbacks.push(_this.get$_handleWebFirstFrame());
      t2 = _this.RendererBinding___RendererBinding__rootPipelineOwner_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      value = _this.RendererBinding___RendererBinding__manifold_FI;
      if (value === $) {
        result = new A._BindingPipelineManifold(_this, $.$get$ChangeNotifier__emptyListeners());
        _this.get$_binding1$_semanticsEnabled().addListener$1(0, result.get$notifyListeners());
        _this.RendererBinding___RendererBinding__manifold_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.RendererBinding___RendererBinding__manifold_FI = result;
        value = result;
      }
      t2.attach$1(value);
    },
    initServiceExtensions$0() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions();
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure(), "debugDumpRenderTree");
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0(), "debugDumpSemanticsTreeInTraversalOrder");
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1(), "debugDumpSemanticsTreeInInverseHitTestOrder");
      _this.registerBoolServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2(), "profileRenderObjectPaints", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3());
      _this.registerBoolServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure4(), "profileRenderObjectLayouts", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure5());
    },
    hitTestInView$3(result, position, viewId) {
      var t2,
        t1 = this.RendererBinding__viewIdToRenderView.$index(0, viewId);
      if (t1 != null) {
        t2 = t1.RenderObjectWithChildMixin__child;
        if (t2 != null)
          t2.hitTest$2$position(A.BoxHitTestResult$wrap(result), position);
        result.add$1(0, new A.HitTestEntry(t1, type$.HitTestEntry_HitTestTarget));
      }
      this.super$GestureBinding$hitTestInView(result, position, viewId);
    }
  };
  A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype = {
    initServiceExtensions$0() {
      var _this = this;
      _this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions();
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure(), "debugDumpApp");
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0(_this), "debugDumpFocusTree");
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1(_this), "didSendFirstFrameEvent");
      _this.registerServiceExtension$2$callback$name(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2(_this), "didSendFirstFrameRasterizedEvent");
      _this.registerBoolServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3(), "profileWidgetBuilds", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4());
      _this.registerBoolServiceExtension$3$getter$name$setter(new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure5(), "profileUserWidgetBuilds", new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure6());
    },
    handleMetricsChanged$0() {
      var t1, t2, _i;
      this.super$RendererBinding$handleMetricsChanged();
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangeMetrics$0();
    },
    handleTextScaleFactorChanged$0() {
      var t1, t2, _i;
      this.super$RendererBinding$handleTextScaleFactorChanged();
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangeTextScaleFactor$0();
    },
    handlePlatformBrightnessChanged$0() {
      var t1, t2, _i;
      this.super$RendererBinding$handlePlatformBrightnessChanged();
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangePlatformBrightness$0();
    },
    handleAppLifecycleStateChanged$1(state) {
      var t1, t2, _i;
      this.super$SchedulerBinding$handleAppLifecycleStateChanged(state);
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangeAppLifecycleState$1(state);
    },
    handleViewFocusChanged$1($event) {
      var t1, t2, _i;
      this.super$ServicesBinding$handleViewFocusChanged($event);
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].didChangeViewFocus$1($event);
    },
    handleMemoryPressure$0() {
      var t1, _i;
      this.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure();
      for (t1 = A.List_List$of(this.WidgetsBinding__observers, true, type$.WidgetsBindingObserver).length, _i = 0; _i < t1; ++_i)
        ;
    },
    drawFrame$0() {
      var firstFrameCallback, t2, _this = this, t1 = {};
      t1.firstFrameCallback = null;
      if (_this.WidgetsBinding__needToReportFirstFrame) {
        firstFrameCallback = new A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure(t1, _this);
        t1.firstFrameCallback = firstFrameCallback;
        $.SchedulerBinding__instance.addTimingsCallback$1(firstFrameCallback);
      }
      try {
        t2 = _this.WidgetsBinding__rootElement;
        if (t2 != null)
          _this.WidgetsBinding__buildOwner.buildScope$1(t2);
        _this.super$RendererBinding$drawFrame();
        _this.WidgetsBinding__buildOwner.finalizeTree$0();
      } finally {
      }
      if (_this.WidgetsBinding__needToReportFirstFrame)
        t2 = _this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0;
      else
        t2 = false;
      if (t2)
        A.Timeline_instantSync("Widgets built first useful frame", null);
      t2 = _this.WidgetsBinding__needToReportFirstFrame = false;
      t1 = t1.firstFrameCallback;
      if (t1 != null)
        t2 = !(_this.RendererBinding__firstFrameSent || _this.RendererBinding__firstFrameDeferredCount === 0);
      if (t2) {
        _this.WidgetsBinding__needToReportFirstFrame = true;
        t2 = $.SchedulerBinding__instance;
        t2.toString;
        t1.toString;
        t2.removeTimingsCallback$1(t1);
      }
    }
  };
  A.ContextMenuController.prototype = {
    show$2$context$contextMenuBuilder(_, context, contextMenuBuilder) {
      var t1, t2;
      A.ContextMenuController_removeAny();
      t1 = A.LookupBoundary_findRootAncestorStateOfType(context, type$.OverlayState);
      t1.toString;
      t2 = A.Navigator_maybeOf(context);
      if (t2 == null)
        t2 = null;
      else {
        t2 = t2._framework$_element;
        t2.toString;
      }
      t2 = A.OverlayEntry$(new A.ContextMenuController_show_closure(A.InheritedTheme_capture(context, t2), contextMenuBuilder), false, false);
      $.ContextMenuController__menuOverlayEntry = t2;
      t1.insert$1(0, t2);
      $.ContextMenuController__shownInstance = this;
    },
    remove$0(_) {
      if ($.ContextMenuController__shownInstance !== this)
        return;
      A.ContextMenuController_removeAny();
    }
  };
  A.ContextMenuController_show_closure.prototype = {
    call$1(context) {
      return new A._CaptureAll(this.capturedThemes._themes, this.contextMenuBuilder.call$1(context), null);
    },
    $signature: 7
  };
  A._KeyFrame.prototype = {};
  A._DiscreteKeyFrameSimulation.prototype = {
    isDone$1(time) {
      return time >= this.maxDuration;
    },
    x$1(_, time) {
      var endIndex, t2, searchIndex0,
        t1 = this._keyFrames,
        searchIndex = this._lastKeyFrameIndex;
      if (t1[searchIndex].time > time) {
        endIndex = searchIndex;
        searchIndex = 0;
      } else
        endIndex = 11;
      for (t2 = endIndex - 1; searchIndex < t2; searchIndex = searchIndex0) {
        searchIndex0 = searchIndex + 1;
        if (time < t1[searchIndex0].time)
          break;
      }
      this._lastKeyFrameIndex = searchIndex;
      return t1[searchIndex].value;
    }
  };
  A.EditableTextState__scheduleShowCaretOnScreen_closure.prototype = {
    call$1(_) {
      var t2, t3, lineHeight, bottomSpacing, handleHeight, interactiveHandleHeight, caretPadding, targetOffset, selection, rectToReveal, selectionBoxes,
        t1 = this.$this;
      t1._showCaretOnScreenScheduled = false;
      t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, t1._editableKey);
      t2 = t2 == null ? null : t2.get$renderObject();
      type$.nullable_RenderEditable._as(t2);
      if (t2 != null) {
        t3 = t2._selection.get$isValid();
        t3 = !t3 || t1.get$_scrollController()._positions.length === 0;
      } else
        t3 = true;
      if (t3)
        return;
      t3 = t2._textPainter._getOrCreateLayoutTemplate$0();
      lineHeight = t3.get$height(t3);
      bottomSpacing = t1._widget.scrollPadding.bottom;
      t3 = t1._selectionOverlay;
      if ((t3 == null ? null : t3.selectionControls) != null) {
        handleHeight = t3.selectionControls.getHandleSize$1(lineHeight)._dy;
        interactiveHandleHeight = Math.max(handleHeight, 48);
        bottomSpacing = Math.max(handleHeight / 2 - t1._selectionOverlay.selectionControls.getHandleAnchor$2(B.TextSelectionHandleType_2, lineHeight)._dy + interactiveHandleHeight / 2, bottomSpacing);
      }
      caretPadding = t1._widget.scrollPadding.copyWith$1$bottom(bottomSpacing);
      targetOffset = t1._getOffsetToRevealCaret$1(t2.getLocalRectForCaret$1(t2._selection.get$extent()));
      selection = t1._widget.controller._change_notifier$_value.selection;
      if (selection.start === selection.end)
        rectToReveal = targetOffset.rect;
      else {
        selectionBoxes = t2.getBoxesForSelection$1(selection);
        if (selectionBoxes.length === 0)
          rectToReveal = targetOffset.rect;
        else if (selection.baseOffset < selection.extentOffset) {
          t3 = B.JSArray_methods.get$last(selectionBoxes);
          rectToReveal = new A.Rect(t3.left, t3.top, t3.right, t3.bottom);
        } else {
          t3 = B.JSArray_methods.get$first(selectionBoxes);
          rectToReveal = new A.Rect(t3.left, t3.top, t3.right, t3.bottom);
        }
      }
      t3 = targetOffset.offset;
      if (this.withAnimation) {
        t1.get$_scrollController().animateTo$3$curve$duration(t3, B.Cubic_EBD, B.Duration_100000);
        t2.showOnScreen$3$curve$duration$rect(B.Cubic_EBD, B.Duration_100000, caretPadding.inflateRect$1(rectToReveal));
      } else {
        t1.get$_scrollController().jumpTo$1(t3);
        t2.showOnScreen$1$rect(caretPadding.inflateRect$1(rectToReveal));
      }
    },
    $signature: 2
  };
  A.EditableTextState__formatAndSetValue_closure.prototype = {
    call$2(newValue, formatter) {
      return formatter.formatEditUpdate$2(this.$this._widget.controller._change_notifier$_value, newValue);
    },
    $signature: 173
  };
  A.EditableTextState__startCursorBlink_closure.prototype = {
    call$1(timer) {
      this.$this._onCursorTick$0();
    },
    $signature: 54
  };
  A.EditableTextState__onCursorTick_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.EditableTextState__onCursorTick_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.get$_cursorBlinkOpacityController().animateWith$1(t1.get$_iosBlinkCursorSimulation())._primaryCompleter.future.whenComplete$1(t1.get$_onCursorTick());
    },
    $signature: 0
  };
  A.EditableTextState__onCursorTick_closure1.prototype = {
    call$1(timer) {
      this.$this._onCursorTick$0();
    },
    $signature: 54
  };
  A.EditableTextState_insertTextPlaceholder_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._widget.controller._change_notifier$_value;
      t1._placeholderLocation = t2.text.length - t2.selection.end;
    },
    $signature: 0
  };
  A.EditableTextState_removeTextPlaceholder_closure.prototype = {
    call$0() {
      this.$this._placeholderLocation = -1;
    },
    $signature: 0
  };
  A.EditableTextState_showAutocorrectionPromptRect_closure.prototype = {
    call$0() {
      this.$this._currentPromptRectRange = new A.TextRange(this.start, this.end);
    },
    $signature: 0
  };
  A._ScribbleFocusableState_isInScribbleRect_closure.prototype = {
    call$1(entry) {
      return entry.target.$eq(0, this.$this.get$renderEditable());
    },
    $signature: 175
  };
  A._ScribblePlaceholder.prototype = {
    build$3$dimensions$textScaler(builder, dimensions, textScaler) {
      var t1 = this.style,
        hasStyle = t1 != null;
      if (hasStyle)
        builder.pushStyle$1(t1.getTextStyle$1$textScaler(textScaler));
      t1 = this.size;
      builder.addPlaceholder$3(t1._dx, t1._dy, this.alignment);
      if (hasStyle)
        builder.pop$0();
    }
  };
  A.KeyEventResult.prototype = {
    _enumToString$0() {
      return "KeyEventResult." + this._name;
    }
  };
  A.UnfocusDisposition.prototype = {
    _enumToString$0() {
      return "UnfocusDisposition." + this._name;
    }
  };
  A.FocusNode.prototype = {
    get$skipTraversal() {
      var t1, t2, _i;
      if (this._skipTraversal)
        return true;
      for (t1 = this.get$ancestors(), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].toString;
      return false;
    },
    get$descendantsAreFocusable() {
      return this._descendantsAreFocusable;
    },
    get$descendants() {
      var result, t2, _i, child,
        t1 = this._descendants;
      if (t1 == null) {
        result = A._setArrayType([], type$.JSArray_FocusNode);
        for (t1 = this._focus_manager$_children, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          child = t1[_i];
          B.JSArray_methods.addAll$1(result, child.get$descendants());
          result.push(child);
        }
        this._descendants = result;
        t1 = result;
      }
      return t1;
    },
    get$ancestors() {
      var result, $parent,
        t1 = this._ancestors;
      if (t1 == null) {
        result = A._setArrayType([], type$.JSArray_FocusNode);
        $parent = this._focus_manager$_parent;
        for (; $parent != null;) {
          result.push($parent);
          $parent = $parent._focus_manager$_parent;
        }
        this._ancestors = result;
        t1 = result;
      }
      return t1;
    },
    get$hasFocus() {
      if (!this.get$hasPrimaryFocus()) {
        var t1 = this._manager;
        if (t1 == null)
          t1 = null;
        else {
          t1 = t1._primaryFocus;
          t1 = t1 == null ? null : B.JSArray_methods.contains$1(t1.get$ancestors(), this);
        }
        t1 = t1 === true;
      } else
        t1 = true;
      return t1;
    },
    get$hasPrimaryFocus() {
      var t1 = this._manager;
      return (t1 == null ? null : t1._primaryFocus) === this;
    },
    get$nearestScope() {
      return this.get$enclosingScope();
    },
    get$enclosingScope() {
      var t1,
        enclosingScope = this._enclosingScope;
      if (enclosingScope == null) {
        t1 = this._focus_manager$_parent;
        enclosingScope = this._enclosingScope = t1 == null ? null : t1.get$nearestScope();
      }
      return enclosingScope;
    },
    get$rect(_) {
      var bottomRight,
        object = this._focus_manager$_context.get$renderObject(),
        t1 = object.getTransformTo$1(0, null),
        t2 = object.get$semanticBounds(),
        topLeft = A.MatrixUtils_transformPoint(t1, new A.Offset(t2.left, t2.top));
      t2 = object.getTransformTo$1(0, null);
      t1 = object.get$semanticBounds();
      bottomRight = A.MatrixUtils_transformPoint(t2, new A.Offset(t1.right, t1.bottom));
      return new A.Rect(topLeft._dx, topLeft._dy, bottomRight._dx, bottomRight._dy);
    },
    unfocus$1$disposition(disposition) {
      var t1, scope, enclosingScope, _this = this, _null = null;
      if (!_this.get$hasFocus()) {
        t1 = _this._manager;
        t1 = t1 == null || t1._markedForFocus !== _this;
      } else
        t1 = false;
      if (t1)
        return;
      scope = _this.get$enclosingScope();
      if (scope == null)
        return;
      switch (disposition.index) {
        case 0:
          if (scope._canRequestFocus && B.JSArray_methods.every$1(scope.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()))
            B.JSArray_methods.clear$0(scope._focusedChildren);
          while (true) {
            if (!!(scope._canRequestFocus && B.JSArray_methods.every$1(scope.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure())))
              break;
            enclosingScope = scope._enclosingScope;
            if (enclosingScope == null) {
              t1 = scope._focus_manager$_parent;
              enclosingScope = t1 == null ? _null : t1.get$nearestScope();
              scope._enclosingScope = enclosingScope;
            }
            if (enclosingScope == null) {
              t1 = _this._manager;
              scope = t1 == null ? _null : t1.rootScope;
            } else
              scope = enclosingScope;
          }
          scope._doRequestFocus$1$findFirstFocus(false);
          break;
        case 1:
          if (scope._canRequestFocus && B.JSArray_methods.every$1(scope.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()))
            B.JSArray_methods.remove$1(scope._focusedChildren, _this);
          while (true) {
            if (!!(scope._canRequestFocus && B.JSArray_methods.every$1(scope.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure())))
              break;
            enclosingScope = scope._enclosingScope;
            if (enclosingScope == null) {
              t1 = scope._focus_manager$_parent;
              enclosingScope = scope._enclosingScope = t1 == null ? _null : t1.get$nearestScope();
            }
            if (enclosingScope != null)
              B.JSArray_methods.remove$1(enclosingScope._focusedChildren, scope);
            enclosingScope = scope._enclosingScope;
            if (enclosingScope == null) {
              t1 = scope._focus_manager$_parent;
              enclosingScope = t1 == null ? _null : t1.get$nearestScope();
              scope._enclosingScope = enclosingScope;
            }
            if (enclosingScope == null) {
              t1 = _this._manager;
              scope = t1 == null ? _null : t1.rootScope;
            } else
              scope = enclosingScope;
          }
          scope._doRequestFocus$1$findFirstFocus(true);
          break;
      }
    },
    unfocus$0() {
      return this.unfocus$1$disposition(B.UnfocusDisposition_0);
    },
    _markNextFocus$1(newFocus) {
      var _this = this,
        t1 = _this._manager;
      if (t1 != null) {
        if (t1._primaryFocus === _this)
          t1._markedForFocus = null;
        else {
          t1._markedForFocus = _this;
          t1._markNeedsUpdate$0();
        }
        return;
      }
      newFocus._setAsFocusedChildForScope$0();
      newFocus._notify$0();
      if (newFocus !== _this)
        _this._notify$0();
    },
    _notify$0() {
      var _this = this;
      if (_this._focus_manager$_parent == null)
        return;
      if (_this.get$hasPrimaryFocus())
        _this._setAsFocusedChildForScope$0();
      _this.notifyListeners$0();
    },
    requestFocus$1(node) {
      this._doRequestFocus$1$findFirstFocus(true);
    },
    requestFocus$0() {
      return this.requestFocus$1(null);
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t1, _this = this;
      if (!(_this._canRequestFocus && B.JSArray_methods.every$1(_this.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure())))
        return;
      if (_this._focus_manager$_parent == null) {
        _this._requestFocusWhenReparented = true;
        return;
      }
      _this._setAsFocusedChildForScope$0();
      if (_this.get$hasPrimaryFocus()) {
        t1 = _this._manager._markedForFocus;
        t1 = t1 == null || t1 === _this;
      } else
        t1 = false;
      if (t1)
        return;
      _this._hasKeyboardToken = true;
      _this._markNextFocus$1(_this);
    },
    _setAsFocusedChildForScope$0() {
      var t1, t2, t3, scopeFocus, scopeFocus0, t4;
      for (t1 = B.JSArray_methods.get$iterator(this.get$ancestors()), t2 = new A.WhereTypeIterator(t1, type$.WhereTypeIterator_FocusScopeNode), t3 = type$.FocusScopeNode, scopeFocus = this; t2.moveNext$0(); scopeFocus = scopeFocus0) {
        scopeFocus0 = t3._as(t1.get$current(0));
        t4 = scopeFocus0._focusedChildren;
        B.JSArray_methods.remove$1(t4, scopeFocus);
        t4.push(scopeFocus);
      }
    },
    debugDescribeChildren$0() {
      var t2, t3, t1 = {};
      t1.count = 1;
      t2 = this._focus_manager$_children;
      t3 = A._arrayInstanceType(t2)._eval$1("MappedListIterable<1,DiagnosticsNode>");
      return A.List_List$of(new A.MappedListIterable(t2, new A.FocusNode_debugDescribeChildren_closure(t1), t3), true, t3._eval$1("ListIterable.E"));
    },
    toStringShort$0() {
      var t1, extraData, t2, _this = this;
      _this.get$hasFocus();
      t1 = _this.get$hasFocus() && !_this.get$hasPrimaryFocus() ? "[IN FOCUS PATH]" : "";
      extraData = t1 + (_this.get$hasPrimaryFocus() ? "[PRIMARY FOCUS]" : "");
      t1 = A.shortHash(_this);
      t2 = extraData.length !== 0 ? "(" + extraData + ")" : "";
      return "<optimized out>#" + t1 + t2;
    },
    $isDiagnosticableTree: 1
  };
  A.FocusNode_debugDescribeChildren_closure.prototype = {
    call$1(child) {
      return A.DiagnosticableTreeNode$("Child " + this._box_0.count++, null, child);
    },
    $signature: 176
  };
  A.FocusScopeNode.prototype = {
    get$nearestScope() {
      return this;
    },
    get$descendantsAreFocusable() {
      return this._canRequestFocus && A.FocusNode.prototype.get$descendantsAreFocusable.call(this);
    },
    _doRequestFocus$1$findFirstFocus(findFirstFocus) {
      var t2, enclosingScope, t3, _this = this,
        t1 = _this._focusedChildren;
      while (true) {
        if (t1.length !== 0) {
          t2 = B.JSArray_methods.get$last(t1);
          if (t2._canRequestFocus && B.JSArray_methods.every$1(t2.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure())) {
            t2 = B.JSArray_methods.get$last(t1);
            enclosingScope = t2._enclosingScope;
            if (enclosingScope == null) {
              t3 = t2._focus_manager$_parent;
              enclosingScope = t2._enclosingScope = t3 == null ? null : t3.get$nearestScope();
            }
            t2 = enclosingScope == null;
          } else
            t2 = true;
        } else
          t2 = false;
        if (!t2)
          break;
        t1.pop();
      }
      t1 = A.IterableExtensions_get_lastOrNull(t1);
      if (!findFirstFocus || t1 == null) {
        if (_this._canRequestFocus && B.JSArray_methods.every$1(_this.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure())) {
          _this._setAsFocusedChildForScope$0();
          _this._markNextFocus$1(_this);
        }
        return;
      }
      t1._doRequestFocus$1$findFirstFocus(true);
    }
  };
  A.FocusHighlightMode.prototype = {
    _enumToString$0() {
      return "FocusHighlightMode." + this._name;
    }
  };
  A.FocusHighlightStrategy.prototype = {
    _enumToString$0() {
      return "FocusHighlightStrategy." + this._name;
    }
  };
  A._AppLifecycleListener.prototype = {
    didChangeAppLifecycleState$1(state) {
      return this.onLifecycleStateChanged.call$1(state);
    }
  };
  A.FocusManager.prototype = {
    get$_respondToWindowFocus() {
      return true;
    },
    _appLifecycleChange$1(state) {
      var t1, t2, _this = this;
      if (state === B.AppLifecycleState_1)
        if (_this._primaryFocus !== _this.rootScope)
          _this._suspendedNode = null;
        else {
          t1 = _this._suspendedNode;
          if (t1 != null) {
            t1.requestFocus$0();
            _this._suspendedNode = null;
          }
        }
      else {
        t1 = _this._primaryFocus;
        t2 = _this.rootScope;
        if (t1 !== t2) {
          _this._markedForFocus = t2;
          _this._suspendedNode = t1;
          _this.applyFocusChangesIfNeeded$0();
        }
      }
    },
    _markNeedsUpdate$0() {
      if (this._haveScheduledUpdate)
        return;
      this._haveScheduledUpdate = true;
      A.scheduleMicrotask(this.get$applyFocusChangesIfNeeded());
    },
    applyFocusChangesIfNeeded$0() {
      var previousFocus, t1, t2, t3, _i, autofocus, t4, previousPath, nextPath, _this = this;
      _this._haveScheduledUpdate = false;
      previousFocus = _this._primaryFocus;
      for (t1 = _this._pendingAutofocuses, t2 = t1.length, t3 = _this.rootScope, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        autofocus = t1[_i];
        t4 = autofocus.scope;
        if ((t4._focus_manager$_parent != null || t4 === t3) && t4._manager === _this && A.IterableExtensions_get_lastOrNull(t4._focusedChildren) == null && B.JSArray_methods.contains$1(autofocus.autofocusNode.get$ancestors(), t4))
          autofocus.autofocusNode._doRequestFocus$1$findFirstFocus(true);
      }
      B.JSArray_methods.clear$0(t1);
      t1 = _this._primaryFocus;
      if (t1 == null && _this._markedForFocus == null)
        _this._markedForFocus = t3;
      t2 = _this._markedForFocus;
      if (t2 != null && t2 !== t1) {
        if (previousFocus == null)
          previousPath = null;
        else {
          t1 = previousFocus.get$ancestors();
          t1 = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
          previousPath = t1;
        }
        if (previousPath == null)
          previousPath = A.LinkedHashSet_LinkedHashSet$_empty(type$.FocusNode);
        t1 = _this._markedForFocus.get$ancestors();
        nextPath = A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
        t1 = _this._dirtyNodes;
        t1.addAll$1(0, nextPath.difference$1(previousPath));
        t1.addAll$1(0, previousPath.difference$1(nextPath));
        t1 = _this._primaryFocus = _this._markedForFocus;
        _this._markedForFocus = null;
      }
      if (previousFocus != t1) {
        if (previousFocus != null)
          _this._dirtyNodes.add$1(0, previousFocus);
        t1 = _this._primaryFocus;
        if (t1 != null)
          _this._dirtyNodes.add$1(0, t1);
      }
      for (t1 = _this._dirtyNodes, t2 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications, A._instanceType(t1)._precomputed1), t3 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t4 = t2._collection$_current;
        (t4 == null ? t3._as(t4) : t4)._notify$0();
      }
      t1.clear$0(0);
      if (previousFocus != _this._primaryFocus)
        _this.notifyListeners$0();
    },
    debugDescribeChildren$0() {
      return A._setArrayType([A.DiagnosticableTreeNode$("rootScope", null, this.rootScope)], type$.JSArray_DiagnosticsNode);
    },
    $isDiagnosticableTree: 1
  };
  A._HighlightModeManager.prototype = {
    notifyListeners$0() {
      var listener, exception, stack, collector, localListeners, _i, t2, exception0, t3, _this = this,
        t1 = _this._focus_manager$_listeners;
      if (t1._observer_list$_map.__js_helper$_length === 0)
        return;
      localListeners = A.List_List$of(t1, true, type$.void_Function_FocusHighlightMode);
      for (t1 = localListeners.length, _i = 0; _i < t1; ++_i) {
        listener = localListeners[_i];
        try {
          if (_this._focus_manager$_listeners._observer_list$_map.containsKey$1(0, listener)) {
            t2 = _this._highlightMode;
            if (t2 == null)
              t2 = A._HighlightModeManager__defaultModeForPlatform();
            listener.call$1(t2);
          }
        } catch (exception0) {
          exception = A.unwrapException(exception0);
          stack = A.getTraceFromException(exception0);
          collector = null;
          t2 = A.ErrorDescription$("while dispatching notifications for " + A.getRuntimeTypeOfDartObject(_this).toString$0(0));
          t3 = $.FlutterError_onError;
          if (t3 != null)
            t3.call$1(new A.FlutterErrorDetails(exception, stack, "widgets library", t2, collector, false));
        }
      }
    },
    handlePointerEvent$1($event) {
      var expectedMode, t1, _this = this;
      switch ($event.get$kind($event).index) {
        case 0:
        case 2:
        case 3:
          _this._lastInteractionWasTouch = true;
          expectedMode = B.FocusHighlightMode_0;
          break;
        case 1:
        case 4:
        case 5:
          _this._lastInteractionWasTouch = false;
          expectedMode = B.FocusHighlightMode_1;
          break;
        default:
          expectedMode = null;
      }
      t1 = _this._highlightMode;
      if (expectedMode !== (t1 == null ? A._HighlightModeManager__defaultModeForPlatform() : t1))
        _this.updateMode$0();
    },
    handleKeyMessage$1(message) {
      var t1, handled, t2, t3, t4, _i, callback, t5, _i0, node, t6, $event, _this = this;
      _this._lastInteractionWasTouch = false;
      _this.updateMode$0();
      if ($.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus == null)
        return false;
      t1 = _this._earlyKeyEventHandlers;
      handled = false;
      if (t1._observer_list$_map.__js_helper$_length !== 0) {
        t2 = A._setArrayType([], type$.JSArray_KeyEventResult);
        for (t1 = A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E")), t3 = t1.length, t4 = message.events, _i = 0; _i < t1.length; t1.length === t3 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          callback = t1[_i];
          for (t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0)
            t2.push(callback.call$1(t4[_i0]));
        }
        switch (A.combineKeyEventResults(t2).index) {
          case 1:
            break;
          case 0:
            handled = true;
            break;
          case 2:
            break;
        }
      }
      if (handled)
        return true;
      t1 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus;
      t1.toString;
      t1 = A._setArrayType([t1], type$.JSArray_FocusNode);
      B.JSArray_methods.addAll$1(t1, $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus.get$ancestors());
      t2 = t1.length;
      t3 = type$.JSArray_KeyEventResult;
      t4 = message.events;
      _i = 0;
      $label0$2:
        for (; handled = false, _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          t5 = A._setArrayType([], t3);
          if (node.onKeyEvent != null)
            for (t6 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t6 || (0, A.throwConcurrentModificationError)(t4), ++_i0) {
              $event = t4[_i0];
              t5.push(node.onKeyEvent.call$2(node, $event));
            }
          switch (A.combineKeyEventResults(t5).index) {
            case 1:
              continue $label0$2;
            case 0:
              handled = true;
              break;
            case 2:
              break;
          }
          break $label0$2;
        }
      if (!handled && _this._lateKeyEventHandlers._observer_list$_map.__js_helper$_length !== 0) {
        t1 = A._setArrayType([], t3);
        for (t2 = _this._lateKeyEventHandlers, t2 = A.List_List$of(t2, true, t2.$ti._eval$1("Iterable.E")), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
          callback = t2[_i];
          for (t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0)
            t1.push(callback.call$1(t4[_i0]));
        }
        switch (A.combineKeyEventResults(t1).index) {
          case 1:
            break;
          case 0:
            handled = true;
            break;
          case 2:
            handled = false;
            break;
        }
      }
      return handled;
    },
    updateMode$0() {
      var t1, newMode, oldMode, _this = this;
      switch (0) {
        case 0:
          t1 = _this._lastInteractionWasTouch;
          if (t1 == null)
            return;
          newMode = t1 ? B.FocusHighlightMode_0 : B.FocusHighlightMode_1;
          break;
      }
      oldMode = _this._highlightMode;
      if (oldMode == null)
        oldMode = A._HighlightModeManager__defaultModeForPlatform();
      _this._highlightMode = newMode;
      if ((newMode == null ? A._HighlightModeManager__defaultModeForPlatform() : newMode) !== oldMode)
        _this.notifyListeners$0();
    }
  };
  A._FocusManager_Object_DiagnosticableTreeMixin.prototype = {};
  A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  A._FocusNode_Object_DiagnosticableTreeMixin.prototype = {};
  A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier.prototype = {};
  A._getAncestor_closure.prototype = {
    call$1(ancestor) {
      var t1 = this._box_0;
      if (--t1.count === 0) {
        t1.target = ancestor;
        return false;
      }
      return true;
    },
    $signature: 28
  };
  A._FocusTraversalGroupInfo.prototype = {};
  A.TraversalEdgeBehavior.prototype = {
    _enumToString$0() {
      return "TraversalEdgeBehavior." + this._name;
    }
  };
  A.FocusTraversalPolicy.prototype = {
    _requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(node, alignment, alignmentPolicy, curve, duration, $forward) {
      var t1, sortedChildren, nodeHadPrimaryFocus;
      if (node instanceof A.FocusScopeNode) {
        t1 = node._focusedChildren;
        if (A.IterableExtensions_get_lastOrNull(t1) != null) {
          t1 = A.IterableExtensions_get_lastOrNull(t1);
          t1.toString;
          return this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(t1, alignment, alignmentPolicy, curve, duration, $forward);
        }
        sortedChildren = A.FocusTraversalPolicy__sortAllDescendants(node, node);
        if (sortedChildren.length !== 0) {
          this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward($forward ? B.JSArray_methods.get$first(sortedChildren) : B.JSArray_methods.get$last(sortedChildren), alignment, alignmentPolicy, curve, duration, $forward);
          return true;
        }
      }
      nodeHadPrimaryFocus = node.get$hasPrimaryFocus();
      this.requestFocusCallback.call$5$alignment$alignmentPolicy$curve$duration(node, alignment, alignmentPolicy, curve, duration);
      return !nodeHadPrimaryFocus;
    },
    _requestTabTraversalFocus$3$alignmentPolicy$forward(node, alignmentPolicy, $forward) {
      return this._requestTabTraversalFocus$6$alignment$alignmentPolicy$curve$duration$forward(node, null, alignmentPolicy, null, null, $forward);
    },
    _findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, fromEnd, ignoreCurrentFocus) {
      var t1, sorted,
        scope = currentNode.get$nearestScope(),
        candidate = A.IterableExtensions_get_lastOrNull(scope._focusedChildren);
      if (!ignoreCurrentFocus)
        t1 = candidate == null && scope.get$descendants().length !== 0;
      else
        t1 = true;
      if (t1) {
        t1 = A.FocusTraversalPolicy__sortAllDescendants(scope, currentNode);
        sorted = new A.WhereIterable(t1, new A.FocusTraversalPolicy__findInitialFocus_closure(), A._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
        if (!sorted.get$iterator(0).moveNext$0())
          candidate = null;
        else
          candidate = fromEnd ? sorted.get$last(0) : sorted.get$first(0);
      }
      return candidate == null ? currentNode : candidate;
    },
    _findInitialFocus$2$ignoreCurrentFocus(currentNode, ignoreCurrentFocus) {
      return this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, false, ignoreCurrentFocus);
    },
    invalidateScopeData$1(node) {
    },
    _moveFocus$2$forward(currentNode, $forward) {
      var focusedChild, t2, firstFocus, sortedNodes, parentScope, previousNode, previousNode0, _this = this,
        t1 = currentNode.get$nearestScope();
      t1.toString;
      _this.super$FocusTraversalPolicy$invalidateScopeData(t1);
      _this.DirectionalFocusTraversalPolicyMixin__policyData.remove$1(0, t1);
      focusedChild = A.IterableExtensions_get_lastOrNull(t1._focusedChildren);
      t2 = focusedChild == null;
      if (t2) {
        firstFocus = $forward ? _this._findInitialFocus$2$ignoreCurrentFocus(currentNode, false) : _this._findInitialFocus$3$fromEnd$ignoreCurrentFocus(currentNode, true, false);
        return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(firstFocus, $forward ? B.ScrollPositionAlignmentPolicy_1 : B.ScrollPositionAlignmentPolicy_2, $forward);
      }
      if (t2)
        focusedChild = t1;
      sortedNodes = A.FocusTraversalPolicy__sortAllDescendants(t1, focusedChild);
      if ($forward && focusedChild === B.JSArray_methods.get$last(sortedNodes))
        switch (t1.traversalEdgeBehavior.index) {
          case 1:
            focusedChild.unfocus$0();
            return false;
          case 2:
            parentScope = t1.get$enclosingScope();
            if (parentScope != null && parentScope !== $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager.rootScope) {
              focusedChild.unfocus$0();
              t1 = parentScope._focus_manager$_context;
              t1.toString;
              A.FocusTraversalGroup_maybeOf(t1)._moveFocus$2$forward(parentScope, true);
              t1 = focusedChild.get$enclosingScope();
              return (t1 == null ? null : A.IterableExtensions_get_lastOrNull(t1._focusedChildren)) !== focusedChild;
            }
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(B.JSArray_methods.get$first(sortedNodes), B.ScrollPositionAlignmentPolicy_1, $forward);
          case 0:
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(B.JSArray_methods.get$first(sortedNodes), B.ScrollPositionAlignmentPolicy_1, $forward);
        }
      if (!$forward && focusedChild === B.JSArray_methods.get$first(sortedNodes))
        switch (t1.traversalEdgeBehavior.index) {
          case 1:
            focusedChild.unfocus$0();
            return false;
          case 2:
            parentScope = t1.get$enclosingScope();
            if (parentScope != null && parentScope !== $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager.rootScope) {
              focusedChild.unfocus$0();
              t1 = parentScope._focus_manager$_context;
              t1.toString;
              A.FocusTraversalGroup_maybeOf(t1)._moveFocus$2$forward(parentScope, false);
              t1 = focusedChild.get$enclosingScope();
              return (t1 == null ? null : A.IterableExtensions_get_lastOrNull(t1._focusedChildren)) !== focusedChild;
            }
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(B.JSArray_methods.get$last(sortedNodes), B.ScrollPositionAlignmentPolicy_2, $forward);
          case 0:
            return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(B.JSArray_methods.get$last(sortedNodes), B.ScrollPositionAlignmentPolicy_2, $forward);
        }
      for (t1 = J.get$iterator$ax($forward ? sortedNodes : new A.ReversedListIterable(sortedNodes, A._arrayInstanceType(sortedNodes)._eval$1("ReversedListIterable<1>"))), previousNode = null; t1.moveNext$0(); previousNode = previousNode0) {
        previousNode0 = t1.get$current(t1);
        if (previousNode === focusedChild)
          return _this._requestTabTraversalFocus$3$alignmentPolicy$forward(previousNode0, $forward ? B.ScrollPositionAlignmentPolicy_1 : B.ScrollPositionAlignmentPolicy_2, $forward);
      }
      return false;
    }
  };
  A.FocusTraversalPolicy__findInitialFocus_closure.prototype = {
    call$1(node) {
      return node._canRequestFocus && B.JSArray_methods.every$1(node.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()) && !node.get$skipTraversal();
    },
    $signature: 30
  };
  A.FocusTraversalPolicy__sortAllDescendants_visitGroups.prototype = {
    call$1(info) {
      var t1, t2, t3, t4, _i, node, t5;
      for (t1 = info.members, t2 = t1.length, t3 = this.sortedDescendants, t4 = this.groups, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        node = t1[_i];
        if (t4.containsKey$1(0, node)) {
          t5 = t4.$index(0, node);
          t5.toString;
          this.call$1(t5);
        } else
          t3.push(node);
      }
    },
    $signature: 179
  };
  A.FocusTraversalPolicy__sortAllDescendants_closure.prototype = {
    call$1(node) {
      var t1;
      if (node !== this.currentNode)
        t1 = !(node._canRequestFocus && B.JSArray_methods.every$1(node.get$ancestors(), A.focus_manager_FocusNode__allowDescendantsToBeFocused$closure()) && !node.get$skipTraversal());
      else
        t1 = false;
      return t1;
    },
    $signature: 30
  };
  A.DirectionalFocusTraversalPolicyMixin.prototype = {};
  A._ReadingOrderSortData.prototype = {
    get$directionalAncestors() {
      var t1 = this._directionalAncestors;
      if (t1 == null) {
        t1 = this.node._focus_manager$_context;
        t1.toString;
        t1 = this._directionalAncestors = new A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors().call$1(t1);
      }
      t1.toString;
      return t1;
    }
  };
  A._ReadingOrderSortData_commonDirectionalityOf_closure.prototype = {
    call$1(member) {
      var t1 = member.get$directionalAncestors();
      return A.LinkedHashSet_LinkedHashSet$from(t1, A._arrayInstanceType(t1)._precomputed1);
    },
    $signature: 180
  };
  A._ReadingOrderSortData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      var t1;
      switch (this.directionality.index) {
        case 1:
          t1 = B.JSNumber_methods.compareTo$1(a.rect.left, b.rect.left);
          break;
        case 0:
          t1 = B.JSNumber_methods.compareTo$1(b.rect.right, a.rect.right);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: 66
  };
  A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors.prototype = {
    call$1(context) {
      var t2,
        result = A._setArrayType([], type$.JSArray_Directionality),
        t1 = type$.Directionality,
        directionalityElement = context.getElementForInheritedWidgetOfExactType$1$0(t1);
      for (; directionalityElement != null;) {
        result.push(t1._as(directionalityElement.get$widget()));
        t2 = A._getAncestor(directionalityElement);
        directionalityElement = t2 == null ? null : t2.getElementForInheritedWidgetOfExactType$1$0(t1);
      }
      return result;
    },
    $signature: 182
  };
  A._ReadingOrderDirectionalGroupData.prototype = {
    get$rect(_) {
      var t1, t2, t3, t4, _this = this;
      if (_this._rect == null)
        for (t1 = _this.members, t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Rect>"), t1 = new A.MappedListIterable(t1, new A._ReadingOrderDirectionalGroupData_rect_closure(), t2), t1 = new A.ListIterator(t1, t1.get$length(0), t2._eval$1("ListIterator<ListIterable.E>")), t2 = t2._eval$1("ListIterable.E"); t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          if (t3 == null)
            t3 = t2._as(t3);
          t4 = _this._rect;
          if (t4 == null) {
            _this._rect = t3;
            t4 = t3;
          }
          _this._rect = t4.expandToInclude$1(t3);
        }
      t1 = _this._rect;
      t1.toString;
      return t1;
    }
  };
  A._ReadingOrderDirectionalGroupData_rect_closure.prototype = {
    call$1(data) {
      return data.rect;
    },
    $signature: 183
  };
  A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure.prototype = {
    call$2(a, b) {
      var t1;
      switch (this.directionality.index) {
        case 1:
          t1 = B.JSNumber_methods.compareTo$1(a.get$rect(0).left, b.get$rect(0).left);
          break;
        case 0:
          t1 = B.JSNumber_methods.compareTo$1(b.get$rect(0).right, a.get$rect(0).right);
          break;
        default:
          t1 = null;
      }
      return t1;
    },
    $signature: 184
  };
  A.ReadingOrderTraversalPolicy.prototype = {
    _collectDirectionalityGroups$1(candidates) {
      var t2, _i, candidate, currentDirection0, t3,
        currentDirection = B.JSArray_methods.get$first(candidates).directionality,
        t1 = type$.JSArray__ReadingOrderSortData,
        currentGroup = A._setArrayType([], t1),
        result = A._setArrayType([], type$.JSArray__ReadingOrderDirectionalGroupData);
      for (t2 = candidates.length, _i = 0; _i < candidates.length; candidates.length === t2 || (0, A.throwConcurrentModificationError)(candidates), ++_i) {
        candidate = candidates[_i];
        currentDirection0 = candidate.directionality;
        if (currentDirection0 == currentDirection) {
          currentGroup.push(candidate);
          continue;
        }
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
        currentGroup = A._setArrayType([candidate], t1);
        currentDirection = currentDirection0;
      }
      if (currentGroup.length !== 0)
        result.push(new A._ReadingOrderDirectionalGroupData(currentGroup));
      for (t1 = result.length, _i = 0; _i < result.length; result.length === t1 || (0, A.throwConcurrentModificationError)(result), ++_i) {
        t2 = result[_i].members;
        if (t2.length === 1)
          continue;
        t3 = B.JSArray_methods.get$first(t2).directionality;
        t3.toString;
        A._ReadingOrderSortData_sortWithDirectionality(t2, t3);
      }
      return result;
    },
    _pickNext$1(candidates) {
      var topmost, inBandOfTop, nearestCommonDirectionality, bandGroups;
      A.mergeSort(candidates, new A.ReadingOrderTraversalPolicy__pickNext_closure(), type$._ReadingOrderSortData);
      topmost = B.JSArray_methods.get$first(candidates);
      inBandOfTop = new A.ReadingOrderTraversalPolicy__pickNext_inBand().call$2(topmost, candidates);
      if (J.get$length$asx(inBandOfTop) <= 1)
        return topmost;
      nearestCommonDirectionality = A._ReadingOrderSortData_commonDirectionalityOf(inBandOfTop);
      nearestCommonDirectionality.toString;
      A._ReadingOrderSortData_sortWithDirectionality(inBandOfTop, nearestCommonDirectionality);
      bandGroups = this._collectDirectionalityGroups$1(inBandOfTop);
      if (bandGroups.length === 1)
        return B.JSArray_methods.get$first(B.JSArray_methods.get$first(bandGroups).members);
      A._ReadingOrderDirectionalGroupData_sortWithDirectionality(bandGroups, nearestCommonDirectionality);
      return B.JSArray_methods.get$first(B.JSArray_methods.get$first(bandGroups).members);
    },
    sortDescendants$2(descendants, currentNode) {
      var t1, t2, t3, t4, _i, node, t5, t6, sortedList, current, next;
      if (descendants.length <= 1)
        return descendants;
      t1 = A._setArrayType([], type$.JSArray__ReadingOrderSortData);
      for (t2 = descendants.length, t3 = type$.nullable_Directionality, t4 = type$.Directionality, _i = 0; _i < descendants.length; descendants.length === t2 || (0, A.throwConcurrentModificationError)(descendants), ++_i) {
        node = descendants[_i];
        t5 = node.get$rect(0);
        t6 = node._focus_manager$_context.getElementForInheritedWidgetOfExactType$1$0(t4);
        t6 = t3._as(t6 == null ? null : t6.get$widget());
        t1.push(new A._ReadingOrderSortData(t6 == null ? null : t6.textDirection, t5, node));
      }
      sortedList = A._setArrayType([], type$.JSArray_FocusNode);
      current = this._pickNext$1(t1);
      sortedList.push(current.node);
      B.JSArray_methods.remove$1(t1, current);
      for (; t1.length !== 0;) {
        next = this._pickNext$1(t1);
        sortedList.push(next.node);
        B.JSArray_methods.remove$1(t1, next);
      }
      return sortedList;
    }
  };
  A.ReadingOrderTraversalPolicy__pickNext_closure.prototype = {
    call$2(a, b) {
      return B.JSNumber_methods.compareTo$1(a.rect.top, b.rect.top);
    },
    $signature: 66
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand.prototype = {
    call$2(current, candidates) {
      var t1 = current.rect,
        t2 = A._arrayInstanceType(candidates)._eval$1("WhereIterable<1>");
      return A.List_List$of(new A.WhereIterable(candidates, new A.ReadingOrderTraversalPolicy__pickNext_inBand_closure(new A.Rect(-1 / 0, t1.top, 1 / 0, t1.bottom)), t2), true, t2._eval$1("Iterable.E"));
    },
    $signature: 185
  };
  A.ReadingOrderTraversalPolicy__pickNext_inBand_closure.prototype = {
    call$1(item) {
      return !item.rect.intersect$1(this.band).get$isEmpty(0);
    },
    $signature: 186
  };
  A._FocusTraversalGroupNode.prototype = {};
  A._FocusTraversalPolicy_Object_Diagnosticable.prototype = {};
  A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin.prototype = {};
  A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable.prototype = {};
  A.__ReadingOrderSortData_Object_Diagnosticable.prototype = {};
  A.GlobalKey.prototype = {
    get$currentState() {
      var t1,
        element = $.WidgetsBinding__instance.WidgetsBinding__buildOwner._globalKeyRegistry.$index(0, this);
      if (element instanceof A.StatefulElement) {
        t1 = element._framework$_state;
        t1.toString;
        if (A._instanceType(this)._precomputed1._is(t1))
          return t1;
      }
      return null;
    }
  };
  A.LabeledGlobalKey.prototype = {
    toString$0(_) {
      var label, _this = this,
        t1 = _this._debugLabel;
      if (t1 != null)
        label = " " + t1;
      else
        label = "";
      if (A.getRuntimeTypeOfDartObject(_this) === B.Type_LabeledGlobalKey_E4y)
        return "[GlobalKey#" + A.shortHash(_this) + label + "]";
      return "[" + ("<optimized out>#" + A.shortHash(_this)) + label + "]";
    }
  };
  A.Widget.prototype = {
    toStringShort$0() {
      var t1 = this.key;
      return t1 == null ? "Widget" : "Widget-" + t1.toString$0(0);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return this.super$Object$$eq(0, other);
    },
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    }
  };
  A.StatelessWidget.prototype = {};
  A.StatefulWidget.prototype = {};
  A.RenderObjectWidget.prototype = {};
  A.SingleChildRenderObjectWidget.prototype = {};
  A._ElementLifecycle.prototype = {
    _enumToString$0() {
      return "_ElementLifecycle." + this._name;
    }
  };
  A._InactiveElements.prototype = {
    _unmount$1(element) {
      element.visitChildren$1(new A._InactiveElements__unmount_closure(this));
      element.unmount$0();
    },
    _unmountAll$0() {
      var elements,
        t1 = this._framework$_elements,
        elements0 = A.List_List$of(t1, true, A._instanceType(t1)._precomputed1);
      B.JSArray_methods.sort$1(elements0, A.framework_Element__sort$closure());
      elements = elements0;
      t1.clear$0(0);
      try {
        t1 = elements;
        new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")).forEach$1(0, this.get$_unmount());
      } finally {
      }
    }
  };
  A._InactiveElements__unmount_closure.prototype = {
    call$1(child) {
      this.$this._unmount$1(child);
    },
    $signature: 61
  };
  A.BuildOwner.prototype = {
    scheduleBuildFor$1(element) {
      var t1, _this = this,
        buildScope = element.get$buildScope();
      if (!_this._scheduledFlushDirtyElements && _this.onBuildScheduled != null) {
        _this._scheduledFlushDirtyElements = true;
        _this.onBuildScheduled.call$0();
      }
      if (!element._inDirtyList) {
        buildScope._dirtyElements.push(element);
        element._inDirtyList = true;
      }
      if (!buildScope._buildScheduled && !buildScope._building) {
        buildScope._buildScheduled = true;
        t1 = buildScope.scheduleRebuild;
        if (t1 != null)
          t1.call$0();
      }
      if (buildScope._dirtyElementsNeedsResorting != null)
        buildScope._dirtyElementsNeedsResorting = true;
    },
    lockState$1(callback) {
      try {
        callback.call$0();
      } finally {
      }
    },
    buildScope$2(context, callback) {
      var buildScope = context.get$buildScope(),
        t1 = callback == null;
      if (t1 && buildScope._dirtyElements.length === 0)
        return;
      A.FlutterTimeline_startSync("BUILD", null);
      try {
        this._scheduledFlushDirtyElements = true;
        buildScope._building = true;
        if (!t1)
          try {
            callback.call$0();
          } finally {
          }
        buildScope._flushDirtyElements$1$debugBuildRoot(context);
      } finally {
        this._scheduledFlushDirtyElements = buildScope._building = false;
        A.Timeline_finishSync();
      }
    },
    buildScope$1(context) {
      return this.buildScope$2(context, null);
    },
    finalizeTree$0() {
      var e, stack, exception;
      A.FlutterTimeline_startSync("FINALIZE TREE", null);
      try {
        this.lockState$1(this._inactiveElements.get$_unmountAll());
      } catch (exception) {
        e = A.unwrapException(exception);
        stack = A.getTraceFromException(exception);
        A._reportException(A.ErrorSummary$("while finalizing the widget tree"), e, stack, null);
      } finally {
        A.Timeline_finishSync();
      }
    }
  };
  A.StatefulElement.prototype = {$isStatefulElement: 1};
  A.InheritedElement.prototype = {$isInheritedElement: 1};
  A.RenderObjectElement.prototype = {$isRenderObjectElement: 1};
  A.InheritedTheme.prototype = {$isInheritedTheme: 1};
  A.InheritedTheme_capture_closure.prototype = {
    call$1(ancestor) {
      var theme, themeType, t1;
      if (ancestor.$eq(0, this.to))
        return false;
      if (ancestor instanceof A.InheritedElement && ancestor.get$widget() instanceof A.InheritedTheme) {
        theme = type$.InheritedTheme._as(ancestor.get$widget());
        themeType = A.getRuntimeTypeOfDartObject(theme);
        t1 = this.themeTypes;
        if (!t1.contains$1(0, themeType)) {
          t1.add$1(0, themeType);
          this.themes.push(theme);
        }
      }
      return true;
    },
    $signature: 28
  };
  A.CapturedThemes.prototype = {};
  A._CaptureAll.prototype = {};
  A.LookupBoundary_findRootAncestorStateOfType_closure.prototype = {
    call$1(ancestor) {
      var t1;
      if (ancestor instanceof A.StatefulElement) {
        t1 = ancestor._framework$_state;
        t1.toString;
        t1 = this.T._is(t1);
      } else
        t1 = false;
      if (t1)
        this._box_0.target = ancestor;
      return A.getRuntimeTypeOfDartObject(ancestor.get$widget()) !== B.Type_LookupBoundary_ATp;
    },
    $signature: 28
  };
  A.MagnifierInfo.prototype = {
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      return other instanceof A.MagnifierInfo && other.globalGesturePosition.$eq(0, _this.globalGesturePosition) && other.caretRect.$eq(0, _this.caretRect) && other.currentLineBoundaries.$eq(0, _this.currentLineBoundaries) && other.fieldBounds.$eq(0, _this.fieldBounds);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.globalGesturePosition, _this.caretRect, _this.fieldBounds, _this.currentLineBoundaries, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "MagnifierInfo(position: " + _this.globalGesturePosition.toString$0(0) + ", line: " + _this.currentLineBoundaries.toString$0(0) + ", caret: " + _this.caretRect.toString$0(0) + ", field: " + _this.fieldBounds.toString$0(0) + ")";
    }
  };
  A.MagnifierController.prototype = {
    show$3$below$builder$context(_, below, builder, context) {
      return this.show$body$MagnifierController(0, below, builder, context);
    },
    show$body$MagnifierController(_, below, builder, context) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, t1;
      var $async$show$3$below$builder$context = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._overlayEntry;
              if (t1 != null)
                t1.remove$0(0);
              t1 = $async$self._overlayEntry;
              if (t1 != null)
                t1.dispose$0();
              t1 = A.LookupBoundary_findRootAncestorStateOfType(context, type$.OverlayState);
              t1.toString;
              t2 = A.Navigator_maybeOf(context);
              if (t2 == null)
                t2 = null;
              else {
                t2 = t2._framework$_element;
                t2.toString;
              }
              t2 = A.OverlayEntry$(new A.MagnifierController_show_closure(A.InheritedTheme_capture(context, t2), builder), false, false);
              $async$self._overlayEntry = t2;
              t1.insert$2$below(0, t2, below);
              t1 = $async$self.animationController;
              $async$goto = t1 != null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = t1.forward$0(0);
              $async$goto = 4;
              return A._asyncAwait(type$.Future_void._is(t1) ? t1 : A._Future$value(t1, type$.void), $async$show$3$below$builder$context);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$show$3$below$builder$context, $async$completer);
    },
    hide$1$removeFromOverlay(removeFromOverlay) {
      return this.hide$body$MagnifierController(removeFromOverlay);
    },
    hide$0() {
      return this.hide$1$removeFromOverlay(true);
    },
    hide$body$MagnifierController(removeFromOverlay) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$hide$1$removeFromOverlay = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._overlayEntry == null) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = $async$self.animationController;
              $async$goto = t1 != null ? 3 : 4;
              break;
            case 3:
              // then
              t1 = t1.reverse$0(0);
              $async$goto = 5;
              return A._asyncAwait(type$.Future_void._is(t1) ? t1 : A._Future$value(t1, type$.void), $async$hide$1$removeFromOverlay);
            case 5:
              // returning from await.
            case 4:
              // join
              if (removeFromOverlay) {
                t1 = $async$self._overlayEntry;
                if (t1 != null)
                  t1.remove$0(0);
                t1 = $async$self._overlayEntry;
                if (t1 != null)
                  t1.dispose$0();
                $async$self._overlayEntry = null;
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$hide$1$removeFromOverlay, $async$completer);
    }
  };
  A.MagnifierController_show_closure.prototype = {
    call$1(context) {
      return new A._CaptureAll(this.capturedThemes._themes, this.builder.call$1(context), null);
    },
    $signature: 7
  };
  A.NavigatorState.prototype = {$isNavigatorState: 1};
  A.OverlayEntry.prototype = {
    get$mounted() {
      var t1 = this._overlayEntryStateNotifier;
      return (t1 == null ? null : t1._change_notifier$_value) != null;
    },
    remove$0(_) {
      var t2,
        t1 = this._overlay;
      t1.toString;
      this._overlay = null;
      if (t1._framework$_element == null)
        return;
      B.JSArray_methods.remove$1(t1._entries, this);
      t2 = $.SchedulerBinding__instance;
      if (t2.SchedulerBinding__schedulerPhase === B.SchedulerPhase_3)
        t2.SchedulerBinding__postFrameCallbacks.push(new A.OverlayEntry_remove_closure(t1));
      else
        t1._overlay$_markDirty$0();
    },
    markNeedsBuild$0() {
      var t1 = this._key.get$currentState();
      if (t1 != null)
        t1._markNeedsBuild$0();
    },
    dispose$0() {
      var t1, _this = this;
      _this._disposedByOwner = true;
      if (!_this.get$mounted()) {
        t1 = _this._overlayEntryStateNotifier;
        if (t1 != null) {
          t1.ChangeNotifier__listeners = $.$get$ChangeNotifier__emptyListeners();
          t1.ChangeNotifier__count = 0;
        }
        _this._overlayEntryStateNotifier = null;
      }
    },
    toString$0(_) {
      var _this = this,
        t1 = A.shortHash(_this),
        t2 = _this._opaque,
        t3 = _this._maintainState,
        t4 = _this._disposedByOwner ? "(DISPOSED)" : "";
      return "<optimized out>#" + t1 + "(opaque: " + t2 + "; maintainState: " + t3 + ")" + t4;
    }
  };
  A.OverlayEntry_remove_closure.prototype = {
    call$1(duration) {
      this.overlay._overlay$_markDirty$0();
    },
    $signature: 2
  };
  A.OverlayState_insert_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      B.JSArray_methods.insert$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entry);
    },
    $signature: 0
  };
  A.OverlayState_insertAll_closure.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      B.JSArray_methods.insertAll$2(t1._entries, t1._insertionIndex$2(_this.below, _this.above), _this.entries);
    },
    $signature: 0
  };
  A.OverlayState__markDirty_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.PlatformMenuDelegate.prototype = {};
  A.DefaultPlatformMenuDelegate.prototype = {
    _methodCallHandler$1($call) {
      return this._methodCallHandler$body$DefaultPlatformMenuDelegate($call);
    },
    _methodCallHandler$body$DefaultPlatformMenuDelegate($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t2, id, t1;
      var $async$_methodCallHandler$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              id = A._asInt($call.$arguments);
              t1 = $async$self._idMap;
              if (!t1.containsKey$1(0, id)) {
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = t1.$index(0, id);
              t1.toString;
              t2 = $call.method;
              if (t2 === "Menu.selectedCallback") {
                t1.get$onSelected().call$0();
                t1.get$onSelectedIntent();
                t2 = $.WidgetsBinding__instance.WidgetsBinding__buildOwner.focusManager._primaryFocus._focus_manager$_context;
                t2.toString;
                A.Actions_maybeInvoke(t2, t1.get$onSelectedIntent(), type$.Intent);
              } else if (t2 === "Menu.opened")
                t1.get$onOpen(t1).call$0();
              else if (t2 === "Menu.closed")
                t1.get$onClose(t1).call$0();
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_methodCallHandler$1, $async$completer);
    }
  };
  A.RouteInformation.prototype = {
    get$uri() {
      return this._router$_uri;
    }
  };
  A.ScrollController.prototype = {
    animateTo$3$curve$duration(offset, curve, duration) {
      return this.animateTo$body$ScrollController(offset, curve, duration);
    },
    animateTo$body$ScrollController(offset, curve, duration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t2, i, t1;
      var $async$animateTo$3$curve$duration = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = A._setArrayType([], type$.JSArray_Future_void);
              for (t2 = $async$self._positions, i = 0; i < t2.length; ++i)
                t1.push(t2[i].animateTo$3$curve$duration(offset, curve, duration));
              $async$goto = 2;
              return A._asyncAwait(A.Future_wait(t1, false, type$.void), $async$animateTo$3$curve$duration);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$animateTo$3$curve$duration, $async$completer);
    },
    jumpTo$1(value) {
      var t1, t2, _i;
      for (t1 = A.List_List$of(this._positions, true, type$.ScrollPosition), t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].jumpTo$1(value);
    },
    toString$0(_) {
      var t2, _this = this,
        description = A._setArrayType([], type$.JSArray_String),
        t1 = _this.debugLabel;
      if (t1 != null)
        description.push(t1);
      t1 = _this._initialScrollOffset;
      if (t1 !== 0)
        description.push("initialScrollOffset: " + B.JSNumber_methods.toStringAsFixed$1(t1, 1) + ", ");
      t1 = _this._positions;
      t2 = t1.length;
      if (t2 === 0)
        description.push("no clients");
      else if (t2 === 1) {
        t1 = B.JSArray_methods.get$single(t1)._pixels;
        t1.toString;
        description.push("one client, offset " + B.JSNumber_methods.toStringAsFixed$1(t1, 1));
      } else
        description.push("" + t2 + " clients");
      return "<optimized out>#" + A.shortHash(_this) + "(" + B.JSArray_methods.join$1(description, ", ") + ")";
    }
  };
  A.ScrollPositionAlignmentPolicy.prototype = {
    _enumToString$0() {
      return "ScrollPositionAlignmentPolicy." + this._name;
    }
  };
  A.Scrollable_ensureVisible_closure.prototype = {
    call$1(_) {
      return null;
    },
    $signature: 188
  };
  A.TapRegion.prototype = {};
  A.TextFieldTapRegion.prototype = {};
  A.TextSelectionOverlay.prototype = {
    _updateTextSelectionOverlayVisibilities$0() {
      var _this = this,
        t1 = _this._handlesVisible && _this.renderObject._selectionStartInViewport._change_notifier$_value;
      _this._effectiveStartHandleVisibility.set$value(0, t1);
      t1 = _this._handlesVisible && _this.renderObject._selectionEndInViewport._change_notifier$_value;
      _this._effectiveEndHandleVisibility.set$value(0, t1);
      t1 = _this.renderObject;
      t1 = t1._selectionStartInViewport._change_notifier$_value || t1._selectionEndInViewport._change_notifier$_value;
      _this._effectiveToolbarVisibility.set$value(0, t1);
    },
    set$handlesVisible(visible) {
      if (this._handlesVisible === visible)
        return;
      this._handlesVisible = visible;
      this._updateTextSelectionOverlayVisibilities$0();
    },
    update$1(_, newValue) {
      var t1, _this = this;
      if (_this._text_selection$_value.$eq(0, newValue))
        return;
      _this._text_selection$_value = newValue;
      _this._updateSelectionOverlay$0();
      t1 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.markNeedsBuild$0();
    },
    _updateSelectionOverlay$0() {
      var t2, t3, t4, currText, t5, selectedGraphemes, t6, startHandleRect, endHandleRect, _this = this, _null = null,
        t1 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = _this.renderObject;
      t3 = t2._textPainter;
      t4 = t3._textDirection;
      t4.toString;
      t1.set$startHandleType(_this._chooseType$3(t4, B.TextSelectionHandleType_0, B.TextSelectionHandleType_1));
      t4 = _this.selectionDelegate;
      currText = t4._widget.controller._change_notifier$_value.text;
      t5 = false;
      if (t3.get$plainText() === currText)
        if (_this._text_selection$_value.selection.get$isValid()) {
          t5 = _this._text_selection$_value.selection;
          t5 = t5.start !== t5.end;
        }
      if (t5) {
        t5 = _this._text_selection$_value.selection;
        selectedGraphemes = B.JSString_methods.substring$2(currText, t5.start, t5.end);
        t5 = (selectedGraphemes.length === 0 ? B.StringCharacters_E8w : new A.StringCharacters(selectedGraphemes)).get$first(0);
        t6 = _this._text_selection$_value.selection.start;
        startHandleRect = t2.getRectForComposingRange$1(new A.TextRange(t6, t6 + t5.length));
      } else
        startHandleRect = _null;
      t5 = startHandleRect == null ? _null : startHandleRect.bottom - startHandleRect.top;
      if (t5 == null) {
        t5 = t3._getOrCreateLayoutTemplate$0();
        t5 = t5.get$height(t5);
      }
      t1.set$lineHeightAtStart(t5);
      t5 = t3._textDirection;
      t5.toString;
      t1.set$endHandleType(_this._chooseType$3(t5, B.TextSelectionHandleType_1, B.TextSelectionHandleType_0));
      currText = t4._widget.controller._change_notifier$_value.text;
      t4 = false;
      if (t3.get$plainText() === currText)
        if (_this._text_selection$_value.selection.get$isValid()) {
          t4 = _this._text_selection$_value.selection;
          t4 = t4.start !== t4.end;
        }
      if (t4) {
        t4 = _this._text_selection$_value.selection;
        selectedGraphemes = B.JSString_methods.substring$2(currText, t4.start, t4.end);
        t4 = (selectedGraphemes.length === 0 ? B.StringCharacters_E8w : new A.StringCharacters(selectedGraphemes)).get$last(0);
        t5 = _this._text_selection$_value.selection.end;
        endHandleRect = t2.getRectForComposingRange$1(new A.TextRange(t5 - t4.length, t5));
      } else
        endHandleRect = _null;
      t4 = endHandleRect == null ? _null : endHandleRect.bottom - endHandleRect.top;
      if (t4 == null) {
        t3 = t3._getOrCreateLayoutTemplate$0();
        t3 = t3.get$height(t3);
      } else
        t3 = t4;
      t1.set$lineHeightAtEnd(t3);
      t1.set$selectionEndpoints(t2.getEndpointsForSelection$1(_this._text_selection$_value.selection));
      t1.set$toolbarLocation(t2._lastSecondaryTapDownPosition);
    },
    _buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(currentTextPosition, globalGesturePosition, renderEditable) {
      var overlay, transformToOverlay, overlayLineBoundaries, overlayCaretRect, overlayGesturePosition,
        lineAtOffset = renderEditable.getLineAtOffset$1(currentTextPosition),
        t1 = renderEditable.getLocalRectForCaret$1(new A.TextPosition(lineAtOffset.baseOffset, B.TextAffinity_1)).get$topCenter(),
        t2 = renderEditable.getLocalRectForCaret$1(new A.TextPosition(lineAtOffset.extentOffset, B.TextAffinity_0)),
        t3 = t2.left,
        localLineBoundaries = A.Rect$fromPoints(t1, new A.Offset(t3 + (t2.right - t3) / 2, t2.bottom));
      t1 = A.LookupBoundary_findRootAncestorStateOfType(this.context, type$.OverlayState);
      overlay = type$.nullable_RenderBox._as(t1._framework$_element.get$renderObject());
      transformToOverlay = renderEditable.getTransformTo$1(0, overlay);
      overlayLineBoundaries = A.MatrixUtils_transformRect(transformToOverlay, localLineBoundaries);
      overlayCaretRect = A.MatrixUtils_transformRect(transformToOverlay, renderEditable.getLocalRectForCaret$1(currentTextPosition));
      overlayGesturePosition = overlay == null ? null : overlay.globalToLocal$1(globalGesturePosition);
      if (overlayGesturePosition == null)
        overlayGesturePosition = globalGesturePosition;
      t1 = renderEditable.get$size(0);
      return new A.MagnifierInfo(overlayGesturePosition, overlayLineBoundaries, overlayCaretRect, A.MatrixUtils_transformRect(transformToOverlay, new A.Rect(0, 0, 0 + t1._dx, 0 + t1._dy)));
    },
    _handleSelectionEndHandleDragStart$1(details) {
      var t2, t3, t4, t5, t6, centerOfLineGlobal, _this = this,
        t1 = _this.renderObject;
      if (t1._object$_owner == null)
        return;
      t2 = details.globalPosition;
      t3 = t2._dy;
      _this.__TextSelectionOverlay__endHandleDragPosition_A = t3;
      t4 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = B.JSArray_methods.get$last(t4._selectionEndpoints);
      t6 = t1._textPainter._getOrCreateLayoutTemplate$0();
      t6 = t6.get$height(t6);
      centerOfLineGlobal = A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, null), new A.Offset(0, t5.point._dy - t6 / 2))._dy;
      _this.__TextSelectionOverlay__endHandleDragTarget_A = centerOfLineGlobal - t3;
      t4.showMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(t1.getPositionForPoint$1(new A.Offset(t2._dx, centerOfLineGlobal)), t2, t1));
    },
    _getHandleDy$2(dragDy, handleDy) {
      var distanceDragged = dragDy - handleDy,
        dragDirection = distanceDragged < 0 ? -1 : 1,
        t1 = this.renderObject._textPainter,
        t2 = t1._getOrCreateLayoutTemplate$0();
      t2 = B.JSNumber_methods.floor$0(Math.abs(distanceDragged) / t2.get$height(t2));
      t1 = t1._getOrCreateLayoutTemplate$0();
      return handleDy + dragDirection * t2 * t1.get$height(t1);
    },
    _handleSelectionEndHandleDragUpdate$1(details) {
      var t2, localPosition, t3, nextEndHandleDragPositionLocal, t4, position, newSelection, _this = this,
        t1 = _this.renderObject;
      if (t1._object$_owner == null)
        return;
      t2 = details.globalPosition;
      localPosition = t1.globalToLocal$1(t2);
      t3 = _this.__TextSelectionOverlay__endHandleDragPosition_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      nextEndHandleDragPositionLocal = _this._getHandleDy$2(localPosition._dy, t1.globalToLocal$1(new A.Offset(0, t3))._dy);
      t3 = A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, null), new A.Offset(0, nextEndHandleDragPositionLocal))._dy;
      _this.__TextSelectionOverlay__endHandleDragPosition_A = t3;
      t4 = _this.__TextSelectionOverlay__endHandleDragTarget_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      position = t1.getPositionForPoint$1(new A.Offset(t2._dx, t3 + t4));
      t3 = _this._text_selection$_value.selection;
      t4 = t3.start;
      if (t4 === t3.end) {
        t3 = _this.__TextSelectionOverlay__selectionOverlay_F;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t3.updateMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(position, t2, t1));
        _this._handleSelectionHandleChanged$1(A.TextSelection$fromPosition(position));
        return;
      }
      switch (A.defaultTargetPlatform().index) {
        case 2:
        case 4:
          t3 = position.offset;
          newSelection = A.TextSelection$(B.TextAffinity_1, t4, t3, false);
          if (t3 <= t4)
            return;
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          newSelection = A.TextSelection$(B.TextAffinity_1, t3.baseOffset, position.offset, false);
          if (newSelection.baseOffset >= newSelection.extentOffset)
            return;
          break;
        default:
          newSelection = null;
      }
      _this._handleSelectionHandleChanged$1(newSelection);
      t3 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3.updateMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(newSelection.get$extent(), t2, t1));
    },
    _handleSelectionStartHandleDragStart$1(details) {
      var t2, t3, t4, t5, t6, centerOfLineGlobal, _this = this,
        t1 = _this.renderObject;
      if (t1._object$_owner == null)
        return;
      t2 = details.globalPosition;
      t3 = t2._dy;
      _this.__TextSelectionOverlay__startHandleDragPosition_A = t3;
      t4 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t4 === $ && A.throwUnnamedLateFieldNI();
      t5 = B.JSArray_methods.get$first(t4._selectionEndpoints);
      t6 = t1._textPainter._getOrCreateLayoutTemplate$0();
      t6 = t6.get$height(t6);
      centerOfLineGlobal = A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, null), new A.Offset(0, t5.point._dy - t6 / 2))._dy;
      _this.__TextSelectionOverlay__startHandleDragTarget_A = centerOfLineGlobal - t3;
      t4.showMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(t1.getPositionForPoint$1(new A.Offset(t2._dx, centerOfLineGlobal)), t2, t1));
    },
    _handleSelectionStartHandleDragUpdate$1(details) {
      var t2, localPosition, t3, nextStartHandleDragPositionLocal, t4, position, newSelection, _this = this,
        t1 = _this.renderObject;
      if (t1._object$_owner == null)
        return;
      t2 = details.globalPosition;
      localPosition = t1.globalToLocal$1(t2);
      t3 = _this.__TextSelectionOverlay__startHandleDragPosition_A;
      t3 === $ && A.throwUnnamedLateFieldNI();
      nextStartHandleDragPositionLocal = _this._getHandleDy$2(localPosition._dy, t1.globalToLocal$1(new A.Offset(0, t3))._dy);
      t3 = A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, null), new A.Offset(0, nextStartHandleDragPositionLocal))._dy;
      _this.__TextSelectionOverlay__startHandleDragPosition_A = t3;
      t4 = _this.__TextSelectionOverlay__startHandleDragTarget_A;
      t4 === $ && A.throwUnnamedLateFieldNI();
      position = t1.getPositionForPoint$1(new A.Offset(t2._dx, t3 + t4));
      t3 = _this._text_selection$_value.selection;
      t4 = t3.end;
      if (t3.start === t4) {
        t3 = _this.__TextSelectionOverlay__selectionOverlay_F;
        t3 === $ && A.throwUnnamedLateFieldNI();
        t3.updateMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(position, t2, t1));
        _this._handleSelectionHandleChanged$1(A.TextSelection$fromPosition(position));
        return;
      }
      switch (A.defaultTargetPlatform().index) {
        case 2:
        case 4:
          newSelection = A.TextSelection$(B.TextAffinity_1, t4, position.offset, false);
          if (newSelection.extentOffset >= t4)
            return;
          break;
        case 0:
        case 1:
        case 3:
        case 5:
          newSelection = A.TextSelection$(B.TextAffinity_1, position.offset, t3.extentOffset, false);
          if (newSelection.baseOffset >= newSelection.extentOffset)
            return;
          break;
        default:
          newSelection = null;
      }
      t3 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t3 === $ && A.throwUnnamedLateFieldNI();
      t3.updateMagnifier$1(_this._buildMagnifier$3$currentTextPosition$globalGesturePosition$renderEditable(newSelection.get$extent().offset < newSelection.get$base().offset ? newSelection.get$extent() : newSelection.get$base(), t2, t1));
      _this._handleSelectionHandleChanged$1(newSelection);
    },
    _handleAnyDragEnd$1(details) {
      var t2, t3, _this = this,
        t1 = _this.context;
      if (t1._widget == null)
        return;
      if (!type$.TextSelectionHandleControls._is(_this.selectionControls)) {
        t1 = _this.__TextSelectionOverlay__selectionOverlay_F;
        t1 === $ && A.throwUnnamedLateFieldNI();
        t1.hideMagnifier$0();
        t2 = _this._text_selection$_value.selection;
        if (t2.start !== t2.end)
          t1.showToolbar$0();
        return;
      }
      t2 = _this.__TextSelectionOverlay__selectionOverlay_F;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.hideMagnifier$0();
      t3 = _this._text_selection$_value.selection;
      if (t3.start !== t3.end)
        t2.showToolbar$2$context$contextMenuBuilder(t1, _this.contextMenuBuilder);
    },
    _handleSelectionHandleChanged$1(newSelection) {
      this.selectionDelegate.userUpdateTextEditingValue$2(this._text_selection$_value.copyWith$1$selection(newSelection), B.SelectionChangedCause_6);
    },
    _chooseType$3(textDirection, ltrType, rtlType) {
      var t1 = this._text_selection$_value.selection;
      if (t1.start === t1.end)
        return B.TextSelectionHandleType_2;
      switch (textDirection.index) {
        case 1:
          t1 = ltrType;
          break;
        case 0:
          t1 = rtlType;
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A.SelectionOverlay.prototype = {
    get$toolbarIsVisible() {
      var t1, _this = this;
      if (type$.TextSelectionHandleControls._is(_this.selectionControls)) {
        t1 = $.ContextMenuController__shownInstance;
        t1 = t1 === _this._contextMenuController || t1 === _this._spellCheckToolbarController;
      } else
        t1 = _this._toolbar != null || $.ContextMenuController__shownInstance === _this._spellCheckToolbarController;
      return t1;
    },
    showMagnifier$1(initialMagnifierInfo) {
      var t1, t2, t3, t4, builtMagnifier, _this = this;
      if (_this.get$toolbarIsVisible())
        _this.hideToolbar$0();
      t1 = _this._magnifierInfo;
      t1.set$value(0, initialMagnifierInfo);
      t2 = _this.magnifierConfiguration;
      t3 = _this.context;
      t4 = _this._magnifierController;
      builtMagnifier = t2.magnifierBuilder$3(t3, t4, t1);
      if (builtMagnifier == null)
        return;
      if (t2.shouldDisplayHandlesInMagnifier)
        t1 = null;
      else {
        t1 = _this._handles;
        t1 = t1 == null ? null : t1._1;
      }
      t4.show$3$below$builder$context(0, t1, new A.SelectionOverlay_showMagnifier_closure(builtMagnifier), t3);
    },
    hideMagnifier$0() {
      var t1 = this._magnifierController;
      if (t1._overlayEntry == null)
        return;
      t1.hide$0();
    },
    set$startHandleType(value) {
      if (this._startHandleType === value)
        return;
      this._startHandleType = value;
      this.markNeedsBuild$0();
    },
    set$lineHeightAtStart(value) {
      if (this._lineHeightAtStart === value)
        return;
      this._lineHeightAtStart = value;
      this.markNeedsBuild$0();
    },
    _handleStartHandleDragStart$1(details) {
      var _this = this;
      if (_this._handles == null) {
        _this._isDraggingStartHandle = false;
        return;
      }
      _this._isDraggingStartHandle = details.kind === B.PointerDeviceKind_0;
      _this.onStartHandleDragStart.call$1(details);
    },
    _handleStartHandleDragUpdate$1(details) {
      if (this._handles == null) {
        this._isDraggingStartHandle = false;
        return;
      }
      this.onStartHandleDragUpdate.call$1(details);
    },
    _handleStartHandleDragEnd$1(details) {
      this._isDraggingStartHandle = false;
      if (this._handles == null)
        return;
      this.onStartHandleDragEnd.call$1(details);
    },
    set$endHandleType(value) {
      if (this._endHandleType === value)
        return;
      this._endHandleType = value;
      this.markNeedsBuild$0();
    },
    set$lineHeightAtEnd(value) {
      if (this._lineHeightAtEnd === value)
        return;
      this._lineHeightAtEnd = value;
      this.markNeedsBuild$0();
    },
    _handleEndHandleDragStart$1(details) {
      var _this = this;
      if (_this._handles == null) {
        _this._isDraggingEndHandle = false;
        return;
      }
      _this._isDraggingEndHandle = details.kind === B.PointerDeviceKind_0;
      _this.onEndHandleDragStart.call$1(details);
    },
    _handleEndHandleDragUpdate$1(details) {
      if (this._handles == null) {
        this._isDraggingEndHandle = false;
        return;
      }
      this.onEndHandleDragUpdate.call$1(details);
    },
    _handleEndHandleDragEnd$1(details) {
      this._isDraggingEndHandle = false;
      if (this._handles == null)
        return;
      this.onEndHandleDragEnd.call$1(details);
    },
    set$selectionEndpoints(value) {
      var _this = this;
      if (!A.listEquals0(_this._selectionEndpoints, value)) {
        _this.markNeedsBuild$0();
        if (_this._isDraggingEndHandle || _this._isDraggingStartHandle)
          switch (A.defaultTargetPlatform().index) {
            case 0:
              A.HapticFeedback_selectionClick();
              break;
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
              break;
          }
      }
      _this._selectionEndpoints = value;
    },
    set$toolbarLocation(value) {
      if (J.$eq$(this._toolbarLocation, value))
        return;
      this._toolbarLocation = value;
      this.markNeedsBuild$0();
    },
    showHandles$0() {
      var t1, t2, t3, capturedThemes, _this = this;
      if (_this._handles != null)
        return;
      t1 = _this.context;
      t2 = A.LookupBoundary_findRootAncestorStateOfType(t1, type$.OverlayState);
      t3 = t2._framework$_element;
      t3.toString;
      capturedThemes = A.InheritedTheme_capture(t1, t3);
      t3 = A.OverlayEntry$(new A.SelectionOverlay_showHandles_closure(_this, capturedThemes), false, false);
      t1 = A.OverlayEntry$(new A.SelectionOverlay_showHandles_closure0(_this, capturedThemes), false, false);
      _this._handles = new A._Record_2_end_start(t1, t3);
      t2.insertAll$1(0, A._setArrayType([t3, t1], type$.JSArray_OverlayEntry));
    },
    hideHandles$0() {
      var _this = this,
        t1 = _this._handles;
      if (t1 != null) {
        t1._1.remove$0(0);
        _this._handles._1.dispose$0();
        _this._handles._0.remove$0(0);
        _this._handles._0.dispose$0();
        _this._handles = null;
      }
    },
    showToolbar$2$context$contextMenuBuilder(context, contextMenuBuilder) {
      var t1, t2, _this = this;
      if (contextMenuBuilder == null) {
        if (_this._toolbar != null)
          return;
        _this._toolbar = A.OverlayEntry$(_this.get$_buildToolbar(), false, false);
        t1 = A.LookupBoundary_findRootAncestorStateOfType(_this.context, type$.OverlayState);
        t1.toString;
        t2 = _this._toolbar;
        t2.toString;
        t1.insert$1(0, t2);
        return;
      }
      if (context == null)
        return;
      t1 = context.get$renderObject();
      t1.toString;
      _this._contextMenuController.show$2$context$contextMenuBuilder(0, context, new A.SelectionOverlay_showToolbar_closure(_this, type$.RenderBox._as(t1), contextMenuBuilder));
    },
    showToolbar$0() {
      return this.showToolbar$2$context$contextMenuBuilder(null, null);
    },
    markNeedsBuild$0() {
      var t3, _this = this,
        t1 = _this._handles,
        t2 = t1 == null;
      if (t2 && _this._toolbar == null)
        return;
      t3 = $.SchedulerBinding__instance;
      if (t3.SchedulerBinding__schedulerPhase === B.SchedulerPhase_3) {
        if (_this._text_selection$_buildScheduled)
          return;
        _this._text_selection$_buildScheduled = true;
        t3.SchedulerBinding__postFrameCallbacks.push(new A.SelectionOverlay_markNeedsBuild_closure(_this));
      } else {
        if (!t2) {
          t1._1.markNeedsBuild$0();
          _this._handles._0.markNeedsBuild$0();
        }
        t1 = _this._toolbar;
        if (t1 != null)
          t1.markNeedsBuild$0();
        t1 = $.ContextMenuController__shownInstance;
        if (t1 === _this._contextMenuController) {
          t1 = $.ContextMenuController__menuOverlayEntry;
          if (t1 != null)
            t1.markNeedsBuild$0();
        } else if (t1 === _this._spellCheckToolbarController) {
          t1 = $.ContextMenuController__menuOverlayEntry;
          if (t1 != null)
            t1.markNeedsBuild$0();
        }
      }
    },
    hide$0() {
      var t1, _this = this;
      _this._magnifierController.hide$0();
      _this.hideHandles$0();
      if (_this._toolbar == null) {
        t1 = $.ContextMenuController__shownInstance;
        t1 = t1 === _this._contextMenuController || t1 === _this._spellCheckToolbarController;
      } else
        t1 = true;
      if (t1)
        _this.hideToolbar$0();
    },
    hideToolbar$0() {
      var t1, _this = this;
      _this._contextMenuController.remove$0(0);
      _this._spellCheckToolbarController.remove$0(0);
      t1 = _this._toolbar;
      if (t1 == null)
        return;
      t1.remove$0(0);
      t1 = _this._toolbar;
      if (t1 != null)
        t1.dispose$0();
      _this._toolbar = null;
    },
    _buildToolbar$1(context) {
      var t1, t2, t3, editingRegion, midX, _this = this, _null = null;
      if (_this.selectionControls == null)
        return B.SizedBox_0_0_null_null;
      t1 = _this.context.get$renderObject();
      t1.toString;
      type$.RenderBox._as(t1);
      t2 = A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, _null), B.Offset_0_0);
      t3 = t1.get$size(0).bottomRight$1(0, B.Offset_0_0);
      editingRegion = A.Rect$fromPoints(t2, A.MatrixUtils_transformPoint(t1.getTransformTo$1(0, _null), t3));
      midX = B.JSArray_methods.get$last(_this._selectionEndpoints).point._dy - B.JSArray_methods.get$first(_this._selectionEndpoints).point._dy > _this._lineHeightAtEnd / 2 ? (editingRegion.right - editingRegion.left) / 2 : (B.JSArray_methods.get$first(_this._selectionEndpoints).point._dx + B.JSArray_methods.get$last(_this._selectionEndpoints).point._dx) / 2;
      return new A._SelectionToolbarWrapper(new A.Builder(new A.SelectionOverlay__buildToolbar_closure(_this, editingRegion, new A.Offset(midX, B.JSArray_methods.get$first(_this._selectionEndpoints).point._dy - _this._lineHeightAtStart)), _null), new A.Offset(-editingRegion.left, -editingRegion.top), _this.toolbarLayerLink, _this.toolbarVisible, _null);
    },
    updateMagnifier$1(magnifierInfo) {
      if (this._magnifierController._overlayEntry == null)
        return;
      this._magnifierInfo.set$value(0, magnifierInfo);
    }
  };
  A.SelectionOverlay_showMagnifier_closure.prototype = {
    call$1(_) {
      return this.builtMagnifier;
    },
    $signature: 7
  };
  A.SelectionOverlay_showHandles_closure.prototype = {
    call$1(context) {
      var handle, t2, _null = null,
        t1 = this.$this,
        selectionControls = t1.selectionControls;
      if (selectionControls == null)
        handle = B.SizedBox_0_0_null_null;
      else {
        t2 = t1._startHandleType;
        handle = A._SelectionHandleOverlay$(t1.dragStartBehavior, t1.startHandleLayerLink, t1.get$_handleStartHandleDragEnd(), t1.get$_handleStartHandleDragStart(), t1.get$_handleStartHandleDragUpdate(), t1.onSelectionHandleTapped, t1._lineHeightAtStart, selectionControls, t2, t1.startHandlesVisible);
      }
      return new A._CaptureAll(this.capturedThemes._themes, A.TextFieldTapRegion$(new A.ExcludeSemantics(true, handle, _null), _null, B.Type_EditableText_NMc, _null), _null);
    },
    $signature: 7
  };
  A.SelectionOverlay_showHandles_closure0.prototype = {
    call$1(context) {
      var handle, t2, _null = null,
        t1 = this.$this,
        selectionControls = t1.selectionControls;
      if (selectionControls == null || t1._startHandleType === B.TextSelectionHandleType_2)
        handle = B.SizedBox_0_0_null_null;
      else {
        t2 = t1._endHandleType;
        handle = A._SelectionHandleOverlay$(t1.dragStartBehavior, t1.endHandleLayerLink, t1.get$_handleEndHandleDragEnd(), t1.get$_handleEndHandleDragStart(), t1.get$_handleEndHandleDragUpdate(), t1.onSelectionHandleTapped, t1._lineHeightAtEnd, selectionControls, t2, t1.endHandlesVisible);
      }
      return new A._CaptureAll(this.capturedThemes._themes, A.TextFieldTapRegion$(new A.ExcludeSemantics(true, handle, _null), _null, B.Type_EditableText_NMc, _null), _null);
    },
    $signature: 7
  };
  A.SelectionOverlay_showToolbar_closure.prototype = {
    call$1(context) {
      var t1 = this.$this,
        t2 = A.MatrixUtils_transformPoint(this.renderBox.getTransformTo$1(0, null), B.Offset_0_0);
      return new A._SelectionToolbarWrapper(this.contextMenuBuilder.call$1(context), new A.Offset(-t2._dx, -t2._dy), t1.toolbarLayerLink, t1.toolbarVisible, null);
    },
    $signature: 192
  };
  A.SelectionOverlay_markNeedsBuild_closure.prototype = {
    call$1(duration) {
      var t2,
        t1 = this.$this;
      t1._text_selection$_buildScheduled = false;
      t2 = t1._handles;
      if (t2 != null) {
        t2._1.markNeedsBuild$0();
        t1._handles._0.markNeedsBuild$0();
      }
      t2 = t1._toolbar;
      if (t2 != null)
        t2.markNeedsBuild$0();
      t2 = $.ContextMenuController__shownInstance;
      if (t2 === t1._contextMenuController) {
        t1 = $.ContextMenuController__menuOverlayEntry;
        if (t1 != null)
          t1.markNeedsBuild$0();
      } else if (t2 === t1._spellCheckToolbarController) {
        t1 = $.ContextMenuController__menuOverlayEntry;
        if (t1 != null)
          t1.markNeedsBuild$0();
      }
    },
    $signature: 2
  };
  A.SelectionOverlay__buildToolbar_closure.prototype = {
    call$1(context) {
      this.$this.selectionControls.toString;
      return B.SizedBox_0_0_null_null;
    },
    $signature: 7
  };
  A._SelectionToolbarWrapper.prototype = {};
  A._SelectionHandleOverlay.prototype = {};
  A.WidgetSpan.prototype = {
    build$3$dimensions$textScaler(builder, dimensions, textScaler) {
      var currentDimensions,
        t1 = this.style,
        hasStyle = t1 != null;
      if (hasStyle)
        builder.pushStyle$1(t1.getTextStyle$1$textScaler(textScaler));
      dimensions.toString;
      currentDimensions = dimensions[builder.get$placeholderCount()];
      t1 = currentDimensions.size;
      builder.addPlaceholder$5$baseline$baselineOffset(t1._dx, t1._dy, this.alignment, currentDimensions.baseline, currentDimensions.baselineOffset);
      if (hasStyle)
        builder.pop$0();
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(_this))
        return false;
      if (!_this.super$InlineSpan$$eq(0, other))
        return false;
      t1 = false;
      if (other instanceof A._ScribblePlaceholder)
        if (other.child.super$Object$$eq(0, _this.child))
          t1 = other.alignment === _this.alignment;
      return t1;
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(A.InlineSpan.prototype.get$hashCode.call(_this, 0), _this.child, _this.alignment, _this.baseline, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.FMTCObjectBoxBackend.prototype = {
    initialise$0() {
      return A.throwExpression(A.UnsupportedError$("FMTC is not supported on non-FFI platforms by default"));
    }
  };
  A.FlutterNativeSplashWeb.prototype = {
    handleMethodCall$1($call) {
      return this.handleMethodCall$body$FlutterNativeSplashWeb($call);
    },
    handleMethodCall$body$FlutterNativeSplashWeb($call) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.dynamic),
        $async$returnValue, exception, t1;
      var $async$handleMethodCall$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          $async$outer:
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $call.method;
                switch (t1) {
                  case "remove":
                    try {
                      self.removeSplashFromWeb();
                    } catch (exception) {
                      t1 = A.Exception_Exception('Did you forget to run "dart run flutter_native_splash:create"? \n Could not run the JS command removeSplashFromWeb()');
                      throw A.wrapException(t1);
                    }
                    // goto return
                    $async$goto = 1;
                    break $async$outer;
                  default:
                    throw A.wrapException(A.PlatformException$("Unimplemented", "flutter_native_splash for web doesn't implement '" + t1 + "'", null, null));
                }
              case 1:
                // return
                return A._asyncReturn($async$returnValue, $async$completer);
            }
      });
      return A._asyncStartSync($async$handleMethodCall$1, $async$completer);
    }
  };
  A.Registrar.prototype = {
    handleFrameworkMessage$3(channel, data, callback) {
      return this.handleFrameworkMessage$body$Registrar(channel, data, callback);
    },
    handleFrameworkMessage$body$Registrar(channel, data, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$handler = 1, $async$currentError, $async$next = [], $async$self = this, handler, exception, stack, t1, exception0, response, $async$exception0;
      var $async$handleFrameworkMessage$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              response = null;
              $async$handler = 3;
              handler = $async$self._plugin_registry$_handlers.$index(0, channel);
              $async$goto = handler != null ? 6 : 7;
              break;
            case 6:
              // then
              t1 = handler.call$1(data);
              $async$goto = 8;
              return A._asyncAwait(type$.Future_nullable_ByteData._is(t1) ? t1 : A._Future$value(t1, type$.nullable_ByteData), $async$handleFrameworkMessage$3);
            case 8:
              // returning from await.
              response = $async$result;
            case 7:
              // join
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // catch
              $async$handler = 2;
              $async$exception0 = $async$currentError;
              exception = A.unwrapException($async$exception0);
              stack = A.getTraceFromException($async$exception0);
              t1 = A.ErrorDescription$("during a framework-to-plugin message");
              A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "flutter web plugins", t1, null, false));
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 2:
              // uncaught
              $async$next = [1];
            case 4:
              // finally
              $async$handler = 1;
              if (callback != null)
                callback.call$1(response);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
              // implicit return
              return A._asyncReturn(null, $async$completer);
            case 1:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$handleFrameworkMessage$3, $async$completer);
    },
    send$2(_, channel, message) {
      var t1 = new A._Future($.Zone__current, type$._Future_nullable_ByteData);
      $.$get$channelBuffers().push$3(channel, message, new A.Registrar_send_closure(new A._AsyncCompleter(t1, type$._AsyncCompleter_nullable_ByteData)));
      return t1;
    },
    setMessageHandler$2(channel, handler) {
      var t1 = this._plugin_registry$_handlers;
      if (handler == null)
        t1.remove$1(0, channel);
      else
        t1.$indexSet(0, channel, handler);
    }
  };
  A.Registrar_send_closure.prototype = {
    call$1(reply) {
      var exception, stack, exception0, t1;
      try {
        this.completer.complete$1(0, reply);
      } catch (exception0) {
        exception = A.unwrapException(exception0);
        stack = A.getTraceFromException(exception0);
        t1 = A.ErrorDescription$("during a plugin-to-framework message");
        A.FlutterError_reportError(new A.FlutterErrorDetails(exception, stack, "flutter web plugins", t1, null, false));
      }
    },
    $signature: 3
  };
  A.PluginRegistry.prototype = {};
  A.TypeAdapter.prototype = {};
  A.BigIntAdapter.prototype = {
    get$typeId() {
      return 17;
    }
  };
  A.DateTimeAdapter.prototype = {
    get$typeId() {
      return 16;
    }
  };
  A.DateTimeWithTimezoneAdapter.prototype = {
    get$typeId() {
      return 18;
    }
  };
  A.HiveImpl.prototype = {};
  A.ResolvedAdapter.prototype = {};
  A.TypeRegistryImpl.prototype = {
    registerAdapter$1$2$internal(adapter, internal, $T) {
      var typeId;
      if (A.createRuntimeType($T) === B.Type_dynamic_PLF || A.createRuntimeType($T) === B.Type_Object_QJv)
        A.print("Registering type adapters for dynamic type is must be avoided, otherwise all the write requests to Hive will be handled by given adapter. Please explicitly provide adapter type on registerAdapter method to avoid this kind of issues. For example if you want to register MyTypeAdapter for MyType class you can call like this: registerAdapter<MyType>(MyTypeAdapter())");
      typeId = adapter.get$typeId();
      this._typeAdapters.$indexSet(0, typeId, new A.ResolvedAdapter(adapter, typeId, $T._eval$1("ResolvedAdapter<0>")));
    }
  };
  A.MethodChannelMobileScanner.prototype = {};
  A.MobileScannerPlatform.prototype = {};
  A.MobileScannerWeb.prototype = {};
  A.PlatformInterface.prototype = {
    PlatformInterface$1$token(token) {
      $.$get$PlatformInterface__instanceTokens().$indexSet(0, this, token);
    }
  };
  A.SharePlusWebPlugin.prototype = {};
  A.MethodChannelShare.prototype = {};
  A.SharePlatform.prototype = {};
  A.MethodChannelSharedPreferencesStore.prototype = {};
  A.SharedPreferencesStorePlatform.prototype = {};
  A.SharedPreferencesPlugin.prototype = {};
  A.MethodChannelUrlLauncher.prototype = {};
  A.UrlLauncherPlatform.prototype = {};
  A.UrlLauncherPlugin.prototype = {};
  A.Matrix40.prototype = {
    setFrom$1(arg) {
      var argStorage = arg._vector_math_64$_m4storage,
        t1 = this._vector_math_64$_m4storage;
      t1[15] = argStorage[15];
      t1[14] = argStorage[14];
      t1[13] = argStorage[13];
      t1[12] = argStorage[12];
      t1[11] = argStorage[11];
      t1[10] = argStorage[10];
      t1[9] = argStorage[9];
      t1[8] = argStorage[8];
      t1[7] = argStorage[7];
      t1[6] = argStorage[6];
      t1[5] = argStorage[5];
      t1[4] = argStorage[4];
      t1[3] = argStorage[3];
      t1[2] = argStorage[2];
      t1[1] = argStorage[1];
      t1[0] = argStorage[0];
    },
    toString$0(_) {
      var _this = this;
      return "[0] " + _this.getRow$1(0).toString$0(0) + "\n[1] " + _this.getRow$1(1).toString$0(0) + "\n[2] " + _this.getRow$1(2).toString$0(0) + "\n[3] " + _this.getRow$1(3).toString$0(0) + "\n";
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Matrix40) {
        t1 = this._vector_math_64$_m4storage;
        t2 = t1[0];
        t3 = other._vector_math_64$_m4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8] && t1[9] === t3[9] && t1[10] === t3[10] && t1[11] === t3[11] && t1[12] === t3[12] && t1[13] === t3[13] && t1[14] === t3[14] && t1[15] === t3[15];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._vector_math_64$_m4storage);
    },
    getRow$1(row) {
      var t1 = new Float64Array(4),
        t2 = this._vector_math_64$_m4storage;
      t1[0] = t2[row];
      t1[1] = t2[4 + row];
      t1[2] = t2[8 + row];
      t1[3] = t2[12 + row];
      return new A.Vector4(t1);
    },
    setIdentity$0() {
      var t1 = this._vector_math_64$_m4storage;
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 0;
      t1[5] = 1;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 0;
      t1[9] = 0;
      t1[10] = 1;
      t1[11] = 0;
      t1[12] = 0;
      t1[13] = 0;
      t1[14] = 0;
      t1[15] = 1;
    },
    copyInverse$1(arg) {
      var invDet, t1, t2, t3,
        argStorage = arg._vector_math_64$_m4storage,
        a00 = argStorage[0],
        a01 = argStorage[1],
        a02 = argStorage[2],
        a03 = argStorage[3],
        a10 = argStorage[4],
        a11 = argStorage[5],
        a12 = argStorage[6],
        a13 = argStorage[7],
        a20 = argStorage[8],
        a21 = argStorage[9],
        a22 = argStorage[10],
        a23 = argStorage[11],
        a30 = argStorage[12],
        a31 = argStorage[13],
        a32 = argStorage[14],
        a33 = argStorage[15],
        b00 = a00 * a11 - a01 * a10,
        b01 = a00 * a12 - a02 * a10,
        b02 = a00 * a13 - a03 * a10,
        b03 = a01 * a12 - a02 * a11,
        b04 = a01 * a13 - a03 * a11,
        b05 = a02 * a13 - a03 * a12,
        b06 = a20 * a31 - a21 * a30,
        b07 = a20 * a32 - a22 * a30,
        b08 = a20 * a33 - a23 * a30,
        b09 = a21 * a32 - a22 * a31,
        b10 = a21 * a33 - a23 * a31,
        b11 = a22 * a33 - a23 * a32,
        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
      if (det === 0) {
        this.setFrom$1(arg);
        return 0;
      }
      invDet = 1 / det;
      t1 = this._vector_math_64$_m4storage;
      t1[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;
      t1[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;
      t1[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;
      t1[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;
      t2 = -a10;
      t1[4] = (t2 * b11 + a12 * b08 - a13 * b07) * invDet;
      t1[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;
      t3 = -a30;
      t1[6] = (t3 * b05 + a32 * b02 - a33 * b01) * invDet;
      t1[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;
      t1[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;
      t1[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;
      t1[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;
      t1[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;
      t1[12] = (t2 * b09 + a11 * b07 - a12 * b06) * invDet;
      t1[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;
      t1[14] = (t3 * b03 + a31 * b01 - a32 * b00) * invDet;
      t1[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;
      return det;
    },
    multiply$1(_, arg) {
      var t1 = this._vector_math_64$_m4storage,
        m00 = t1[0],
        m01 = t1[4],
        m02 = t1[8],
        m03 = t1[12],
        m10 = t1[1],
        m11 = t1[5],
        m12 = t1[9],
        m13 = t1[13],
        m20 = t1[2],
        m21 = t1[6],
        m22 = t1[10],
        m23 = t1[14],
        m30 = t1[3],
        m31 = t1[7],
        m32 = t1[11],
        m33 = t1[15],
        argStorage = arg._vector_math_64$_m4storage,
        n00 = argStorage[0],
        n01 = argStorage[4],
        n02 = argStorage[8],
        n03 = argStorage[12],
        n10 = argStorage[1],
        n11 = argStorage[5],
        n12 = argStorage[9],
        n13 = argStorage[13],
        n20 = argStorage[2],
        n21 = argStorage[6],
        n22 = argStorage[10],
        n23 = argStorage[14],
        n30 = argStorage[3],
        n31 = argStorage[7],
        n32 = argStorage[11],
        n33 = argStorage[15];
      t1[0] = m00 * n00 + m01 * n10 + m02 * n20 + m03 * n30;
      t1[4] = m00 * n01 + m01 * n11 + m02 * n21 + m03 * n31;
      t1[8] = m00 * n02 + m01 * n12 + m02 * n22 + m03 * n32;
      t1[12] = m00 * n03 + m01 * n13 + m02 * n23 + m03 * n33;
      t1[1] = m10 * n00 + m11 * n10 + m12 * n20 + m13 * n30;
      t1[5] = m10 * n01 + m11 * n11 + m12 * n21 + m13 * n31;
      t1[9] = m10 * n02 + m11 * n12 + m12 * n22 + m13 * n32;
      t1[13] = m10 * n03 + m11 * n13 + m12 * n23 + m13 * n33;
      t1[2] = m20 * n00 + m21 * n10 + m22 * n20 + m23 * n30;
      t1[6] = m20 * n01 + m21 * n11 + m22 * n21 + m23 * n31;
      t1[10] = m20 * n02 + m21 * n12 + m22 * n22 + m23 * n32;
      t1[14] = m20 * n03 + m21 * n13 + m22 * n23 + m23 * n33;
      t1[3] = m30 * n00 + m31 * n10 + m32 * n20 + m33 * n30;
      t1[7] = m30 * n01 + m31 * n11 + m32 * n21 + m33 * n31;
      t1[11] = m30 * n02 + m31 * n12 + m32 * n22 + m33 * n32;
      t1[15] = m30 * n03 + m31 * n13 + m32 * n23 + m33 * n33;
    },
    perspectiveTransform$1(arg) {
      var argStorage = arg._v3storage,
        t1 = this._vector_math_64$_m4storage,
        t2 = t1[0],
        t3 = argStorage[0],
        t4 = t1[4],
        t5 = argStorage[1],
        t6 = t1[8],
        t7 = argStorage[2],
        t8 = t1[12],
        t9 = t1[1],
        t10 = t1[5],
        t11 = t1[9],
        t12 = t1[13],
        t13 = t1[2],
        t14 = t1[6],
        t15 = t1[10],
        t16 = t1[14],
        w_ = 1 / (t1[3] * t3 + t1[7] * t5 + t1[11] * t7 + t1[15]);
      argStorage[0] = (t2 * t3 + t4 * t5 + t6 * t7 + t8) * w_;
      argStorage[1] = (t9 * t3 + t10 * t5 + t11 * t7 + t12) * w_;
      argStorage[2] = (t13 * t3 + t14 * t5 + t15 * t7 + t16) * w_;
      return arg;
    }
  };
  A.Vector3.prototype = {
    setValues$3(x, y, z) {
      var t1 = this._v3storage;
      t1[0] = x;
      t1[1] = y;
      t1[2] = z;
    },
    setFrom$1(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      t1[0] = otherStorage[0];
      t1[1] = otherStorage[1];
      t1[2] = otherStorage[2];
    },
    toString$0(_) {
      var t1 = this._v3storage;
      return "[" + A.S(t1[0]) + "," + A.S(t1[1]) + "," + A.S(t1[2]) + "]";
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Vector3) {
        t1 = this._v3storage;
        t2 = t1[0];
        t3 = other._v3storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._v3storage);
    },
    $sub(_, other) {
      var argStorage,
        t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      argStorage = other._v3storage;
      t1[0] = t1[0] - argStorage[0];
      t1[1] = t1[1] - argStorage[1];
      t1[2] = t1[2] - argStorage[2];
      return t2;
    },
    get$length(_) {
      var t1 = this._v3storage,
        t2 = t1[0],
        t3 = t1[1];
      t1 = t1[2];
      return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
    },
    dot$1(other) {
      var otherStorage = other._v3storage,
        t1 = this._v3storage;
      return t1[0] * otherStorage[0] + t1[1] * otherStorage[1] + t1[2] * otherStorage[2];
    },
    scaled$1(arg) {
      var t1 = new Float64Array(3),
        t2 = new A.Vector3(t1);
      t2.setFrom$1(this);
      t1[2] = t1[2] * arg;
      t1[1] = t1[1] * arg;
      t1[0] = t1[0] * arg;
      return t2;
    }
  };
  A.Vector4.prototype = {
    toString$0(_) {
      var t1 = this._v4storage;
      return A.S(t1[0]) + "," + A.S(t1[1]) + "," + A.S(t1[2]) + "," + A.S(t1[3]);
    },
    $eq(_, other) {
      var t1, t2, t3;
      if (other == null)
        return false;
      if (other instanceof A.Vector4) {
        t1 = this._v4storage;
        t2 = t1[0];
        t3 = other._v4storage;
        t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3];
      } else
        t1 = false;
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hashAll(this._v4storage);
    },
    get$length(_) {
      var t1 = this._v4storage,
        t2 = t1[0],
        t3 = t1[1],
        t4 = t1[2];
      t1 = t1[3];
      return Math.sqrt(t2 * t2 + t3 * t3 + t4 * t4 + t1 * t1);
    }
  };
  A.main_closure0.prototype = {
    call$0() {
      return A.main0();
    },
    $signature: 0
  };
  A.main_closure.prototype = {
    call$0() {
      var t4, target, targetElement, _null = null,
        registrar = $.$get$webPluginRegistrar(),
        t1 = $.$get$FilePicker__token(),
        t2 = new A.FilePickerWeb(),
        t3 = $.$get$PlatformInterface__instanceTokens();
      t3.$indexSet(0, t2, t1);
      t4 = self;
      target = t4.document.querySelector("#__file_picker_web-file-input");
      if (target == null) {
        targetElement = t4.document.createElement("flt-file-picker-inputs");
        targetElement.id = "__file_picker_web-file-input";
        t4.document.querySelector("body").toString;
        target = targetElement;
      }
      t2.__FilePickerWeb__target_A = target;
      A.PlatformInterface__verify(t2, t1, false);
      $.FilePicker____instance._value = t2;
      A.FirebaseCoreWeb_registerService("analytics");
      t1 = $.$get$FirebaseAnalyticsPlatform__token();
      t2 = new A.FirebaseAnalyticsWeb();
      t3.$indexSet(0, t2, t1);
      A.PlatformInterface__verify(t2, t1, true);
      t1 = $.$get$FirebasePlatform__token();
      t2 = new A.FirebaseCoreWeb();
      t3.$indexSet(0, t2, t1);
      A.PlatformInterface__verify(t2, t1, true);
      $.FirebasePlatform__instance = t2;
      new A.MethodChannel("flutter_native_splash", B.C_StandardMethodCodec0, registrar).setMethodCallHandler$1(new A.FlutterNativeSplashWeb().get$handleMethodCall());
      t1 = $.$get$MobileScannerPlatform__token();
      t2 = new A.MobileScannerWeb(new A._AsyncBroadcastStreamController(_null, _null, type$._AsyncBroadcastStreamController_BarcodeCapture), new A._AsyncBroadcastStreamController(_null, _null, type$._AsyncBroadcastStreamController_JSObject));
      t3.$indexSet(0, t2, t1);
      A.PlatformInterface__verify(t2, t1, false);
      $.MobileScannerPlatform__instance = t2;
      A.UrlLauncherPlugin$();
      t1 = t4.window.navigator;
      t2 = $.$get$SharePlatform__token();
      t1 = new A.SharePlusWebPlugin(t1);
      t3.$indexSet(0, t1, t2);
      A.PlatformInterface__verify(t1, t2, false);
      $.SharePlatform__instance = t1;
      t1 = $.$get$SharedPreferencesStorePlatform__token();
      t2 = new A.SharedPreferencesPlugin();
      t3.$indexSet(0, t2, t1);
      A.PlatformInterface__verify(t2, t1, true);
      $.SharedPreferencesStorePlatform__instance = t2;
      t1 = A.UrlLauncherPlugin$();
      A.PlatformInterface__verify(t1, $.$get$UrlLauncherPlatform__token(), true);
      $.UrlLauncherPlatform__instance = t1;
      $.$get$platformViewRegistry();
      $.$get$PlatformViewManager_instance().registerFactory$3$isVisible("__url_launcher::link", A.link_LinkViewController__viewFactory$closure(), false);
      $.pluginMessageCallHandler = registrar.get$handleFrameworkMessage();
    },
    $signature: 0
  };
  (function aliases() {
    var _ = A.DefaultTextEditingStrategy.prototype;
    _.super$DefaultTextEditingStrategy$initializeTextEditing = _.initializeTextEditing$3$onAction$onChange;
    _.super$DefaultTextEditingStrategy$updateElementStyle = _.updateElementStyle$1;
    _.super$DefaultTextEditingStrategy$disable = _.disable$0;
    _ = A.DimensionsProvider.prototype;
    _.super$DimensionsProvider$close = _.close$0;
    _ = A.EngineFlutterView.prototype;
    _.super$EngineFlutterView$dispose = _.dispose$0;
    _ = J.Interceptor.prototype;
    _.super$Interceptor$toString = _.toString$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A.JsLinkedHashMap.prototype;
    _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
    _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
    _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
    _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
    _ = A._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = A._HashMap.prototype;
    _.super$_HashMap$_containsKey = _._containsKey$1;
    _.super$_HashMap$_get = _._get$1;
    _.super$_HashMap$_set = _._set$2;
    _.super$_HashMap$_remove = _._remove$1;
    _ = A.ListBase.prototype;
    _.super$ListBase$setRange = _.setRange$4;
    _ = A.Converter.prototype;
    _.super$Converter$fuse = _.fuse$1$1;
    _ = A._StringSinkConversionSink.prototype;
    _.super$_StringSinkConversionSink$close = _.close$0;
    _ = A.Object.prototype;
    _.super$Object$$eq = _.$eq;
    _.super$Object$toString = _.toString$0;
    _ = A.Animation0.prototype;
    _.super$Animation$toStringDetails = _.toStringDetails$0;
    _ = A.ParametricCurve.prototype;
    _.super$ParametricCurve$transform = _.transform$1;
    _ = A.BindingBase.prototype;
    _.super$BindingBase$initInstances = _.initInstances$0;
    _.super$BindingBase$initServiceExtensions = _.initServiceExtensions$0;
    _ = A.ChangeNotifier.prototype;
    _.super$ChangeNotifier$dispose = _.dispose$0;
    _ = A.ValueNotifier.prototype;
    _.super$ValueNotifier$value = _.set$value;
    _ = A.Diagnosticable.prototype;
    _.super$Diagnosticable$debugFillProperties = _.debugFillProperties$1;
    _ = A.DiagnosticableTreeMixin.prototype;
    _.super$DiagnosticableTreeMixin$toStringDeep = _.toStringDeep$3$minLevel$prefixLineOne$prefixOtherLines;
    _ = A.GestureBinding.prototype;
    _.super$GestureBinding$hitTestInView = _.hitTestInView$3;
    _.super$GestureBinding$dispatchEvent = _.dispatchEvent$2;
    _ = A.InlineSpan.prototype;
    _.super$InlineSpan$$eq = _.$eq;
    _ = A.RendererBinding.prototype;
    _.super$RendererBinding$handleMetricsChanged = _.handleMetricsChanged$0;
    _.super$RendererBinding$handleTextScaleFactorChanged = _.handleTextScaleFactorChanged$0;
    _.super$RendererBinding$handlePlatformBrightnessChanged = _.handlePlatformBrightnessChanged$0;
    _.super$RendererBinding$drawFrame = _.drawFrame$0;
    _ = A.SchedulerBinding.prototype;
    _.super$SchedulerBinding$handleAppLifecycleStateChanged = _.handleAppLifecycleStateChanged$1;
    _ = A.AssetBundle.prototype;
    _.super$AssetBundle$loadString = _.loadString$2$cache;
    _ = A.ServicesBinding.prototype;
    _.super$ServicesBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _.super$ServicesBinding$handleSystemMessage = _.handleSystemMessage$1;
    _.super$ServicesBinding$handleViewFocusChanged = _.handleViewFocusChanged$1;
    _ = A.StandardMessageCodec0.prototype;
    _.super$StandardMessageCodec$writeValue = _.writeValue$2;
    _.super$StandardMessageCodec$readValueOfType = _.readValueOfType$2;
    _ = A.MethodChannel.prototype;
    _.super$MethodChannel$_invokeMethod = _._invokeMethod$1$3$arguments$missingOk;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding$initInstances = _.initInstances$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding$handleMemoryPressure = _.handleMemoryPressure$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding$initInstances = _.initInstances$0;
    _ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding.prototype;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initInstances = _.initInstances$0;
    _.super$_WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding$initServiceExtensions = _.initServiceExtensions$0;
    _ = A.FocusTraversalPolicy.prototype;
    _.super$FocusTraversalPolicy$invalidateScopeData = _.invalidateScopeData$1;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static = hunkHelpers.installStaticTearOff,
      _static_1 = hunkHelpers._static_1,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_1_i = hunkHelpers._instance_1i,
      _instance_2_u = hunkHelpers._instance_2u,
      _static_0 = hunkHelpers._static_0,
      _instance_0_i = hunkHelpers._instance_0i,
      _instance = hunkHelpers.installInstanceTearOff;
    _static_2(A, "_engine__canvasKitWasmModuleUrl$closure", "canvasKitWasmModuleUrl", 194);
    _static(A, "_engine___defaultFactory$closure", 1, function() {
      return {params: null};
    }, ["call$2$params", "call$1"], ["_defaultFactory", function(viewId) {
      return A._defaultFactory(viewId, null);
    }], 195, 0);
    _static_1(A, "_engine___noopCallback$closure", "_noopCallback", 3);
    _static_1(A, "_engine___emptyCallback$closure", "_emptyCallback", 10);
    _instance_0_u(A.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 0);
    _instance_1_u(A.CkCanvas.prototype, "get$drawPicture", "drawPicture$1", 167);
    _instance_1_u(A.HtmlViewEmbedder.prototype, "get$disposeView", "disposeView$1", 14);
    _instance_1_u(A.CkNWayCanvas.prototype, "get$addCanvas", "addCanvas$1", 84);
    var _;
    _instance_1_u(_ = A.CanvasKitRenderer.prototype, "get$_onViewCreated", "_onViewCreated$1", 14);
    _instance_1_u(_, "get$_onViewDisposed", "_onViewDisposed$1", 14);
    _instance_1_u(_ = A.Surface.prototype, "get$_contextRestoredListener", "_contextRestoredListener$1", 1);
    _instance_1_u(_, "get$_contextLostListener", "_contextLostListener$1", 1);
    _instance_1_i(_ = A.FallbackFontDownloadQueue.prototype, "get$add", "add$1", 191);
    _instance_0_u(_, "get$startDownloads", "startDownloads$0", 6);
    _instance_1_u(A.KeyboardBinding.prototype, "get$_onKeyData", "_onKeyData$1", 32);
    _instance_1_i(A.MultiEntriesBrowserHistory.prototype, "get$onPopState", "onPopState$1", 9);
    _instance_1_i(A.SingleEntryBrowserHistory.prototype, "get$onPopState", "onPopState$1", 9);
    _instance_1_u(A.HighContrastSupport.prototype, "get$_onHighContrastChange", "_onHighContrastChange$1", 1);
    _instance_0_u(_ = A.EnginePlatformDispatcher.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$invokeOnViewFocusChange", "invokeOnViewFocusChange$1", 53);
    _instance_1_u(_, "get$_setAppLifecycleState", "_setAppLifecycleState$1", 34);
    _instance_1_u(_, "get$_updateHighContrast", "_updateHighContrast$1", 48);
    _instance_1_u(A._BrowserAppLifecycleState.prototype, "get$_onViewCountChanged", "_onViewCountChanged$1", 10);
    _instance_1_u(A.ViewFocusBinding.prototype, "get$_handleViewCreated", "_handleViewCreated$1", 14);
    _instance_2_u(_ = A.ClickDebouncer.prototype, "get$onPointerData", "onPointerData$2", 156);
    _instance_0_u(_, "get$_onTimerExpired", "_onTimerExpired$0", 0);
    _instance_1_u(_ = A.CompositionAwareMixin.prototype, "get$_handleCompositionStart", "_handleCompositionStart$1", 1);
    _instance_1_u(_, "get$_handleCompositionUpdate", "_handleCompositionUpdate$1", 1);
    _instance_1_u(_, "get$_handleCompositionEnd", "_handleCompositionEnd$1", 1);
    _instance_1_u(_ = A.DefaultTextEditingStrategy.prototype, "get$handleChange", "handleChange$1", 1);
    _instance_1_u(_, "get$handleBeforeInput", "handleBeforeInput$1", 1);
    _instance_1_u(_, "get$handleBlur", "handleBlur$1", 1);
    _instance_1_u(_, "get$maybeSendAction", "maybeSendAction$1", 1);
    _instance_1_u(A.FullPageDimensionsProvider.prototype, "get$_onVisualViewportResize", "_onVisualViewportResize$1", 1);
    _instance_1_u(A.DisplayDprStream.prototype, "get$_onDprMediaQueryChange", "_onDprMediaQueryChange$1", 1);
    _instance_1_u(A.FlutterViewManager.prototype, "get$disposeAndUnregisterView", "disposeAndUnregisterView$1", 43);
    _instance_0_u(_ = A.EngineFlutterView.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$_didResize", "_didResize$1", 113);
    _instance_0_u(A.EngineFlutterWindow.prototype, "get$dispose", "dispose$0", 0);
    _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 196);
    _instance_1_i(A._CastIterableBase.prototype, "get$contains", "contains$1", 12);
    _static_0(A, "_js_helper_Primitives_dateNow$closure", "Primitives_dateNow", 33);
    _instance_1_i(A.ConstantStringSet.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(A.GeneralConstantSet.prototype, "get$contains", "contains$1", 12);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 39);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 39);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 39);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_1(A, "async___nullDataHandler$closure", "_nullDataHandler", 10);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 41);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _instance_0_u(_ = A._BroadcastSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_1_i(A._BroadcastStreamController.prototype, "get$add", "add$1", 9);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 41);
    _instance_1_i(A._StreamController.prototype, "get$add", "add$1", 9);
    _instance_0_u(_ = A._ControllerSubscription.prototype, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_i(_ = A._BufferingStreamSubscription.prototype, "get$resume", "resume$0", 0);
    _instance_0_u(_, "get$_onPause", "_onPause$0", 0);
    _instance_0_u(_, "get$_onResume", "_onResume$0", 0);
    _instance_0_i(_ = A._DoneStreamSubscription.prototype, "get$resume", "resume$0", 0);
    _instance_0_u(_, "get$_onMicrotask", "_onMicrotask$0", 0);
    _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 50);
    _static_1(A, "collection___defaultHashCode$closure", "_defaultHashCode", 47);
    _instance_1_i(A._HashSet.prototype, "get$contains", "contains$1", 12);
    _instance_1_i(A._LinkedHashSet.prototype, "get$contains", "contains$1", 12);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 76);
    _instance_0_i(A._JsonDecoderSink.prototype, "get$close", "close$0", 0);
    _static_1(A, "core__identityHashCode$closure", "identityHashCode", 47);
    _static_2(A, "core__identical$closure", "identical", 50);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 37);
    _static_0(A, "core__Uri__createList$closure", "_Uri__createList", 200);
    _static_2(A, "core___toUnmodifiableStringList$closure", "_toUnmodifiableStringList", 201);
    _instance_1_i(A.Iterable.prototype, "get$contains", "contains$1", 12);
    _instance_1_u(A._StoredMessage.prototype, "get$invoke", "invoke$1", 3);
    _instance_0_u(A._Channel.prototype, "get$_drainStep", "_drainStep$0", 0);
    _instance(A.PointerData.prototype, "get$respond", 0, 0, null, ["call$1$allowPlatformDefault"], ["respond$1$allowPlatformDefault"], 104, 0, 0);
    _instance_1_u(A.MethodChannelFirebase.prototype, "get$_initializeFirebaseAppFromMap", "_initializeFirebaseAppFromMap$1", 107);
    _static_2(A, "firebase_core_web___handleException$closure", "_handleException", 202);
    _instance_1_u(A.AnimationController.prototype, "get$_animation_controller$_tick", "_animation_controller$_tick$1", 2);
    _static(A, "assertions_FlutterError_dumpErrorToConsole$closure", 1, null, ["call$2$forceReport", "call$1"], ["FlutterError_dumpErrorToConsole", function(details) {
      return A.FlutterError_dumpErrorToConsole(details, false);
    }], 203, 0);
    _static_1(A, "assertions_DiagnosticsStackTrace__createStackFrame$closure", "DiagnosticsStackTrace__createStackFrame", 204);
    _instance_0_u(A.ChangeNotifier.prototype, "get$notifyListeners", "notifyListeners$0", 0);
    _instance_1_i(A.DiagnosticPropertiesBuilder.prototype, "get$add", "add$1", 81);
    _static_1(A, "stack_frame_StackFrame_fromStackTraceLine$closure", "StackFrame_fromStackTraceLine", 205);
    _instance_1_u(_ = A.GestureBinding.prototype, "get$_handlePointerDataPacket", "_handlePointerDataPacket$1", 126);
    _instance_1_u(_, "get$_devicePixelRatioForView", "_devicePixelRatioForView$1", 127);
    _instance_1_u(_, "get$_handlePointerEventImmediately", "_handlePointerEventImmediately$1", 63);
    _instance_0_u(_, "get$_handleSampleTimeChanged", "_handleSampleTimeChanged$0", 0);
    _static_1(A, "binding0__DefaultRootPipelineOwner__onSemanticsUpdate$closure", "_DefaultRootPipelineOwner__onSemanticsUpdate", 206);
    _instance_1_u(_ = A.RendererBinding.prototype, "get$_handleWebFirstFrame", "_handleWebFirstFrame$1", 2);
    _instance_1_u(_, "get$_handlePersistentFrameCallback", "_handlePersistentFrameCallback$1", 2);
    _instance_0_u(A.PipelineOwner.prototype, "get$_updateSemanticsOwner", "_updateSemanticsOwner$0", 0);
    _static_2(A, "binding_SchedulerBinding__taskSorter$closure", "SchedulerBinding__taskSorter", 207);
    _static(A, "binding__defaultSchedulingStrategy$closure", 0, null, ["call$2$priority$scheduler"], ["defaultSchedulingStrategy"], 208, 0);
    _instance_1_u(_ = A.SchedulerBinding.prototype, "get$_executeTimingsCallbacks", "_executeTimingsCallbacks$1", 40);
    _instance_1_u(_, "get$_handleBeginFrame", "_handleBeginFrame$1", 2);
    _instance_0_u(_, "get$_handleDrawFrame", "_handleDrawFrame$0", 0);
    _instance_1_u(_, "get$_profileFramePostEvent", "_profileFramePostEvent$1", 143);
    _instance_0_u(_ = A.SemanticsBinding.prototype, "get$_didDisposeSemanticsHandle", "_didDisposeSemanticsHandle$0", 0);
    _instance_0_u(_, "get$_handleSemanticsEnabledChanged", "_handleSemanticsEnabledChanged$0", 0);
    _instance_1_u(_, "get$_handleSemanticsActionEvent", "_handleSemanticsActionEvent$1", 145);
    _static_1(A, "binding2_ServicesBinding__parseLicenses$closure", "ServicesBinding__parseLicenses", 209);
    _instance_0_u(_ = A.ServicesBinding.prototype, "get$_addLicenses", "_addLicenses$0", 149);
    _instance_1_u(_, "get$_handleLifecycleMessage", "_handleLifecycleMessage$1", 150);
    _instance_1_u(_, "get$_handlePlatformMessage", "_handlePlatformMessage$1", 27);
    _instance_1_u(_ = A.KeyEventManager.prototype, "get$handleKeyData", "handleKeyData$1", 32);
    _instance_1_u(_, "get$handleRawKeyMessage", "handleRawKeyMessage$1", 153);
    _instance_1_u(_, "get$_convertRawEventAndStore", "_convertRawEventAndStore$1", 154);
    _instance_1_u(A.RestorationManager.prototype, "get$_methodHandler", "_methodHandler$1", 55);
    _instance_1_u(_ = A.RestorationBucket.prototype, "get$_restoration$_dropChild", "_restoration$_dropChild$1", 52);
    _instance_1_u(_, "get$_recursivelyUpdateManager", "_recursivelyUpdateManager$1", 52);
    _instance_1_u(A.TextInput.prototype, "get$_loudlyHandleTextInputInvocation", "_loudlyHandleTextInputInvocation$1", 27);
    _instance_0_u(_ = A.WidgetsBinding.prototype, "get$handleLocaleChanged", "handleLocaleChanged$0", 0);
    _instance_1_u(_, "get$_handleNavigationInvocation", "_handleNavigationInvocation$1", 171);
    _instance_1_u(_, "get$_handleBackGestureInvocation", "_handleBackGestureInvocation$1", 27);
    _instance_0_u(_, "get$_handleBuildScheduled", "_handleBuildScheduled$0", 0);
    _instance_0_u(_ = A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding.prototype, "get$handleMetricsChanged", "handleMetricsChanged$0", 0);
    _instance_0_u(_, "get$handleTextScaleFactorChanged", "handleTextScaleFactorChanged$0", 0);
    _instance_0_u(_, "get$handlePlatformBrightnessChanged", "handlePlatformBrightnessChanged$0", 0);
    _instance_1_u(_, "get$handleAppLifecycleStateChanged", "handleAppLifecycleStateChanged$1", 34);
    _instance_1_u(_, "get$handleViewFocusChanged", "handleViewFocusChanged$1", 53);
    _static_1(A, "focus_manager_FocusNode__allowDescendantsToBeFocused$closure", "FocusNode__allowDescendantsToBeFocused", 30);
    _instance_1_u(_ = A.FocusManager.prototype, "get$_appLifecycleChange", "_appLifecycleChange$1", 34);
    _instance_0_u(_, "get$applyFocusChangesIfNeeded", "applyFocusChangesIfNeeded$0", 0);
    _instance_1_u(_ = A._HighlightModeManager.prototype, "get$handlePointerEvent", "handlePointerEvent$1", 63);
    _instance_1_u(_, "get$handleKeyMessage", "handleKeyMessage$1", 177);
    _static(A, "focus_traversal_FocusTraversalPolicy_defaultTraversalRequestFocusCallback$closure", 1, null, ["call$5$alignment$alignmentPolicy$curve$duration", "call$1", "call$3$curve$duration"], ["FocusTraversalPolicy_defaultTraversalRequestFocusCallback", function(node) {
      var _null = null;
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, _null, _null, _null, _null);
    }, function(node, curve, duration) {
      return A.FocusTraversalPolicy_defaultTraversalRequestFocusCallback(node, null, null, curve, duration);
    }], 210, 0);
    _static_2(A, "framework_Element__sort$closure", "Element__sort", 211);
    _instance_1_u(_ = A._InactiveElements.prototype, "get$_unmount", "_unmount$1", 61);
    _instance_0_u(_, "get$_unmountAll", "_unmountAll$0", 0);
    _instance_1_u(A.DefaultPlatformMenuDelegate.prototype, "get$_methodCallHandler", "_methodCallHandler$1", 55);
    _instance_0_u(_ = A.TextSelectionOverlay.prototype, "get$_updateTextSelectionOverlayVisibilities", "_updateTextSelectionOverlayVisibilities$0", 0);
    _instance_1_u(_, "get$_handleSelectionEndHandleDragStart", "_handleSelectionEndHandleDragStart$1", 29);
    _instance_1_u(_, "get$_handleSelectionEndHandleDragUpdate", "_handleSelectionEndHandleDragUpdate$1", 22);
    _instance_1_u(_, "get$_handleSelectionStartHandleDragStart", "_handleSelectionStartHandleDragStart$1", 29);
    _instance_1_u(_, "get$_handleSelectionStartHandleDragUpdate", "_handleSelectionStartHandleDragUpdate$1", 22);
    _instance_1_u(_, "get$_handleAnyDragEnd", "_handleAnyDragEnd$1", 36);
    _instance_1_u(_ = A.SelectionOverlay.prototype, "get$_handleStartHandleDragStart", "_handleStartHandleDragStart$1", 29);
    _instance_1_u(_, "get$_handleStartHandleDragUpdate", "_handleStartHandleDragUpdate$1", 22);
    _instance_1_u(_, "get$_handleStartHandleDragEnd", "_handleStartHandleDragEnd$1", 36);
    _instance_1_u(_, "get$_handleEndHandleDragStart", "_handleEndHandleDragStart$1", 29);
    _instance_1_u(_, "get$_handleEndHandleDragUpdate", "_handleEndHandleDragUpdate$1", 22);
    _instance_1_u(_, "get$_handleEndHandleDragEnd", "_handleEndHandleDragEnd$1", 36);
    _instance_1_u(_, "get$_buildToolbar", "_buildToolbar$1", 7);
    _instance_1_u(A.FlutterNativeSplashWeb.prototype, "get$handleMethodCall", "handleMethodCall$1", 27);
    _instance(A.Registrar.prototype, "get$handleFrameworkMessage", 0, 3, null, ["call$3"], ["handleFrameworkMessage$3"], 193, 0, 0);
    _static_1(A, "link_LinkViewController__viewFactory$closure", "LinkViewController__viewFactory", 212);
    _static(A, "print__debugPrintThrottled$closure", 1, null, ["call$2$wrapWidth", "call$1"], ["debugPrintThrottled", function(message) {
      return A.debugPrintThrottled(message, null);
    }], 141, 0);
    _static_0(A, "print___debugPrintTask$closure", "_debugPrintTask", 0);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _mixinHard = hunkHelpers.mixinHard,
      _inheritMany = hunkHelpers.inheritMany,
      _inherit = hunkHelpers.inherit;
    _inheritMany(null, [A.Object, A.StatefulElement, A.InheritedElement, A.RenderObjectElement, A.InheritedTheme, A.NavigatorState]);
    _inheritMany(A.Object, [A.AlarmClock, A.AppBootstrap, A.Closure, A.CkCanvas, A.DisplayCanvasFactory, A.HtmlViewEmbedder, A.Iterable, A.EmbedderFrameContext, A.SkiaFontCollection, A.RegisteredFont, A.UnregisteredFont, A.FontDownloadResult, A.SkiaFallbackRegistry, A.Layer, A.PrerollContext, A.PaintContext, A.LayerScene, A.LayerSceneBuilder, A.LayerTree, A.Frame, A.CompositorContext, A.Rasterizer, A.ViewRasterizer, A.CkNWayCanvas, A.NativeMemoryFinalizationRegistry, A.UniqueRef, A.Rendering, A.RenderingEntity, A.CkPaint, A.CkPicture, A.CkPictureRecorder, A.DisplayCanvas, A.RenderQueue, A._Enum, A.CanvasKitRenderer, A.CkSurface, A.CkParagraphStyle, A.CkTextStyle, A.CkStrutStyle, A.CkParagraph, A.CkLineMetrics, A.CkParagraphBuilder, A.Error, A.ClipboardMessageHandler, A.ClipboardAPICopyStrategy, A.ClipboardAPIPasteStrategy, A.ExecCommandCopyStrategy, A.ExecCommandPasteStrategy, A.FlutterConfiguration, A.Display, A.ScreenOrientation, A.HttpFetchResponseImpl, A.HttpFetchPayloadImpl, A.HttpFetchNoPayloadError, A.HttpFetchError, A.DomSubscription, A.DomPoint, A._DomListIterator, A._DomTouchListIterator, A.DomIteratorWrapper, A.FontFallbackManager, A._UnicodePropertyLookup, A.FallbackFontDownloadQueue, A.FontAsset, A.FontFamily, A.FontManifest, A.AssetFontsResult, A.FrameTimingRecorder, A.HtmlRenderer, A.ResourceManager, A.KeyboardBinding, A.FlutterHtmlKeyboardEvent, A.KeyboardConverter, A.ContextMenu, A.MouseCursor, A.BrowserHistory, A.NotoFont, A.FallbackFontComponent, A.HighContrastSupport, A.PlatformDispatcher, A.ViewConfiguration0, A.PlatformConfiguration, A.AppLifecycleState0, A.ViewFocusBinding, A.PlatformViewManager, A.PlatformViewMessageHandler, A.SafariPointerEventWorkaround, A.PointerBinding, A.ClickDebouncer, A.PointerSupportDetector, A.Listener, A._BaseAdapter, A._WheelEventListenerMixin, A._SanitizedDetails, A._ButtonSanitizer, A._PointerDeviceState, A._GlobalPointerState, A.PointerDataConverter, A.Profiler, A.RawKeyboard, A.AccessibilityAnnouncements, A.EngineAccessibilityFeatures, A.SemanticsUpdate, A.EngineSemantics, A.EngineSemanticsOwner, A.SemanticsHelper, A.SemanticsEnabler, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.ListBase, A.MethodCall0, A.JSONMessageCodec, A.JSONMethodCodec, A.StandardMessageCodec, A.StandardMethodCodec, A.WriteBuffer0, A.ReadBuffer0, A.TextFragment, A.BrowserAutofillHints, A.CompositionAwareMixin, A.EngineInputAction, A.EngineInputType, A.TextCapitalizationConfig, A.EngineAutofillForm, A.AutofillInfo, A.TextEditingDeltaState, A.EditingState, A.InputConfiguration, A.TextInputCommand, A.TextEditingChannel, A.HybridTextEditing, A.EditableTextStyle, A.EditableTextGeometry, A.LruCache, A.BitmapSize, A.Matrix4, A.DimensionsProvider, A.DisplayDprStream, A.DomManager, A.CustomElementEmbeddingStrategy, A.FullPageEmbeddingStrategy, A.FlutterViewManager, A.GlobalHtmlAttributes, A.EngineFlutterView, A.ViewPadding, A.ViewConstraints, A.JS_CONST, J.Interceptor, J.ArrayIterator, A.CastIterator, A.MapBase, A.SentinelValue, A.ListIterator, A.MappedIterator, A.WhereIterator, A.ExpandIterator, A.TakeIterator, A.SkipIterator, A.SkipWhileIterator, A.EmptyIterator, A.FollowedByIterator, A.WhereTypeIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A._Record, A.MapView, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.SetBase, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.StringMatch, A._StringAllMatchesIterator, A._Cell, A._InitializedCell, A.Rti, A._FunctionParameters, A._Type, A._StringStream, A.LocaleKeymap, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A.Stream, A._BufferingStreamSubscription, A._BroadcastStreamController, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A._StreamController, A._SyncStreamControllerDispatch, A._AsyncStreamControllerDispatch, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A._HashSetIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._LinkedListIterator, A._UnmodifiableMapMixin, A._DoubleLinkedQueueEntry, A._DoubleLinkedQueueIterator, A._ListQueueIterator, A.StringConversionSink, A.Codec, A.Converter, A._Base64Encoder, A.ByteConversionSink, A.ChunkedConversionSink, A._SimpleCallbackSink, A._JsonStringifier, A._JsonPrettyPrintMixin, A._ClosableStringSink, A._StringConversionSinkAsStringSinkAdapter, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.Stopwatch, A.RuneIterator, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.Expando, A._FakeUserTag, A.ServiceExtensionResponse, A.TimelineTask, A._AsyncBlock, A._SyncBlock, A.CssStyleDeclarationBase, A.ImmutableListMixin, A.FixedSizeListIterator, A.NullRejectionException, A._JSSecureRandom, A.Endian, A._ChannelCallbackRecord, A._StoredMessage, A._Channel, A.ChannelBuffers, A.OffsetBase, A.Rect, A.KeyData, A.Color, A.FrameTiming, A.Locale, A.SemanticsActionEvent, A.PointerData, A.PointerDataPacket, A.SemanticsAction, A.SemanticsUpdateBuilder, A.GlyphInfo, A.TextDecoration, A.TextHeightBehavior, A.TextBox, A.TextPosition, A.TextRange, A.ParagraphConstraints, A.GestureSettings, A.AssetManager, A.BrowserDetection, A.BrowserPlatformLocation, A.HashUrlStrategy, A.PlatformViewRegistry, A.StringCharacterRange, A.Breaks, A.BackBreaks, A.DefaultEquality, A._MapEntry, A.MapEquality, A.HeapPriorityQueue, A.PlatformInterface, A.FirebaseApp, A.FirebaseException, A.FirebaseOptions, A.PigeonFirebaseOptions, A.PigeonInitializeResponse, A.StandardMessageCodec0, A.FirebaseCoreHostApi, A.FirebaseAppHostApi, A.FirebaseWebService, A.TrustedTypesException, A.JsObjectWrapper, A.Listenable, A.Simulation, A.ParametricCurve, A.AnimationEagerListenerMixin, A.AnimationLocalListenersMixin, A.AnimationLocalStatusListenersMixin, A.DiagnosticsNode, A._FlutterErrorDetails_Object_Diagnosticable, A.BindingBase, A.ChangeNotifier, A.TextTreeConfiguration, A._PrefixedStringBuilder, A._NoDefaultValue, A.TextTreeRenderer, A.DiagnosticPropertiesBuilder, A.Diagnosticable, A._DiagnosticableTree_Object_Diagnosticable, A.DiagnosticableTreeMixin, A.Key, A.LicenseEntry, A.WriteBuffer, A.ReadBuffer, A.StackFrame, A.GestureArenaManager, A._Resampler, A.GestureBinding, A._PointerEvent_Object_Diagnosticable, A._PointerEventDescription, A._AbstractPointerEvent, A._CopyPointerAddedEvent, A._CopyPointerRemovedEvent, A._CopyPointerHoverEvent, A._CopyPointerEnterEvent, A._CopyPointerExitEvent, A._CopyPointerDownEvent, A._CopyPointerMoveEvent, A._CopyPointerUpEvent, A._RespondablePointerEvent, A._CopyPointerScrollEvent, A._CopyPointerScrollInertiaCancelEvent, A._CopyPointerScaleEvent, A._CopyPointerPanZoomStartEvent, A._CopyPointerPanZoomUpdateEvent, A._CopyPointerPanZoomEndEvent, A._CopyPointerCancelEvent, A.HitTestEntry, A.HitTestResult, A.PointerRouter, A.PointerSignalResolver, A.PaintingBinding, A.ClipContext, A.EdgeInsetsGeometry, A.ImageCache, A._TextLayout, A._TextPainterLayoutCacheWithOffset, A._LineCaretMetrics, A._LinearTextScaler, A._TextStyle_Object_Diagnosticable, A.Tolerance, A.RendererBinding, A._PipelineOwner_Object_DiagnosticableTreeMixin, A.Constraints, A.TextSelectionPoint, A.AnnotationResult, A._MouseState, A.__MouseTrackerUpdateDetails_Object_Diagnosticable, A.ViewConfiguration, A.RevealedOffset, A._FrameCallbackEntry, A.SchedulerBinding, A.TickerFuture, A.TickerCanceled, A.SemanticsBinding, A.SemanticsHandle, A.AssetBundle, A.BinaryMessenger, A.ServicesBinding, A.BrowserContextMenu, A._KeyEvent_Object_Diagnosticable, A.HardwareKeyboard, A.KeyMessage, A.KeyEventManager, A.KeyboardInsertedContent, A._KeyboardKey_Object_Diagnosticable, A.MethodCall, A.PlatformException, A.MissingPluginException, A.StringCodec, A.JSONMessageCodec0, A.JSONMethodCodec0, A.StandardMethodCodec0, A.MouseCursorManager, A.MouseCursorSession, A._MouseCursor_Object_Diagnosticable, A._ProfiledBinaryMessenger, A._PlatformChannelStats, A.BasicMessageChannel, A.MethodChannel, A.EventChannel, A.PredictiveBackEvent, A._RawKeyEventData_Object_Diagnosticable, A._RawKeyEvent_Object_Diagnosticable, A.RawKeyboard0, A._ModifierSidePair, A.RestorationBucket, A.SuggestionSpan, A.SpellCheckResults, A.SystemUiOverlayStyle, A._TextEditingDelta_Object_Diagnosticable, A.TextInputType, A.RawFloatingCursorPoint, A.TextEditingValue, A.TextInputConnection, A.TextInput, A.TextInputControl, A.__PlatformTextInputControl_Object_TextInputControl, A._ActionDispatcher_Object_Diagnosticable, A.WidgetsBindingObserver, A.WidgetsBinding, A.ContextMenuController, A._KeyFrame, A._FocusNode_Object_DiagnosticableTreeMixin, A._FocusManager_Object_DiagnosticableTreeMixin, A._HighlightModeManager, A._FocusTraversalGroupInfo, A._FocusTraversalPolicy_Object_Diagnosticable, A.DirectionalFocusTraversalPolicyMixin, A.__ReadingOrderSortData_Object_Diagnosticable, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A._InactiveElements, A.BuildOwner, A.CapturedThemes, A.MagnifierInfo, A.MagnifierController, A.OverlayEntry, A.PlatformMenuDelegate, A.RouteInformation, A.TextSelectionOverlay, A.SelectionOverlay, A.FMTCObjectBoxBackend, A.FlutterNativeSplashWeb, A.TypeAdapter, A.TypeRegistryImpl, A.ResolvedAdapter, A.Matrix40, A.Vector3, A.Vector4]);
    _inheritMany(A.Closure, [A.Closure0Args, A.AppBootstrap_prepareEngineInitializer_closure0, A.AppBootstrap__prepareAppRunner_closure, A.AppBootstrap__prepareFlutterApp_closure, A.AppBootstrap__prepareFlutterApp_closure0, A._canvasKitJsUrls_closure, A.HtmlViewEmbedder_getOverlayCanvases_closure, A.HtmlViewEmbedder__updateDomForNewRendering_closure, A.Closure2Args, A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont, A.MultiSurfaceRasterizer_setResourceCacheMaxBytes_closure, A._finalizationRegistry_closure, A._computeCombinedFontFamilies_closure, A.ClipboardMessageHandler_setDataMethodCall_closure, A.ClipboardMessageHandler_setDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall_closure, A.ClipboardMessageHandler_getDataMethodCall_closure0, A.ClipboardMessageHandler_getDataMethodCall__closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure, A.ClipboardMessageHandler_hasStringsMethodCall_closure0, A.ClipboardMessageHandler_hasStringsMethodCall__closure, A.DomConsoleExtension_get_warn_closure, A.DomNavigatorExtension_get_languages_closure, A._ttPolicy_closure, A.sendFontChangeMessage_closure, A.sendFontChangeMessage__closure, A.FontFallbackManager$__closure, A.FontFallbackManager$__closure0, A.FontFallbackManager$__closure1, A.FontFallbackManager$__closure2, A.FontFallbackManager$__closure3, A.FontFallbackManager$__closure4, A.FontFallbackManager_findFontsForMissingCodePoints_closure, A.FontFallbackManager__selectFont_closure, A.fetchFontManifest_closure, A.fetchFontManifest_closure0, A.fetchFontManifest_closure1, A.fetchFontManifest__closure, A.initializeEngineServices__closure, A.FlutterApp__staticInteropFactoryStub_closure, A.FlutterEngineInitializer__staticInteropFactoryStub_closure, A.FlutterAppRunner__staticInteropFactoryStub_closure, A.futureToPromise__closure, A.futureToPromise__closure0, A._kLogicalKeyToModifierGetter_closure, A._kLogicalKeyToModifierGetter_closure0, A._kLogicalKeyToModifierGetter_closure1, A._kLogicalKeyToModifierGetter_closure2, A._kLogicalKeyToModifierGetter_closure3, A._kLogicalKeyToModifierGetter_closure4, A._kLogicalKeyToModifierGetter_closure5, A._kLogicalKeyToModifierGetter_closure6, A.KeyboardBinding$__closure, A.KeyboardBinding$__closure0, A.KeyboardBinding__addEventListener_loggedHandler, A.KeyboardBinding__onKeyData_closure, A.KeyboardConverter__scheduleAsyncEvent_closure, A.KeyboardConverter_handleEvent_closure, A.preventDefaultListener_closure, A.MultiEntriesBrowserHistory_onPopState_closure, A.SingleEntryBrowserHistory_onPopState_closure, A.SingleEntryBrowserHistory_onPopState_closure0, A.FallbackFontComponent__activeFonts_closure, A.EnginePlatformDispatcher_closure, A.EnginePlatformDispatcher__zonedPlatformMessageResponseCallback_closure, A.EnginePlatformDispatcher__sendPlatformMessage_closure, A.EnginePlatformDispatcher__sendPlatformMessage_closure0, A.EnginePlatformDispatcher__sendPlatformMessage_closure1, A.EnginePlatformDispatcher__addLocaleChangedListener_closure, A.EnginePlatformDispatcher__setAppLifecycleState_closure, A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure, A.EnginePlatformDispatcher_replyToPlatformMessage_closure, A._BrowserAppLifecycleState__focusListener_closure, A._BrowserAppLifecycleState__blurListener_closure, A._BrowserAppLifecycleState__visibilityChangeListener_closure, A.ViewFocusBinding__handleFocusin_closure, A.ViewFocusBinding__handleFocusout_closure, A.ViewFocusBinding__handleKeyDown_closure, A.ViewFocusBinding__handleKeyUp_closure, A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure, A._BaseAdapter_addEventListener_loggedHandler, A._WheelEventListenerMixin__convertWheelEventToPointerData_closure, A._PointerAdapter__addPointerEventListener_closure, A._PointerAdapter_setup_closure, A._PointerAdapter_setup_closure0, A._PointerAdapter_setup_closure1, A._PointerAdapter_setup_closure2, A._PointerAdapter_setup_closure3, A._PointerAdapter_setup_closure4, A.RawKeyboard_handleHtmlEvent_closure0, A.EngineSemanticsOwner__finalizeTree_closure, A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey, A.EngineAutofillForm_addInputEventListeners_addSubscriptionForKey_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure0, A.DefaultTextEditingStrategy_preventDefaultForMouseEvents_closure1, A.IOSTextEditingStrategy_addEventHandlers_closure, A.IOSTextEditingStrategy__addTapListener_closure, A.FirefoxTextEditingStrategy_addEventHandlers_closure, A.HybridTextEditing__startEditing_closure, A.EditableTextGeometry_EditableTextGeometry$fromFrameworkMessage_closure, A.CustomElementDimensionsProvider_closure, A.ViewConstraints_toString_describe, A.CastMap_entries_closure, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.JsLinkedHashMap_containsValue_closure, A.initHooks_closure, A.initHooks_closure1, A._StringStream__goalToEventCode_closure, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._SyncBroadcastStreamController__sendData_closure, A._SyncBroadcastStreamController__sendDone_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A._RootZone_bindUnaryCallbackGuarded_closure, A._CustomHashMap_closure, A._LinkedCustomHashMap_closure, A.MapBase_entries_closure, A._Uri__splitQueryStringAll_parsePair, A._createTables_setChars, A._createTables_setRange, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.dartify_convert, A.KeyData__quotedCharCode_closure, A.bootstrapEngine_closure, A.HashUrlStrategy_addPopStateListener_wrappedFn, A.HashUrlStrategy__waitForPopState_closure, A.MethodChannelFirebase__initializeCore_closure, A.FirebaseCoreWeb__ignoredServiceScripts_closure, A.FirebaseCoreWeb_injectSrcScript_closure, A.FirebaseCoreWeb_injectSrcScript_closure1, A.FirebaseCoreWeb__initializeCore_closure, A.FirebaseCoreWeb_initializeApp_closure0, A.FlutterErrorDetails_summary_closure, A.FlutterErrorDetails_debugFillProperties_closure, A.FlutterError_FlutterError_closure, A.FlutterError_defaultStackFilter_closure, A.FlutterError_defaultStackFilter_closure0, A.FlutterError_toString_closure, A.debugPrintStack_closure, A.BindingBase_initServiceExtensions_closure0, A.BindingBase_initServiceExtensions_closure2, A.BindingBase_registerBoolServiceExtension_closure, A.BindingBase_registerNumericServiceExtension_closure, A.BindingBase_registerStringServiceExtension_closure, A._PrefixedStringBuilder__wordWrapLine_noWrap, A.TextTreeRenderer__debugRender_visitor, A.TextTreeRenderer__debugRender_closure, A.StackFrame_fromStackString_closure, A.PointerEventConverter_expand_closure, A.PointerEventConverter_expand_closure0, A._CachedImageBase_dispose_closure, A.TextPainter_getBoxesForSelection_closure, A.TextSpan_debugDescribeChildren_closure, A.RendererBinding__scheduleMouseTrackerUpdate_closure, A.BoxConstraints_toString_describe, A.RenderEditable_getBoxesForSelection_closure, A.MouseTracker__handleDeviceUpdate_closure, A.MouseTracker__handleDeviceUpdateMouseEvents_closure0, A.RenderObject__updateCompositingBits_closure, A.SchedulerBinding__handleDrawFrame_closure, A.SemanticsOwner_sendSemanticsUpdate_closure, A.SemanticsOwner__getSemanticsActionHandlerForId_closure, A.PlatformAssetBundle_load_closure, A.ServicesBinding__initKeyboard_closure, A._DefaultBinaryMessenger_send_closure, A.BasicMessageChannel_setMessageHandler_closure, A.MethodChannel_setMethodCallHandler_closure, A.RestorationManager_handleRestorationUpdateFromEngine_closure, A.RestorationManager_scheduleSerializationFor_closure, A.RestorationBucket__visitChildren_closure, A.TextInput__handleTextInputInvocation_closure0, A.TextInput__handleTextInputInvocation_closure, A.TextInput__handleTextInputInvocation_closure1, A._getParent_closure, A.Actions__findDispatcher_closure, A.Actions_maybeInvoke_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure0, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure1, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure3, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure5, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initInstances_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure0, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initInstances_closure0, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure0, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure0, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure1, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure2, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure4, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure6, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_drawFrame_closure, A.ContextMenuController_show_closure, A.EditableTextState__scheduleShowCaretOnScreen_closure, A.EditableTextState__startCursorBlink_closure, A.EditableTextState__onCursorTick_closure1, A._ScribbleFocusableState_isInScribbleRect_closure, A.FocusNode_debugDescribeChildren_closure, A._getAncestor_closure, A.FocusTraversalPolicy__findInitialFocus_closure, A.FocusTraversalPolicy__sortAllDescendants_visitGroups, A.FocusTraversalPolicy__sortAllDescendants_closure, A._ReadingOrderSortData_commonDirectionalityOf_closure, A._ReadingOrderSortData_directionalAncestors_getDirectionalityAncestors, A._ReadingOrderDirectionalGroupData_rect_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand_closure, A._InactiveElements__unmount_closure, A.InheritedTheme_capture_closure, A.LookupBoundary_findRootAncestorStateOfType_closure, A.MagnifierController_show_closure, A.OverlayEntry_remove_closure, A.Scrollable_ensureVisible_closure, A.SelectionOverlay_showMagnifier_closure, A.SelectionOverlay_showHandles_closure, A.SelectionOverlay_showHandles_closure0, A.SelectionOverlay_showToolbar_closure, A.SelectionOverlay_markNeedsBuild_closure, A.SelectionOverlay__buildToolbar_closure, A.Registrar_send_closure]);
    _inheritMany(A.Closure0Args, [A.AppBootstrap_prepareEngineInitializer_closure, A.SkiaFontCollection__registerWithFontProvider_closure, A.SkiaFontCollection__registerWithFontProvider_closure0, A.Frame_raster_closure, A.Frame_raster_closure0, A.MultiSurfaceRasterizer_createViewRasterizer_closure, A.MultiSurfaceViewRasterizer_displayFactory_closure, A.OffscreenCanvasRasterizer_createViewRasterizer_closure, A.OffscreenCanvasViewRasterizer_displayFactory_closure, A.CanvasKitRenderer_initialize_closure, A.CkTextStyle_skTextStyle_closure, A.FontFallbackManager_addMissingCodePoints_closure, A.FallbackFontDownloadQueue_startDownloads_closure, A.initializeEngineServices_closure0, A.initializeEngineServices_initializeRendererCallback, A.FlutterEngineInitializer__staticInteropFactoryStub_closure0, A._cached_closure, A.KeyboardConverter__scheduleAsyncEvent_closure0, A.KeyboardConverter__startGuardingKey_closure, A.KeyboardConverter__startGuardingKey_closure0, A.KeyboardConverter__handleEvent_closure, A.KeyboardConverter__handleEvent_closure0, A.KeyboardConverter__handleEvent_closure1, A.EnginePlatformDispatcher_invokeOnKeyData_closure, A.invoke2_closure, A.PlatformViewManager_renderContent_closure, A._PointerAdapter__ensureSanitizer_closure, A._PointerAdapter_setup__closure, A._GlobalPointerState_ensurePointerDeviceState_closure, A.RawKeyboard$__closure, A.RawKeyboard_handleHtmlEvent_closure, A.AccessibilityAnnouncements_announce_closure, A.EngineSemantics__now_closure, A.EngineSemantics__getGestureModeClock_closure, A.EngineSemanticsOwner_closure, A.MobileSemanticsEnabler_tryEnableSemantics_closure, A.DefaultTextEditingStrategy__moveFocusToFlutterView_closure, A.IOSTextEditingStrategy__schedulePlacement_closure, A.TextEditingChannel_handleTextInput_closure, A._hotRestartCache_closure, A.EngineFlutterWindow_handleNavigationMessage_closure, A.CastMap_putIfAbsent_closure, A.nullFuture_closure, A.Primitives_initTicker_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A._TimerImpl$periodic_closure, A.Future_Future_closure, A.Future_Future$delayed_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFutureAsync_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._StreamController__subscribe_closure, A._StreamController__recordCancel_complete, A._AddStreamState_cancel_closure, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A._performance_closure, A._json_closure, A.ChannelBuffers_push_closure, A.ChannelBuffers_setListener_closure, A.KeyData__logicalToString_closure, A.bootstrapEngine_closure0, A.BrowserPlatformLocation_getOrCreateDomEventListener_closure, A.HashUrlStrategy_addPopStateListener_closure, A.FirebaseCoreWeb_registerService_closure, A.FirebaseCoreWeb_initializeApp_closure, A.FlutterErrorDetails_summary_formatException, A.FlutterErrorDetails_summary_closure0, A.BindingBase_initServiceExtensions_closure, A.BindingBase_initServiceExtensions_closure1, A.BindingBase_registerServiceExtension__closure, A.ChangeNotifier_notifyListeners_closure, A.GestureArenaManager__tryToResolveArena_closure, A.GestureBinding_dispatchEvent_closure, A.GestureBinding_dispatchEvent_closure0, A._TextLayout__computeEndOfTextCaretAnchorOffset_closure, A.MouseTracker_updateWithEvent_closure, A.MouseTracker_updateWithEvent__closure, A.MouseTracker_updateAllDevices_closure, A.RenderObject__reportException_closure, A.RenderObject_toStringDeep_closure, A.CachingAssetBundle_loadString_closure, A.ServicesBinding__addLicenses_closure, A.RawKeyEvent_RawKeyEvent$fromMessage_dataFromWeb, A.RestorationBucket__rawChildren_closure, A.SystemChrome_setSystemUIOverlayStyle_closure, A.TextInput__loudlyHandleTextInputInvocation_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure2, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_initServiceExtensions_closure4, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_initServiceExtensions_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_initServiceExtensions_closure, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure3, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding_initServiceExtensions_closure5, A.EditableTextState__onCursorTick_closure, A.EditableTextState__onCursorTick_closure0, A.EditableTextState_insertTextPlaceholder_closure, A.EditableTextState_removeTextPlaceholder_closure, A.EditableTextState_showAutocorrectionPromptRect_closure, A.OverlayState_insert_closure, A.OverlayState_insertAll_closure, A.OverlayState__markDirty_closure, A.main_closure0, A.main_closure]);
    _inheritMany(A.Closure2Args, [A.HtmlViewEmbedder__updateDomForNewRendering_updateRenderCanvasWithDisplay, A.createDomResizeObserver_closure, A.initializeEngineServices_closure, A.futureToPromise_closure, A.KeyboardConverter__handleEvent_closure2, A.KeyboardConverter__handleEvent__closure, A.EnginePlatformDispatcher__addFontSizeObserver_closure, A.StandardMessageCodec_writeValue_closure0, A.saveForms_closure, A.HybridTextEditing__startEditing_closure0, A.CustomElementDimensionsProvider_closure0, A.CastMap_forEach_closure, A.JsLinkedHashMap_addAll_closure, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._RootZone_bindBinaryCallback_closure, A.LinkedHashMap_LinkedHashMap$from_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A._JsonPrettyPrintMixin_writeMap_closure, A._Uri__makeQueryFromParameters_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._Uri__makeQueryFromParametersDefault_writeParameter, A._Uri__makeQueryFromParametersDefault_closure, A._createTables_build, A.MidiInputMap_keys_closure, A.MidiOutputMap_keys_closure, A.RtcStatsReport_keys_closure, A.Storage_keys_closure, A.AudioParamMap_keys_closure, A.FirebaseCoreWeb_injectSrcScript_closure0, A.BindingBase_registerServiceExtension_closure, A.PointerRouter__dispatchEventToRoutes_closure, A.RendererBinding_initMouseTracker_closure, A.RenderEditable_getRectForComposingRange_closure, A.MouseTracker__handleDeviceUpdateMouseEvents_closure, A.PipelineOwner_flushLayout_closure, A.PipelineOwner_flushCompositingBits_closure, A.PipelineOwner_flushPaint_closure, A.PipelineOwner_flushSemantics_closure, A.SchedulerBinding_handleBeginFrame_closure, A.SemanticsOwner_sendSemanticsUpdate_closure0, A.SemanticsOwner_sendSemanticsUpdate_closure1, A._DefaultBinaryMessenger_setMessageHandler_closure, A.StandardMessageCodec_writeValue_closure, A._debugLaunchProfilePlatformChannels_closure, A.EditableTextState__formatAndSetValue_closure, A._ReadingOrderSortData_sortWithDirectionality_closure, A._ReadingOrderDirectionalGroupData_sortWithDirectionality_closure, A.ReadingOrderTraversalPolicy__pickNext_closure, A.ReadingOrderTraversalPolicy__pickNext_inBand]);
    _inheritMany(A.Iterable, [A.MutatorsStack, A._DomListWrapper, A._DomTouchListWrapper, A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A.ExpandIterable, A.TakeIterable, A.SkipIterable, A.SkipWhileIterable, A.FollowedByIterable, A.WhereTypeIterable, A._KeysOrValues, A._AllMatchesIterable, A._StringAllMatchesIterable, A._SyncStarIterable, A.DoubleLinkedQueue, A.StringCharacters, A.ObserverList, A.HashedObserverList]);
    _inherit(A.ContainerLayer, A.Layer);
    _inherit(A.RootLayer, A.ContainerLayer);
    _inheritMany(A.Rasterizer, [A.MultiSurfaceRasterizer, A.OffscreenCanvasRasterizer]);
    _inheritMany(A.ViewRasterizer, [A.MultiSurfaceViewRasterizer, A.OffscreenCanvasViewRasterizer]);
    _inheritMany(A.RenderingEntity, [A.RenderingRenderCanvas, A.RenderingPlatformView]);
    _inheritMany(A.DisplayCanvas, [A.RenderCanvas, A.Surface]);
    _inheritMany(A._Enum, [A.CanvasKitVariant, A.IntlSegmenterGranularity, A.DebugEngineInitializationState, A.Assertiveness, A.AccessibilityMode, A.GestureMode, A.LineBreakType, A.TextCapitalization, A.TransformKind, A.KeyEventType, A.KeyEventDeviceType, A.StrokeCap, A.StrokeJoin, A.PaintingStyle, A.BlendMode, A.FilterQuality, A.AppLifecycleState, A.AppExitResponse, A.ViewFocusState, A.ViewFocusDirection, A.PointerChange, A.PointerDeviceKind, A.PointerSignalKind, A.PlaceholderAlignment, A.TextAlign, A.TextLeadingDistribution, A.TextDirection, A.TextAffinity, A.BoxHeightStyle, A.BoxWidthStyle, A.Brightness, A.BrowserEngine, A.OperatingSystem, A.AnimationStatus, A._AnimationDirection, A.AnimationBehavior, A.DiagnosticLevel, A.DiagnosticsTreeStyle, A._WordWrapParseMode, A.TargetPlatform, A.DragStartBehavior, A.Axis, A.HitTestBehavior, A.TextSelectionHandleType, A.SchedulerPhase, A.DebugSemanticsDumpOrder, A.KeyboardLockMode, A.KeyDataTransitMode, A.SwipeEdge, A.KeyboardSide, A.ModifierKey, A.TextInputAction, A.FloatingCursorDragState, A.SelectionChangedCause, A.KeyEventResult, A.UnfocusDisposition, A.FocusHighlightMode, A.FocusHighlightStrategy, A.TraversalEdgeBehavior, A._ElementLifecycle, A.ScrollPositionAlignmentPolicy]);
    _inheritMany(A.Error, [A.CanvasKitError, A.FontLoadError, A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A._CyclicInitializationError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A._FlutterError_Error_DiagnosticableTreeMixin]);
    _inherit(A.EngineFlutterDisplay, A.Display);
    _inheritMany(A.FontLoadError, [A.FontNotFoundError, A.FontDownloadError, A.FontInvalidDataError]);
    _inheritMany(A.BrowserHistory, [A.MultiEntriesBrowserHistory, A.SingleEntryBrowserHistory]);
    _inherit(A.EnginePlatformDispatcher, A.PlatformDispatcher);
    _inherit(A._BrowserAppLifecycleState, A.AppLifecycleState0);
    _inherit(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._BaseAdapter);
    _inherit(A._PointerAdapter, A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inheritMany(A.SemanticsEnabler, [A.DesktopSemanticsEnabler, A.MobileSemanticsEnabler]);
    _inherit(A.DefaultTextEditingStrategy, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin);
    _inheritMany(A.DefaultTextEditingStrategy, [A.SemanticsTextEditingStrategy, A.GloballyPositionedTextEditingStrategy, A.SafariDesktopTextEditingStrategy]);
    _inheritMany(A.ListBase, [A._TypedDataBuffer, A.UnmodifiableListBase]);
    _inherit(A._IntBuffer, A._TypedDataBuffer);
    _inherit(A.Uint8Buffer, A._IntBuffer);
    _inherit(A.LineBreakFragment, A.TextFragment);
    _inheritMany(A.EngineInputAction, [A.NoInputAction, A.EnterInputAction, A.DoneInputAction, A.GoInputAction, A.NextInputAction, A.PreviousInputAction, A.SearchInputAction, A.SendInputAction]);
    _inheritMany(A.EngineInputType, [A.NoTextInputType, A.MultilineInputType, A.TextInputType0, A.NumberInputType, A.DecimalInputType, A.PhoneInputType, A.EmailInputType, A.UrlInputType]);
    _inherit(A.MultilineNoTextInputType, A.MultilineInputType);
    _inheritMany(A.GloballyPositionedTextEditingStrategy, [A.IOSTextEditingStrategy, A.AndroidTextEditingStrategy, A.FirefoxTextEditingStrategy]);
    _inheritMany(A.TextInputCommand, [A.TextInputSetClient, A.TextInputUpdateConfig, A.TextInputSetEditingState, A.TextInputShow, A.TextInputSetEditableSizeAndTransform, A.TextInputSetStyle, A.TextInputClearClient, A.TextInputHide, A.TextInputSetMarkedTextRect, A.TextInputSetCaretRect, A.TextInputRequestAutofill, A.TextInputFinishAutofillContext]);
    _inheritMany(A.DimensionsProvider, [A.CustomElementDimensionsProvider, A.FullPageDimensionsProvider]);
    _inheritMany(A.EngineFlutterView, [A._EngineFlutterViewImpl, A.EngineFlutterWindow]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData, A.EventTarget, A.AccessibleNodeList, A.Blob, A.CssTransformComponent, A.CssRule, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleValue, A.DataTransferItemList, A.DomException0, A._DomRectList_JavaScriptObject_ListMixin, A.DomRectReadOnly0, A._DomStringList_JavaScriptObject_ListMixin, A.DomTokenList0, A._FileList_JavaScriptObject_ListMixin, A.Gamepad, A.History, A._HtmlCollection_JavaScriptObject_ListMixin, A.Location, A.MediaList, A._MidiInputMap_JavaScriptObject_MapMixin, A._MidiOutputMap_JavaScriptObject_MapMixin, A.MimeType, A._MimeTypeArray_JavaScriptObject_ListMixin, A._NodeList_JavaScriptObject_ListMixin, A.Plugin, A._PluginArray_JavaScriptObject_ListMixin, A._RtcStatsReport_JavaScriptObject_MapMixin, A.SpeechGrammar, A._SpeechGrammarList_JavaScriptObject_ListMixin, A.SpeechRecognitionResult, A._Storage_JavaScriptObject_MapMixin, A.StyleSheet, A._TextTrackCueList_JavaScriptObject_ListMixin, A.TimeRanges, A.Touch, A._TouchList_JavaScriptObject_ListMixin, A.TrackDefaultList, A.Url, A.__CssRuleList_JavaScriptObject_ListMixin, A.__GamepadList_JavaScriptObject_ListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin, A.Length, A._LengthList_JavaScriptObject_ListMixin, A.Number, A._NumberList_JavaScriptObject_ListMixin, A.PointList, A._StringList_JavaScriptObject_ListMixin, A.Transform, A._TransformList_JavaScriptObject_ListMixin, A.AudioBuffer, A._AudioParamMap_JavaScriptObject_MapMixin]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inheritMany(A.MapBase, [A.CastMap, A.JsLinkedHashMap, A._HashMap, A._JsonMap]);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ReversedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthTakeIterable, A.TakeIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inherit(A.EfficientLengthFollowedByIterable, A.FollowedByIterable);
    _inheritMany(A._Record, [A._Record2, A._Record3]);
    _inheritMany(A._Record2, [A._Record_2, A._Record_2_end_start, A._Record_2_key_value]);
    _inheritMany(A._Record3, [A._Record_3_breaks_graphemes_words, A._Record_3_completer_recorder_scene, A._Record_3_data_event_timeStamp, A._Record_3_large_medium_small, A._Record_3_queue_target_timer, A._Record_3_x78_y_z]);
    _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
    _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
    _inherit(A.ConstantMapView, A.UnmodifiableMapView);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inheritMany(A.SetBase, [A.ConstantSet, A._SetBase]);
    _inheritMany(A.ConstantSet, [A.ConstantStringSet, A.GeneralConstantSet]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inheritMany(A.JsLinkedHashMap, [A.JsIdentityLinkedHashMap, A.JsConstantLinkedHashMap, A._LinkedCustomHashMap]);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._StreamImpl, A.Stream);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._BroadcastStream, A._ControllerStream);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inheritMany(A._BroadcastStreamController, [A._SyncBroadcastStreamController, A._AsyncBroadcastStreamController]);
    _inherit(A._AsyncCompleter, A._Completer);
    _inheritMany(A._StreamController, [A._AsyncStreamController, A._SyncStreamController]);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inherit(A._RootZone, A._Zone);
    _inheritMany(A._HashMap, [A._IdentityHashMap, A._CustomHashMap]);
    _inheritMany(A._SetBase, [A._HashSet, A._LinkedHashSet]);
    _inheritMany(A._DoubleLinkedQueueEntry, [A._DoubleLinkedQueueElement, A._DoubleLinkedQueueSentinel]);
    _inheritMany(A.StringConversionSink, [A._StringSinkConversionSink, A._StringAdapterSink]);
    _inherit(A._JsonDecoderSink, A._StringSinkConversionSink);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec]);
    _inheritMany(A.Converter, [A.Base64Encoder, A._FusedConverter, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder]);
    _inherit(A._BufferCachingBase64Encoder, A._Base64Encoder);
    _inheritMany(A.ByteConversionSink, [A._Base64EncoderSink, A._ByteAdapterSink, A._Utf8StringSinkAdapter, A._Utf8ConversionSink]);
    _inheritMany(A._Base64EncoderSink, [A._AsciiBase64EncoderSink, A._Utf8Base64EncoderSink]);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonEncoderSink, A.ChunkedConversionSink);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, A._JsonStringStringifier);
    _inherit(A._JsonStringStringifierPretty, A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin);
    _inherit(A.Utf8Codec, A.Encoding);
    _inherit(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A._Utf8Encoder);
    _inherit(A._Utf8EncoderSink, A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.EventTarget, [A.Node, A.FileWriter, A.SourceBuffer, A._SourceBufferList_EventTarget_ListMixin, A.TextTrack, A.TextTrackCue, A._TextTrackList_EventTarget_ListMixin, A.VideoTrackList, A.AudioTrackList, A.BaseAudioContext]);
    _inheritMany(A.Node, [A.Element, A.CharacterData]);
    _inherit(A.HtmlElement, A.Element);
    _inheritMany(A.HtmlElement, [A.AnchorElement, A.AreaElement, A.FormElement, A.SelectElement]);
    _inherit(A.CssPerspective, A.CssTransformComponent);
    _inherit(A.CssStyleDeclaration, A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase);
    _inheritMany(A.CssStyleValue, [A.CssTransformValue, A.CssUnparsedValue]);
    _inherit(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomRectList_JavaScriptObject_ListMixin);
    _inherit(A.DomRectList, A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._DomStringList_JavaScriptObject_ListMixin);
    _inherit(A.DomStringList, A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.File, A.Blob);
    _inherit(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A._FileList_JavaScriptObject_ListMixin);
    _inherit(A.FileList, A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A._HtmlCollection_JavaScriptObject_ListMixin);
    _inherit(A.HtmlCollection, A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.MidiInputMap, A._MidiInputMap_JavaScriptObject_MapMixin);
    _inherit(A.MidiOutputMap, A._MidiOutputMap_JavaScriptObject_MapMixin);
    _inherit(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._MimeTypeArray_JavaScriptObject_ListMixin);
    _inherit(A.MimeTypeArray, A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NodeList_JavaScriptObject_ListMixin);
    _inherit(A.NodeList, A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A._PluginArray_JavaScriptObject_ListMixin);
    _inherit(A.PluginArray, A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.RtcStatsReport, A._RtcStatsReport_JavaScriptObject_MapMixin);
    _inherit(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A._SourceBufferList_EventTarget_ListMixin);
    _inherit(A.SourceBufferList, A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A._SpeechGrammarList_JavaScriptObject_ListMixin);
    _inherit(A.SpeechGrammarList, A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.Storage, A._Storage_JavaScriptObject_MapMixin);
    _inherit(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TextTrackCueList_JavaScriptObject_ListMixin);
    _inherit(A.TextTrackCueList, A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A._TextTrackList_EventTarget_ListMixin);
    _inherit(A.TextTrackList, A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin);
    _inherit(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TouchList_JavaScriptObject_ListMixin);
    _inherit(A.TouchList, A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__CssRuleList_JavaScriptObject_ListMixin);
    _inherit(A._CssRuleList, A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._DomRect, A.DomRectReadOnly0);
    _inherit(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__GamepadList_JavaScriptObject_ListMixin);
    _inherit(A._GamepadList, A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.__NamedNodeMap_JavaScriptObject_ListMixin);
    _inherit(A._NamedNodeMap, A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin);
    _inherit(A._SpeechRecognitionResultList, A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.__StyleSheetList_JavaScriptObject_ListMixin);
    _inherit(A._StyleSheetList, A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A._LengthList_JavaScriptObject_ListMixin);
    _inherit(A.LengthList, A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A._NumberList_JavaScriptObject_ListMixin);
    _inherit(A.NumberList, A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A._StringList_JavaScriptObject_ListMixin);
    _inherit(A.StringList, A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inherit(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A._TransformList_JavaScriptObject_ListMixin);
    _inherit(A.TransformList, A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin);
    _inheritMany(A.OffsetBase, [A.Offset, A.Size]);
    _inherit(A.AudioParamMap, A._AudioParamMap_JavaScriptObject_MapMixin);
    _inherit(A.OfflineAudioContext, A.BaseAudioContext);
    _inheritMany(A.PlatformInterface, [A.FilePicker, A.FirebaseAnalyticsPlatform, A.FirebasePlatform, A.FirebaseAppPlatform, A.MobileScannerPlatform, A.SharePlatform, A.SharedPreferencesStorePlatform, A.UrlLauncherPlatform]);
    _inherit(A.FilePickerWeb, A.FilePicker);
    _inherit(A.FirebaseAnalyticsWeb, A.FirebaseAnalyticsPlatform);
    _inheritMany(A.FirebasePlatform, [A.MethodChannelFirebase, A.FirebaseCoreWeb]);
    _inheritMany(A.FirebaseAppPlatform, [A.MethodChannelFirebaseApp, A.FirebaseAppWeb]);
    _inherit(A._FirebaseCoreHostApiCodec, A.StandardMessageCodec0);
    _inherit(A.App, A.JsObjectWrapper);
    _inheritMany(A.Listenable, [A.Animation0, A._SystemFontsNotifier]);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin, A.Animation0);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin);
    _inherit(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin);
    _inherit(A.AnimationController, A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin);
    _inheritMany(A.Simulation, [A._InterpolationSimulation, A._DiscreteKeyFrameSimulation]);
    _inherit(A.Curve, A.ParametricCurve);
    _inheritMany(A.Curve, [A._Linear, A.Cubic, A._DecelerateCurve]);
    _inheritMany(A.DiagnosticsNode, [A.DiagnosticsProperty, A.DiagnosticsBlock, A.DiagnosticableNode]);
    _inheritMany(A.DiagnosticsProperty, [A._ErrorDiagnostic, A.ErrorSpacer]);
    _inheritMany(A._ErrorDiagnostic, [A.ErrorDescription, A.ErrorSummary, A.ErrorHint]);
    _inherit(A.FlutterErrorDetails, A._FlutterErrorDetails_Object_Diagnosticable);
    _inherit(A.FlutterError, A._FlutterError_Error_DiagnosticableTreeMixin);
    _inherit(A.DiagnosticsStackTrace, A.DiagnosticsBlock);
    _inheritMany(A.DiagnosticableNode, [A._FlutterErrorDetailsNode, A.DiagnosticableTreeNode, A._SemanticsDiagnosticableNode]);
    _inheritMany(A.ChangeNotifier, [A.ValueNotifier, A._BindingPipelineManifold, A.RenderEditablePainter, A.MouseTracker, A.SemanticsOwner, A.RestorationManager, A.ScrollController]);
    _inherit(A.DiagnosticableTree, A._DiagnosticableTree_Object_Diagnosticable);
    _inherit(A.LicenseEntryWithLineBreaks, A.LicenseEntry);
    _inherit(A.FlutterErrorDetailsForPointerEventDispatcher, A.FlutterErrorDetails);
    _inherit(A.PointerEvent, A._PointerEvent_Object_Diagnosticable);
    _inherit(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, A._AbstractPointerEvent);
    _inherit(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable);
    _inherit(A._TransformedPointerEvent, A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription);
    _inheritMany(A.PointerEvent, [A._PointerAddedEvent_PointerEvent__PointerEventDescription, A._PointerRemovedEvent_PointerEvent__PointerEventDescription, A._PointerHoverEvent_PointerEvent__PointerEventDescription, A._PointerEnterEvent_PointerEvent__PointerEventDescription, A._PointerExitEvent_PointerEvent__PointerEventDescription, A._PointerDownEvent_PointerEvent__PointerEventDescription, A._PointerMoveEvent_PointerEvent__PointerEventDescription, A._PointerUpEvent_PointerEvent__PointerEventDescription, A._PointerSignalEvent_PointerEvent__RespondablePointerEvent, A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription, A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription, A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription, A._PointerCancelEvent_PointerEvent__PointerEventDescription]);
    _inherit(A._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent, A._PointerAddedEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerAddedEvent, A._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent);
    _inheritMany(A._TransformedPointerEvent, [A.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent, A.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent, A.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent, A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, A.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent, A.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent, A.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent, A.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent, A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent, A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent, A.__TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent, A.__TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent, A.__TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent, A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent]);
    _inherit(A._TransformedPointerAddedEvent, A.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent);
    _inherit(A._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent, A._PointerRemovedEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerRemovedEvent, A._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent);
    _inherit(A._TransformedPointerRemovedEvent, A.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent);
    _inherit(A._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent, A._PointerHoverEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerHoverEvent, A._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent);
    _inherit(A._TransformedPointerHoverEvent, A.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent);
    _inherit(A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, A._PointerEnterEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerEnterEvent, A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent);
    _inherit(A._TransformedPointerEnterEvent, A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent);
    _inherit(A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, A._PointerExitEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerExitEvent, A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent);
    _inherit(A._TransformedPointerExitEvent, A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent);
    _inherit(A._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent, A._PointerDownEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerDownEvent, A._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent);
    _inherit(A._TransformedPointerDownEvent, A.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent);
    _inherit(A._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent, A._PointerMoveEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerMoveEvent, A._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent);
    _inherit(A._TransformedPointerMoveEvent, A.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent);
    _inherit(A._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent, A._PointerUpEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerUpEvent, A._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent);
    _inherit(A._TransformedPointerUpEvent, A.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent);
    _inherit(A.PointerSignalEvent, A._PointerSignalEvent_PointerEvent__RespondablePointerEvent);
    _inheritMany(A.PointerSignalEvent, [A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription, A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription, A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription]);
    _inherit(A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent, A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription);
    _inherit(A.PointerScrollEvent, A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent);
    _inherit(A._TransformedPointerScrollEvent, A.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent);
    _inherit(A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent, A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription);
    _inherit(A.PointerScrollInertiaCancelEvent, A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent);
    _inherit(A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent, A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent);
    _inherit(A._TransformedPointerScrollInertiaCancelEvent, A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent);
    _inherit(A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent, A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription);
    _inherit(A.PointerScaleEvent, A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent);
    _inherit(A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent, A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent);
    _inherit(A._TransformedPointerScaleEvent, A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent);
    _inherit(A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent, A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerPanZoomStartEvent, A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent);
    _inherit(A._TransformedPointerPanZoomStartEvent, A.__TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent);
    _inherit(A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent, A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerPanZoomUpdateEvent, A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent);
    _inherit(A._TransformedPointerPanZoomUpdateEvent, A.__TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent);
    _inherit(A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent, A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerPanZoomEndEvent, A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent);
    _inherit(A._TransformedPointerPanZoomEndEvent, A.__TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent);
    _inherit(A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, A._PointerCancelEvent_PointerEvent__PointerEventDescription);
    _inherit(A.PointerCancelEvent, A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent);
    _inherit(A._TransformedPointerCancelEvent, A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent);
    _inherit(A.EdgeInsets, A.EdgeInsetsGeometry);
    _inheritMany(A.DiagnosticableTree, [A.InlineSpan, A.Widget]);
    _inheritMany(A.InlineSpan, [A.PlaceholderSpan, A.TextSpan]);
    _inherit(A.TextStyle, A._TextStyle_Object_Diagnosticable);
    _inherit(A.PipelineOwner, A._PipelineOwner_Object_DiagnosticableTreeMixin);
    _inherit(A._DefaultRootPipelineOwner, A.PipelineOwner);
    _inherit(A.BoxConstraints, A.Constraints);
    _inherit(A.BoxHitTestResult, A.HitTestResult);
    _inherit(A._CaretPainter, A.RenderEditablePainter);
    _inherit(A._MouseTrackerUpdateDetails, A.__MouseTrackerUpdateDetails_Object_Diagnosticable);
    _inherit(A.PaintingContext, A.ClipContext);
    _inherit(A.CachingAssetBundle, A.AssetBundle);
    _inherit(A.PlatformAssetBundle, A.CachingAssetBundle);
    _inheritMany(A.BinaryMessenger, [A._DefaultBinaryMessenger, A.Registrar]);
    _inherit(A.KeyEvent, A._KeyEvent_Object_Diagnosticable);
    _inheritMany(A.KeyEvent, [A.KeyDownEvent, A.KeyUpEvent, A.KeyRepeatEvent]);
    _inherit(A.KeyboardKey, A._KeyboardKey_Object_Diagnosticable);
    _inheritMany(A.KeyboardKey, [A.LogicalKeyboardKey, A.PhysicalKeyboardKey]);
    _inherit(A.MouseCursor0, A._MouseCursor_Object_Diagnosticable);
    _inheritMany(A.MouseCursor0, [A._DeferringMouseCursor, A.SystemMouseCursor]);
    _inherit(A._SystemMouseCursorSession, A.MouseCursorSession);
    _inherit(A.OptionalMethodChannel, A.MethodChannel);
    _inherit(A.RawKeyEventData, A._RawKeyEventData_Object_Diagnosticable);
    _inherit(A.RawKeyEvent, A._RawKeyEvent_Object_Diagnosticable);
    _inheritMany(A.RawKeyEvent, [A.RawKeyDownEvent, A.RawKeyUpEvent]);
    _inherit(A.RawKeyEventDataWeb, A.RawKeyEventData);
    _inherit(A.TextSelection, A.TextRange);
    _inherit(A.TextEditingDelta, A._TextEditingDelta_Object_Diagnosticable);
    _inheritMany(A.TextEditingDelta, [A.TextEditingDeltaInsertion, A.TextEditingDeltaDeletion, A.TextEditingDeltaReplacement, A.TextEditingDeltaNonTextUpdate]);
    _inherit(A._PlatformTextInputControl, A.__PlatformTextInputControl_Object_TextInputControl);
    _inherit(A.ActionDispatcher, A._ActionDispatcher_Object_Diagnosticable);
    _inheritMany(A.Widget, [A.RenderObjectWidget, A.StatelessWidget, A.StatefulWidget]);
    _inherit(A.SingleChildRenderObjectWidget, A.RenderObjectWidget);
    _inheritMany(A.SingleChildRenderObjectWidget, [A.SizedBox, A.ExcludeSemantics, A.TapRegion]);
    _inheritMany(A.StatelessWidget, [A.Builder, A._CaptureAll]);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding, A.BindingBase);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding);
    _inherit(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding);
    _inherit(A.WidgetsFlutterBinding, A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding);
    _inherit(A.WidgetSpan, A.PlaceholderSpan);
    _inherit(A._ScribblePlaceholder, A.WidgetSpan);
    _inherit(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A._FocusNode_Object_DiagnosticableTreeMixin);
    _inherit(A.FocusNode, A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inheritMany(A.FocusNode, [A.FocusScopeNode, A._FocusTraversalGroupNode]);
    _inherit(A._AppLifecycleListener, A.WidgetsBindingObserver);
    _inherit(A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, A._FocusManager_Object_DiagnosticableTreeMixin);
    _inherit(A.FocusManager, A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier);
    _inherit(A.FocusTraversalPolicy, A._FocusTraversalPolicy_Object_Diagnosticable);
    _inherit(A._ReadingOrderSortData, A.__ReadingOrderSortData_Object_Diagnosticable);
    _inherit(A._ReadingOrderDirectionalGroupData, A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable);
    _inherit(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.FocusTraversalPolicy);
    _inherit(A.ReadingOrderTraversalPolicy, A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin);
    _inherit(A.GlobalKey, A.Key);
    _inherit(A.LabeledGlobalKey, A.GlobalKey);
    _inherit(A.DefaultPlatformMenuDelegate, A.PlatformMenuDelegate);
    _inherit(A.TextFieldTapRegion, A.TapRegion);
    _inheritMany(A.StatefulWidget, [A._SelectionToolbarWrapper, A._SelectionHandleOverlay]);
    _inherit(A.PluginRegistry, A.Registrar);
    _inheritMany(A.TypeAdapter, [A.BigIntAdapter, A.DateTimeAdapter, A.DateTimeWithTimezoneAdapter]);
    _inherit(A.HiveImpl, A.TypeRegistryImpl);
    _inheritMany(A.MobileScannerPlatform, [A.MethodChannelMobileScanner, A.MobileScannerWeb]);
    _inheritMany(A.SharePlatform, [A.SharePlusWebPlugin, A.MethodChannelShare]);
    _inheritMany(A.SharedPreferencesStorePlatform, [A.MethodChannelSharedPreferencesStore, A.SharedPreferencesPlugin]);
    _inheritMany(A.UrlLauncherPlatform, [A.MethodChannelUrlLauncher, A.UrlLauncherPlugin]);
    _mixin(A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.CompositionAwareMixin);
    _mixin(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._WheelEventListenerMixin);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._AsyncStreamController, A._AsyncStreamControllerDispatch);
    _mixin(A._SyncStreamController, A._SyncStreamControllerDispatch);
    _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
    _mixin(A.__JsonStringStringifierPretty__JsonStringStringifier__JsonPrettyPrintMixin, A._JsonPrettyPrintMixin);
    _mixin(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A.StringConversionSink);
    _mixin(A._CssStyleDeclaration_JavaScriptObject_CssStyleDeclarationBase, A.CssStyleDeclarationBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomRectList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._DomStringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._FileList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._FileList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._HtmlCollection_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._MidiInputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MidiOutputMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._MimeTypeArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NodeList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NodeList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._PluginArray_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._RtcStatsReport_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._SpeechGrammarList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._Storage_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TextTrackCueList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TextTrackList_EventTarget_ListMixin, A.ListBase);
    _mixin(A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TouchList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TouchList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__CssRuleList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__GamepadList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__NamedNodeMap_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__SpeechRecognitionResultList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A.__StyleSheetList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._LengthList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._LengthList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._NumberList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._NumberList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._StringList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._StringList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._TransformList_JavaScriptObject_ListMixin, A.ListBase);
    _mixin(A._TransformList_JavaScriptObject_ListMixin_ImmutableListMixin, A.ImmutableListMixin);
    _mixin(A._AudioParamMap_JavaScriptObject_MapMixin, A.MapBase);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin, A.AnimationEagerListenerMixin);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin, A.AnimationLocalListenersMixin);
    _mixin(A._AnimationController_Animation_AnimationEagerListenerMixin_AnimationLocalListenersMixin_AnimationLocalStatusListenersMixin, A.AnimationLocalStatusListenersMixin);
    _mixin(A._FlutterError_Error_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FlutterErrorDetails_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._DiagnosticableTree_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._PointerAddedEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerAddedEvent_PointerEvent__PointerEventDescription__CopyPointerAddedEvent, A._CopyPointerAddedEvent);
    _mixin(A._PointerCancelEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerCancelEvent_PointerEvent__PointerEventDescription__CopyPointerCancelEvent, A._CopyPointerCancelEvent);
    _mixin(A._PointerDownEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerDownEvent_PointerEvent__PointerEventDescription__CopyPointerDownEvent, A._CopyPointerDownEvent);
    _mixin(A._PointerEnterEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerEnterEvent_PointerEvent__PointerEventDescription__CopyPointerEnterEvent, A._CopyPointerEnterEvent);
    _mixin(A._PointerEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._PointerExitEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerExitEvent_PointerEvent__PointerEventDescription__CopyPointerExitEvent, A._CopyPointerExitEvent);
    _mixin(A._PointerHoverEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerHoverEvent_PointerEvent__PointerEventDescription__CopyPointerHoverEvent, A._CopyPointerHoverEvent);
    _mixin(A._PointerMoveEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerMoveEvent_PointerEvent__PointerEventDescription__CopyPointerMoveEvent, A._CopyPointerMoveEvent);
    _mixin(A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerPanZoomEndEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomEndEvent, A._CopyPointerPanZoomEndEvent);
    _mixin(A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerPanZoomStartEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomStartEvent, A._CopyPointerPanZoomStartEvent);
    _mixin(A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerPanZoomUpdateEvent_PointerEvent__PointerEventDescription__CopyPointerPanZoomUpdateEvent, A._CopyPointerPanZoomUpdateEvent);
    _mixin(A._PointerRemovedEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerRemovedEvent_PointerEvent__PointerEventDescription__CopyPointerRemovedEvent, A._CopyPointerRemovedEvent);
    _mixin(A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerScaleEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScaleEvent, A._CopyPointerScaleEvent);
    _mixin(A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerScrollEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollEvent, A._CopyPointerScrollEvent);
    _mixin(A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerScrollInertiaCancelEvent_PointerSignalEvent__PointerEventDescription__CopyPointerScrollInertiaCancelEvent, A._CopyPointerScrollInertiaCancelEvent);
    _mixin(A._PointerSignalEvent_PointerEvent__RespondablePointerEvent, A._RespondablePointerEvent);
    _mixin(A._PointerUpEvent_PointerEvent__PointerEventDescription, A._PointerEventDescription);
    _mixin(A._PointerUpEvent_PointerEvent__PointerEventDescription__CopyPointerUpEvent, A._CopyPointerUpEvent);
    _mixin(A.__TransformedPointerAddedEvent__TransformedPointerEvent__CopyPointerAddedEvent, A._CopyPointerAddedEvent);
    _mixin(A.__TransformedPointerCancelEvent__TransformedPointerEvent__CopyPointerCancelEvent, A._CopyPointerCancelEvent);
    _mixin(A.__TransformedPointerDownEvent__TransformedPointerEvent__CopyPointerDownEvent, A._CopyPointerDownEvent);
    _mixin(A.__TransformedPointerEnterEvent__TransformedPointerEvent__CopyPointerEnterEvent, A._CopyPointerEnterEvent);
    _mixin(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable, A.Diagnosticable);
    _mixin(A.__TransformedPointerEvent__AbstractPointerEvent_Diagnosticable__PointerEventDescription, A._PointerEventDescription);
    _mixin(A.__TransformedPointerExitEvent__TransformedPointerEvent__CopyPointerExitEvent, A._CopyPointerExitEvent);
    _mixin(A.__TransformedPointerHoverEvent__TransformedPointerEvent__CopyPointerHoverEvent, A._CopyPointerHoverEvent);
    _mixin(A.__TransformedPointerMoveEvent__TransformedPointerEvent__CopyPointerMoveEvent, A._CopyPointerMoveEvent);
    _mixin(A.__TransformedPointerPanZoomEndEvent__TransformedPointerEvent__CopyPointerPanZoomEndEvent, A._CopyPointerPanZoomEndEvent);
    _mixin(A.__TransformedPointerPanZoomStartEvent__TransformedPointerEvent__CopyPointerPanZoomStartEvent, A._CopyPointerPanZoomStartEvent);
    _mixin(A.__TransformedPointerPanZoomUpdateEvent__TransformedPointerEvent__CopyPointerPanZoomUpdateEvent, A._CopyPointerPanZoomUpdateEvent);
    _mixin(A.__TransformedPointerRemovedEvent__TransformedPointerEvent__CopyPointerRemovedEvent, A._CopyPointerRemovedEvent);
    _mixin(A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent, A._CopyPointerScaleEvent);
    _mixin(A.__TransformedPointerScaleEvent__TransformedPointerEvent__CopyPointerScaleEvent__RespondablePointerEvent, A._RespondablePointerEvent);
    _mixin(A.__TransformedPointerScrollEvent__TransformedPointerEvent__CopyPointerScrollEvent, A._CopyPointerScrollEvent);
    _mixin(A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent, A._CopyPointerScrollInertiaCancelEvent);
    _mixin(A.__TransformedPointerScrollInertiaCancelEvent__TransformedPointerEvent__CopyPointerScrollInertiaCancelEvent__RespondablePointerEvent, A._RespondablePointerEvent);
    _mixin(A.__TransformedPointerUpEvent__TransformedPointerEvent__CopyPointerUpEvent, A._CopyPointerUpEvent);
    _mixin(A._TextStyle_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__MouseTrackerUpdateDetails_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._PipelineOwner_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._KeyEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._KeyboardKey_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._MouseCursor_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RawKeyEvent_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._RawKeyEventData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._TextEditingDelta_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__PlatformTextInputControl_Object_TextInputControl, A.TextInputControl);
    _mixin(A._ActionDispatcher_Object_Diagnosticable, A.Diagnosticable);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding, A.GestureBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding, A.SchedulerBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding, A.ServicesBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding, A.PaintingBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding, A.SemanticsBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding, A.RendererBinding);
    _mixinHard(A._WidgetsFlutterBinding_BindingBase_GestureBinding_SchedulerBinding_ServicesBinding_PaintingBinding_SemanticsBinding_RendererBinding_WidgetsBinding, A.WidgetsBinding);
    _mixin(A._FocusManager_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FocusManager_Object_DiagnosticableTreeMixin_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._FocusNode_Object_DiagnosticableTreeMixin, A.DiagnosticableTreeMixin);
    _mixin(A._FocusNode_Object_DiagnosticableTreeMixin_ChangeNotifier, A.ChangeNotifier);
    _mixin(A._FocusTraversalPolicy_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A._ReadingOrderTraversalPolicy_FocusTraversalPolicy_DirectionalFocusTraversalPolicyMixin, A.DirectionalFocusTraversalPolicyMixin);
    _mixin(A.__ReadingOrderDirectionalGroupData_Object_Diagnosticable, A.Diagnosticable);
    _mixin(A.__ReadingOrderSortData_Object_Diagnosticable, A.Diagnosticable);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map"},
    mangledNames: {},
    types: ["~()", "~(JavaScriptObject)", "~(Duration)", "~(ByteData?)", "bool(NotoFont)", "bool(FlutterHtmlKeyboardEvent)", "Future<~>()", "Widget(BuildContext)", "Null(~)", "~(Object?)", "~(@)", "Future<bool>()", "bool(Object?)", "~(String,@)", "~(int)", "Null(@)", "Null(JavaScriptObject)", "Null()", "Future<Map<String,@>>(Map<String,String>)", "List<DiagnosticsNode>()", "Future<Map<String,Object>>(Map<String,String>)", "Future<~>(bool)", "~(DragUpdateDetails)", "bool(String)", "~(Object?,Object?)", "String()", "int(RenderObject,RenderObject)", "Future<@>(MethodCall)", "bool(Element0)", "~(DragStartDetails)", "bool(FocusNode)", "~(double)", "bool(KeyData)", "int()", "~(AppLifecycleState)", "Future<String>()", "~(DragEndDetails)", "String(String)", "Null(bool)", "~(~())", "~(List<FrameTiming>)", "~(Object,StackTrace)", "JavaScriptObject()", "JavaScriptObject?(int)", "JSObject()", "Null(String)", "bool(InheritedElement)", "int(Object?)", "~(bool)", "KeyData()", "bool(Object?,Object?)", "bool(int)", "~(RestorationBucket)", "~(ViewFocusEvent)", "~(Timer)", "Future<~>(MethodCall)", "List<JavaScriptObject>()", "Future<ByteData?>(ByteData?)", "Future<~>(@)", "int(SemanticsNode,SemanticsNode)", "bool(SemanticsNode)", "~(Element0)", "TextBox(TextBox)", "~(PointerEvent)", "~(@,@)", "Future<ServiceExtensionResponse>(String,Map<String,String>)", "int(_ReadingOrderSortData,_ReadingOrderSortData)", "Future<JavaScriptObject>([JavaScriptObject?])", "Future<~>(String)", "JSObject([JavaScriptObject?])", "int(int)", "Future<Null>()", "Future<~>(FirebaseWebService)", "_Channel()", "String(double,double,String)", "Object?(Object?)", "@(@)", "~(Uint8List,String,int)", "@()", "Null(Object?)", "bool(@)", "~(DiagnosticsNode)", "Null(@,StackTrace)", "~(int,@)", "~(CkCanvas)", "Null(Object,StackTrace)", "_Future<@>(@)", "Null(~())", "MapEntry<int,String>(MapEntry<String,String>)", "@(String)", "OffscreenCanvasViewRasterizer()", "~(String,int)", "~(String,int?)", "int(int,int)", "~(String,String?)", "~(int,int,int)", "Uint8List(@,@)", "@(@,String)", "JSObject?()", "~(String,String)", "Surface()", "~(Surface)", "RenderCanvas()", "String(int)", "~({allowPlatformDefault!bool})", "Future<~>([JavaScriptObject?])", "HotRestartCacheHandler?()", "~(PigeonInitializeResponse)", "bool(PigeonInitializeResponse?)", "FirebaseWebService()", "String(@)", "String(String,String?)", "Null(Object)", "~(Size?)", "MultiSurfaceViewRasterizer()", "bool(DiagnosticsNode?)", "bool(StackFrame)", "ErrorDescription(String)", "~(List<JavaScriptObject>,JavaScriptObject)", "String(DiagnosticsNode)", "double(@)", "~(String?)", "~(EditingState?,TextEditingDeltaState?)", "~(String,JavaScriptObject)", "~(String)", "bool(DiagnosticsNode)", "~(PointerDataPacket)", "double?(int)", "bool(SemanticsObject)", "bool(PointerData)", "_PointerEventDescription?(PointerData)", "~(~(PointerEvent),Matrix40?)", "GlyphInfo?()", "DateTime()", "DiagnosticsNode(InlineSpan)", "HitTestResult(Offset,int)", "Rect(Rect?,TextBox)", "MouseCursor0(MouseTrackerAnnotation)", "~(MouseTrackerAnnotation,Matrix40)", "bool(MouseTrackerAnnotation)", "int(JavaScriptObject)", "~(String?{wrapWidth:int?})", "_PointerDeviceState()", "~(FrameTiming)", "~(int,_FrameCallbackEntry)", "~(SemanticsActionEvent)", "RegisteredFont?(ByteBuffer,String,String)", "_ButtonSanitizer()", "ByteData(ByteData?)", "Stream<LicenseEntry>()", "Future<String?>(String?)", "~({allowPlatformDefault:bool})", "Future<~>(ByteData?,~(ByteData?))", "Future<Map<String,@>>(@)", "~(RawKeyEvent)", "int(_PlatformChannelStats,_PlatformChannelStats)", "~(JavaScriptObject,List<PointerData>)", "RawKeyEventData()", "~(JSArray<Object?>,JavaScriptObject)", "bool(int,int)", "Map<Object?,Object?>()", "List<RestorationBucket>(List<RestorationBucket>)", "double(num)", "List<@>(String)", "~(int,bool(FlutterHtmlKeyboardEvent))", "~(RenderingRenderCanvas,int)", "Null(JavaScriptFunction,JavaScriptFunction)", "~(CkPicture)", "Future<double>()", "Future<~>(double)", "JavaScriptObject?(double)", "Future<bool>(MethodCall)", "FontAsset(@)", "TextEditingValue(TextEditingValue,TextInputFormatter)", "FontFamily(@)", "bool(HitTestEntry<HitTestTarget>)", "DiagnosticsNode(FocusNode)", "bool(KeyMessage)", "~(RenderObject)", "~(_FocusTraversalGroupInfo)", "Set<Directionality>(_ReadingOrderSortData)", "~(NativeUint8List)", "List<Directionality>(BuildContext)", "Rect(_ReadingOrderSortData)", "int(_ReadingOrderDirectionalGroupData,_ReadingOrderDirectionalGroupData)", "List<_ReadingOrderSortData>(_ReadingOrderSortData,Iterable<_ReadingOrderSortData>)", "bool(_ReadingOrderSortData)", "~(List<Object?>)", "Null(List<~>)", "String(Object?)", "Null(JSArray<Object?>,JavaScriptObject)", "~(NotoFont)", "_SelectionToolbarWrapper(BuildContext)", "Future<~>(String,ByteData?,~(ByteData?)?)", "String(String,String)", "JavaScriptObject(int{params:Object?})", "int(@,@)", "CkCanvas(CkPictureRecorder)", "Future<JavaScriptObject>()", "String?(String)", "List<String>()", "List<String>(String,List<String>)", "0&(Object,StackTrace)", "~(FlutterErrorDetails{forceReport:bool})", "DiagnosticsNode(String)", "StackFrame?(String)", "~(SemanticsUpdate0)", "int(_TaskEntry<@>,_TaskEntry<@>)", "bool({priority!int,scheduler!SchedulerBinding})", "List<LicenseEntry>(String)", "~(FocusNode{alignment:double?,alignmentPolicy:ScrollPositionAlignmentPolicy?,curve:Curve?,duration:Duration?})", "int(Element0,Element0)", "JSObject(int)", "~(Object)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "2;": (t1, t2) => o => o instanceof A._Record_2 && t1._is(o._0) && t2._is(o._1),
      "2;end,start": (t1, t2) => o => o instanceof A._Record_2_end_start && t1._is(o._0) && t2._is(o._1),
      "2;key,value": (t1, t2) => o => o instanceof A._Record_2_key_value && t1._is(o._0) && t2._is(o._1),
      "3;breaks,graphemes,words": (t1, t2, t3) => o => o instanceof A._Record_3_breaks_graphemes_words && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;completer,recorder,scene": (t1, t2, t3) => o => o instanceof A._Record_3_completer_recorder_scene && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;data,event,timeStamp": (t1, t2, t3) => o => o instanceof A._Record_3_data_event_timeStamp && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;large,medium,small": (t1, t2, t3) => o => o instanceof A._Record_3_large_medium_small && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;queue,target,timer": (t1, t2, t3) => o => o instanceof A._Record_3_queue_target_timer && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;x,y,z": (t1, t2, t3) => o => o instanceof A._Record_3_x78_y_z && t1._is(o._0) && t2._is(o._1) && t3._is(o._2)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"LegacyJavaScriptObject","PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","AbortPaymentEvent":"JavaScriptObject","ExtendableEvent":"JavaScriptObject","Event":"JavaScriptObject","AudioContext":"BaseAudioContext","AbsoluteOrientationSensor":"EventTarget","OrientationSensor":"EventTarget","Sensor":"EventTarget","MathMLElement":"Element","AudioElement":"HtmlElement","MediaElement":"HtmlElement","HtmlDocument":"Node","Document":"Node","VttCue":"TextTrackCue","CDataSection":"CharacterData","Text":"CharacterData","HtmlFormControlsCollection":"HtmlCollection","CssCharsetRule":"CssRule","CssMatrixComponent":"CssTransformComponent","CssStyleSheet":"StyleSheet","CssurlImageValue":"CssStyleValue","CssImageValue":"CssStyleValue","CssResourceValue":"CssStyleValue","MultiSurfaceViewRasterizer":{"ViewRasterizer":[]},"OffscreenCanvasViewRasterizer":{"ViewRasterizer":[]},"RenderingRenderCanvas":{"RenderingEntity":[]},"RenderingPlatformView":{"RenderingEntity":[]},"FontLoadError":{"Error":[]},"EngineFlutterView":{"FlutterView":[]},"MutatorsStack":{"Iterable":["Mutator"],"Iterable.E":"Mutator"},"ContainerLayer":{"Layer":[]},"RootLayer":{"Layer":[]},"CkPaint":{"Paint":[]},"CanvasKitError":{"Error":[]},"HttpFetchResponseImpl":{"HttpFetchResponse":[]},"HttpFetchNoPayloadError":{"Exception":[]},"HttpFetchError":{"Exception":[]},"_DomListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"_DomTouchListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"FontNotFoundError":{"FontLoadError":[],"Error":[]},"FontDownloadError":{"FontLoadError":[],"Error":[]},"FontInvalidDataError":{"FontLoadError":[],"Error":[]},"SemanticsUpdate":{"SemanticsUpdate0":[]},"_TypedDataBuffer":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_IntBuffer":{"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8Buffer":{"_TypedDataBuffer":["int"],"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","Iterable.E":"int","_TypedDataBuffer.E":"int"},"_EngineFlutterViewImpl":{"EngineFlutterView":[],"FlutterView":[]},"EngineFlutterWindow":{"EngineFlutterView":[],"FlutterView":[]},"JavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"],"Iterable.E":"1"},"JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"LegacyJavaScriptObject":{"JavaScriptObject":[],"JSObject":[]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"],"JSIndexable":["1"],"Iterable.E":"1"},"JSNumber":{"double":[],"num":[]},"JSInt":{"double":[],"int":[],"num":[],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"num":[],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"JSIndexable":["@"],"TrustedGetRuntimeType":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"CastMap":{"MapBase":["3","4"],"Map":["3","4"],"MapBase.V":"4","MapBase.K":"3"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int","Iterable.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"ExpandIterable":{"Iterable":["2"],"Iterable.E":"2"},"TakeIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthTakeIterable":{"TakeIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"SkipWhileIterable":{"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"FollowedByIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthFollowedByIterable":{"FollowedByIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"WhereTypeIterable":{"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"ConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantStringSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"_StackTrace":{"StackTrace":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"_CyclicInitializationError":{"Error":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"JsIdentityLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"StringMatch":{"Match":[]},"_StringAllMatchesIterable":{"Iterable":["Match"],"Iterable.E":"Match"},"NativeUint8List":{"NativeTypedArrayOfInt":[],"Uint8List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeByteBuffer":{"JavaScriptObject":[],"JSObject":[],"ByteBuffer":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JavaScriptObject":[],"JSObject":[]},"NativeByteData":{"JavaScriptObject":[],"ByteData":[],"JSObject":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JavaScriptObject":[],"JSObject":[],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"]},"NativeFloat32List":{"Float32List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double"},"NativeFloat64List":{"Float64List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"JSIndexable":["double"],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double","Iterable.E":"double"},"NativeInt16List":{"NativeTypedArrayOfInt":[],"Int16List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeInt32List":{"NativeTypedArrayOfInt":[],"Int32List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeInt8List":{"NativeTypedArrayOfInt":[],"Int8List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint16List":{"NativeTypedArrayOfInt":[],"Uint16List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint32List":{"NativeTypedArrayOfInt":[],"Uint32List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"NativeUint8ClampedList":{"NativeTypedArrayOfInt":[],"Uint8ClampedList":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"JSIndexable":["int"],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int","Iterable.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_TimerImpl":{"Timer":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_BroadcastStream":{"_ControllerStream":["1"],"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_BroadcastSubscription":{"_ControllerSubscription":["1"],"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_AsyncStreamController":{"_AsyncStreamControllerDispatch":["1"],"_StreamController":["1"]},"_SyncStreamController":{"_StreamController":["1"]},"_ControllerStream":{"_StreamImpl":["1"],"Stream":["1"],"Stream.T":"1"},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"],"_BufferingStreamSubscription.T":"1"},"_StreamImpl":{"Stream":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_HashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_IdentityHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_CustomHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedHashSet":{"_SetBase":["1"],"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"Map":["1","2"]},"_DoubleLinkedQueueElement":{"_DoubleLinkedQueueEntry":["1"],"DoubleLinkedQueueEntry":["1"]},"_DoubleLinkedQueueSentinel":{"_DoubleLinkedQueueEntry":["1"]},"DoubleLinkedQueue":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"_JsonDecoderSink":{"StringConversionSink":[]},"Base64Encoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"_FusedConverter":{"Converter":["1","3"],"Converter.S":"1","Converter.T":"3"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonEncoder":{"Converter":["Object?","String"],"Converter.S":"Object?","Converter.T":"String"},"JsonDecoder":{"Converter":["String","Object?"],"Converter.S":"String","Converter.T":"Object?"},"_StringSinkConversionSink":{"StringConversionSink":[]},"_StringAdapterSink":{"StringConversionSink":[]},"Utf8Encoder":{"Converter":["String","List<int>"],"Converter.S":"String","Converter.T":"List<int>"},"_Utf8EncoderSink":{"StringConversionSink":[]},"Utf8Decoder":{"Converter":["List<int>","String"],"Converter.S":"List<int>","Converter.T":"String"},"double":{"num":[]},"int":{"num":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"RegExpMatch":{"Match":[]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_Exception":{"Exception":[]},"FormatException":{"Exception":[]},"_StringStackTrace":{"StackTrace":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"CssRule":{"JavaScriptObject":[],"JSObject":[]},"File":{"JavaScriptObject":[],"JSObject":[]},"Gamepad":{"JavaScriptObject":[],"JSObject":[]},"MimeType":{"JavaScriptObject":[],"JSObject":[]},"Node":{"JavaScriptObject":[],"JSObject":[]},"Plugin":{"JavaScriptObject":[],"JSObject":[]},"SourceBuffer":{"JavaScriptObject":[],"JSObject":[]},"SpeechGrammar":{"JavaScriptObject":[],"JSObject":[]},"SpeechRecognitionResult":{"JavaScriptObject":[],"JSObject":[]},"StyleSheet":{"JavaScriptObject":[],"JSObject":[]},"TextTrack":{"JavaScriptObject":[],"JSObject":[]},"TextTrackCue":{"JavaScriptObject":[],"JSObject":[]},"Touch":{"JavaScriptObject":[],"JSObject":[]},"HtmlElement":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"AccessibleNodeList":{"JavaScriptObject":[],"JSObject":[]},"AnchorElement":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"AreaElement":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"Blob":{"JavaScriptObject":[],"JSObject":[]},"CharacterData":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"CssPerspective":{"JavaScriptObject":[],"JSObject":[]},"CssStyleDeclaration":{"JavaScriptObject":[],"JSObject":[]},"CssStyleValue":{"JavaScriptObject":[],"JSObject":[]},"CssTransformComponent":{"JavaScriptObject":[],"JSObject":[]},"CssTransformValue":{"JavaScriptObject":[],"JSObject":[]},"CssUnparsedValue":{"JavaScriptObject":[],"JSObject":[]},"DataTransferItemList":{"JavaScriptObject":[],"JSObject":[]},"DomException0":{"JavaScriptObject":[],"JSObject":[]},"DomRectList":{"ListBase":["Rectangle<num>"],"ImmutableListMixin":["Rectangle<num>"],"List":["Rectangle<num>"],"JavaScriptIndexingBehavior":["Rectangle<num>"],"JavaScriptObject":[],"EfficientLengthIterable":["Rectangle<num>"],"JSObject":[],"Iterable":["Rectangle<num>"],"JSIndexable":["Rectangle<num>"],"ImmutableListMixin.E":"Rectangle<num>","ListBase.E":"Rectangle<num>","Iterable.E":"Rectangle<num>"},"DomRectReadOnly0":{"JavaScriptObject":[],"Rectangle":["num"],"JSObject":[]},"DomStringList":{"ListBase":["String"],"ImmutableListMixin":["String"],"List":["String"],"JavaScriptIndexingBehavior":["String"],"JavaScriptObject":[],"EfficientLengthIterable":["String"],"JSObject":[],"Iterable":["String"],"JSIndexable":["String"],"ImmutableListMixin.E":"String","ListBase.E":"String","Iterable.E":"String"},"DomTokenList0":{"JavaScriptObject":[],"JSObject":[]},"Element":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"EventTarget":{"JavaScriptObject":[],"JSObject":[]},"FileList":{"ListBase":["File"],"ImmutableListMixin":["File"],"List":["File"],"JavaScriptIndexingBehavior":["File"],"JavaScriptObject":[],"EfficientLengthIterable":["File"],"JSObject":[],"Iterable":["File"],"JSIndexable":["File"],"ImmutableListMixin.E":"File","ListBase.E":"File","Iterable.E":"File"},"FileWriter":{"JavaScriptObject":[],"JSObject":[]},"FormElement":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"History":{"JavaScriptObject":[],"JSObject":[]},"HtmlCollection":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"Location":{"JavaScriptObject":[],"JSObject":[]},"MediaList":{"JavaScriptObject":[],"JSObject":[]},"MidiInputMap":{"JavaScriptObject":[],"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"MidiOutputMap":{"JavaScriptObject":[],"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"MimeTypeArray":{"ListBase":["MimeType"],"ImmutableListMixin":["MimeType"],"List":["MimeType"],"JavaScriptIndexingBehavior":["MimeType"],"JavaScriptObject":[],"EfficientLengthIterable":["MimeType"],"JSObject":[],"Iterable":["MimeType"],"JSIndexable":["MimeType"],"ImmutableListMixin.E":"MimeType","ListBase.E":"MimeType","Iterable.E":"MimeType"},"NodeList":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"PluginArray":{"ListBase":["Plugin"],"ImmutableListMixin":["Plugin"],"List":["Plugin"],"JavaScriptIndexingBehavior":["Plugin"],"JavaScriptObject":[],"EfficientLengthIterable":["Plugin"],"JSObject":[],"Iterable":["Plugin"],"JSIndexable":["Plugin"],"ImmutableListMixin.E":"Plugin","ListBase.E":"Plugin","Iterable.E":"Plugin"},"RtcStatsReport":{"JavaScriptObject":[],"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"SelectElement":{"Node":[],"JavaScriptObject":[],"JSObject":[]},"SourceBufferList":{"ListBase":["SourceBuffer"],"ImmutableListMixin":["SourceBuffer"],"List":["SourceBuffer"],"JavaScriptIndexingBehavior":["SourceBuffer"],"JavaScriptObject":[],"EfficientLengthIterable":["SourceBuffer"],"JSObject":[],"Iterable":["SourceBuffer"],"JSIndexable":["SourceBuffer"],"ImmutableListMixin.E":"SourceBuffer","ListBase.E":"SourceBuffer","Iterable.E":"SourceBuffer"},"SpeechGrammarList":{"ListBase":["SpeechGrammar"],"ImmutableListMixin":["SpeechGrammar"],"List":["SpeechGrammar"],"JavaScriptIndexingBehavior":["SpeechGrammar"],"JavaScriptObject":[],"EfficientLengthIterable":["SpeechGrammar"],"JSObject":[],"Iterable":["SpeechGrammar"],"JSIndexable":["SpeechGrammar"],"ImmutableListMixin.E":"SpeechGrammar","ListBase.E":"SpeechGrammar","Iterable.E":"SpeechGrammar"},"Storage":{"JavaScriptObject":[],"MapBase":["String","String"],"JSObject":[],"Map":["String","String"],"MapBase.V":"String","MapBase.K":"String"},"TextTrackCueList":{"ListBase":["TextTrackCue"],"ImmutableListMixin":["TextTrackCue"],"List":["TextTrackCue"],"JavaScriptIndexingBehavior":["TextTrackCue"],"JavaScriptObject":[],"EfficientLengthIterable":["TextTrackCue"],"JSObject":[],"Iterable":["TextTrackCue"],"JSIndexable":["TextTrackCue"],"ImmutableListMixin.E":"TextTrackCue","ListBase.E":"TextTrackCue","Iterable.E":"TextTrackCue"},"TextTrackList":{"ListBase":["TextTrack"],"ImmutableListMixin":["TextTrack"],"List":["TextTrack"],"JavaScriptIndexingBehavior":["TextTrack"],"JavaScriptObject":[],"EfficientLengthIterable":["TextTrack"],"JSObject":[],"Iterable":["TextTrack"],"JSIndexable":["TextTrack"],"ImmutableListMixin.E":"TextTrack","ListBase.E":"TextTrack","Iterable.E":"TextTrack"},"TimeRanges":{"JavaScriptObject":[],"JSObject":[]},"TouchList":{"ListBase":["Touch"],"ImmutableListMixin":["Touch"],"List":["Touch"],"JavaScriptIndexingBehavior":["Touch"],"JavaScriptObject":[],"EfficientLengthIterable":["Touch"],"JSObject":[],"Iterable":["Touch"],"JSIndexable":["Touch"],"ImmutableListMixin.E":"Touch","ListBase.E":"Touch","Iterable.E":"Touch"},"TrackDefaultList":{"JavaScriptObject":[],"JSObject":[]},"Url":{"JavaScriptObject":[],"JSObject":[]},"VideoTrackList":{"JavaScriptObject":[],"JSObject":[]},"_CssRuleList":{"ListBase":["CssRule"],"ImmutableListMixin":["CssRule"],"List":["CssRule"],"JavaScriptIndexingBehavior":["CssRule"],"JavaScriptObject":[],"EfficientLengthIterable":["CssRule"],"JSObject":[],"Iterable":["CssRule"],"JSIndexable":["CssRule"],"ImmutableListMixin.E":"CssRule","ListBase.E":"CssRule","Iterable.E":"CssRule"},"_DomRect":{"JavaScriptObject":[],"Rectangle":["num"],"JSObject":[]},"_GamepadList":{"ListBase":["Gamepad?"],"ImmutableListMixin":["Gamepad?"],"List":["Gamepad?"],"JavaScriptIndexingBehavior":["Gamepad?"],"JavaScriptObject":[],"EfficientLengthIterable":["Gamepad?"],"JSObject":[],"Iterable":["Gamepad?"],"JSIndexable":["Gamepad?"],"ImmutableListMixin.E":"Gamepad?","ListBase.E":"Gamepad?","Iterable.E":"Gamepad?"},"_NamedNodeMap":{"ListBase":["Node"],"ImmutableListMixin":["Node"],"List":["Node"],"JavaScriptIndexingBehavior":["Node"],"JavaScriptObject":[],"EfficientLengthIterable":["Node"],"JSObject":[],"Iterable":["Node"],"JSIndexable":["Node"],"ImmutableListMixin.E":"Node","ListBase.E":"Node","Iterable.E":"Node"},"_SpeechRecognitionResultList":{"ListBase":["SpeechRecognitionResult"],"ImmutableListMixin":["SpeechRecognitionResult"],"List":["SpeechRecognitionResult"],"JavaScriptIndexingBehavior":["SpeechRecognitionResult"],"JavaScriptObject":[],"EfficientLengthIterable":["SpeechRecognitionResult"],"JSObject":[],"Iterable":["SpeechRecognitionResult"],"JSIndexable":["SpeechRecognitionResult"],"ImmutableListMixin.E":"SpeechRecognitionResult","ListBase.E":"SpeechRecognitionResult","Iterable.E":"SpeechRecognitionResult"},"_StyleSheetList":{"ListBase":["StyleSheet"],"ImmutableListMixin":["StyleSheet"],"List":["StyleSheet"],"JavaScriptIndexingBehavior":["StyleSheet"],"JavaScriptObject":[],"EfficientLengthIterable":["StyleSheet"],"JSObject":[],"Iterable":["StyleSheet"],"JSIndexable":["StyleSheet"],"ImmutableListMixin.E":"StyleSheet","ListBase.E":"StyleSheet","Iterable.E":"StyleSheet"},"NullRejectionException":{"Exception":[]},"Rectangle":{"_RectangleBase":["1"]},"Length":{"JavaScriptObject":[],"JSObject":[]},"Number":{"JavaScriptObject":[],"JSObject":[]},"Transform":{"JavaScriptObject":[],"JSObject":[]},"LengthList":{"ListBase":["Length"],"ImmutableListMixin":["Length"],"List":["Length"],"JavaScriptObject":[],"EfficientLengthIterable":["Length"],"JSObject":[],"Iterable":["Length"],"ImmutableListMixin.E":"Length","ListBase.E":"Length","Iterable.E":"Length"},"NumberList":{"ListBase":["Number"],"ImmutableListMixin":["Number"],"List":["Number"],"JavaScriptObject":[],"EfficientLengthIterable":["Number"],"JSObject":[],"Iterable":["Number"],"ImmutableListMixin.E":"Number","ListBase.E":"Number","Iterable.E":"Number"},"PointList":{"JavaScriptObject":[],"JSObject":[]},"StringList":{"ListBase":["String"],"ImmutableListMixin":["String"],"List":["String"],"JavaScriptObject":[],"EfficientLengthIterable":["String"],"JSObject":[],"Iterable":["String"],"ImmutableListMixin.E":"String","ListBase.E":"String","Iterable.E":"String"},"TransformList":{"ListBase":["Transform"],"ImmutableListMixin":["Transform"],"List":["Transform"],"JavaScriptObject":[],"EfficientLengthIterable":["Transform"],"JSObject":[],"Iterable":["Transform"],"ImmutableListMixin.E":"Transform","ListBase.E":"Transform","Iterable.E":"Transform"},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"AudioBuffer":{"JavaScriptObject":[],"JSObject":[]},"AudioParamMap":{"JavaScriptObject":[],"MapBase":["String","@"],"JSObject":[],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"AudioTrackList":{"JavaScriptObject":[],"JSObject":[]},"BaseAudioContext":{"JavaScriptObject":[],"JSObject":[]},"OfflineAudioContext":{"JavaScriptObject":[],"JSObject":[]},"StringCharacters":{"Iterable":["String"],"Iterable.E":"String"},"MethodChannelFirebaseApp":{"FirebaseAppPlatform":[]},"FirebaseException":{"Exception":[]},"FirebaseAppWeb":{"FirebaseAppPlatform":[]},"TrustedTypesException":{"Exception":[]},"AnimationController":{"Animation0":["double"]},"_Linear":{"Curve":[]},"Cubic":{"Curve":[]},"_DecelerateCurve":{"Curve":[]},"ErrorDescription":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"_ErrorDiagnostic":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSummary":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorHint":{"DiagnosticsProperty":["List<Object>"],"DiagnosticsNode":[]},"ErrorSpacer":{"DiagnosticsProperty":["~"],"DiagnosticsNode":[]},"FlutterError":{"DiagnosticableTree":[],"AssertionError":[],"Error":[]},"DiagnosticsStackTrace":{"DiagnosticsNode":[]},"_FlutterErrorDetailsNode":{"DiagnosticableNode":["FlutterErrorDetails"],"DiagnosticsNode":[]},"DiagnosticsProperty":{"DiagnosticsNode":[]},"DiagnosticableNode":{"DiagnosticsNode":[]},"DiagnosticableTreeNode":{"DiagnosticableNode":["DiagnosticableTree"],"DiagnosticsNode":[]},"DiagnosticsBlock":{"DiagnosticsNode":[]},"LicenseEntryWithLineBreaks":{"LicenseEntry":[]},"ObserverList":{"Iterable":["1"],"Iterable.E":"1"},"HashedObserverList":{"Iterable":["1"],"Iterable.E":"1"},"FlutterErrorDetailsForPointerEventDispatcher":{"FlutterErrorDetails":[]},"_PointerEventDescription":{"PointerEvent":[]},"_AbstractPointerEvent":{"PointerEvent":[]},"_TransformedPointerEvent":{"PointerEvent":[]},"PointerAddedEvent":{"PointerEvent":[]},"_TransformedPointerAddedEvent":{"PointerAddedEvent":[],"PointerEvent":[]},"PointerRemovedEvent":{"PointerEvent":[]},"_TransformedPointerRemovedEvent":{"PointerRemovedEvent":[],"PointerEvent":[]},"PointerHoverEvent":{"PointerEvent":[]},"_TransformedPointerHoverEvent":{"PointerHoverEvent":[],"PointerEvent":[]},"PointerEnterEvent":{"PointerEvent":[]},"_TransformedPointerEnterEvent":{"PointerEvent":[]},"PointerExitEvent":{"PointerEvent":[]},"_TransformedPointerExitEvent":{"PointerEvent":[]},"PointerDownEvent":{"PointerEvent":[]},"_TransformedPointerDownEvent":{"PointerDownEvent":[],"PointerEvent":[]},"PointerMoveEvent":{"PointerEvent":[]},"_TransformedPointerMoveEvent":{"PointerMoveEvent":[],"PointerEvent":[]},"PointerUpEvent":{"PointerEvent":[]},"_TransformedPointerUpEvent":{"PointerUpEvent":[],"PointerEvent":[]},"PointerSignalEvent":{"PointerEvent":[]},"PointerScrollEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"_TransformedPointerScrollEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"PointerScrollInertiaCancelEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"_TransformedPointerScrollInertiaCancelEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"PointerScaleEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"_TransformedPointerScaleEvent":{"PointerSignalEvent":[],"PointerEvent":[]},"PointerPanZoomStartEvent":{"PointerEvent":[]},"_TransformedPointerPanZoomStartEvent":{"PointerPanZoomStartEvent":[],"PointerEvent":[]},"PointerPanZoomUpdateEvent":{"PointerEvent":[]},"_TransformedPointerPanZoomUpdateEvent":{"PointerPanZoomUpdateEvent":[],"PointerEvent":[]},"PointerPanZoomEndEvent":{"PointerEvent":[]},"_TransformedPointerPanZoomEndEvent":{"PointerPanZoomEndEvent":[],"PointerEvent":[]},"PointerCancelEvent":{"PointerEvent":[]},"_TransformedPointerCancelEvent":{"PointerCancelEvent":[],"PointerEvent":[]},"InlineSpan":{"DiagnosticableTree":[]},"PlaceholderSpan":{"InlineSpan":[],"DiagnosticableTree":[]},"TextSpan":{"InlineSpan":[],"DiagnosticableTree":[],"MouseTrackerAnnotation":[],"HitTestTarget":[]},"_DefaultRootPipelineOwner":{"PipelineOwner":[],"DiagnosticableTree":[]},"BoxHitTestResult":{"HitTestResult":[]},"PipelineOwner":{"DiagnosticableTree":[]},"RenderObject":{"DiagnosticableTree":[],"HitTestTarget":[]},"RenderView":{"RenderObject":[],"DiagnosticableTree":[],"HitTestTarget":[]},"TickerFuture":{"Future":["~"]},"TickerCanceled":{"Exception":[]},"SemanticsNode":{"DiagnosticableTree":[]},"_SemanticsDiagnosticableNode":{"DiagnosticableNode":["SemanticsNode"],"DiagnosticsNode":[]},"KeyDownEvent":{"KeyEvent":[]},"KeyUpEvent":{"KeyEvent":[]},"KeyRepeatEvent":{"KeyEvent":[]},"PlatformException":{"Exception":[]},"MissingPluginException":{"Exception":[]},"_DeferringMouseCursor":{"MouseCursor0":[]},"_SystemMouseCursorSession":{"MouseCursorSession":[]},"SystemMouseCursor":{"MouseCursor0":[]},"RawKeyDownEvent":{"RawKeyEvent":[]},"RawKeyUpEvent":{"RawKeyEvent":[]},"TextEditingDeltaInsertion":{"TextEditingDelta":[]},"TextEditingDeltaDeletion":{"TextEditingDelta":[]},"TextEditingDeltaReplacement":{"TextEditingDelta":[]},"TextEditingDeltaNonTextUpdate":{"TextEditingDelta":[]},"_PlatformTextInputControl":{"TextInputControl":[]},"_ActionsScope":{"InheritedWidget":[],"DiagnosticableTree":[]},"Directionality":{"InheritedWidget":[],"DiagnosticableTree":[]},"SizedBox":{"DiagnosticableTree":[]},"ExcludeSemantics":{"DiagnosticableTree":[]},"Builder":{"DiagnosticableTree":[]},"WidgetsFlutterBinding":{"SchedulerBinding":[],"HitTestTarget":[]},"EditableText":{"StatefulWidget":[],"DiagnosticableTree":[]},"_ScribblePlaceholder":{"InlineSpan":[],"DiagnosticableTree":[]},"FocusNode":{"DiagnosticableTree":[]},"FocusScopeNode":{"FocusNode":[],"DiagnosticableTree":[]},"_AppLifecycleListener":{"WidgetsBindingObserver":[]},"FocusManager":{"DiagnosticableTree":[]},"LabeledGlobalKey":{"GlobalKey":["1"]},"Widget":{"DiagnosticableTree":[]},"StatefulWidget":{"DiagnosticableTree":[]},"Element0":{"DiagnosticableTree":[],"BuildContext":[]},"InheritedElement":{"Element0":[],"DiagnosticableTree":[],"BuildContext":[]},"StatelessWidget":{"DiagnosticableTree":[]},"RenderObjectWidget":{"DiagnosticableTree":[]},"SingleChildRenderObjectWidget":{"DiagnosticableTree":[]},"InheritedTheme":{"InheritedWidget":[],"DiagnosticableTree":[]},"_CaptureAll":{"DiagnosticableTree":[]},"LookupBoundary":{"InheritedWidget":[],"DiagnosticableTree":[]},"Navigator0":{"StatefulWidget":[],"DiagnosticableTree":[]},"NavigatorState":{"State":["Navigator0"]},"_OverlayEntryWidget":{"StatefulWidget":[],"DiagnosticableTree":[]},"_OverlayEntryWidgetState":{"State":["_OverlayEntryWidget"]},"Overlay":{"StatefulWidget":[],"DiagnosticableTree":[]},"OverlayState":{"State":["Overlay"]},"_ScrollableScope":{"InheritedWidget":[],"DiagnosticableTree":[]},"TapRegion":{"DiagnosticableTree":[]},"TextFieldTapRegion":{"DiagnosticableTree":[]},"_SelectionToolbarWrapper":{"StatefulWidget":[],"DiagnosticableTree":[]},"_SelectionHandleOverlay":{"StatefulWidget":[],"DiagnosticableTree":[]},"WidgetSpan":{"InlineSpan":[],"DiagnosticableTree":[]},"_FocusInheritedScope":{"InheritedNotifier":["FocusNode"],"InheritedWidget":[],"DiagnosticableTree":[]},"_LocalizationsScope":{"InheritedWidget":[],"DiagnosticableTree":[]},"_ViewScope":{"InheritedWidget":[],"DiagnosticableTree":[]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"ConstantSet":1,"NativeTypedArray":1,"_SyncStreamControllerDispatch":1,"_DelayedEvent":1,"_UnmodifiableMapMixin":2,"MapView":2,"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":2,"ChunkedConversionSink":1,"Codec":2,"_StringSinkConversionSink":1,"JsObjectWrapper":1,"ParametricCurve":1,"_TaskEntry":1,"TypeAdapter":1}'));
  var string$ = {
    x10__0__: "\x10@\x100@@\xa0\x80 0P`pPP\xb1\x10@\x100@@\xa0\x80 0P`pPP\xb0\x11@\x100@@\xa0\x80 0P`pPP\xb0\x10@\x100@@\xa0\x80 1P`pPP\xb0\x10A\x101AA\xa1\x81 1QaqQQ\xb0\x10@\x100@@\xa0\x80 1Q`pPP\xb0\x10@\x100@@\xa0\x80 1QapQP\xb0\x10@\x100@@\xa0\x80 1PaqQQ\xb0\x10\xe0\x100@@\xa0\x80 1P`pPP\xb0\xb1\xb1\xb1\xb1\x91\xb1\xc1\x81\xb1\xb1\xb1\xb1\xb1\xb1\xb1\xb1\x10@\x100@@\xd0\x80 1P`pPP\xb0\x11A\x111AA\xa1\x81!1QaqQQ\xb1\x10@\x100@@\x90\x80 1P`pPP\xb0",
    x200_000: " 0\x10000\xa0\x80\x10@P`p`p\xb1 0\x10000\xa0\x80\x10@P`p`p\xb0 0\x10000\xa0\x80\x11@P`p`p\xb0 1\x10011\xa0\x80\x10@P`p`p\xb0 1\x10111\xa1\x81\x10AQaqaq\xb0 1\x10011\xa0\x80\x10@Qapaq\xb0 1\x10011\xa0\x80\x10@Paq`p\xb0 1\x10011\xa0\x80\x10@P`q`p\xb0 \x91\x100\x811\xa0\x80\x10@P`p`p\xb0 1\x10011\xa0\x81\x10@P`p`p\xb0 1\x100111\x80\x10@P`p`p\xb0!1\x11111\xa1\x81\x11AQaqaq\xb1",
    x27_has_: "' has been assigned during initialization.",
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Cannot: "Cannot fire new event. Controller is already firing an event",
    E53333: 'E533333333333333333333333333DDDDDDD4333333333333333333334C43333CD53333333333333333333333UEDTE4\x933343333\x933333333333333333333333333D433333333333333333CDDEDDD43333333S5333333333333333333333C333333D533333333333333333333333SUDDDDT5\x9933CD4E333333333333333333333333UEDDDDE433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333TUUS5CT\x94\x95E3333333333333333333333333333333333333333333333333333333333333333333333SUDD3DUU43533333333333333333C3333333333333w733337333333s3333333w7333333333w33333333333333333333CDDTETE43333ED4S5SE3333C33333D33333333333334E433C3333333C33333333333333333333333333333CETUTDT533333CDDDDDDDDDD3333333343333333D$433333333333333333333333SUDTEE433C34333333333333333333333333333333333333333333333333333333333333333333333333333333TUDDDD3333333333CT5333333333333333333333333333DCEUU3U3U5333343333S5CDDD3CDD333333333333333333333333333333333333333333333333333333333333333333333s73333s33333333333""""""""333333339433333333333333CDDDDDDDDDDDDDDDD3333333CDDDDDDDDDDD\x94DDDDDDDDDDDDDDDDDDDDDDDD33333333DDDDDDDD3333333373s333333333333333333333333333333CDTDDDCTE43C4CD3C333333333333333D3C33333\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xed\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee\xee333333\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb33\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc<3sww73333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333w7333333333333333733333333333333333333333333333sww733333s7333333s3wwwww333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwgffffffffffffvww7wwwwwwswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww733333333333333333333333swwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww7333333333333333333333333333333333333333333333333333333333swwwww7333333333333333333333333333333333333333333wwwwwwwwwwwwwwwwwwwww7swwwwwss33373733s33333w33333CT333333333333333EDTETD433333333#\x14"333333333333"""233333373ED4U5UE9333C33333D33333333333333www3333333ss333333333333swwwww33w733wwwwwww73333s33333333337swwwwsw73333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwDD4D33CDDDDDCDDDDDDDDDDDDDDDDD43EDDDTUEUCDDD33333D33333333333333DDCDDDDCDCDD333333333DT33333333333333D5333333333333333333333333333CSUE4333333333333CDDDDDDDD4333333DT33333333333333333333333CUDDUDU3SUSU43333433333333333333333333ET533E3333SDD3U3U4333D43333C43333333333333s733333s33333333333CTE333333333333333333UUUUDDDDUD3333"""""(\x02"""""""""3333333333333333333DDDD333333333333333333333333CDDDD3333C3333T333333333333333333333334343C33333333333SET334333333333DDDDDDDDDDDDDDDDDDDDDD4DDDDDDDD4CDDDC4DD43333333333333333333333333333333333333333333333333C33333333333333333333333333333333333333333333333333333333333333333333333333333333DDD433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333334333333333333333333333333333333DD3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333DD433333333333333333333333333333DDD43333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333DDDDDDD533333333333333333333333DDDTTU5D4DD333C433333D333333333333333333333DDD733333s373ss33w7733333ww733333333333ss33333333333333333333333333333ww3333333333333333333333333333wwww33333www33333333333333333333wwww333333333333333wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww333333wwwwwwwwwwwwwwwwwwwwwww7wwwwwswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwx94433333333333333333333333333333333SUUC4UT4333333333333333333333333333333333333333333333333333#"""""""B333DDDDDDD433333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333CED3SDD$"""BDDD4CDDD333333333333333DD33333333333333333333333333333333333333333DEDDDUE333333333333333333333333333CCD3D33CD533333333333333333333333333CESEU3333333333333333333DDDD433333CU33333333333333333333333333334DC44333333333333333333333333333CD4DDDDD33333333333333333333DDD\x95DD333343333DDDUD43333333333333333333\x93\x99\xxaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa:3\x99\x99\x9933333DDDDD4233333333333333333UTEUS433333333CDCDDDDDDEDDD33433C3E433#"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""BDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD$"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""BDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD$"""""""""""""""2333373r33333333\x93933CDDD4333333333333333CDUUDU53SEUUUD43\xa3\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xaa\xba\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xcb\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\f',
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    Host_p: "Host platform returned null value for non-null return value.",
    No_ren: "No render tree root was added to the binding.",
    TextInD: "TextInputClient.updateEditingStateWithDeltas",
    TextInT: "TextInputClient.updateEditingStateWithTag",
    There_: "There was a problem trying to load FontManifest.json",
    Unable: "Unable to establish connection on channel.",
    u1ac4_____: "\u1ac4\u2bb8\u411f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3f4f\u0814\u32b6\u32b6\u32b6\u32b6\u1f81\u32b6\u32b6\u32b6\u1bbb\u2f6f\u3cc2\u051e\u32b6\u11d3\u079b\u2c12\u3967\u1b18\u18aa\u392b\u414f\u07f1\u2eb5\u1880\u1123\u047a\u1909\u08c6\u1909\u11af\u2f32\u1a19\u04d1\u19c3\u2e6b\u209a\u1298\u1259\u0667\u108e\u1160\u3c49\u116f\u1b03\u12a3\u1f7c\u121b\u2023\u1840\u34b0\u088a\u3c13\u04b6\u32b6\u41af\u41cf\u41ef\u4217\u32b6\u32b6\u32b6\u32b6\u32b6\u3927\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u18d8\u1201\u2e2e\u15be\u0553\u32b6\u3be9\u32b6\u416f\u32b6\u32b6\u32b6\u1a68\u10e5\u2a59\u2c0e\u205e\u2ef3\u1019\u04e9\u1a84\u32b6\u32b6\u3d0f\u32b6\u32b6\u32b6\u3f4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u104e\u076a\u32b6\u07bb\u15dc\u32b6\u10ba\u32b6\u32b6\u32b6\u32b6\u32b6\u1a3f\u32b6\u0cf2\u1606\u32b6\u32b6\u32b6\u0877\u32b6\u32b6\u073d\u2139\u0dcb\u0bcb\u09b3\u0bcb\u0fd9\u20f7\u03e3\u32b6\u32b6\u32b6\u32b6\u32b6\u0733\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u041d\u0864\u32b6\u32b6\u32b6\u32b6\u32b6\u3915\u32b6\u3477\u32b6\u3193\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u20be\u32b6\u36b1\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2120\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2f80\u36ac\u369a\u32b6\u32b6\u32b6\u32b6\u1b8c\u32b6\u1584\u1947\u1ae4\u3c82\u1986\u03b8\u043a\u1b52\u2e77\u19d9\u32b6\u32b6\u32b6\u3cdf\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u091e\u090a\u0912\u091a\u0906\u090e\u0916\u093a\u0973\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3498\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u0834\u32b6\u32b6\u2bb8\u32b6\u32b6\u36ac\u35a6\u32b9\u33d6\u32b6\u32b6\u32b6\u35e5\u24ee\u3847\x00\u0567\u3a12\u2826\u01d4\u2fb3\u29f7\u36f2\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2bc7\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u1e54\u32b6\u1394\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u2412\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u30b3\u2c62\u3271\u32b6\u32b6\u32b6\u12e3\u32b6\u32b6\u1bf2\u1d44\u2526\u32b6\u2656\u32b6\u32b6\u32b6\u0bcb\u1645\u0a85\u0ddf\u2168\u22af\u09c3\u09c5\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u3f2f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u3d4f\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6\u32b6"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AppExitResponse: findType("AppExitResponse"),
      AssertionError: findType("AssertionError"),
      AssetFontsResult: findType("AssetFontsResult"),
      AutofillInfo: findType("AutofillInfo"),
      BasicMessageChannel_nullable_Object: findType("BasicMessageChannel<Object?>"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      CastList_of_DiagnosticsNode_and_nullable_DiagnosticsNode: findType("CastList<DiagnosticsNode,DiagnosticsNode?>"),
      ChangeNotifier: findType("ChangeNotifier"),
      CkParagraphStyle: findType("CkParagraphStyle"),
      CkStrutStyle: findType("CkStrutStyle"),
      CkTextStyle: findType("CkTextStyle"),
      CodeUnits: findType("CodeUnits"),
      Color: findType("Color"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      DeltaTextInputClient: findType("DeltaTextInputClient"),
      DiagnosticableTree: findType("DiagnosticableTree"),
      DiagnosticsNode: findType("DiagnosticsNode"),
      Directionality: findType("Directionality"),
      DomIteratorWrapper_JavaScriptObject: findType("DomIteratorWrapper<JavaScriptObject>"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      Element: findType("Element0"),
      EmbeddedViewParams: findType("EmbeddedViewParams"),
      EngineFlutterView: findType("EngineFlutterView"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      FallbackFontComponent: findType("FallbackFontComponent"),
      FirebaseApp: findType("FirebaseApp"),
      FirebaseAppPlatform: findType("FirebaseAppPlatform"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FlutterView: findType("FlutterView"),
      FocusNode: findType("FocusNode"),
      FocusScopeNode: findType("FocusScopeNode"),
      FontAsset: findType("FontAsset"),
      FontDownloadResult: findType("FontDownloadResult"),
      FontFamily: findType("FontFamily"),
      FontLoadError: findType("FontLoadError"),
      FontManifest: findType("FontManifest"),
      Function: findType("Function"),
      Future_ServiceExtensionResponse: findType("Future<ServiceExtensionResponse>"),
      Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String: findType("Future<ServiceExtensionResponse>(String,Map<String,String>)"),
      Future_dynamic: findType("Future<@>"),
      Future_nullable_ByteData: findType("Future<ByteData?>"),
      Future_void: findType("Future<~>"),
      GeneralConstantSet_int: findType("GeneralConstantSet<int>"),
      GlobalKey_State_StatefulWidget: findType("GlobalKey<State<StatefulWidget>>"),
      HashedObserverList_of_KeyEventResult_Function_KeyEvent: findType("HashedObserverList<KeyEventResult(KeyEvent)>"),
      HashedObserverList_of_void_Function_FocusHighlightMode: findType("HashedObserverList<~(FocusHighlightMode)>"),
      HitTestEntry_HitTestTarget: findType("HitTestEntry<HitTestTarget>"),
      HitTestResult: findType("HitTestResult"),
      HitTestTarget: findType("HitTestTarget"),
      HttpFetchResponse: findType("HttpFetchResponse"),
      InheritedTheme: findType("InheritedTheme"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      Intent: findType("Intent"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_nullable_Object: findType("Iterable<Object?>"),
      JSArray_AppLifecycleState: findType("JSArray<AppLifecycleState>"),
      JSArray_CkCanvas: findType("JSArray<CkCanvas>"),
      JSArray_CkPicture: findType("JSArray<CkPicture>"),
      JSArray_CkPictureRecorder: findType("JSArray<CkPictureRecorder>"),
      JSArray_CkTextStyle: findType("JSArray<CkTextStyle>"),
      JSArray_DiagnosticsNode: findType("JSArray<DiagnosticsNode>"),
      JSArray_Directionality: findType("JSArray<Directionality>"),
      JSArray_DomSubscription: findType("JSArray<DomSubscription>"),
      JSArray_EngineFlutterDisplay: findType("JSArray<EngineFlutterDisplay>"),
      JSArray_FallbackFontComponent: findType("JSArray<FallbackFontComponent>"),
      JSArray_FocusNode: findType("JSArray<FocusNode>"),
      JSArray_FontFamily: findType("JSArray<FontFamily>"),
      JSArray_FrameTiming: findType("JSArray<FrameTiming>"),
      JSArray_Future_FontDownloadResult: findType("JSArray<Future<FontDownloadResult>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_HitTestEntry_HitTestTarget: findType("JSArray<HitTestEntry<HitTestTarget>>"),
      JSArray_InheritedTheme: findType("JSArray<InheritedTheme>"),
      JSArray_JavaScriptObject: findType("JSArray<JavaScriptObject>"),
      JSArray_KeyEvent: findType("JSArray<KeyEvent>"),
      JSArray_KeyEventResult: findType("JSArray<KeyEventResult>"),
      JSArray_Layer: findType("JSArray<Layer>"),
      JSArray_LicenseEntry: findType("JSArray<LicenseEntry>"),
      JSArray_LineBreakFragment: findType("JSArray<LineBreakFragment>"),
      JSArray_Listener: findType("JSArray<Listener>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_Map_String_dynamic: findType("JSArray<Map<String,@>>"),
      JSArray_Matrix4: findType("JSArray<Matrix40>"),
      JSArray_Mutator: findType("JSArray<Mutator>"),
      JSArray_NotoFont: findType("JSArray<NotoFont>"),
      JSArray_Object: findType("JSArray<Object>"),
      JSArray_OverlayEntry: findType("JSArray<OverlayEntry>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_Record_2_String_and_UnregisteredFont: findType("JSArray<+(String,UnregisteredFont)>"),
      JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp: findType("JSArray<+data,event,timeStamp(List<PointerData>,JavaScriptObject,Duration)>"),
      JSArray_RegisteredFont: findType("JSArray<RegisteredFont>"),
      JSArray_RenderObject: findType("JSArray<RenderObject>"),
      JSArray_RenderingEntity: findType("JSArray<RenderingEntity>"),
      JSArray_ScrollPosition: findType("JSArray<ScrollPosition>"),
      JSArray_SelectionRect: findType("JSArray<SelectionRect>"),
      JSArray_SemanticsNode: findType("JSArray<SemanticsNode>"),
      JSArray_SemanticsNodeUpdate: findType("JSArray<SemanticsNodeUpdate>"),
      JSArray_SemanticsObject: findType("JSArray<SemanticsObject>"),
      JSArray_StreamSubscription_void: findType("JSArray<StreamSubscription<~>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_SuggestionSpan: findType("JSArray<SuggestionSpan>"),
      JSArray_TextBox: findType("JSArray<TextBox>"),
      JSArray_TextEditingDelta: findType("JSArray<TextEditingDelta>"),
      JSArray_TextSpan: findType("JSArray<TextSpan>"),
      JSArray_UnregisteredFont: findType("JSArray<UnregisteredFont>"),
      JSArray_WidgetsBindingObserver: findType("JSArray<WidgetsBindingObserver>"),
      JSArray__Autofocus: findType("JSArray<_Autofocus>"),
      JSArray__ReadingOrderDirectionalGroupData: findType("JSArray<_ReadingOrderDirectionalGroupData>"),
      JSArray__ReadingOrderSortData: findType("JSArray<_ReadingOrderSortData>"),
      JSArray__TransformPart: findType("JSArray<_TransformPart>"),
      JSArray_bool: findType("JSArray<bool>"),
      JSArray_double: findType("JSArray<double>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_LogicalKeyboardKey: findType("JSArray<LogicalKeyboardKey?>"),
      JSArray_nullable__AsyncBlock: findType("JSArray<_AsyncBlock?>"),
      JSArray_nullable_int: findType("JSArray<int?>"),
      JSArray_of_Stream_LicenseEntry_Function: findType("JSArray<Stream<LicenseEntry>()>"),
      JSArray_of_bool_Function_KeyEvent: findType("JSArray<bool(KeyEvent)>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_AnimationStatus: findType("JSArray<~(AnimationStatus)>"),
      JSArray_of_void_Function_AppLifecycleState: findType("JSArray<~(AppLifecycleState)>"),
      JSArray_of_void_Function_Duration: findType("JSArray<~(Duration)>"),
      JSArray_of_void_Function_GestureMode: findType("JSArray<~(GestureMode)>"),
      JSArray_of_void_Function_List_FrameTiming: findType("JSArray<~(List<FrameTiming>)>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JavaScriptObject: findType("JavaScriptObject"),
      KeyEventResult_Function_KeyEvent: findType("KeyEventResult(KeyEvent)"),
      KeyboardLockMode: findType("KeyboardLockMode"),
      KeyboardSide: findType("KeyboardSide"),
      LabeledGlobalKey__OverlayEntryWidgetState: findType("LabeledGlobalKey<_OverlayEntryWidgetState>"),
      LayerScene: findType("LayerScene"),
      LicenseEntry: findType("LicenseEntry"),
      List_JavaScriptObject: findType("List<JavaScriptObject>"),
      List_LicenseEntry: findType("List<LicenseEntry>"),
      List_RestorationBucket: findType("List<RestorationBucket>"),
      List_String: findType("List<String>"),
      List_dynamic: findType("List<@>"),
      List_nullable_Object: findType("List<Object?>"),
      List_nullable_PigeonInitializeResponse: findType("List<PigeonInitializeResponse?>"),
      LogicalKeyboardKey: findType("LogicalKeyboardKey"),
      LookupBoundary: findType("LookupBoundary"),
      MapEntry_int_String: findType("MapEntry<int,String>"),
      Map_String_Object: findType("Map<String,Object>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_String_int: findType("Map<String,int>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_String_and_nullable_Object: findType("Map<String,Object?>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      Map_of_void_Function_PointerEvent_and_nullable_Matrix4: findType("Map<~(PointerEvent),Matrix40?>"),
      MappedIterable_of_String_and_nullable_StackFrame: findType("MappedIterable<String,StackFrame?>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      Matrix4: findType("Matrix40"),
      MethodCall: findType("MethodCall"),
      ModifierKey: findType("ModifierKey"),
      MouseCursor: findType("MouseCursor0"),
      MouseCursorSession: findType("MouseCursorSession"),
      MouseTrackerAnnotation: findType("MouseTrackerAnnotation"),
      MultiSurfaceViewRasterizer: findType("MultiSurfaceViewRasterizer"),
      NativeTypedArrayOfInt: findType("NativeTypedArrayOfInt"),
      NativeUint8List: findType("NativeUint8List"),
      NavigatorState: findType("NavigatorState"),
      NotoFont: findType("NotoFont"),
      Null: findType("Null"),
      Object: findType("Object"),
      Object_Function_int: findType("Object(int)"),
      Object_Function_int_$named_params_nullable_Object: findType("Object(int{params:Object?})"),
      ObserverList_of_void_Function: findType("ObserverList<~()>"),
      ObserverList_of_void_Function_AnimationStatus: findType("ObserverList<~(AnimationStatus)>"),
      OffscreenCanvasViewRasterizer: findType("OffscreenCanvasViewRasterizer"),
      OffsetLayer: findType("OffsetLayer"),
      OverlayState: findType("OverlayState"),
      Paint: findType("Paint"),
      PhysicalKeyboardKey: findType("PhysicalKeyboardKey"),
      PigeonInitializeResponse: findType("PigeonInitializeResponse"),
      PipelineOwner: findType("PipelineOwner"),
      PlatformMenuItem: findType("PlatformMenuItem"),
      PointerAddedEvent: findType("PointerAddedEvent"),
      PointerCancelEvent: findType("PointerCancelEvent"),
      PointerDownEvent: findType("PointerDownEvent"),
      PointerEvent: findType("PointerEvent"),
      PointerEventResampler: findType("PointerEventResampler"),
      PointerHoverEvent: findType("PointerHoverEvent"),
      PointerMoveEvent: findType("PointerMoveEvent"),
      PointerPanZoomEndEvent: findType("PointerPanZoomEndEvent"),
      PointerPanZoomStartEvent: findType("PointerPanZoomStartEvent"),
      PointerPanZoomUpdateEvent: findType("PointerPanZoomUpdateEvent"),
      PointerRemovedEvent: findType("PointerRemovedEvent"),
      PointerSignalEvent: findType("PointerSignalEvent"),
      PointerUpEvent: findType("PointerUpEvent"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      Rectangle_num: findType("Rectangle<num>"),
      RegExpMatch: findType("RegExpMatch"),
      RenderBox: findType("RenderBox"),
      RenderCanvas: findType("RenderCanvas"),
      RenderObject: findType("RenderObject"),
      RenderView: findType("RenderView"),
      RenderingEntity: findType("RenderingEntity"),
      RenderingRenderCanvas: findType("RenderingRenderCanvas"),
      RestorationBucket: findType("RestorationBucket"),
      ScrollPosition: findType("ScrollPosition"),
      SemanticsNode: findType("SemanticsNode"),
      SemanticsObject: findType("SemanticsObject"),
      ServiceExtensionResponse: findType("ServiceExtensionResponse"),
      Set_String: findType("Set<String>"),
      SkipWhileIterable_String: findType("SkipWhileIterable<String>"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      StringConversionSink: findType("StringConversionSink"),
      Surface: findType("Surface"),
      SystemContextMenuClient: findType("SystemContextMenuClient"),
      SystemMouseCursor: findType("SystemMouseCursor"),
      TextSelectionHandleControls: findType("TextSelectionHandleControls"),
      Timer: findType("Timer"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      Type: findType("Type"),
      TypeError: findType("TypeError"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UniqueRef_JavaScriptObject: findType("UniqueRef<JavaScriptObject>"),
      UniqueRef_Object: findType("UniqueRef<Object>"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      ValueNotifier_bool: findType("ValueNotifier<bool>"),
      ValueNotifier_nullable__OverlayEntryWidgetState: findType("ValueNotifier<_OverlayEntryWidgetState?>"),
      ValueNotifier_nullable_int: findType("ValueNotifier<int?>"),
      ViewClipChain: findType("ViewClipChain"),
      WhereIterable_String: findType("WhereIterable<String>"),
      WhereTypeIterable_PointerEvent: findType("WhereTypeIterable<PointerEvent>"),
      WhereTypeIterable_RenderingRenderCanvas: findType("WhereTypeIterable<RenderingRenderCanvas>"),
      WhereTypeIterable_StackFrame: findType("WhereTypeIterable<StackFrame>"),
      WhereTypeIterator_FocusScopeNode: findType("WhereTypeIterator<FocusScopeNode>"),
      WidgetsBindingObserver: findType("WidgetsBindingObserver"),
      _ActionsScope: findType("_ActionsScope"),
      _AsyncBroadcastStreamController_BarcodeCapture: findType("_AsyncBroadcastStreamController<BarcodeCapture>"),
      _AsyncBroadcastStreamController_JSObject: findType("_AsyncBroadcastStreamController<JSObject>"),
      _AsyncBroadcastStreamController_nullable_Size: findType("_AsyncBroadcastStreamController<Size?>"),
      _AsyncCompleter_dynamic: findType("_AsyncCompleter<@>"),
      _AsyncCompleter_nullable_ByteData: findType("_AsyncCompleter<ByteData?>"),
      _AsyncCompleter_void: findType("_AsyncCompleter<~>"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _CachedImage: findType("_CachedImage"),
      _DirectionalPolicyData: findType("_DirectionalPolicyData"),
      _DomListWrapper_JavaScriptObject: findType("_DomListWrapper<JavaScriptObject>"),
      _DomTouchListWrapper_JavaScriptObject: findType("_DomTouchListWrapper<JavaScriptObject>"),
      _FocusInheritedScope: findType("_FocusInheritedScope"),
      _FocusTraversalGroupInfo: findType("_FocusTraversalGroupInfo"),
      _FrameCallbackEntry: findType("_FrameCallbackEntry"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_nullable_ByteData: findType("_Future<ByteData?>"),
      _Future_void: findType("_Future<~>"),
      _GestureArena: findType("_GestureArena"),
      _IdentityHashMap_of_nullable_Object_and_nullable_Object: findType("_IdentityHashMap<Object?,Object?>"),
      _LiveImage: findType("_LiveImage"),
      _LocalizationsScope: findType("_LocalizationsScope"),
      _MapEntry: findType("_MapEntry"),
      _MouseState: findType("_MouseState"),
      _PendingImage: findType("_PendingImage"),
      _ProfiledBinaryMessenger: findType("_ProfiledBinaryMessenger"),
      _ReadingOrderDirectionalGroupData: findType("_ReadingOrderDirectionalGroupData"),
      _ReadingOrderSortData: findType("_ReadingOrderSortData"),
      _ScrollableScope: findType("_ScrollableScope"),
      _SimpleCallbackSink_nullable_Object: findType("_SimpleCallbackSink<Object?>"),
      _StoredMessage: findType("_StoredMessage"),
      _SyncBroadcastStreamController_int: findType("_SyncBroadcastStreamController<int>"),
      _TaskEntry_dynamic: findType("_TaskEntry<@>"),
      _ViewScope: findType("_ViewScope"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_ByteData: findType("ByteData?"),
      nullable_CkPaint: findType("CkPaint?"),
      nullable_Directionality: findType("Directionality?"),
      nullable_EngineFlutterWindow: findType("EngineFlutterWindow?"),
      nullable_FocusNode: findType("FocusNode?"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_JSObject: findType("JSObject?"),
      nullable_List_dynamic: findType("List<@>?"),
      nullable_List_nullable_Object: findType("List<Object?>?"),
      nullable_Map_String_dynamic: findType("Map<String,@>?"),
      nullable_Map_dynamic_dynamic: findType("Map<@,@>?"),
      nullable_Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>?"),
      nullable_Matrix4: findType("Matrix40?"),
      nullable_Object: findType("Object?"),
      nullable_OffsetLayer: findType("OffsetLayer?"),
      nullable_PigeonInitializeResponse: findType("PigeonInitializeResponse?"),
      nullable_RenderBox: findType("RenderBox?"),
      nullable_RenderEditable: findType("RenderEditable?"),
      nullable_String: findType("String?"),
      nullable_Uint8List: findType("Uint8List?"),
      nullable_void_Function: findType("~()?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Duration: findType("~(Duration)"),
      void_Function_FocusHighlightMode: findType("~(FocusHighlightMode)"),
      void_Function_List_FrameTiming: findType("~(List<FrameTiming>)"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)"),
      void_Function_PointerEvent: findType("~(PointerEvent)"),
      void_Function_RawKeyEvent: findType("~(RawKeyEvent)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSBool_methods = J.JSBool.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeByteBuffer_methods = A.NativeByteBuffer.prototype;
    B.NativeByteData_methods = A.NativeByteData.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AccessibilityMode_0 = new A.AccessibilityMode(0, "unknown");
    B.AnimationBehavior_0 = new A.AnimationBehavior(0, "normal");
    B.AnimationBehavior_1 = new A.AnimationBehavior(1, "preserve");
    B.AnimationStatus_0 = new A.AnimationStatus(0, "dismissed");
    B.AnimationStatus_1 = new A.AnimationStatus(1, "forward");
    B.AnimationStatus_2 = new A.AnimationStatus(2, "reverse");
    B.AnimationStatus_3 = new A.AnimationStatus(3, "completed");
    B.AppExitResponse_0 = new A.AppExitResponse(0, "exit");
    B.AppExitResponse_1 = new A.AppExitResponse(1, "cancel");
    B.AppLifecycleState_0 = new A.AppLifecycleState(0, "detached");
    B.AppLifecycleState_1 = new A.AppLifecycleState(1, "resumed");
    B.AppLifecycleState_2 = new A.AppLifecycleState(2, "inactive");
    B.AppLifecycleState_3 = new A.AppLifecycleState(3, "hidden");
    B.AppLifecycleState_4 = new A.AppLifecycleState(4, "paused");
    B.Assertiveness_0 = new A.Assertiveness(0, "polite");
    B.Assertiveness_1 = new A.Assertiveness(1, "assertive");
    B.Axis_0 = new A.Axis(0, "horizontal");
    B.Axis_1 = new A.Axis(1, "vertical");
    B.C_JSONMessageCodec0 = new A.JSONMessageCodec0();
    B.BasicMessageChannel_CNb = new A.BasicMessageChannel("flutter/keyevent", B.C_JSONMessageCodec0, null, type$.BasicMessageChannel_nullable_Object);
    B.C_StringCodec = new A.StringCodec();
    B.BasicMessageChannel_Rss = new A.BasicMessageChannel("flutter/lifecycle", B.C_StringCodec, null, A.findType("BasicMessageChannel<String?>"));
    B.C_StandardMessageCodec = new A.StandardMessageCodec0();
    B.BasicMessageChannel_VwG = new A.BasicMessageChannel("flutter/accessibility", B.C_StandardMessageCodec, null, type$.BasicMessageChannel_nullable_Object);
    B.BasicMessageChannel_oyU = new A.BasicMessageChannel("flutter/system", B.C_JSONMessageCodec0, null, type$.BasicMessageChannel_nullable_Object);
    B.BitmapSize_0_0 = new A.BitmapSize(0, 0);
    B.BitmapSize_1_1 = new A.BitmapSize(1, 1);
    B.BlendMode_3 = new A.BlendMode(3, "srcOver");
    B.BoxHeightStyle_0 = new A.BoxHeightStyle(0, "tight");
    B.BoxHeightStyle_5 = new A.BoxHeightStyle(5, "strut");
    B.BoxWidthStyle_0 = new A.BoxWidthStyle(0, "tight");
    B.Brightness_0 = new A.Brightness(0, "dark");
    B.Brightness_1 = new A.Brightness(1, "light");
    B.BrowserEngine_0 = new A.BrowserEngine(0, "blink");
    B.BrowserEngine_1 = new A.BrowserEngine(1, "webkit");
    B.BrowserEngine_2 = new A.BrowserEngine(2, "firefox");
    B.C_ActionDispatcher = new A.ActionDispatcher();
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_BrowserPlatformLocation = new A.BrowserPlatformLocation();
    B.C_DecimalInputType = new A.DecimalInputType();
    B.C_DoneInputAction = new A.DoneInputAction();
    B.C_EmailInputType = new A.EmailInputType();
    B.C_EmptyIterator = new A.EmptyIterator(A.findType("EmptyIterator<0&>"));
    B.C_Endian0 = new A.Endian();
    B.C_Endian = new A.Endian();
    B.C_EnterInputAction = new A.EnterInputAction();
    B.C_StandardMethodCodec0 = new A.StandardMethodCodec0();
    B.C_EventChannel = new A.EventChannel();
    B.C_GestureSettings = new A.GestureSettings();
    B.C_GoInputAction = new A.GoInputAction();
    B.C_HashUrlStrategy = new A.HashUrlStrategy();
    B.C_JSONMessageCodec = new A.JSONMessageCodec();
    B.C_JSONMethodCodec = new A.JSONMethodCodec();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_MultilineInputType = new A.MultilineInputType();
    B.C_MultilineNoTextInputType = new A.MultilineNoTextInputType();
    B.C_NextInputAction = new A.NextInputAction();
    B.C_NoInputAction = new A.NoInputAction();
    B.C_NoTextInputType = new A.NoTextInputType();
    B.C_NumberInputType = new A.NumberInputType();
    B.C_Object = new A.Object();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_PhoneInputType = new A.PhoneInputType();
    B.C_PointerSupportDetector = new A.PointerSupportDetector();
    B.C_PreviousInputAction = new A.PreviousInputAction();
    B.C_ScreenOrientation = new A.ScreenOrientation();
    B.C_SearchInputAction = new A.SearchInputAction();
    B.C_SendInputAction = new A.SendInputAction();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_StandardMessageCodec0 = new A.StandardMessageCodec();
    B.C_StandardMethodCodec = new A.StandardMethodCodec();
    B.C_TextInputClearClient = new A.TextInputClearClient();
    B.C_TextInputHide = new A.TextInputHide();
    B.C_TextInputRequestAutofill = new A.TextInputRequestAutofill();
    B.C_TextInputSetCaretRect = new A.TextInputSetCaretRect();
    B.C_TextInputSetMarkedTextRect = new A.TextInputSetMarkedTextRect();
    B.C_TextInputShow = new A.TextInputShow();
    B.C_TextInputType = new A.TextInputType0();
    B.C_TextInputUpdateConfig = new A.TextInputUpdateConfig();
    B.C_UrlInputType = new A.UrlInputType();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.ViewPadding_0_0_0_0 = new A.ViewPadding(0, 0, 0, 0);
    B.List_empty6 = A._setArrayType(makeConstList([]), A.findType("JSArray<DisplayFeature>"));
    B.C_ViewConfiguration = new A.ViewConfiguration0();
    B.C__DecelerateCurve = new A._DecelerateCurve();
    B.C__DefaultBinaryMessenger = new A._DefaultBinaryMessenger();
    B.C__DeferringMouseCursor = new A._DeferringMouseCursor();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__FirebaseCoreHostApiCodec = new A._FirebaseCoreHostApiCodec();
    B.C__Linear = new A._Linear();
    B.C__NoDefaultValue = new A._NoDefaultValue();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.Color_0 = new A.Color(0);
    B.Cubic_EBD = new A.Cubic(0.4, 0, 0.2, 1);
    B.Cubic_WKj = new A.Cubic(0.25, 0.1, 0.25, 1);
    B.DebugEngineInitializationState_0 = new A.DebugEngineInitializationState(0, "uninitialized");
    B.DebugEngineInitializationState_1 = new A.DebugEngineInitializationState(1, "initializingServices");
    B.DebugEngineInitializationState_2 = new A.DebugEngineInitializationState(2, "initializedServices");
    B.DebugEngineInitializationState_3 = new A.DebugEngineInitializationState(3, "initializingUi");
    B.DebugEngineInitializationState_4 = new A.DebugEngineInitializationState(4, "initialized");
    B.DebugSemanticsDumpOrder_0 = new A.DebugSemanticsDumpOrder(0, "inverseHitTest");
    B.DebugSemanticsDumpOrder_1 = new A.DebugSemanticsDumpOrder(1, "traversalOrder");
    B.DiagnosticLevel_0 = new A.DiagnosticLevel(0, "hidden");
    B.DiagnosticLevel_1 = new A.DiagnosticLevel(1, "fine");
    B.DiagnosticLevel_2 = new A.DiagnosticLevel(2, "debug");
    B.DiagnosticLevel_3 = new A.DiagnosticLevel(3, "info");
    B.DiagnosticLevel_4 = new A.DiagnosticLevel(4, "warning");
    B.DiagnosticLevel_5 = new A.DiagnosticLevel(5, "hint");
    B.DiagnosticLevel_6 = new A.DiagnosticLevel(6, "summary");
    B.DiagnosticLevel_7 = new A.DiagnosticLevel(7, "error");
    B.DiagnosticsTreeStyle_1 = new A.DiagnosticsTreeStyle(1, "sparse");
    B.DiagnosticsTreeStyle_10 = new A.DiagnosticsTreeStyle(10, "shallow");
    B.DiagnosticsTreeStyle_11 = new A.DiagnosticsTreeStyle(11, "truncateChildren");
    B.DiagnosticsTreeStyle_5 = new A.DiagnosticsTreeStyle(5, "error");
    B.DiagnosticsTreeStyle_7 = new A.DiagnosticsTreeStyle(7, "flat");
    B.DiagnosticsTreeStyle_8 = new A.DiagnosticsTreeStyle(8, "singleLine");
    B.DiagnosticsTreeStyle_9 = new A.DiagnosticsTreeStyle(9, "errorProperty");
    B.DragStartBehavior_1 = new A.DragStartBehavior(1, "start");
    B.Duration_0 = new A.Duration(0);
    B.Duration_100000 = new A.Duration(100000);
    B.Duration_1000000 = new A.Duration(1000000);
    B.Duration_125000 = new A.Duration(125000);
    B.Duration_16667 = new A.Duration(16667);
    B.Duration_200000 = new A.Duration(200000);
    B.Duration_2000000 = new A.Duration(2000000);
    B.Duration_300000 = new A.Duration(300000);
    B.Duration_500000 = new A.Duration(500000);
    B.Duration_m38000 = new A.Duration(-38000);
    B.EdgeInsets_0_0_0_0 = new A.EdgeInsets(0, 0, 0, 0);
    B.EdgeInsets_aha = new A.EdgeInsets(0.5, 1, 0.5, 1);
    B.FilterQuality_0 = new A.FilterQuality(0, "none");
    B.FirebaseOptions_Oi3 = new A.FirebaseOptions("AIzaSyD4M_W_2kF2IDX4guwq6g5ljselEsfjaeU", "1:203512481394:web:9713955de571f7f59e64eb", "203512481394", "realtoken-88d99", "realtoken-88d99.firebaseapp.com", null, "realtoken-88d99.appspot.com", "G-FFZ5JXX644", null, null, null, null, null, null);
    B.FloatingCursorDragState_0 = new A.FloatingCursorDragState(0, "Start");
    B.FloatingCursorDragState_1 = new A.FloatingCursorDragState(1, "Update");
    B.FloatingCursorDragState_2 = new A.FloatingCursorDragState(2, "End");
    B.FocusHighlightMode_0 = new A.FocusHighlightMode(0, "touch");
    B.FocusHighlightMode_1 = new A.FocusHighlightMode(1, "traditional");
    B.FocusHighlightStrategy_0 = new A.FocusHighlightStrategy(0, "automatic");
    B.FormatException_4CA = new A.FormatException("Invalid method call", null, null);
    B.FormatException_E36 = new A.FormatException("Invalid envelope", null, null);
    B.FormatException_MKb = new A.FormatException("Expected envelope, got nothing", null, null);
    B.FormatException_rh8 = new A.FormatException("Message corrupted", null, null);
    B.GestureMode_0 = new A.GestureMode(0, "pointerEvents");
    B.GestureMode_1 = new A.GestureMode(1, "browserGestures");
    B.HitTestBehavior_0 = new A.HitTestBehavior(0, "deferToChild");
    B.IntlSegmenterGranularity_0 = new A.IntlSegmenterGranularity(0, "grapheme");
    B.IntlSegmenterGranularity_1 = new A.IntlSegmenterGranularity(1, "word");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null_null = new A.JsonEncoder(null, null);
    B.KeyDataTransitMode_0 = new A.KeyDataTransitMode(0, "rawKeyData");
    B.KeyDataTransitMode_1 = new A.KeyDataTransitMode(1, "keyDataThenRawKeyData");
    B.KeyEventType_0 = new A.KeyEventType(0, "down");
    B.KeyEventDeviceType_0 = new A.KeyEventDeviceType(0, "keyboard");
    B.KeyData_65R = new A.KeyData(B.Duration_0, B.KeyEventType_0, 0, 0, null, false);
    B.KeyEventResult_0 = new A.KeyEventResult(0, "handled");
    B.KeyEventResult_1 = new A.KeyEventResult(1, "ignored");
    B.KeyEventResult_2 = new A.KeyEventResult(2, "skipRemainingHandlers");
    B.KeyEventType_1 = new A.KeyEventType(1, "up");
    B.KeyEventType_2 = new A.KeyEventType(2, "repeat");
    B.LogicalKeyboardKey_4294967564 = new A.LogicalKeyboardKey(4294967564);
    B.KeyboardLockMode_Y98 = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967564, 1, "scrollLock");
    B.LogicalKeyboardKey_4294967562 = new A.LogicalKeyboardKey(4294967562);
    B.KeyboardLockMode_YYi = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967562, 0, "numLock");
    B.LogicalKeyboardKey_4294967556 = new A.LogicalKeyboardKey(4294967556);
    B.KeyboardLockMode_kyW = new A.KeyboardLockMode(B.LogicalKeyboardKey_4294967556, 2, "capsLock");
    B.KeyboardSide_0 = new A.KeyboardSide(0, "any");
    B.KeyboardSide_3 = new A.KeyboardSide(3, "all");
    B.LineBreakType_0 = new A.LineBreakType(0, "opportunity");
    B.LineBreakType_2 = new A.LineBreakType(2, "mandatory");
    B.LineBreakType_3 = new A.LineBreakType(3, "endOfText");
    B.List_2jN = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_42A = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.TextAlign_0 = new A.TextAlign(0, "left");
    B.TextAlign_1 = new A.TextAlign(1, "right");
    B.TextAlign_2 = new A.TextAlign(2, "center");
    B.TextAlign_3 = new A.TextAlign(3, "justify");
    B.TextAlign_4 = new A.TextAlign(4, "start");
    B.TextAlign_5 = new A.TextAlign(5, "end");
    B.List_44l = A._setArrayType(makeConstList([B.TextAlign_0, B.TextAlign_1, B.TextAlign_2, B.TextAlign_3, B.TextAlign_4, B.TextAlign_5]), A.findType("JSArray<TextAlign>"));
    B.List_4AN = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_Assertiveness_0_Assertiveness_1 = A._setArrayType(makeConstList([B.Assertiveness_0, B.Assertiveness_1]), A.findType("JSArray<Assertiveness>"));
    B.List_GVy = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.List_Gbn = A._setArrayType(makeConstList([B.AppLifecycleState_0, B.AppLifecycleState_1, B.AppLifecycleState_2, B.AppLifecycleState_3, B.AppLifecycleState_4]), type$.JSArray_AppLifecycleState);
    B.Locale_en_US = new A.Locale("en", "US");
    B.List_Locale_en_US = A._setArrayType(makeConstList([B.Locale_en_US]), type$.JSArray_Locale);
    B.List_M2I = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_OGJ = A._setArrayType(makeConstList(["pointerdown", "pointermove", "pointerleave", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseleave", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    B.SwipeEdge_0 = new A.SwipeEdge(0, "left");
    B.SwipeEdge_1 = new A.SwipeEdge(1, "right");
    B.List_SwipeEdge_0_SwipeEdge_1 = A._setArrayType(makeConstList([B.SwipeEdge_0, B.SwipeEdge_1]), A.findType("JSArray<SwipeEdge>"));
    B.TextAffinity_0 = new A.TextAffinity(0, "upstream");
    B.TextAffinity_1 = new A.TextAffinity(1, "downstream");
    B.List_TextAffinity_0_TextAffinity_1 = A._setArrayType(makeConstList([B.TextAffinity_0, B.TextAffinity_1]), A.findType("JSArray<TextAffinity>"));
    B.TextDirection_0 = new A.TextDirection(0, "rtl");
    B.TextDirection_1 = new A.TextDirection(1, "ltr");
    B.List_TextDirection_0_TextDirection_1 = A._setArrayType(makeConstList([B.TextDirection_0, B.TextDirection_1]), A.findType("JSArray<TextDirection>"));
    B.List_VOY = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_cRy = A._setArrayType(makeConstList(["text", "multiline", "number", "phone", "datetime", "emailAddress", "url", "visiblePassword", "name", "address", "none"]), type$.JSArray_String);
    B.List_empty2 = A._setArrayType(makeConstList([]), type$.JSArray_AppLifecycleState);
    B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_DiagnosticsNode);
    B.List_empty4 = A._setArrayType(makeConstList([]), type$.JSArray_InheritedTheme);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty3 = A._setArrayType(makeConstList([]), type$.JSArray_TextBox);
    B.List_empty5 = A._setArrayType(makeConstList([]), A.findType("JSArray<TextSelectionPoint>"));
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_int);
    B.ModifierKey_0 = new A.ModifierKey(0, "controlModifier");
    B.ModifierKey_1 = new A.ModifierKey(1, "shiftModifier");
    B.ModifierKey_2 = new A.ModifierKey(2, "altModifier");
    B.ModifierKey_3 = new A.ModifierKey(3, "metaModifier");
    B.ModifierKey_4 = new A.ModifierKey(4, "capsLockModifier");
    B.ModifierKey_5 = new A.ModifierKey(5, "numLockModifier");
    B.ModifierKey_6 = new A.ModifierKey(6, "scrollLockModifier");
    B.ModifierKey_7 = new A.ModifierKey(7, "functionModifier");
    B.ModifierKey_8 = new A.ModifierKey(8, "symbolModifier");
    B.List_jV0 = A._setArrayType(makeConstList([B.ModifierKey_0, B.ModifierKey_1, B.ModifierKey_2, B.ModifierKey_3, B.ModifierKey_4, B.ModifierKey_5, B.ModifierKey_6, B.ModifierKey_7, B.ModifierKey_8]), A.findType("JSArray<ModifierKey>"));
    B.CanvasKitVariant_0 = new A.CanvasKitVariant(0, "auto");
    B.CanvasKitVariant_1 = new A.CanvasKitVariant(1, "full");
    B.CanvasKitVariant_2 = new A.CanvasKitVariant(2, "chromium");
    B.List_mfb = A._setArrayType(makeConstList([B.CanvasKitVariant_0, B.CanvasKitVariant_1, B.CanvasKitVariant_2]), A.findType("JSArray<CanvasKitVariant>"));
    B.List_piR = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B._KeyFrame_0_1 = new A._KeyFrame(0, 1);
    B._KeyFrame_UJT = new A._KeyFrame(0.5, 1);
    B._KeyFrame_6Wo = new A._KeyFrame(0.5375, 0.75);
    B._KeyFrame_JUd = new A._KeyFrame(0.575, 0.5);
    B._KeyFrame_o0y = new A._KeyFrame(0.6125, 0.25);
    B._KeyFrame_ifn = new A._KeyFrame(0.65, 0);
    B._KeyFrame_MTw = new A._KeyFrame(0.85, 0);
    B._KeyFrame_A0H = new A._KeyFrame(0.8875, 0.25);
    B._KeyFrame_RkT = new A._KeyFrame(0.925, 0.5);
    B._KeyFrame_72F = new A._KeyFrame(0.9625, 0.75);
    B._KeyFrame_1_1 = new A._KeyFrame(1, 1);
    B.List_soA = A._setArrayType(makeConstList([B._KeyFrame_0_1, B._KeyFrame_UJT, B._KeyFrame_6Wo, B._KeyFrame_JUd, B._KeyFrame_o0y, B._KeyFrame_ifn, B._KeyFrame_MTw, B._KeyFrame_A0H, B._KeyFrame_RkT, B._KeyFrame_72F, B._KeyFrame_1_1]), A.findType("JSArray<_KeyFrame>"));
    B.List_w0I = A._setArrayType(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.LogicalKeyboardKey_4294967558 = new A.LogicalKeyboardKey(4294967558);
    B.LogicalKeyboardKey_8589934848 = new A.LogicalKeyboardKey(8589934848);
    B.LogicalKeyboardKey_8589934849 = new A.LogicalKeyboardKey(8589934849);
    B.LogicalKeyboardKey_8589934850 = new A.LogicalKeyboardKey(8589934850);
    B.LogicalKeyboardKey_8589934851 = new A.LogicalKeyboardKey(8589934851);
    B.LogicalKeyboardKey_8589934852 = new A.LogicalKeyboardKey(8589934852);
    B.LogicalKeyboardKey_8589934853 = new A.LogicalKeyboardKey(8589934853);
    B.LogicalKeyboardKey_8589934854 = new A.LogicalKeyboardKey(8589934854);
    B.LogicalKeyboardKey_8589934855 = new A.LogicalKeyboardKey(8589934855);
    B.Offset_0_0 = new A.Offset(0, 0);
    B.Rect_0_0_0_0 = new A.Rect(0, 0, 0, 0);
    B.MagnifierInfo_2Vk = new A.MagnifierInfo(B.Offset_0_0, B.Rect_0_0_0_0, B.Rect_0_0_0_0, B.Rect_0_0_0_0);
    B.C_DefaultEquality = new A.DefaultEquality(A.findType("DefaultEquality<0&>"));
    B.MapEquality_DefaultEquality_DefaultEquality = new A.MapEquality(B.C_DefaultEquality, B.C_DefaultEquality, A.findType("MapEquality<@,@>"));
    B.LogicalKeyboardKey_42 = new A.LogicalKeyboardKey(42);
    B.LogicalKeyboardKey_8589935146 = new A.LogicalKeyboardKey(8589935146);
    B.List_G7x = A._setArrayType(makeConstList([B.LogicalKeyboardKey_42, null, null, B.LogicalKeyboardKey_8589935146]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_43 = new A.LogicalKeyboardKey(43);
    B.LogicalKeyboardKey_8589935147 = new A.LogicalKeyboardKey(8589935147);
    B.List_G7x0 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_43, null, null, B.LogicalKeyboardKey_8589935147]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_45 = new A.LogicalKeyboardKey(45);
    B.LogicalKeyboardKey_8589935149 = new A.LogicalKeyboardKey(8589935149);
    B.List_G7x1 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_45, null, null, B.LogicalKeyboardKey_8589935149]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_46 = new A.LogicalKeyboardKey(46);
    B.LogicalKeyboardKey_8589935150 = new A.LogicalKeyboardKey(8589935150);
    B.List_G7x2 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_46, null, null, B.LogicalKeyboardKey_8589935150]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_47 = new A.LogicalKeyboardKey(47);
    B.LogicalKeyboardKey_8589935151 = new A.LogicalKeyboardKey(8589935151);
    B.List_G7x3 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_47, null, null, B.LogicalKeyboardKey_8589935151]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_48 = new A.LogicalKeyboardKey(48);
    B.LogicalKeyboardKey_8589935152 = new A.LogicalKeyboardKey(8589935152);
    B.List_eAf = A._setArrayType(makeConstList([B.LogicalKeyboardKey_48, null, null, B.LogicalKeyboardKey_8589935152]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_49 = new A.LogicalKeyboardKey(49);
    B.LogicalKeyboardKey_8589935153 = new A.LogicalKeyboardKey(8589935153);
    B.List_eAf0 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_49, null, null, B.LogicalKeyboardKey_8589935153]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_50 = new A.LogicalKeyboardKey(50);
    B.LogicalKeyboardKey_8589935154 = new A.LogicalKeyboardKey(8589935154);
    B.List_eAf1 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_50, null, null, B.LogicalKeyboardKey_8589935154]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_51 = new A.LogicalKeyboardKey(51);
    B.LogicalKeyboardKey_8589935155 = new A.LogicalKeyboardKey(8589935155);
    B.List_eAf2 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_51, null, null, B.LogicalKeyboardKey_8589935155]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_52 = new A.LogicalKeyboardKey(52);
    B.LogicalKeyboardKey_8589935156 = new A.LogicalKeyboardKey(8589935156);
    B.List_eAf3 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_52, null, null, B.LogicalKeyboardKey_8589935156]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_53 = new A.LogicalKeyboardKey(53);
    B.LogicalKeyboardKey_8589935157 = new A.LogicalKeyboardKey(8589935157);
    B.List_eAf4 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_53, null, null, B.LogicalKeyboardKey_8589935157]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_54 = new A.LogicalKeyboardKey(54);
    B.LogicalKeyboardKey_8589935158 = new A.LogicalKeyboardKey(8589935158);
    B.List_eAf5 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_54, null, null, B.LogicalKeyboardKey_8589935158]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_55 = new A.LogicalKeyboardKey(55);
    B.LogicalKeyboardKey_8589935159 = new A.LogicalKeyboardKey(8589935159);
    B.List_eAf6 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_55, null, null, B.LogicalKeyboardKey_8589935159]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_56 = new A.LogicalKeyboardKey(56);
    B.LogicalKeyboardKey_8589935160 = new A.LogicalKeyboardKey(8589935160);
    B.List_Y2Z = A._setArrayType(makeConstList([B.LogicalKeyboardKey_56, null, null, B.LogicalKeyboardKey_8589935160]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_57 = new A.LogicalKeyboardKey(57);
    B.LogicalKeyboardKey_8589935161 = new A.LogicalKeyboardKey(8589935161);
    B.List_Y2Z0 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_57, null, null, B.LogicalKeyboardKey_8589935161]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_uXm = A._setArrayType(makeConstList([B.LogicalKeyboardKey_8589934852, B.LogicalKeyboardKey_8589934852, B.LogicalKeyboardKey_8589934853, null]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294967555 = new A.LogicalKeyboardKey(4294967555);
    B.List_e1W = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294967555, null, B.LogicalKeyboardKey_4294967555, null]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968065 = new A.LogicalKeyboardKey(4294968065);
    B.List_699 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968065, null, null, B.LogicalKeyboardKey_8589935154]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968066 = new A.LogicalKeyboardKey(4294968066);
    B.List_6990 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968066, null, null, B.LogicalKeyboardKey_8589935156]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968067 = new A.LogicalKeyboardKey(4294968067);
    B.List_6991 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968067, null, null, B.LogicalKeyboardKey_8589935158]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968068 = new A.LogicalKeyboardKey(4294968068);
    B.List_4YZ = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968068, null, null, B.LogicalKeyboardKey_8589935160]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968321 = new A.LogicalKeyboardKey(4294968321);
    B.List_8Ws = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968321, null, null, B.LogicalKeyboardKey_8589935157]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_uXm0 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_8589934848, B.LogicalKeyboardKey_8589934848, B.LogicalKeyboardKey_8589934849, null]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294967423 = new A.LogicalKeyboardKey(4294967423);
    B.List_81A = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294967423, null, null, B.LogicalKeyboardKey_8589935150]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968069 = new A.LogicalKeyboardKey(4294968069);
    B.List_6992 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968069, null, null, B.LogicalKeyboardKey_8589935153]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294967309 = new A.LogicalKeyboardKey(4294967309);
    B.LogicalKeyboardKey_8589935117 = new A.LogicalKeyboardKey(8589935117);
    B.List_61T = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294967309, null, null, B.LogicalKeyboardKey_8589935117]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968070 = new A.LogicalKeyboardKey(4294968070);
    B.List_6993 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968070, null, null, B.LogicalKeyboardKey_8589935159]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968327 = new A.LogicalKeyboardKey(4294968327);
    B.List_8Ws0 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968327, null, null, B.LogicalKeyboardKey_8589935152]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_uXm1 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_8589934854, B.LogicalKeyboardKey_8589934854, B.LogicalKeyboardKey_8589934855, null]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968071 = new A.LogicalKeyboardKey(4294968071);
    B.List_6994 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968071, null, null, B.LogicalKeyboardKey_8589935155]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.LogicalKeyboardKey_4294968072 = new A.LogicalKeyboardKey(4294968072);
    B.List_3hg = A._setArrayType(makeConstList([B.LogicalKeyboardKey_4294968072, null, null, B.LogicalKeyboardKey_8589935161]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.List_uXm2 = A._setArrayType(makeConstList([B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934850, B.LogicalKeyboardKey_8589934851, null]), type$.JSArray_nullable_LogicalKeyboardKey);
    B.Map_08qt = new A.GeneralConstantMap(["*", B.List_G7x, "+", B.List_G7x0, "-", B.List_G7x1, ".", B.List_G7x2, "/", B.List_G7x3, "0", B.List_eAf, "1", B.List_eAf0, "2", B.List_eAf1, "3", B.List_eAf2, "4", B.List_eAf3, "5", B.List_eAf4, "6", B.List_eAf5, "7", B.List_eAf6, "8", B.List_Y2Z, "9", B.List_Y2Z0, "Alt", B.List_uXm, "AltGraph", B.List_e1W, "ArrowDown", B.List_699, "ArrowLeft", B.List_6990, "ArrowRight", B.List_6991, "ArrowUp", B.List_4YZ, "Clear", B.List_8Ws, "Control", B.List_uXm0, "Delete", B.List_81A, "End", B.List_6992, "Enter", B.List_61T, "Home", B.List_6993, "Insert", B.List_8Ws0, "Meta", B.List_uXm1, "PageDown", B.List_6994, "PageUp", B.List_3hg, "Shift", B.List_uXm2], A.findType("GeneralConstantMap<String,List<LogicalKeyboardKey?>>"));
    B.List_42_null_null_8589935146 = A._setArrayType(makeConstList([42, null, null, 8589935146]), type$.JSArray_nullable_int);
    B.List_43_null_null_8589935147 = A._setArrayType(makeConstList([43, null, null, 8589935147]), type$.JSArray_nullable_int);
    B.List_45_null_null_8589935149 = A._setArrayType(makeConstList([45, null, null, 8589935149]), type$.JSArray_nullable_int);
    B.List_46_null_null_8589935150 = A._setArrayType(makeConstList([46, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_47_null_null_8589935151 = A._setArrayType(makeConstList([47, null, null, 8589935151]), type$.JSArray_nullable_int);
    B.List_48_null_null_8589935152 = A._setArrayType(makeConstList([48, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_49_null_null_8589935153 = A._setArrayType(makeConstList([49, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_50_null_null_8589935154 = A._setArrayType(makeConstList([50, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_51_null_null_8589935155 = A._setArrayType(makeConstList([51, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_52_null_null_8589935156 = A._setArrayType(makeConstList([52, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_53_null_null_8589935157 = A._setArrayType(makeConstList([53, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_54_null_null_8589935158 = A._setArrayType(makeConstList([54, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_55_null_null_8589935159 = A._setArrayType(makeConstList([55, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_56_null_null_8589935160 = A._setArrayType(makeConstList([56, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_57_null_null_8589935161 = A._setArrayType(makeConstList([57, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_OvN = A._setArrayType(makeConstList([8589934852, 8589934852, 8589934853, null]), type$.JSArray_nullable_int);
    B.List_4294967555_null_4294967555_null = A._setArrayType(makeConstList([4294967555, null, 4294967555, null]), type$.JSArray_nullable_int);
    B.List_4294968065_null_null_8589935154 = A._setArrayType(makeConstList([4294968065, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_4294968066_null_null_8589935156 = A._setArrayType(makeConstList([4294968066, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_4294968067_null_null_8589935158 = A._setArrayType(makeConstList([4294968067, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_4294968068_null_null_8589935160 = A._setArrayType(makeConstList([4294968068, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_4294968321_null_null_8589935157 = A._setArrayType(makeConstList([4294968321, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_OvN0 = A._setArrayType(makeConstList([8589934848, 8589934848, 8589934849, null]), type$.JSArray_nullable_int);
    B.List_4294967423_null_null_8589935150 = A._setArrayType(makeConstList([4294967423, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_4294968069_null_null_8589935153 = A._setArrayType(makeConstList([4294968069, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_4294967309_null_null_8589935117 = A._setArrayType(makeConstList([4294967309, null, null, 8589935117]), type$.JSArray_nullable_int);
    B.List_4294968070_null_null_8589935159 = A._setArrayType(makeConstList([4294968070, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_4294968327_null_null_8589935152 = A._setArrayType(makeConstList([4294968327, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_OvN1 = A._setArrayType(makeConstList([8589934854, 8589934854, 8589934855, null]), type$.JSArray_nullable_int);
    B.List_4294968071_null_null_8589935155 = A._setArrayType(makeConstList([4294968071, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_4294968072_null_null_8589935161 = A._setArrayType(makeConstList([4294968072, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_OvN2 = A._setArrayType(makeConstList([8589934850, 8589934850, 8589934851, null]), type$.JSArray_nullable_int);
    B.Map_0GYb = new A.GeneralConstantMap(["*", B.List_42_null_null_8589935146, "+", B.List_43_null_null_8589935147, "-", B.List_45_null_null_8589935149, ".", B.List_46_null_null_8589935150, "/", B.List_47_null_null_8589935151, "0", B.List_48_null_null_8589935152, "1", B.List_49_null_null_8589935153, "2", B.List_50_null_null_8589935154, "3", B.List_51_null_null_8589935155, "4", B.List_52_null_null_8589935156, "5", B.List_53_null_null_8589935157, "6", B.List_54_null_null_8589935158, "7", B.List_55_null_null_8589935159, "8", B.List_56_null_null_8589935160, "9", B.List_57_null_null_8589935161, "Alt", B.List_OvN, "AltGraph", B.List_4294967555_null_4294967555_null, "ArrowDown", B.List_4294968065_null_null_8589935154, "ArrowLeft", B.List_4294968066_null_null_8589935156, "ArrowRight", B.List_4294968067_null_null_8589935158, "ArrowUp", B.List_4294968068_null_null_8589935160, "Clear", B.List_4294968321_null_null_8589935157, "Control", B.List_OvN0, "Delete", B.List_4294967423_null_null_8589935150, "End", B.List_4294968069_null_null_8589935153, "Enter", B.List_4294967309_null_null_8589935117, "Home", B.List_4294968070_null_null_8589935159, "Insert", B.List_4294968327_null_null_8589935152, "Meta", B.List_OvN1, "PageDown", B.List_4294968071_null_null_8589935155, "PageUp", B.List_4294968072_null_null_8589935161, "Shift", B.List_OvN2], A.findType("GeneralConstantMap<String,List<int?>>"));
    B.LogicalKeyboardKey_32 = new A.LogicalKeyboardKey(32);
    B.LogicalKeyboardKey_33 = new A.LogicalKeyboardKey(33);
    B.LogicalKeyboardKey_34 = new A.LogicalKeyboardKey(34);
    B.LogicalKeyboardKey_35 = new A.LogicalKeyboardKey(35);
    B.LogicalKeyboardKey_36 = new A.LogicalKeyboardKey(36);
    B.LogicalKeyboardKey_37 = new A.LogicalKeyboardKey(37);
    B.LogicalKeyboardKey_38 = new A.LogicalKeyboardKey(38);
    B.LogicalKeyboardKey_39 = new A.LogicalKeyboardKey(39);
    B.LogicalKeyboardKey_40 = new A.LogicalKeyboardKey(40);
    B.LogicalKeyboardKey_41 = new A.LogicalKeyboardKey(41);
    B.LogicalKeyboardKey_44 = new A.LogicalKeyboardKey(44);
    B.LogicalKeyboardKey_58 = new A.LogicalKeyboardKey(58);
    B.LogicalKeyboardKey_59 = new A.LogicalKeyboardKey(59);
    B.LogicalKeyboardKey_60 = new A.LogicalKeyboardKey(60);
    B.LogicalKeyboardKey_61 = new A.LogicalKeyboardKey(61);
    B.LogicalKeyboardKey_62 = new A.LogicalKeyboardKey(62);
    B.LogicalKeyboardKey_63 = new A.LogicalKeyboardKey(63);
    B.LogicalKeyboardKey_64 = new A.LogicalKeyboardKey(64);
    B.LogicalKeyboardKey_91 = new A.LogicalKeyboardKey(91);
    B.LogicalKeyboardKey_92 = new A.LogicalKeyboardKey(92);
    B.LogicalKeyboardKey_93 = new A.LogicalKeyboardKey(93);
    B.LogicalKeyboardKey_94 = new A.LogicalKeyboardKey(94);
    B.LogicalKeyboardKey_95 = new A.LogicalKeyboardKey(95);
    B.LogicalKeyboardKey_96 = new A.LogicalKeyboardKey(96);
    B.LogicalKeyboardKey_97 = new A.LogicalKeyboardKey(97);
    B.LogicalKeyboardKey_98 = new A.LogicalKeyboardKey(98);
    B.LogicalKeyboardKey_99 = new A.LogicalKeyboardKey(99);
    B.LogicalKeyboardKey_100 = new A.LogicalKeyboardKey(100);
    B.LogicalKeyboardKey_101 = new A.LogicalKeyboardKey(101);
    B.LogicalKeyboardKey_102 = new A.LogicalKeyboardKey(102);
    B.LogicalKeyboardKey_103 = new A.LogicalKeyboardKey(103);
    B.LogicalKeyboardKey_104 = new A.LogicalKeyboardKey(104);
    B.LogicalKeyboardKey_105 = new A.LogicalKeyboardKey(105);
    B.LogicalKeyboardKey_106 = new A.LogicalKeyboardKey(106);
    B.LogicalKeyboardKey_107 = new A.LogicalKeyboardKey(107);
    B.LogicalKeyboardKey_108 = new A.LogicalKeyboardKey(108);
    B.LogicalKeyboardKey_109 = new A.LogicalKeyboardKey(109);
    B.LogicalKeyboardKey_110 = new A.LogicalKeyboardKey(110);
    B.LogicalKeyboardKey_111 = new A.LogicalKeyboardKey(111);
    B.LogicalKeyboardKey_112 = new A.LogicalKeyboardKey(112);
    B.LogicalKeyboardKey_113 = new A.LogicalKeyboardKey(113);
    B.LogicalKeyboardKey_114 = new A.LogicalKeyboardKey(114);
    B.LogicalKeyboardKey_115 = new A.LogicalKeyboardKey(115);
    B.LogicalKeyboardKey_116 = new A.LogicalKeyboardKey(116);
    B.LogicalKeyboardKey_117 = new A.LogicalKeyboardKey(117);
    B.LogicalKeyboardKey_118 = new A.LogicalKeyboardKey(118);
    B.LogicalKeyboardKey_119 = new A.LogicalKeyboardKey(119);
    B.LogicalKeyboardKey_120 = new A.LogicalKeyboardKey(120);
    B.LogicalKeyboardKey_121 = new A.LogicalKeyboardKey(121);
    B.LogicalKeyboardKey_122 = new A.LogicalKeyboardKey(122);
    B.LogicalKeyboardKey_123 = new A.LogicalKeyboardKey(123);
    B.LogicalKeyboardKey_124 = new A.LogicalKeyboardKey(124);
    B.LogicalKeyboardKey_125 = new A.LogicalKeyboardKey(125);
    B.LogicalKeyboardKey_126 = new A.LogicalKeyboardKey(126);
    B.LogicalKeyboardKey_4294967297 = new A.LogicalKeyboardKey(4294967297);
    B.LogicalKeyboardKey_4294967304 = new A.LogicalKeyboardKey(4294967304);
    B.LogicalKeyboardKey_4294967305 = new A.LogicalKeyboardKey(4294967305);
    B.LogicalKeyboardKey_4294967323 = new A.LogicalKeyboardKey(4294967323);
    B.LogicalKeyboardKey_4294967553 = new A.LogicalKeyboardKey(4294967553);
    B.LogicalKeyboardKey_4294967559 = new A.LogicalKeyboardKey(4294967559);
    B.LogicalKeyboardKey_4294967560 = new A.LogicalKeyboardKey(4294967560);
    B.LogicalKeyboardKey_4294967566 = new A.LogicalKeyboardKey(4294967566);
    B.LogicalKeyboardKey_4294967567 = new A.LogicalKeyboardKey(4294967567);
    B.LogicalKeyboardKey_4294967568 = new A.LogicalKeyboardKey(4294967568);
    B.LogicalKeyboardKey_4294967569 = new A.LogicalKeyboardKey(4294967569);
    B.LogicalKeyboardKey_4294968322 = new A.LogicalKeyboardKey(4294968322);
    B.LogicalKeyboardKey_4294968323 = new A.LogicalKeyboardKey(4294968323);
    B.LogicalKeyboardKey_4294968324 = new A.LogicalKeyboardKey(4294968324);
    B.LogicalKeyboardKey_4294968325 = new A.LogicalKeyboardKey(4294968325);
    B.LogicalKeyboardKey_4294968326 = new A.LogicalKeyboardKey(4294968326);
    B.LogicalKeyboardKey_4294968328 = new A.LogicalKeyboardKey(4294968328);
    B.LogicalKeyboardKey_4294968329 = new A.LogicalKeyboardKey(4294968329);
    B.LogicalKeyboardKey_4294968330 = new A.LogicalKeyboardKey(4294968330);
    B.LogicalKeyboardKey_4294968577 = new A.LogicalKeyboardKey(4294968577);
    B.LogicalKeyboardKey_4294968578 = new A.LogicalKeyboardKey(4294968578);
    B.LogicalKeyboardKey_4294968579 = new A.LogicalKeyboardKey(4294968579);
    B.LogicalKeyboardKey_4294968580 = new A.LogicalKeyboardKey(4294968580);
    B.LogicalKeyboardKey_4294968581 = new A.LogicalKeyboardKey(4294968581);
    B.LogicalKeyboardKey_4294968582 = new A.LogicalKeyboardKey(4294968582);
    B.LogicalKeyboardKey_4294968583 = new A.LogicalKeyboardKey(4294968583);
    B.LogicalKeyboardKey_4294968584 = new A.LogicalKeyboardKey(4294968584);
    B.LogicalKeyboardKey_4294968585 = new A.LogicalKeyboardKey(4294968585);
    B.LogicalKeyboardKey_4294968586 = new A.LogicalKeyboardKey(4294968586);
    B.LogicalKeyboardKey_4294968587 = new A.LogicalKeyboardKey(4294968587);
    B.LogicalKeyboardKey_4294968588 = new A.LogicalKeyboardKey(4294968588);
    B.LogicalKeyboardKey_4294968589 = new A.LogicalKeyboardKey(4294968589);
    B.LogicalKeyboardKey_4294968590 = new A.LogicalKeyboardKey(4294968590);
    B.LogicalKeyboardKey_4294968833 = new A.LogicalKeyboardKey(4294968833);
    B.LogicalKeyboardKey_4294968834 = new A.LogicalKeyboardKey(4294968834);
    B.LogicalKeyboardKey_4294968835 = new A.LogicalKeyboardKey(4294968835);
    B.LogicalKeyboardKey_4294968836 = new A.LogicalKeyboardKey(4294968836);
    B.LogicalKeyboardKey_4294968837 = new A.LogicalKeyboardKey(4294968837);
    B.LogicalKeyboardKey_4294968838 = new A.LogicalKeyboardKey(4294968838);
    B.LogicalKeyboardKey_4294968839 = new A.LogicalKeyboardKey(4294968839);
    B.LogicalKeyboardKey_4294968840 = new A.LogicalKeyboardKey(4294968840);
    B.LogicalKeyboardKey_4294968841 = new A.LogicalKeyboardKey(4294968841);
    B.LogicalKeyboardKey_4294968842 = new A.LogicalKeyboardKey(4294968842);
    B.LogicalKeyboardKey_4294968843 = new A.LogicalKeyboardKey(4294968843);
    B.LogicalKeyboardKey_4294969089 = new A.LogicalKeyboardKey(4294969089);
    B.LogicalKeyboardKey_4294969090 = new A.LogicalKeyboardKey(4294969090);
    B.LogicalKeyboardKey_4294969091 = new A.LogicalKeyboardKey(4294969091);
    B.LogicalKeyboardKey_4294969092 = new A.LogicalKeyboardKey(4294969092);
    B.LogicalKeyboardKey_4294969093 = new A.LogicalKeyboardKey(4294969093);
    B.LogicalKeyboardKey_4294969094 = new A.LogicalKeyboardKey(4294969094);
    B.LogicalKeyboardKey_4294969095 = new A.LogicalKeyboardKey(4294969095);
    B.LogicalKeyboardKey_4294969096 = new A.LogicalKeyboardKey(4294969096);
    B.LogicalKeyboardKey_4294969097 = new A.LogicalKeyboardKey(4294969097);
    B.LogicalKeyboardKey_4294969098 = new A.LogicalKeyboardKey(4294969098);
    B.LogicalKeyboardKey_4294969099 = new A.LogicalKeyboardKey(4294969099);
    B.LogicalKeyboardKey_4294969100 = new A.LogicalKeyboardKey(4294969100);
    B.LogicalKeyboardKey_4294969101 = new A.LogicalKeyboardKey(4294969101);
    B.LogicalKeyboardKey_4294969102 = new A.LogicalKeyboardKey(4294969102);
    B.LogicalKeyboardKey_4294969103 = new A.LogicalKeyboardKey(4294969103);
    B.LogicalKeyboardKey_4294969104 = new A.LogicalKeyboardKey(4294969104);
    B.LogicalKeyboardKey_4294969105 = new A.LogicalKeyboardKey(4294969105);
    B.LogicalKeyboardKey_4294969106 = new A.LogicalKeyboardKey(4294969106);
    B.LogicalKeyboardKey_4294969107 = new A.LogicalKeyboardKey(4294969107);
    B.LogicalKeyboardKey_4294969108 = new A.LogicalKeyboardKey(4294969108);
    B.LogicalKeyboardKey_4294969109 = new A.LogicalKeyboardKey(4294969109);
    B.LogicalKeyboardKey_4294969110 = new A.LogicalKeyboardKey(4294969110);
    B.LogicalKeyboardKey_4294969111 = new A.LogicalKeyboardKey(4294969111);
    B.LogicalKeyboardKey_4294969112 = new A.LogicalKeyboardKey(4294969112);
    B.LogicalKeyboardKey_4294969113 = new A.LogicalKeyboardKey(4294969113);
    B.LogicalKeyboardKey_4294969114 = new A.LogicalKeyboardKey(4294969114);
    B.LogicalKeyboardKey_4294969115 = new A.LogicalKeyboardKey(4294969115);
    B.LogicalKeyboardKey_4294969116 = new A.LogicalKeyboardKey(4294969116);
    B.LogicalKeyboardKey_4294969117 = new A.LogicalKeyboardKey(4294969117);
    B.LogicalKeyboardKey_4294969345 = new A.LogicalKeyboardKey(4294969345);
    B.LogicalKeyboardKey_4294969346 = new A.LogicalKeyboardKey(4294969346);
    B.LogicalKeyboardKey_4294969347 = new A.LogicalKeyboardKey(4294969347);
    B.LogicalKeyboardKey_4294969348 = new A.LogicalKeyboardKey(4294969348);
    B.LogicalKeyboardKey_4294969349 = new A.LogicalKeyboardKey(4294969349);
    B.LogicalKeyboardKey_4294969350 = new A.LogicalKeyboardKey(4294969350);
    B.LogicalKeyboardKey_4294969351 = new A.LogicalKeyboardKey(4294969351);
    B.LogicalKeyboardKey_4294969352 = new A.LogicalKeyboardKey(4294969352);
    B.LogicalKeyboardKey_4294969353 = new A.LogicalKeyboardKey(4294969353);
    B.LogicalKeyboardKey_4294969354 = new A.LogicalKeyboardKey(4294969354);
    B.LogicalKeyboardKey_4294969355 = new A.LogicalKeyboardKey(4294969355);
    B.LogicalKeyboardKey_4294969356 = new A.LogicalKeyboardKey(4294969356);
    B.LogicalKeyboardKey_4294969357 = new A.LogicalKeyboardKey(4294969357);
    B.LogicalKeyboardKey_4294969358 = new A.LogicalKeyboardKey(4294969358);
    B.LogicalKeyboardKey_4294969359 = new A.LogicalKeyboardKey(4294969359);
    B.LogicalKeyboardKey_4294969360 = new A.LogicalKeyboardKey(4294969360);
    B.LogicalKeyboardKey_4294969361 = new A.LogicalKeyboardKey(4294969361);
    B.LogicalKeyboardKey_4294969362 = new A.LogicalKeyboardKey(4294969362);
    B.LogicalKeyboardKey_4294969363 = new A.LogicalKeyboardKey(4294969363);
    B.LogicalKeyboardKey_4294969364 = new A.LogicalKeyboardKey(4294969364);
    B.LogicalKeyboardKey_4294969365 = new A.LogicalKeyboardKey(4294969365);
    B.LogicalKeyboardKey_4294969366 = new A.LogicalKeyboardKey(4294969366);
    B.LogicalKeyboardKey_4294969367 = new A.LogicalKeyboardKey(4294969367);
    B.LogicalKeyboardKey_4294969368 = new A.LogicalKeyboardKey(4294969368);
    B.LogicalKeyboardKey_4294969601 = new A.LogicalKeyboardKey(4294969601);
    B.LogicalKeyboardKey_4294969602 = new A.LogicalKeyboardKey(4294969602);
    B.LogicalKeyboardKey_4294969603 = new A.LogicalKeyboardKey(4294969603);
    B.LogicalKeyboardKey_4294969604 = new A.LogicalKeyboardKey(4294969604);
    B.LogicalKeyboardKey_4294969605 = new A.LogicalKeyboardKey(4294969605);
    B.LogicalKeyboardKey_4294969606 = new A.LogicalKeyboardKey(4294969606);
    B.LogicalKeyboardKey_4294969607 = new A.LogicalKeyboardKey(4294969607);
    B.LogicalKeyboardKey_4294969608 = new A.LogicalKeyboardKey(4294969608);
    B.LogicalKeyboardKey_4294969857 = new A.LogicalKeyboardKey(4294969857);
    B.LogicalKeyboardKey_4294969858 = new A.LogicalKeyboardKey(4294969858);
    B.LogicalKeyboardKey_4294969859 = new A.LogicalKeyboardKey(4294969859);
    B.LogicalKeyboardKey_4294969860 = new A.LogicalKeyboardKey(4294969860);
    B.LogicalKeyboardKey_4294969861 = new A.LogicalKeyboardKey(4294969861);
    B.LogicalKeyboardKey_4294969863 = new A.LogicalKeyboardKey(4294969863);
    B.LogicalKeyboardKey_4294969864 = new A.LogicalKeyboardKey(4294969864);
    B.LogicalKeyboardKey_4294969865 = new A.LogicalKeyboardKey(4294969865);
    B.LogicalKeyboardKey_4294969866 = new A.LogicalKeyboardKey(4294969866);
    B.LogicalKeyboardKey_4294969867 = new A.LogicalKeyboardKey(4294969867);
    B.LogicalKeyboardKey_4294969868 = new A.LogicalKeyboardKey(4294969868);
    B.LogicalKeyboardKey_4294969869 = new A.LogicalKeyboardKey(4294969869);
    B.LogicalKeyboardKey_4294969870 = new A.LogicalKeyboardKey(4294969870);
    B.LogicalKeyboardKey_4294969871 = new A.LogicalKeyboardKey(4294969871);
    B.LogicalKeyboardKey_4294969872 = new A.LogicalKeyboardKey(4294969872);
    B.LogicalKeyboardKey_4294969873 = new A.LogicalKeyboardKey(4294969873);
    B.LogicalKeyboardKey_4294970113 = new A.LogicalKeyboardKey(4294970113);
    B.LogicalKeyboardKey_4294970114 = new A.LogicalKeyboardKey(4294970114);
    B.LogicalKeyboardKey_4294970115 = new A.LogicalKeyboardKey(4294970115);
    B.LogicalKeyboardKey_4294970116 = new A.LogicalKeyboardKey(4294970116);
    B.LogicalKeyboardKey_4294970117 = new A.LogicalKeyboardKey(4294970117);
    B.LogicalKeyboardKey_4294970118 = new A.LogicalKeyboardKey(4294970118);
    B.LogicalKeyboardKey_4294970119 = new A.LogicalKeyboardKey(4294970119);
    B.LogicalKeyboardKey_4294970120 = new A.LogicalKeyboardKey(4294970120);
    B.LogicalKeyboardKey_4294970121 = new A.LogicalKeyboardKey(4294970121);
    B.LogicalKeyboardKey_4294970122 = new A.LogicalKeyboardKey(4294970122);
    B.LogicalKeyboardKey_4294970123 = new A.LogicalKeyboardKey(4294970123);
    B.LogicalKeyboardKey_4294970124 = new A.LogicalKeyboardKey(4294970124);
    B.LogicalKeyboardKey_4294970125 = new A.LogicalKeyboardKey(4294970125);
    B.LogicalKeyboardKey_4294970126 = new A.LogicalKeyboardKey(4294970126);
    B.LogicalKeyboardKey_4294970127 = new A.LogicalKeyboardKey(4294970127);
    B.LogicalKeyboardKey_4294970369 = new A.LogicalKeyboardKey(4294970369);
    B.LogicalKeyboardKey_4294970370 = new A.LogicalKeyboardKey(4294970370);
    B.LogicalKeyboardKey_4294970371 = new A.LogicalKeyboardKey(4294970371);
    B.LogicalKeyboardKey_4294970372 = new A.LogicalKeyboardKey(4294970372);
    B.LogicalKeyboardKey_4294970373 = new A.LogicalKeyboardKey(4294970373);
    B.LogicalKeyboardKey_4294970374 = new A.LogicalKeyboardKey(4294970374);
    B.LogicalKeyboardKey_4294970375 = new A.LogicalKeyboardKey(4294970375);
    B.LogicalKeyboardKey_4294970625 = new A.LogicalKeyboardKey(4294970625);
    B.LogicalKeyboardKey_4294970626 = new A.LogicalKeyboardKey(4294970626);
    B.LogicalKeyboardKey_4294970627 = new A.LogicalKeyboardKey(4294970627);
    B.LogicalKeyboardKey_4294970628 = new A.LogicalKeyboardKey(4294970628);
    B.LogicalKeyboardKey_4294970629 = new A.LogicalKeyboardKey(4294970629);
    B.LogicalKeyboardKey_4294970630 = new A.LogicalKeyboardKey(4294970630);
    B.LogicalKeyboardKey_4294970631 = new A.LogicalKeyboardKey(4294970631);
    B.LogicalKeyboardKey_4294970632 = new A.LogicalKeyboardKey(4294970632);
    B.LogicalKeyboardKey_4294970633 = new A.LogicalKeyboardKey(4294970633);
    B.LogicalKeyboardKey_4294970634 = new A.LogicalKeyboardKey(4294970634);
    B.LogicalKeyboardKey_4294970635 = new A.LogicalKeyboardKey(4294970635);
    B.LogicalKeyboardKey_4294970636 = new A.LogicalKeyboardKey(4294970636);
    B.LogicalKeyboardKey_4294970637 = new A.LogicalKeyboardKey(4294970637);
    B.LogicalKeyboardKey_4294970638 = new A.LogicalKeyboardKey(4294970638);
    B.LogicalKeyboardKey_4294970639 = new A.LogicalKeyboardKey(4294970639);
    B.LogicalKeyboardKey_4294970640 = new A.LogicalKeyboardKey(4294970640);
    B.LogicalKeyboardKey_4294970641 = new A.LogicalKeyboardKey(4294970641);
    B.LogicalKeyboardKey_4294970642 = new A.LogicalKeyboardKey(4294970642);
    B.LogicalKeyboardKey_4294970643 = new A.LogicalKeyboardKey(4294970643);
    B.LogicalKeyboardKey_4294970644 = new A.LogicalKeyboardKey(4294970644);
    B.LogicalKeyboardKey_4294970645 = new A.LogicalKeyboardKey(4294970645);
    B.LogicalKeyboardKey_4294970646 = new A.LogicalKeyboardKey(4294970646);
    B.LogicalKeyboardKey_4294970647 = new A.LogicalKeyboardKey(4294970647);
    B.LogicalKeyboardKey_4294970648 = new A.LogicalKeyboardKey(4294970648);
    B.LogicalKeyboardKey_4294970649 = new A.LogicalKeyboardKey(4294970649);
    B.LogicalKeyboardKey_4294970650 = new A.LogicalKeyboardKey(4294970650);
    B.LogicalKeyboardKey_4294970651 = new A.LogicalKeyboardKey(4294970651);
    B.LogicalKeyboardKey_4294970652 = new A.LogicalKeyboardKey(4294970652);
    B.LogicalKeyboardKey_4294970653 = new A.LogicalKeyboardKey(4294970653);
    B.LogicalKeyboardKey_4294970654 = new A.LogicalKeyboardKey(4294970654);
    B.LogicalKeyboardKey_4294970655 = new A.LogicalKeyboardKey(4294970655);
    B.LogicalKeyboardKey_4294970656 = new A.LogicalKeyboardKey(4294970656);
    B.LogicalKeyboardKey_4294970657 = new A.LogicalKeyboardKey(4294970657);
    B.LogicalKeyboardKey_4294970658 = new A.LogicalKeyboardKey(4294970658);
    B.LogicalKeyboardKey_4294970659 = new A.LogicalKeyboardKey(4294970659);
    B.LogicalKeyboardKey_4294970660 = new A.LogicalKeyboardKey(4294970660);
    B.LogicalKeyboardKey_4294970661 = new A.LogicalKeyboardKey(4294970661);
    B.LogicalKeyboardKey_4294970662 = new A.LogicalKeyboardKey(4294970662);
    B.LogicalKeyboardKey_4294970663 = new A.LogicalKeyboardKey(4294970663);
    B.LogicalKeyboardKey_4294970664 = new A.LogicalKeyboardKey(4294970664);
    B.LogicalKeyboardKey_4294970665 = new A.LogicalKeyboardKey(4294970665);
    B.LogicalKeyboardKey_4294970666 = new A.LogicalKeyboardKey(4294970666);
    B.LogicalKeyboardKey_4294970667 = new A.LogicalKeyboardKey(4294970667);
    B.LogicalKeyboardKey_4294970668 = new A.LogicalKeyboardKey(4294970668);
    B.LogicalKeyboardKey_4294970669 = new A.LogicalKeyboardKey(4294970669);
    B.LogicalKeyboardKey_4294970670 = new A.LogicalKeyboardKey(4294970670);
    B.LogicalKeyboardKey_4294970671 = new A.LogicalKeyboardKey(4294970671);
    B.LogicalKeyboardKey_4294970672 = new A.LogicalKeyboardKey(4294970672);
    B.LogicalKeyboardKey_4294970673 = new A.LogicalKeyboardKey(4294970673);
    B.LogicalKeyboardKey_4294970674 = new A.LogicalKeyboardKey(4294970674);
    B.LogicalKeyboardKey_4294970675 = new A.LogicalKeyboardKey(4294970675);
    B.LogicalKeyboardKey_4294970676 = new A.LogicalKeyboardKey(4294970676);
    B.LogicalKeyboardKey_4294970677 = new A.LogicalKeyboardKey(4294970677);
    B.LogicalKeyboardKey_4294970678 = new A.LogicalKeyboardKey(4294970678);
    B.LogicalKeyboardKey_4294970679 = new A.LogicalKeyboardKey(4294970679);
    B.LogicalKeyboardKey_4294970680 = new A.LogicalKeyboardKey(4294970680);
    B.LogicalKeyboardKey_4294970681 = new A.LogicalKeyboardKey(4294970681);
    B.LogicalKeyboardKey_4294970682 = new A.LogicalKeyboardKey(4294970682);
    B.LogicalKeyboardKey_4294970683 = new A.LogicalKeyboardKey(4294970683);
    B.LogicalKeyboardKey_4294970684 = new A.LogicalKeyboardKey(4294970684);
    B.LogicalKeyboardKey_4294970685 = new A.LogicalKeyboardKey(4294970685);
    B.LogicalKeyboardKey_4294970686 = new A.LogicalKeyboardKey(4294970686);
    B.LogicalKeyboardKey_4294970687 = new A.LogicalKeyboardKey(4294970687);
    B.LogicalKeyboardKey_4294970688 = new A.LogicalKeyboardKey(4294970688);
    B.LogicalKeyboardKey_4294970689 = new A.LogicalKeyboardKey(4294970689);
    B.LogicalKeyboardKey_4294970690 = new A.LogicalKeyboardKey(4294970690);
    B.LogicalKeyboardKey_4294970691 = new A.LogicalKeyboardKey(4294970691);
    B.LogicalKeyboardKey_4294970692 = new A.LogicalKeyboardKey(4294970692);
    B.LogicalKeyboardKey_4294970693 = new A.LogicalKeyboardKey(4294970693);
    B.LogicalKeyboardKey_4294970694 = new A.LogicalKeyboardKey(4294970694);
    B.LogicalKeyboardKey_4294970695 = new A.LogicalKeyboardKey(4294970695);
    B.LogicalKeyboardKey_4294970696 = new A.LogicalKeyboardKey(4294970696);
    B.LogicalKeyboardKey_4294970697 = new A.LogicalKeyboardKey(4294970697);
    B.LogicalKeyboardKey_4294970698 = new A.LogicalKeyboardKey(4294970698);
    B.LogicalKeyboardKey_4294970699 = new A.LogicalKeyboardKey(4294970699);
    B.LogicalKeyboardKey_4294970700 = new A.LogicalKeyboardKey(4294970700);
    B.LogicalKeyboardKey_4294970701 = new A.LogicalKeyboardKey(4294970701);
    B.LogicalKeyboardKey_4294970702 = new A.LogicalKeyboardKey(4294970702);
    B.LogicalKeyboardKey_4294970703 = new A.LogicalKeyboardKey(4294970703);
    B.LogicalKeyboardKey_4294970704 = new A.LogicalKeyboardKey(4294970704);
    B.LogicalKeyboardKey_4294970705 = new A.LogicalKeyboardKey(4294970705);
    B.LogicalKeyboardKey_4294970706 = new A.LogicalKeyboardKey(4294970706);
    B.LogicalKeyboardKey_4294970707 = new A.LogicalKeyboardKey(4294970707);
    B.LogicalKeyboardKey_4294970708 = new A.LogicalKeyboardKey(4294970708);
    B.LogicalKeyboardKey_4294970709 = new A.LogicalKeyboardKey(4294970709);
    B.LogicalKeyboardKey_4294970710 = new A.LogicalKeyboardKey(4294970710);
    B.LogicalKeyboardKey_4294970711 = new A.LogicalKeyboardKey(4294970711);
    B.LogicalKeyboardKey_4294970712 = new A.LogicalKeyboardKey(4294970712);
    B.LogicalKeyboardKey_4294970713 = new A.LogicalKeyboardKey(4294970713);
    B.LogicalKeyboardKey_4294970714 = new A.LogicalKeyboardKey(4294970714);
    B.LogicalKeyboardKey_4294970715 = new A.LogicalKeyboardKey(4294970715);
    B.LogicalKeyboardKey_4294970882 = new A.LogicalKeyboardKey(4294970882);
    B.LogicalKeyboardKey_4294970884 = new A.LogicalKeyboardKey(4294970884);
    B.LogicalKeyboardKey_4294970885 = new A.LogicalKeyboardKey(4294970885);
    B.LogicalKeyboardKey_4294970886 = new A.LogicalKeyboardKey(4294970886);
    B.LogicalKeyboardKey_4294970887 = new A.LogicalKeyboardKey(4294970887);
    B.LogicalKeyboardKey_4294970888 = new A.LogicalKeyboardKey(4294970888);
    B.LogicalKeyboardKey_4294970889 = new A.LogicalKeyboardKey(4294970889);
    B.LogicalKeyboardKey_4294971137 = new A.LogicalKeyboardKey(4294971137);
    B.LogicalKeyboardKey_4294971138 = new A.LogicalKeyboardKey(4294971138);
    B.LogicalKeyboardKey_4294971393 = new A.LogicalKeyboardKey(4294971393);
    B.LogicalKeyboardKey_4294971394 = new A.LogicalKeyboardKey(4294971394);
    B.LogicalKeyboardKey_4294971395 = new A.LogicalKeyboardKey(4294971395);
    B.LogicalKeyboardKey_4294971396 = new A.LogicalKeyboardKey(4294971396);
    B.LogicalKeyboardKey_4294971397 = new A.LogicalKeyboardKey(4294971397);
    B.LogicalKeyboardKey_4294971398 = new A.LogicalKeyboardKey(4294971398);
    B.LogicalKeyboardKey_4294971399 = new A.LogicalKeyboardKey(4294971399);
    B.LogicalKeyboardKey_4294971400 = new A.LogicalKeyboardKey(4294971400);
    B.LogicalKeyboardKey_4294971401 = new A.LogicalKeyboardKey(4294971401);
    B.LogicalKeyboardKey_4294971402 = new A.LogicalKeyboardKey(4294971402);
    B.LogicalKeyboardKey_4294971403 = new A.LogicalKeyboardKey(4294971403);
    B.LogicalKeyboardKey_4294971649 = new A.LogicalKeyboardKey(4294971649);
    B.LogicalKeyboardKey_4294971650 = new A.LogicalKeyboardKey(4294971650);
    B.LogicalKeyboardKey_4294971651 = new A.LogicalKeyboardKey(4294971651);
    B.LogicalKeyboardKey_4294971652 = new A.LogicalKeyboardKey(4294971652);
    B.LogicalKeyboardKey_4294971653 = new A.LogicalKeyboardKey(4294971653);
    B.LogicalKeyboardKey_4294971654 = new A.LogicalKeyboardKey(4294971654);
    B.LogicalKeyboardKey_4294971655 = new A.LogicalKeyboardKey(4294971655);
    B.LogicalKeyboardKey_4294971656 = new A.LogicalKeyboardKey(4294971656);
    B.LogicalKeyboardKey_4294971657 = new A.LogicalKeyboardKey(4294971657);
    B.LogicalKeyboardKey_4294971658 = new A.LogicalKeyboardKey(4294971658);
    B.LogicalKeyboardKey_4294971659 = new A.LogicalKeyboardKey(4294971659);
    B.LogicalKeyboardKey_4294971660 = new A.LogicalKeyboardKey(4294971660);
    B.LogicalKeyboardKey_4294971661 = new A.LogicalKeyboardKey(4294971661);
    B.LogicalKeyboardKey_4294971662 = new A.LogicalKeyboardKey(4294971662);
    B.LogicalKeyboardKey_4294971663 = new A.LogicalKeyboardKey(4294971663);
    B.LogicalKeyboardKey_4294971664 = new A.LogicalKeyboardKey(4294971664);
    B.LogicalKeyboardKey_4294971665 = new A.LogicalKeyboardKey(4294971665);
    B.LogicalKeyboardKey_4294971666 = new A.LogicalKeyboardKey(4294971666);
    B.LogicalKeyboardKey_4294971667 = new A.LogicalKeyboardKey(4294971667);
    B.LogicalKeyboardKey_4294971668 = new A.LogicalKeyboardKey(4294971668);
    B.LogicalKeyboardKey_4294971669 = new A.LogicalKeyboardKey(4294971669);
    B.LogicalKeyboardKey_4294971670 = new A.LogicalKeyboardKey(4294971670);
    B.LogicalKeyboardKey_4294971671 = new A.LogicalKeyboardKey(4294971671);
    B.LogicalKeyboardKey_4294971672 = new A.LogicalKeyboardKey(4294971672);
    B.LogicalKeyboardKey_4294971673 = new A.LogicalKeyboardKey(4294971673);
    B.LogicalKeyboardKey_4294971674 = new A.LogicalKeyboardKey(4294971674);
    B.LogicalKeyboardKey_4294971675 = new A.LogicalKeyboardKey(4294971675);
    B.LogicalKeyboardKey_4294971905 = new A.LogicalKeyboardKey(4294971905);
    B.LogicalKeyboardKey_4294971906 = new A.LogicalKeyboardKey(4294971906);
    B.LogicalKeyboardKey_8589934592 = new A.LogicalKeyboardKey(8589934592);
    B.LogicalKeyboardKey_8589934593 = new A.LogicalKeyboardKey(8589934593);
    B.LogicalKeyboardKey_8589934594 = new A.LogicalKeyboardKey(8589934594);
    B.LogicalKeyboardKey_8589934595 = new A.LogicalKeyboardKey(8589934595);
    B.LogicalKeyboardKey_8589934608 = new A.LogicalKeyboardKey(8589934608);
    B.LogicalKeyboardKey_8589934609 = new A.LogicalKeyboardKey(8589934609);
    B.LogicalKeyboardKey_8589934610 = new A.LogicalKeyboardKey(8589934610);
    B.LogicalKeyboardKey_8589934611 = new A.LogicalKeyboardKey(8589934611);
    B.LogicalKeyboardKey_8589934612 = new A.LogicalKeyboardKey(8589934612);
    B.LogicalKeyboardKey_8589934624 = new A.LogicalKeyboardKey(8589934624);
    B.LogicalKeyboardKey_8589934625 = new A.LogicalKeyboardKey(8589934625);
    B.LogicalKeyboardKey_8589934626 = new A.LogicalKeyboardKey(8589934626);
    B.LogicalKeyboardKey_8589935088 = new A.LogicalKeyboardKey(8589935088);
    B.LogicalKeyboardKey_8589935090 = new A.LogicalKeyboardKey(8589935090);
    B.LogicalKeyboardKey_8589935092 = new A.LogicalKeyboardKey(8589935092);
    B.LogicalKeyboardKey_8589935094 = new A.LogicalKeyboardKey(8589935094);
    B.LogicalKeyboardKey_8589935144 = new A.LogicalKeyboardKey(8589935144);
    B.LogicalKeyboardKey_8589935145 = new A.LogicalKeyboardKey(8589935145);
    B.LogicalKeyboardKey_8589935148 = new A.LogicalKeyboardKey(8589935148);
    B.LogicalKeyboardKey_8589935165 = new A.LogicalKeyboardKey(8589935165);
    B.LogicalKeyboardKey_8589935361 = new A.LogicalKeyboardKey(8589935361);
    B.LogicalKeyboardKey_8589935362 = new A.LogicalKeyboardKey(8589935362);
    B.LogicalKeyboardKey_8589935363 = new A.LogicalKeyboardKey(8589935363);
    B.LogicalKeyboardKey_8589935364 = new A.LogicalKeyboardKey(8589935364);
    B.LogicalKeyboardKey_8589935365 = new A.LogicalKeyboardKey(8589935365);
    B.LogicalKeyboardKey_8589935366 = new A.LogicalKeyboardKey(8589935366);
    B.LogicalKeyboardKey_8589935367 = new A.LogicalKeyboardKey(8589935367);
    B.LogicalKeyboardKey_8589935368 = new A.LogicalKeyboardKey(8589935368);
    B.LogicalKeyboardKey_8589935369 = new A.LogicalKeyboardKey(8589935369);
    B.LogicalKeyboardKey_8589935370 = new A.LogicalKeyboardKey(8589935370);
    B.LogicalKeyboardKey_8589935371 = new A.LogicalKeyboardKey(8589935371);
    B.LogicalKeyboardKey_8589935372 = new A.LogicalKeyboardKey(8589935372);
    B.LogicalKeyboardKey_8589935373 = new A.LogicalKeyboardKey(8589935373);
    B.LogicalKeyboardKey_8589935374 = new A.LogicalKeyboardKey(8589935374);
    B.LogicalKeyboardKey_8589935375 = new A.LogicalKeyboardKey(8589935375);
    B.LogicalKeyboardKey_8589935376 = new A.LogicalKeyboardKey(8589935376);
    B.LogicalKeyboardKey_8589935377 = new A.LogicalKeyboardKey(8589935377);
    B.LogicalKeyboardKey_8589935378 = new A.LogicalKeyboardKey(8589935378);
    B.LogicalKeyboardKey_8589935379 = new A.LogicalKeyboardKey(8589935379);
    B.LogicalKeyboardKey_8589935380 = new A.LogicalKeyboardKey(8589935380);
    B.LogicalKeyboardKey_8589935381 = new A.LogicalKeyboardKey(8589935381);
    B.LogicalKeyboardKey_8589935382 = new A.LogicalKeyboardKey(8589935382);
    B.LogicalKeyboardKey_8589935383 = new A.LogicalKeyboardKey(8589935383);
    B.LogicalKeyboardKey_8589935384 = new A.LogicalKeyboardKey(8589935384);
    B.LogicalKeyboardKey_8589935385 = new A.LogicalKeyboardKey(8589935385);
    B.LogicalKeyboardKey_8589935386 = new A.LogicalKeyboardKey(8589935386);
    B.LogicalKeyboardKey_8589935387 = new A.LogicalKeyboardKey(8589935387);
    B.LogicalKeyboardKey_8589935388 = new A.LogicalKeyboardKey(8589935388);
    B.LogicalKeyboardKey_8589935389 = new A.LogicalKeyboardKey(8589935389);
    B.LogicalKeyboardKey_8589935390 = new A.LogicalKeyboardKey(8589935390);
    B.LogicalKeyboardKey_8589935391 = new A.LogicalKeyboardKey(8589935391);
    B.Map_2bMtF = new A.GeneralConstantMap([32, B.LogicalKeyboardKey_32, 33, B.LogicalKeyboardKey_33, 34, B.LogicalKeyboardKey_34, 35, B.LogicalKeyboardKey_35, 36, B.LogicalKeyboardKey_36, 37, B.LogicalKeyboardKey_37, 38, B.LogicalKeyboardKey_38, 39, B.LogicalKeyboardKey_39, 40, B.LogicalKeyboardKey_40, 41, B.LogicalKeyboardKey_41, 42, B.LogicalKeyboardKey_42, 43, B.LogicalKeyboardKey_43, 44, B.LogicalKeyboardKey_44, 45, B.LogicalKeyboardKey_45, 46, B.LogicalKeyboardKey_46, 47, B.LogicalKeyboardKey_47, 48, B.LogicalKeyboardKey_48, 49, B.LogicalKeyboardKey_49, 50, B.LogicalKeyboardKey_50, 51, B.LogicalKeyboardKey_51, 52, B.LogicalKeyboardKey_52, 53, B.LogicalKeyboardKey_53, 54, B.LogicalKeyboardKey_54, 55, B.LogicalKeyboardKey_55, 56, B.LogicalKeyboardKey_56, 57, B.LogicalKeyboardKey_57, 58, B.LogicalKeyboardKey_58, 59, B.LogicalKeyboardKey_59, 60, B.LogicalKeyboardKey_60, 61, B.LogicalKeyboardKey_61, 62, B.LogicalKeyboardKey_62, 63, B.LogicalKeyboardKey_63, 64, B.LogicalKeyboardKey_64, 91, B.LogicalKeyboardKey_91, 92, B.LogicalKeyboardKey_92, 93, B.LogicalKeyboardKey_93, 94, B.LogicalKeyboardKey_94, 95, B.LogicalKeyboardKey_95, 96, B.LogicalKeyboardKey_96, 97, B.LogicalKeyboardKey_97, 98, B.LogicalKeyboardKey_98, 99, B.LogicalKeyboardKey_99, 100, B.LogicalKeyboardKey_100, 101, B.LogicalKeyboardKey_101, 102, B.LogicalKeyboardKey_102, 103, B.LogicalKeyboardKey_103, 104, B.LogicalKeyboardKey_104, 105, B.LogicalKeyboardKey_105, 106, B.LogicalKeyboardKey_106, 107, B.LogicalKeyboardKey_107, 108, B.LogicalKeyboardKey_108, 109, B.LogicalKeyboardKey_109, 110, B.LogicalKeyboardKey_110, 111, B.LogicalKeyboardKey_111, 112, B.LogicalKeyboardKey_112, 113, B.LogicalKeyboardKey_113, 114, B.LogicalKeyboardKey_114, 115, B.LogicalKeyboardKey_115, 116, B.LogicalKeyboardKey_116, 117, B.LogicalKeyboardKey_117, 118, B.LogicalKeyboardKey_118, 119, B.LogicalKeyboardKey_119, 120, B.LogicalKeyboardKey_120, 121, B.LogicalKeyboardKey_121, 122, B.LogicalKeyboardKey_122, 123, B.LogicalKeyboardKey_123, 124, B.LogicalKeyboardKey_124, 125, B.LogicalKeyboardKey_125, 126, B.LogicalKeyboardKey_126, 4294967297, B.LogicalKeyboardKey_4294967297, 4294967304, B.LogicalKeyboardKey_4294967304, 4294967305, B.LogicalKeyboardKey_4294967305, 4294967309, B.LogicalKeyboardKey_4294967309, 4294967323, B.LogicalKeyboardKey_4294967323, 4294967423, B.LogicalKeyboardKey_4294967423, 4294967553, B.LogicalKeyboardKey_4294967553, 4294967555, B.LogicalKeyboardKey_4294967555, 4294967556, B.LogicalKeyboardKey_4294967556, 4294967558, B.LogicalKeyboardKey_4294967558, 4294967559, B.LogicalKeyboardKey_4294967559, 4294967560, B.LogicalKeyboardKey_4294967560, 4294967562, B.LogicalKeyboardKey_4294967562, 4294967564, B.LogicalKeyboardKey_4294967564, 4294967566, B.LogicalKeyboardKey_4294967566, 4294967567, B.LogicalKeyboardKey_4294967567, 4294967568, B.LogicalKeyboardKey_4294967568, 4294967569, B.LogicalKeyboardKey_4294967569, 4294968065, B.LogicalKeyboardKey_4294968065, 4294968066, B.LogicalKeyboardKey_4294968066, 4294968067, B.LogicalKeyboardKey_4294968067, 4294968068, B.LogicalKeyboardKey_4294968068, 4294968069, B.LogicalKeyboardKey_4294968069, 4294968070, B.LogicalKeyboardKey_4294968070, 4294968071, B.LogicalKeyboardKey_4294968071, 4294968072, B.LogicalKeyboardKey_4294968072, 4294968321, B.LogicalKeyboardKey_4294968321, 4294968322, B.LogicalKeyboardKey_4294968322, 4294968323, B.LogicalKeyboardKey_4294968323, 4294968324, B.LogicalKeyboardKey_4294968324, 4294968325, B.LogicalKeyboardKey_4294968325, 4294968326, B.LogicalKeyboardKey_4294968326, 4294968327, B.LogicalKeyboardKey_4294968327, 4294968328, B.LogicalKeyboardKey_4294968328, 4294968329, B.LogicalKeyboardKey_4294968329, 4294968330, B.LogicalKeyboardKey_4294968330, 4294968577, B.LogicalKeyboardKey_4294968577, 4294968578, B.LogicalKeyboardKey_4294968578, 4294968579, B.LogicalKeyboardKey_4294968579, 4294968580, B.LogicalKeyboardKey_4294968580, 4294968581, B.LogicalKeyboardKey_4294968581, 4294968582, B.LogicalKeyboardKey_4294968582, 4294968583, B.LogicalKeyboardKey_4294968583, 4294968584, B.LogicalKeyboardKey_4294968584, 4294968585, B.LogicalKeyboardKey_4294968585, 4294968586, B.LogicalKeyboardKey_4294968586, 4294968587, B.LogicalKeyboardKey_4294968587, 4294968588, B.LogicalKeyboardKey_4294968588, 4294968589, B.LogicalKeyboardKey_4294968589, 4294968590, B.LogicalKeyboardKey_4294968590, 4294968833, B.LogicalKeyboardKey_4294968833, 4294968834, B.LogicalKeyboardKey_4294968834, 4294968835, B.LogicalKeyboardKey_4294968835, 4294968836, B.LogicalKeyboardKey_4294968836, 4294968837, B.LogicalKeyboardKey_4294968837, 4294968838, B.LogicalKeyboardKey_4294968838, 4294968839, B.LogicalKeyboardKey_4294968839, 4294968840, B.LogicalKeyboardKey_4294968840, 4294968841, B.LogicalKeyboardKey_4294968841, 4294968842, B.LogicalKeyboardKey_4294968842, 4294968843, B.LogicalKeyboardKey_4294968843, 4294969089, B.LogicalKeyboardKey_4294969089, 4294969090, B.LogicalKeyboardKey_4294969090, 4294969091, B.LogicalKeyboardKey_4294969091, 4294969092, B.LogicalKeyboardKey_4294969092, 4294969093, B.LogicalKeyboardKey_4294969093, 4294969094, B.LogicalKeyboardKey_4294969094, 4294969095, B.LogicalKeyboardKey_4294969095, 4294969096, B.LogicalKeyboardKey_4294969096, 4294969097, B.LogicalKeyboardKey_4294969097, 4294969098, B.LogicalKeyboardKey_4294969098, 4294969099, B.LogicalKeyboardKey_4294969099, 4294969100, B.LogicalKeyboardKey_4294969100, 4294969101, B.LogicalKeyboardKey_4294969101, 4294969102, B.LogicalKeyboardKey_4294969102, 4294969103, B.LogicalKeyboardKey_4294969103, 4294969104, B.LogicalKeyboardKey_4294969104, 4294969105, B.LogicalKeyboardKey_4294969105, 4294969106, B.LogicalKeyboardKey_4294969106, 4294969107, B.LogicalKeyboardKey_4294969107, 4294969108, B.LogicalKeyboardKey_4294969108, 4294969109, B.LogicalKeyboardKey_4294969109, 4294969110, B.LogicalKeyboardKey_4294969110, 4294969111, B.LogicalKeyboardKey_4294969111, 4294969112, B.LogicalKeyboardKey_4294969112, 4294969113, B.LogicalKeyboardKey_4294969113, 4294969114, B.LogicalKeyboardKey_4294969114, 4294969115, B.LogicalKeyboardKey_4294969115, 4294969116, B.LogicalKeyboardKey_4294969116, 4294969117, B.LogicalKeyboardKey_4294969117, 4294969345, B.LogicalKeyboardKey_4294969345, 4294969346, B.LogicalKeyboardKey_4294969346, 4294969347, B.LogicalKeyboardKey_4294969347, 4294969348, B.LogicalKeyboardKey_4294969348, 4294969349, B.LogicalKeyboardKey_4294969349, 4294969350, B.LogicalKeyboardKey_4294969350, 4294969351, B.LogicalKeyboardKey_4294969351, 4294969352, B.LogicalKeyboardKey_4294969352, 4294969353, B.LogicalKeyboardKey_4294969353, 4294969354, B.LogicalKeyboardKey_4294969354, 4294969355, B.LogicalKeyboardKey_4294969355, 4294969356, B.LogicalKeyboardKey_4294969356, 4294969357, B.LogicalKeyboardKey_4294969357, 4294969358, B.LogicalKeyboardKey_4294969358, 4294969359, B.LogicalKeyboardKey_4294969359, 4294969360, B.LogicalKeyboardKey_4294969360, 4294969361, B.LogicalKeyboardKey_4294969361, 4294969362, B.LogicalKeyboardKey_4294969362, 4294969363, B.LogicalKeyboardKey_4294969363, 4294969364, B.LogicalKeyboardKey_4294969364, 4294969365, B.LogicalKeyboardKey_4294969365, 4294969366, B.LogicalKeyboardKey_4294969366, 4294969367, B.LogicalKeyboardKey_4294969367, 4294969368, B.LogicalKeyboardKey_4294969368, 4294969601, B.LogicalKeyboardKey_4294969601, 4294969602, B.LogicalKeyboardKey_4294969602, 4294969603, B.LogicalKeyboardKey_4294969603, 4294969604, B.LogicalKeyboardKey_4294969604, 4294969605, B.LogicalKeyboardKey_4294969605, 4294969606, B.LogicalKeyboardKey_4294969606, 4294969607, B.LogicalKeyboardKey_4294969607, 4294969608, B.LogicalKeyboardKey_4294969608, 4294969857, B.LogicalKeyboardKey_4294969857, 4294969858, B.LogicalKeyboardKey_4294969858, 4294969859, B.LogicalKeyboardKey_4294969859, 4294969860, B.LogicalKeyboardKey_4294969860, 4294969861, B.LogicalKeyboardKey_4294969861, 4294969863, B.LogicalKeyboardKey_4294969863, 4294969864, B.LogicalKeyboardKey_4294969864, 4294969865, B.LogicalKeyboardKey_4294969865, 4294969866, B.LogicalKeyboardKey_4294969866, 4294969867, B.LogicalKeyboardKey_4294969867, 4294969868, B.LogicalKeyboardKey_4294969868, 4294969869, B.LogicalKeyboardKey_4294969869, 4294969870, B.LogicalKeyboardKey_4294969870, 4294969871, B.LogicalKeyboardKey_4294969871, 4294969872, B.LogicalKeyboardKey_4294969872, 4294969873, B.LogicalKeyboardKey_4294969873, 4294970113, B.LogicalKeyboardKey_4294970113, 4294970114, B.LogicalKeyboardKey_4294970114, 4294970115, B.LogicalKeyboardKey_4294970115, 4294970116, B.LogicalKeyboardKey_4294970116, 4294970117, B.LogicalKeyboardKey_4294970117, 4294970118, B.LogicalKeyboardKey_4294970118, 4294970119, B.LogicalKeyboardKey_4294970119, 4294970120, B.LogicalKeyboardKey_4294970120, 4294970121, B.LogicalKeyboardKey_4294970121, 4294970122, B.LogicalKeyboardKey_4294970122, 4294970123, B.LogicalKeyboardKey_4294970123, 4294970124, B.LogicalKeyboardKey_4294970124, 4294970125, B.LogicalKeyboardKey_4294970125, 4294970126, B.LogicalKeyboardKey_4294970126, 4294970127, B.LogicalKeyboardKey_4294970127, 4294970369, B.LogicalKeyboardKey_4294970369, 4294970370, B.LogicalKeyboardKey_4294970370, 4294970371, B.LogicalKeyboardKey_4294970371, 4294970372, B.LogicalKeyboardKey_4294970372, 4294970373, B.LogicalKeyboardKey_4294970373, 4294970374, B.LogicalKeyboardKey_4294970374, 4294970375, B.LogicalKeyboardKey_4294970375, 4294970625, B.LogicalKeyboardKey_4294970625, 4294970626, B.LogicalKeyboardKey_4294970626, 4294970627, B.LogicalKeyboardKey_4294970627, 4294970628, B.LogicalKeyboardKey_4294970628, 4294970629, B.LogicalKeyboardKey_4294970629, 4294970630, B.LogicalKeyboardKey_4294970630, 4294970631, B.LogicalKeyboardKey_4294970631, 4294970632, B.LogicalKeyboardKey_4294970632, 4294970633, B.LogicalKeyboardKey_4294970633, 4294970634, B.LogicalKeyboardKey_4294970634, 4294970635, B.LogicalKeyboardKey_4294970635, 4294970636, B.LogicalKeyboardKey_4294970636, 4294970637, B.LogicalKeyboardKey_4294970637, 4294970638, B.LogicalKeyboardKey_4294970638, 4294970639, B.LogicalKeyboardKey_4294970639, 4294970640, B.LogicalKeyboardKey_4294970640, 4294970641, B.LogicalKeyboardKey_4294970641, 4294970642, B.LogicalKeyboardKey_4294970642, 4294970643, B.LogicalKeyboardKey_4294970643, 4294970644, B.LogicalKeyboardKey_4294970644, 4294970645, B.LogicalKeyboardKey_4294970645, 4294970646, B.LogicalKeyboardKey_4294970646, 4294970647, B.LogicalKeyboardKey_4294970647, 4294970648, B.LogicalKeyboardKey_4294970648, 4294970649, B.LogicalKeyboardKey_4294970649, 4294970650, B.LogicalKeyboardKey_4294970650, 4294970651, B.LogicalKeyboardKey_4294970651, 4294970652, B.LogicalKeyboardKey_4294970652, 4294970653, B.LogicalKeyboardKey_4294970653, 4294970654, B.LogicalKeyboardKey_4294970654, 4294970655, B.LogicalKeyboardKey_4294970655, 4294970656, B.LogicalKeyboardKey_4294970656, 4294970657, B.LogicalKeyboardKey_4294970657, 4294970658, B.LogicalKeyboardKey_4294970658, 4294970659, B.LogicalKeyboardKey_4294970659, 4294970660, B.LogicalKeyboardKey_4294970660, 4294970661, B.LogicalKeyboardKey_4294970661, 4294970662, B.LogicalKeyboardKey_4294970662, 4294970663, B.LogicalKeyboardKey_4294970663, 4294970664, B.LogicalKeyboardKey_4294970664, 4294970665, B.LogicalKeyboardKey_4294970665, 4294970666, B.LogicalKeyboardKey_4294970666, 4294970667, B.LogicalKeyboardKey_4294970667, 4294970668, B.LogicalKeyboardKey_4294970668, 4294970669, B.LogicalKeyboardKey_4294970669, 4294970670, B.LogicalKeyboardKey_4294970670, 4294970671, B.LogicalKeyboardKey_4294970671, 4294970672, B.LogicalKeyboardKey_4294970672, 4294970673, B.LogicalKeyboardKey_4294970673, 4294970674, B.LogicalKeyboardKey_4294970674, 4294970675, B.LogicalKeyboardKey_4294970675, 4294970676, B.LogicalKeyboardKey_4294970676, 4294970677, B.LogicalKeyboardKey_4294970677, 4294970678, B.LogicalKeyboardKey_4294970678, 4294970679, B.LogicalKeyboardKey_4294970679, 4294970680, B.LogicalKeyboardKey_4294970680, 4294970681, B.LogicalKeyboardKey_4294970681, 4294970682, B.LogicalKeyboardKey_4294970682, 4294970683, B.LogicalKeyboardKey_4294970683, 4294970684, B.LogicalKeyboardKey_4294970684, 4294970685, B.LogicalKeyboardKey_4294970685, 4294970686, B.LogicalKeyboardKey_4294970686, 4294970687, B.LogicalKeyboardKey_4294970687, 4294970688, B.LogicalKeyboardKey_4294970688, 4294970689, B.LogicalKeyboardKey_4294970689, 4294970690, B.LogicalKeyboardKey_4294970690, 4294970691, B.LogicalKeyboardKey_4294970691, 4294970692, B.LogicalKeyboardKey_4294970692, 4294970693, B.LogicalKeyboardKey_4294970693, 4294970694, B.LogicalKeyboardKey_4294970694, 4294970695, B.LogicalKeyboardKey_4294970695, 4294970696, B.LogicalKeyboardKey_4294970696, 4294970697, B.LogicalKeyboardKey_4294970697, 4294970698, B.LogicalKeyboardKey_4294970698, 4294970699, B.LogicalKeyboardKey_4294970699, 4294970700, B.LogicalKeyboardKey_4294970700, 4294970701, B.LogicalKeyboardKey_4294970701, 4294970702, B.LogicalKeyboardKey_4294970702, 4294970703, B.LogicalKeyboardKey_4294970703, 4294970704, B.LogicalKeyboardKey_4294970704, 4294970705, B.LogicalKeyboardKey_4294970705, 4294970706, B.LogicalKeyboardKey_4294970706, 4294970707, B.LogicalKeyboardKey_4294970707, 4294970708, B.LogicalKeyboardKey_4294970708, 4294970709, B.LogicalKeyboardKey_4294970709, 4294970710, B.LogicalKeyboardKey_4294970710, 4294970711, B.LogicalKeyboardKey_4294970711, 4294970712, B.LogicalKeyboardKey_4294970712, 4294970713, B.LogicalKeyboardKey_4294970713, 4294970714, B.LogicalKeyboardKey_4294970714, 4294970715, B.LogicalKeyboardKey_4294970715, 4294970882, B.LogicalKeyboardKey_4294970882, 4294970884, B.LogicalKeyboardKey_4294970884, 4294970885, B.LogicalKeyboardKey_4294970885, 4294970886, B.LogicalKeyboardKey_4294970886, 4294970887, B.LogicalKeyboardKey_4294970887, 4294970888, B.LogicalKeyboardKey_4294970888, 4294970889, B.LogicalKeyboardKey_4294970889, 4294971137, B.LogicalKeyboardKey_4294971137, 4294971138, B.LogicalKeyboardKey_4294971138, 4294971393, B.LogicalKeyboardKey_4294971393, 4294971394, B.LogicalKeyboardKey_4294971394, 4294971395, B.LogicalKeyboardKey_4294971395, 4294971396, B.LogicalKeyboardKey_4294971396, 4294971397, B.LogicalKeyboardKey_4294971397, 4294971398, B.LogicalKeyboardKey_4294971398, 4294971399, B.LogicalKeyboardKey_4294971399, 4294971400, B.LogicalKeyboardKey_4294971400, 4294971401, B.LogicalKeyboardKey_4294971401, 4294971402, B.LogicalKeyboardKey_4294971402, 4294971403, B.LogicalKeyboardKey_4294971403, 4294971649, B.LogicalKeyboardKey_4294971649, 4294971650, B.LogicalKeyboardKey_4294971650, 4294971651, B.LogicalKeyboardKey_4294971651, 4294971652, B.LogicalKeyboardKey_4294971652, 4294971653, B.LogicalKeyboardKey_4294971653, 4294971654, B.LogicalKeyboardKey_4294971654, 4294971655, B.LogicalKeyboardKey_4294971655, 4294971656, B.LogicalKeyboardKey_4294971656, 4294971657, B.LogicalKeyboardKey_4294971657, 4294971658, B.LogicalKeyboardKey_4294971658, 4294971659, B.LogicalKeyboardKey_4294971659, 4294971660, B.LogicalKeyboardKey_4294971660, 4294971661, B.LogicalKeyboardKey_4294971661, 4294971662, B.LogicalKeyboardKey_4294971662, 4294971663, B.LogicalKeyboardKey_4294971663, 4294971664, B.LogicalKeyboardKey_4294971664, 4294971665, B.LogicalKeyboardKey_4294971665, 4294971666, B.LogicalKeyboardKey_4294971666, 4294971667, B.LogicalKeyboardKey_4294971667, 4294971668, B.LogicalKeyboardKey_4294971668, 4294971669, B.LogicalKeyboardKey_4294971669, 4294971670, B.LogicalKeyboardKey_4294971670, 4294971671, B.LogicalKeyboardKey_4294971671, 4294971672, B.LogicalKeyboardKey_4294971672, 4294971673, B.LogicalKeyboardKey_4294971673, 4294971674, B.LogicalKeyboardKey_4294971674, 4294971675, B.LogicalKeyboardKey_4294971675, 4294971905, B.LogicalKeyboardKey_4294971905, 4294971906, B.LogicalKeyboardKey_4294971906, 8589934592, B.LogicalKeyboardKey_8589934592, 8589934593, B.LogicalKeyboardKey_8589934593, 8589934594, B.LogicalKeyboardKey_8589934594, 8589934595, B.LogicalKeyboardKey_8589934595, 8589934608, B.LogicalKeyboardKey_8589934608, 8589934609, B.LogicalKeyboardKey_8589934609, 8589934610, B.LogicalKeyboardKey_8589934610, 8589934611, B.LogicalKeyboardKey_8589934611, 8589934612, B.LogicalKeyboardKey_8589934612, 8589934624, B.LogicalKeyboardKey_8589934624, 8589934625, B.LogicalKeyboardKey_8589934625, 8589934626, B.LogicalKeyboardKey_8589934626, 8589934848, B.LogicalKeyboardKey_8589934848, 8589934849, B.LogicalKeyboardKey_8589934849, 8589934850, B.LogicalKeyboardKey_8589934850, 8589934851, B.LogicalKeyboardKey_8589934851, 8589934852, B.LogicalKeyboardKey_8589934852, 8589934853, B.LogicalKeyboardKey_8589934853, 8589934854, B.LogicalKeyboardKey_8589934854, 8589934855, B.LogicalKeyboardKey_8589934855, 8589935088, B.LogicalKeyboardKey_8589935088, 8589935090, B.LogicalKeyboardKey_8589935090, 8589935092, B.LogicalKeyboardKey_8589935092, 8589935094, B.LogicalKeyboardKey_8589935094, 8589935117, B.LogicalKeyboardKey_8589935117, 8589935144, B.LogicalKeyboardKey_8589935144, 8589935145, B.LogicalKeyboardKey_8589935145, 8589935146, B.LogicalKeyboardKey_8589935146, 8589935147, B.LogicalKeyboardKey_8589935147, 8589935148, B.LogicalKeyboardKey_8589935148, 8589935149, B.LogicalKeyboardKey_8589935149, 8589935150, B.LogicalKeyboardKey_8589935150, 8589935151, B.LogicalKeyboardKey_8589935151, 8589935152, B.LogicalKeyboardKey_8589935152, 8589935153, B.LogicalKeyboardKey_8589935153, 8589935154, B.LogicalKeyboardKey_8589935154, 8589935155, B.LogicalKeyboardKey_8589935155, 8589935156, B.LogicalKeyboardKey_8589935156, 8589935157, B.LogicalKeyboardKey_8589935157, 8589935158, B.LogicalKeyboardKey_8589935158, 8589935159, B.LogicalKeyboardKey_8589935159, 8589935160, B.LogicalKeyboardKey_8589935160, 8589935161, B.LogicalKeyboardKey_8589935161, 8589935165, B.LogicalKeyboardKey_8589935165, 8589935361, B.LogicalKeyboardKey_8589935361, 8589935362, B.LogicalKeyboardKey_8589935362, 8589935363, B.LogicalKeyboardKey_8589935363, 8589935364, B.LogicalKeyboardKey_8589935364, 8589935365, B.LogicalKeyboardKey_8589935365, 8589935366, B.LogicalKeyboardKey_8589935366, 8589935367, B.LogicalKeyboardKey_8589935367, 8589935368, B.LogicalKeyboardKey_8589935368, 8589935369, B.LogicalKeyboardKey_8589935369, 8589935370, B.LogicalKeyboardKey_8589935370, 8589935371, B.LogicalKeyboardKey_8589935371, 8589935372, B.LogicalKeyboardKey_8589935372, 8589935373, B.LogicalKeyboardKey_8589935373, 8589935374, B.LogicalKeyboardKey_8589935374, 8589935375, B.LogicalKeyboardKey_8589935375, 8589935376, B.LogicalKeyboardKey_8589935376, 8589935377, B.LogicalKeyboardKey_8589935377, 8589935378, B.LogicalKeyboardKey_8589935378, 8589935379, B.LogicalKeyboardKey_8589935379, 8589935380, B.LogicalKeyboardKey_8589935380, 8589935381, B.LogicalKeyboardKey_8589935381, 8589935382, B.LogicalKeyboardKey_8589935382, 8589935383, B.LogicalKeyboardKey_8589935383, 8589935384, B.LogicalKeyboardKey_8589935384, 8589935385, B.LogicalKeyboardKey_8589935385, 8589935386, B.LogicalKeyboardKey_8589935386, 8589935387, B.LogicalKeyboardKey_8589935387, 8589935388, B.LogicalKeyboardKey_8589935388, 8589935389, B.LogicalKeyboardKey_8589935389, 8589935390, B.LogicalKeyboardKey_8589935390, 8589935391, B.LogicalKeyboardKey_8589935391], A.findType("GeneralConstantMap<int,LogicalKeyboardKey>"));
    B.Object_MOK = {in: 0, iw: 1, ji: 2, jw: 3, mo: 4, aam: 5, adp: 6, aue: 7, ayx: 8, bgm: 9, bjd: 10, ccq: 11, cjr: 12, cka: 13, cmk: 14, coy: 15, cqu: 16, drh: 17, drw: 18, gav: 19, gfx: 20, ggn: 21, gti: 22, guv: 23, hrr: 24, ibi: 25, ilw: 26, jeg: 27, kgc: 28, kgh: 29, koj: 30, krm: 31, ktr: 32, kvs: 33, kwq: 34, kxe: 35, kzj: 36, kzt: 37, lii: 38, lmm: 39, meg: 40, mst: 41, mwj: 42, myt: 43, nad: 44, ncp: 45, nnx: 46, nts: 47, oun: 48, pcr: 49, pmc: 50, pmu: 51, ppa: 52, ppr: 53, pry: 54, puz: 55, sca: 56, skk: 57, tdu: 58, thc: 59, thx: 60, tie: 61, tkk: 62, tlw: 63, tmp: 64, tne: 65, tnf: 66, tsf: 67, uok: 68, xba: 69, xia: 70, xkh: 71, xsj: 72, ybd: 73, yma: 74, ymt: 75, yos: 76, yuu: 77};
    B.Map_43kKQ = new A.ConstantStringMap(B.Object_MOK, ["id", "he", "yi", "jv", "ro", "aas", "dz", "ktz", "nun", "bcg", "drl", "rki", "mom", "cmr", "xch", "pij", "quh", "khk", "prs", "dev", "vaj", "gvr", "nyc", "duz", "jal", "opa", "gal", "oyb", "tdf", "kml", "kwv", "bmf", "dtp", "gdj", "yam", "tvd", "dtp", "dtp", "raq", "rmx", "cir", "mry", "vaj", "mry", "xny", "kdz", "ngv", "pij", "vaj", "adx", "huw", "phr", "bfy", "lcq", "prt", "pub", "hle", "oyb", "dtp", "tpo", "oyb", "ras", "twm", "weo", "tyj", "kak", "prs", "taj", "ema", "cax", "acn", "waw", "suj", "rki", "lrr", "mtm", "zom", "yug"], type$.ConstantStringMap_String_String);
    B.Object_gkc = {KeyA: 0, KeyB: 1, KeyC: 2, KeyD: 3, KeyE: 4, KeyF: 5, KeyG: 6, KeyH: 7, KeyI: 8, KeyJ: 9, KeyK: 10, KeyL: 11, KeyM: 12, KeyN: 13, KeyO: 14, KeyP: 15, KeyQ: 16, KeyR: 17, KeyS: 18, KeyT: 19, KeyU: 20, KeyV: 21, KeyW: 22, KeyX: 23, KeyY: 24, KeyZ: 25, Digit1: 26, Digit2: 27, Digit3: 28, Digit4: 29, Digit5: 30, Digit6: 31, Digit7: 32, Digit8: 33, Digit9: 34, Digit0: 35, Minus: 36, Equal: 37, BracketLeft: 38, BracketRight: 39, Backslash: 40, Semicolon: 41, Quote: 42, Backquote: 43, Comma: 44, Period: 45, Slash: 46};
    B.Map_Am4V8 = new A.ConstantStringMap(B.Object_gkc, ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "[", "]", "\\", ";", "'", "`", ",", ".", "/"], type$.ConstantStringMap_String_String);
    B.Object_BeS = {alias: 0, allScroll: 1, basic: 2, cell: 3, click: 4, contextMenu: 5, copy: 6, forbidden: 7, grab: 8, grabbing: 9, help: 10, move: 11, none: 12, noDrop: 13, precise: 14, progress: 15, text: 16, resizeColumn: 17, resizeDown: 18, resizeDownLeft: 19, resizeDownRight: 20, resizeLeft: 21, resizeLeftRight: 22, resizeRight: 23, resizeRow: 24, resizeUp: 25, resizeUpDown: 26, resizeUpLeft: 27, resizeUpRight: 28, resizeUpLeftDownRight: 29, resizeUpRightDownLeft: 30, verticalText: 31, wait: 32, zoomIn: 33, zoomOut: 34};
    B.Map_WZ6cQ = new A.ConstantStringMap(B.Object_BeS, ["alias", "all-scroll", "default", "cell", "pointer", "context-menu", "copy", "not-allowed", "grab", "grabbing", "help", "move", "none", "no-drop", "crosshair", "progress", "text", "col-resize", "s-resize", "sw-resize", "se-resize", "w-resize", "ew-resize", "e-resize", "row-resize", "n-resize", "ns-resize", "nw-resize", "ne-resize", "nwse-resize", "nesw-resize", "vertical-text", "wait", "zoom-in", "zoom-out"], type$.ConstantStringMap_String_String);
    B.PhysicalKeyboardKey_16 = new A.PhysicalKeyboardKey(16);
    B.PhysicalKeyboardKey_17 = new A.PhysicalKeyboardKey(17);
    B.PhysicalKeyboardKey_18 = new A.PhysicalKeyboardKey(18);
    B.PhysicalKeyboardKey_19 = new A.PhysicalKeyboardKey(19);
    B.PhysicalKeyboardKey_20 = new A.PhysicalKeyboardKey(20);
    B.PhysicalKeyboardKey_21 = new A.PhysicalKeyboardKey(21);
    B.PhysicalKeyboardKey_22 = new A.PhysicalKeyboardKey(22);
    B.PhysicalKeyboardKey_23 = new A.PhysicalKeyboardKey(23);
    B.PhysicalKeyboardKey_24 = new A.PhysicalKeyboardKey(24);
    B.PhysicalKeyboardKey_65666 = new A.PhysicalKeyboardKey(65666);
    B.PhysicalKeyboardKey_65667 = new A.PhysicalKeyboardKey(65667);
    B.PhysicalKeyboardKey_65717 = new A.PhysicalKeyboardKey(65717);
    B.PhysicalKeyboardKey_392961 = new A.PhysicalKeyboardKey(392961);
    B.PhysicalKeyboardKey_392962 = new A.PhysicalKeyboardKey(392962);
    B.PhysicalKeyboardKey_392963 = new A.PhysicalKeyboardKey(392963);
    B.PhysicalKeyboardKey_392964 = new A.PhysicalKeyboardKey(392964);
    B.PhysicalKeyboardKey_392965 = new A.PhysicalKeyboardKey(392965);
    B.PhysicalKeyboardKey_392966 = new A.PhysicalKeyboardKey(392966);
    B.PhysicalKeyboardKey_392967 = new A.PhysicalKeyboardKey(392967);
    B.PhysicalKeyboardKey_392968 = new A.PhysicalKeyboardKey(392968);
    B.PhysicalKeyboardKey_392969 = new A.PhysicalKeyboardKey(392969);
    B.PhysicalKeyboardKey_392970 = new A.PhysicalKeyboardKey(392970);
    B.PhysicalKeyboardKey_392971 = new A.PhysicalKeyboardKey(392971);
    B.PhysicalKeyboardKey_392972 = new A.PhysicalKeyboardKey(392972);
    B.PhysicalKeyboardKey_392973 = new A.PhysicalKeyboardKey(392973);
    B.PhysicalKeyboardKey_392974 = new A.PhysicalKeyboardKey(392974);
    B.PhysicalKeyboardKey_392975 = new A.PhysicalKeyboardKey(392975);
    B.PhysicalKeyboardKey_392976 = new A.PhysicalKeyboardKey(392976);
    B.PhysicalKeyboardKey_392977 = new A.PhysicalKeyboardKey(392977);
    B.PhysicalKeyboardKey_392978 = new A.PhysicalKeyboardKey(392978);
    B.PhysicalKeyboardKey_392979 = new A.PhysicalKeyboardKey(392979);
    B.PhysicalKeyboardKey_392980 = new A.PhysicalKeyboardKey(392980);
    B.PhysicalKeyboardKey_392981 = new A.PhysicalKeyboardKey(392981);
    B.PhysicalKeyboardKey_392982 = new A.PhysicalKeyboardKey(392982);
    B.PhysicalKeyboardKey_392983 = new A.PhysicalKeyboardKey(392983);
    B.PhysicalKeyboardKey_392984 = new A.PhysicalKeyboardKey(392984);
    B.PhysicalKeyboardKey_392985 = new A.PhysicalKeyboardKey(392985);
    B.PhysicalKeyboardKey_392986 = new A.PhysicalKeyboardKey(392986);
    B.PhysicalKeyboardKey_392987 = new A.PhysicalKeyboardKey(392987);
    B.PhysicalKeyboardKey_392988 = new A.PhysicalKeyboardKey(392988);
    B.PhysicalKeyboardKey_392989 = new A.PhysicalKeyboardKey(392989);
    B.PhysicalKeyboardKey_392990 = new A.PhysicalKeyboardKey(392990);
    B.PhysicalKeyboardKey_392991 = new A.PhysicalKeyboardKey(392991);
    B.PhysicalKeyboardKey_458752 = new A.PhysicalKeyboardKey(458752);
    B.PhysicalKeyboardKey_458753 = new A.PhysicalKeyboardKey(458753);
    B.PhysicalKeyboardKey_458754 = new A.PhysicalKeyboardKey(458754);
    B.PhysicalKeyboardKey_458755 = new A.PhysicalKeyboardKey(458755);
    B.PhysicalKeyboardKey_458756 = new A.PhysicalKeyboardKey(458756);
    B.PhysicalKeyboardKey_458757 = new A.PhysicalKeyboardKey(458757);
    B.PhysicalKeyboardKey_458758 = new A.PhysicalKeyboardKey(458758);
    B.PhysicalKeyboardKey_458759 = new A.PhysicalKeyboardKey(458759);
    B.PhysicalKeyboardKey_458760 = new A.PhysicalKeyboardKey(458760);
    B.PhysicalKeyboardKey_458761 = new A.PhysicalKeyboardKey(458761);
    B.PhysicalKeyboardKey_458762 = new A.PhysicalKeyboardKey(458762);
    B.PhysicalKeyboardKey_458763 = new A.PhysicalKeyboardKey(458763);
    B.PhysicalKeyboardKey_458764 = new A.PhysicalKeyboardKey(458764);
    B.PhysicalKeyboardKey_458765 = new A.PhysicalKeyboardKey(458765);
    B.PhysicalKeyboardKey_458766 = new A.PhysicalKeyboardKey(458766);
    B.PhysicalKeyboardKey_458767 = new A.PhysicalKeyboardKey(458767);
    B.PhysicalKeyboardKey_458768 = new A.PhysicalKeyboardKey(458768);
    B.PhysicalKeyboardKey_458769 = new A.PhysicalKeyboardKey(458769);
    B.PhysicalKeyboardKey_458770 = new A.PhysicalKeyboardKey(458770);
    B.PhysicalKeyboardKey_458771 = new A.PhysicalKeyboardKey(458771);
    B.PhysicalKeyboardKey_458772 = new A.PhysicalKeyboardKey(458772);
    B.PhysicalKeyboardKey_458773 = new A.PhysicalKeyboardKey(458773);
    B.PhysicalKeyboardKey_458774 = new A.PhysicalKeyboardKey(458774);
    B.PhysicalKeyboardKey_458775 = new A.PhysicalKeyboardKey(458775);
    B.PhysicalKeyboardKey_458776 = new A.PhysicalKeyboardKey(458776);
    B.PhysicalKeyboardKey_458777 = new A.PhysicalKeyboardKey(458777);
    B.PhysicalKeyboardKey_458778 = new A.PhysicalKeyboardKey(458778);
    B.PhysicalKeyboardKey_458779 = new A.PhysicalKeyboardKey(458779);
    B.PhysicalKeyboardKey_458780 = new A.PhysicalKeyboardKey(458780);
    B.PhysicalKeyboardKey_458781 = new A.PhysicalKeyboardKey(458781);
    B.PhysicalKeyboardKey_458782 = new A.PhysicalKeyboardKey(458782);
    B.PhysicalKeyboardKey_458783 = new A.PhysicalKeyboardKey(458783);
    B.PhysicalKeyboardKey_458784 = new A.PhysicalKeyboardKey(458784);
    B.PhysicalKeyboardKey_458785 = new A.PhysicalKeyboardKey(458785);
    B.PhysicalKeyboardKey_458786 = new A.PhysicalKeyboardKey(458786);
    B.PhysicalKeyboardKey_458787 = new A.PhysicalKeyboardKey(458787);
    B.PhysicalKeyboardKey_458788 = new A.PhysicalKeyboardKey(458788);
    B.PhysicalKeyboardKey_458789 = new A.PhysicalKeyboardKey(458789);
    B.PhysicalKeyboardKey_458790 = new A.PhysicalKeyboardKey(458790);
    B.PhysicalKeyboardKey_458791 = new A.PhysicalKeyboardKey(458791);
    B.PhysicalKeyboardKey_458792 = new A.PhysicalKeyboardKey(458792);
    B.PhysicalKeyboardKey_458793 = new A.PhysicalKeyboardKey(458793);
    B.PhysicalKeyboardKey_458794 = new A.PhysicalKeyboardKey(458794);
    B.PhysicalKeyboardKey_458795 = new A.PhysicalKeyboardKey(458795);
    B.PhysicalKeyboardKey_458796 = new A.PhysicalKeyboardKey(458796);
    B.PhysicalKeyboardKey_458797 = new A.PhysicalKeyboardKey(458797);
    B.PhysicalKeyboardKey_458798 = new A.PhysicalKeyboardKey(458798);
    B.PhysicalKeyboardKey_458799 = new A.PhysicalKeyboardKey(458799);
    B.PhysicalKeyboardKey_458800 = new A.PhysicalKeyboardKey(458800);
    B.PhysicalKeyboardKey_458801 = new A.PhysicalKeyboardKey(458801);
    B.PhysicalKeyboardKey_458803 = new A.PhysicalKeyboardKey(458803);
    B.PhysicalKeyboardKey_458804 = new A.PhysicalKeyboardKey(458804);
    B.PhysicalKeyboardKey_458805 = new A.PhysicalKeyboardKey(458805);
    B.PhysicalKeyboardKey_458806 = new A.PhysicalKeyboardKey(458806);
    B.PhysicalKeyboardKey_458807 = new A.PhysicalKeyboardKey(458807);
    B.PhysicalKeyboardKey_458808 = new A.PhysicalKeyboardKey(458808);
    B.PhysicalKeyboardKey_458809 = new A.PhysicalKeyboardKey(458809);
    B.PhysicalKeyboardKey_458810 = new A.PhysicalKeyboardKey(458810);
    B.PhysicalKeyboardKey_458811 = new A.PhysicalKeyboardKey(458811);
    B.PhysicalKeyboardKey_458812 = new A.PhysicalKeyboardKey(458812);
    B.PhysicalKeyboardKey_458813 = new A.PhysicalKeyboardKey(458813);
    B.PhysicalKeyboardKey_458814 = new A.PhysicalKeyboardKey(458814);
    B.PhysicalKeyboardKey_458815 = new A.PhysicalKeyboardKey(458815);
    B.PhysicalKeyboardKey_458816 = new A.PhysicalKeyboardKey(458816);
    B.PhysicalKeyboardKey_458817 = new A.PhysicalKeyboardKey(458817);
    B.PhysicalKeyboardKey_458818 = new A.PhysicalKeyboardKey(458818);
    B.PhysicalKeyboardKey_458819 = new A.PhysicalKeyboardKey(458819);
    B.PhysicalKeyboardKey_458820 = new A.PhysicalKeyboardKey(458820);
    B.PhysicalKeyboardKey_458821 = new A.PhysicalKeyboardKey(458821);
    B.PhysicalKeyboardKey_458822 = new A.PhysicalKeyboardKey(458822);
    B.PhysicalKeyboardKey_458823 = new A.PhysicalKeyboardKey(458823);
    B.PhysicalKeyboardKey_458824 = new A.PhysicalKeyboardKey(458824);
    B.PhysicalKeyboardKey_458825 = new A.PhysicalKeyboardKey(458825);
    B.PhysicalKeyboardKey_458826 = new A.PhysicalKeyboardKey(458826);
    B.PhysicalKeyboardKey_458827 = new A.PhysicalKeyboardKey(458827);
    B.PhysicalKeyboardKey_458828 = new A.PhysicalKeyboardKey(458828);
    B.PhysicalKeyboardKey_458829 = new A.PhysicalKeyboardKey(458829);
    B.PhysicalKeyboardKey_458830 = new A.PhysicalKeyboardKey(458830);
    B.PhysicalKeyboardKey_458831 = new A.PhysicalKeyboardKey(458831);
    B.PhysicalKeyboardKey_458832 = new A.PhysicalKeyboardKey(458832);
    B.PhysicalKeyboardKey_458833 = new A.PhysicalKeyboardKey(458833);
    B.PhysicalKeyboardKey_458834 = new A.PhysicalKeyboardKey(458834);
    B.PhysicalKeyboardKey_458835 = new A.PhysicalKeyboardKey(458835);
    B.PhysicalKeyboardKey_458836 = new A.PhysicalKeyboardKey(458836);
    B.PhysicalKeyboardKey_458837 = new A.PhysicalKeyboardKey(458837);
    B.PhysicalKeyboardKey_458838 = new A.PhysicalKeyboardKey(458838);
    B.PhysicalKeyboardKey_458839 = new A.PhysicalKeyboardKey(458839);
    B.PhysicalKeyboardKey_458840 = new A.PhysicalKeyboardKey(458840);
    B.PhysicalKeyboardKey_458841 = new A.PhysicalKeyboardKey(458841);
    B.PhysicalKeyboardKey_458842 = new A.PhysicalKeyboardKey(458842);
    B.PhysicalKeyboardKey_458843 = new A.PhysicalKeyboardKey(458843);
    B.PhysicalKeyboardKey_458844 = new A.PhysicalKeyboardKey(458844);
    B.PhysicalKeyboardKey_458845 = new A.PhysicalKeyboardKey(458845);
    B.PhysicalKeyboardKey_458846 = new A.PhysicalKeyboardKey(458846);
    B.PhysicalKeyboardKey_458847 = new A.PhysicalKeyboardKey(458847);
    B.PhysicalKeyboardKey_458848 = new A.PhysicalKeyboardKey(458848);
    B.PhysicalKeyboardKey_458849 = new A.PhysicalKeyboardKey(458849);
    B.PhysicalKeyboardKey_458850 = new A.PhysicalKeyboardKey(458850);
    B.PhysicalKeyboardKey_458851 = new A.PhysicalKeyboardKey(458851);
    B.PhysicalKeyboardKey_458852 = new A.PhysicalKeyboardKey(458852);
    B.PhysicalKeyboardKey_458853 = new A.PhysicalKeyboardKey(458853);
    B.PhysicalKeyboardKey_458854 = new A.PhysicalKeyboardKey(458854);
    B.PhysicalKeyboardKey_458855 = new A.PhysicalKeyboardKey(458855);
    B.PhysicalKeyboardKey_458856 = new A.PhysicalKeyboardKey(458856);
    B.PhysicalKeyboardKey_458857 = new A.PhysicalKeyboardKey(458857);
    B.PhysicalKeyboardKey_458858 = new A.PhysicalKeyboardKey(458858);
    B.PhysicalKeyboardKey_458859 = new A.PhysicalKeyboardKey(458859);
    B.PhysicalKeyboardKey_458860 = new A.PhysicalKeyboardKey(458860);
    B.PhysicalKeyboardKey_458861 = new A.PhysicalKeyboardKey(458861);
    B.PhysicalKeyboardKey_458862 = new A.PhysicalKeyboardKey(458862);
    B.PhysicalKeyboardKey_458863 = new A.PhysicalKeyboardKey(458863);
    B.PhysicalKeyboardKey_458864 = new A.PhysicalKeyboardKey(458864);
    B.PhysicalKeyboardKey_458865 = new A.PhysicalKeyboardKey(458865);
    B.PhysicalKeyboardKey_458866 = new A.PhysicalKeyboardKey(458866);
    B.PhysicalKeyboardKey_458867 = new A.PhysicalKeyboardKey(458867);
    B.PhysicalKeyboardKey_458868 = new A.PhysicalKeyboardKey(458868);
    B.PhysicalKeyboardKey_458869 = new A.PhysicalKeyboardKey(458869);
    B.PhysicalKeyboardKey_458871 = new A.PhysicalKeyboardKey(458871);
    B.PhysicalKeyboardKey_458873 = new A.PhysicalKeyboardKey(458873);
    B.PhysicalKeyboardKey_458874 = new A.PhysicalKeyboardKey(458874);
    B.PhysicalKeyboardKey_458875 = new A.PhysicalKeyboardKey(458875);
    B.PhysicalKeyboardKey_458876 = new A.PhysicalKeyboardKey(458876);
    B.PhysicalKeyboardKey_458877 = new A.PhysicalKeyboardKey(458877);
    B.PhysicalKeyboardKey_458878 = new A.PhysicalKeyboardKey(458878);
    B.PhysicalKeyboardKey_458879 = new A.PhysicalKeyboardKey(458879);
    B.PhysicalKeyboardKey_458880 = new A.PhysicalKeyboardKey(458880);
    B.PhysicalKeyboardKey_458881 = new A.PhysicalKeyboardKey(458881);
    B.PhysicalKeyboardKey_458885 = new A.PhysicalKeyboardKey(458885);
    B.PhysicalKeyboardKey_458887 = new A.PhysicalKeyboardKey(458887);
    B.PhysicalKeyboardKey_458888 = new A.PhysicalKeyboardKey(458888);
    B.PhysicalKeyboardKey_458889 = new A.PhysicalKeyboardKey(458889);
    B.PhysicalKeyboardKey_458890 = new A.PhysicalKeyboardKey(458890);
    B.PhysicalKeyboardKey_458891 = new A.PhysicalKeyboardKey(458891);
    B.PhysicalKeyboardKey_458896 = new A.PhysicalKeyboardKey(458896);
    B.PhysicalKeyboardKey_458897 = new A.PhysicalKeyboardKey(458897);
    B.PhysicalKeyboardKey_458898 = new A.PhysicalKeyboardKey(458898);
    B.PhysicalKeyboardKey_458899 = new A.PhysicalKeyboardKey(458899);
    B.PhysicalKeyboardKey_458900 = new A.PhysicalKeyboardKey(458900);
    B.PhysicalKeyboardKey_458907 = new A.PhysicalKeyboardKey(458907);
    B.PhysicalKeyboardKey_458915 = new A.PhysicalKeyboardKey(458915);
    B.PhysicalKeyboardKey_458934 = new A.PhysicalKeyboardKey(458934);
    B.PhysicalKeyboardKey_458935 = new A.PhysicalKeyboardKey(458935);
    B.PhysicalKeyboardKey_458939 = new A.PhysicalKeyboardKey(458939);
    B.PhysicalKeyboardKey_458960 = new A.PhysicalKeyboardKey(458960);
    B.PhysicalKeyboardKey_458961 = new A.PhysicalKeyboardKey(458961);
    B.PhysicalKeyboardKey_458962 = new A.PhysicalKeyboardKey(458962);
    B.PhysicalKeyboardKey_458963 = new A.PhysicalKeyboardKey(458963);
    B.PhysicalKeyboardKey_458964 = new A.PhysicalKeyboardKey(458964);
    B.PhysicalKeyboardKey_458967 = new A.PhysicalKeyboardKey(458967);
    B.PhysicalKeyboardKey_458968 = new A.PhysicalKeyboardKey(458968);
    B.PhysicalKeyboardKey_458969 = new A.PhysicalKeyboardKey(458969);
    B.PhysicalKeyboardKey_458976 = new A.PhysicalKeyboardKey(458976);
    B.PhysicalKeyboardKey_458977 = new A.PhysicalKeyboardKey(458977);
    B.PhysicalKeyboardKey_458978 = new A.PhysicalKeyboardKey(458978);
    B.PhysicalKeyboardKey_458979 = new A.PhysicalKeyboardKey(458979);
    B.PhysicalKeyboardKey_458980 = new A.PhysicalKeyboardKey(458980);
    B.PhysicalKeyboardKey_458981 = new A.PhysicalKeyboardKey(458981);
    B.PhysicalKeyboardKey_458982 = new A.PhysicalKeyboardKey(458982);
    B.PhysicalKeyboardKey_458983 = new A.PhysicalKeyboardKey(458983);
    B.PhysicalKeyboardKey_786528 = new A.PhysicalKeyboardKey(786528);
    B.PhysicalKeyboardKey_786529 = new A.PhysicalKeyboardKey(786529);
    B.PhysicalKeyboardKey_786543 = new A.PhysicalKeyboardKey(786543);
    B.PhysicalKeyboardKey_786544 = new A.PhysicalKeyboardKey(786544);
    B.PhysicalKeyboardKey_786546 = new A.PhysicalKeyboardKey(786546);
    B.PhysicalKeyboardKey_786547 = new A.PhysicalKeyboardKey(786547);
    B.PhysicalKeyboardKey_786548 = new A.PhysicalKeyboardKey(786548);
    B.PhysicalKeyboardKey_786549 = new A.PhysicalKeyboardKey(786549);
    B.PhysicalKeyboardKey_786553 = new A.PhysicalKeyboardKey(786553);
    B.PhysicalKeyboardKey_786554 = new A.PhysicalKeyboardKey(786554);
    B.PhysicalKeyboardKey_786563 = new A.PhysicalKeyboardKey(786563);
    B.PhysicalKeyboardKey_786572 = new A.PhysicalKeyboardKey(786572);
    B.PhysicalKeyboardKey_786573 = new A.PhysicalKeyboardKey(786573);
    B.PhysicalKeyboardKey_786580 = new A.PhysicalKeyboardKey(786580);
    B.PhysicalKeyboardKey_786588 = new A.PhysicalKeyboardKey(786588);
    B.PhysicalKeyboardKey_786589 = new A.PhysicalKeyboardKey(786589);
    B.PhysicalKeyboardKey_786608 = new A.PhysicalKeyboardKey(786608);
    B.PhysicalKeyboardKey_786609 = new A.PhysicalKeyboardKey(786609);
    B.PhysicalKeyboardKey_786610 = new A.PhysicalKeyboardKey(786610);
    B.PhysicalKeyboardKey_786611 = new A.PhysicalKeyboardKey(786611);
    B.PhysicalKeyboardKey_786612 = new A.PhysicalKeyboardKey(786612);
    B.PhysicalKeyboardKey_786613 = new A.PhysicalKeyboardKey(786613);
    B.PhysicalKeyboardKey_786614 = new A.PhysicalKeyboardKey(786614);
    B.PhysicalKeyboardKey_786615 = new A.PhysicalKeyboardKey(786615);
    B.PhysicalKeyboardKey_786616 = new A.PhysicalKeyboardKey(786616);
    B.PhysicalKeyboardKey_786637 = new A.PhysicalKeyboardKey(786637);
    B.PhysicalKeyboardKey_786639 = new A.PhysicalKeyboardKey(786639);
    B.PhysicalKeyboardKey_786661 = new A.PhysicalKeyboardKey(786661);
    B.PhysicalKeyboardKey_786819 = new A.PhysicalKeyboardKey(786819);
    B.PhysicalKeyboardKey_786820 = new A.PhysicalKeyboardKey(786820);
    B.PhysicalKeyboardKey_786822 = new A.PhysicalKeyboardKey(786822);
    B.PhysicalKeyboardKey_786826 = new A.PhysicalKeyboardKey(786826);
    B.PhysicalKeyboardKey_786829 = new A.PhysicalKeyboardKey(786829);
    B.PhysicalKeyboardKey_786830 = new A.PhysicalKeyboardKey(786830);
    B.PhysicalKeyboardKey_786834 = new A.PhysicalKeyboardKey(786834);
    B.PhysicalKeyboardKey_786836 = new A.PhysicalKeyboardKey(786836);
    B.PhysicalKeyboardKey_786838 = new A.PhysicalKeyboardKey(786838);
    B.PhysicalKeyboardKey_786844 = new A.PhysicalKeyboardKey(786844);
    B.PhysicalKeyboardKey_786846 = new A.PhysicalKeyboardKey(786846);
    B.PhysicalKeyboardKey_786847 = new A.PhysicalKeyboardKey(786847);
    B.PhysicalKeyboardKey_786850 = new A.PhysicalKeyboardKey(786850);
    B.PhysicalKeyboardKey_786855 = new A.PhysicalKeyboardKey(786855);
    B.PhysicalKeyboardKey_786859 = new A.PhysicalKeyboardKey(786859);
    B.PhysicalKeyboardKey_786862 = new A.PhysicalKeyboardKey(786862);
    B.PhysicalKeyboardKey_786865 = new A.PhysicalKeyboardKey(786865);
    B.PhysicalKeyboardKey_786871 = new A.PhysicalKeyboardKey(786871);
    B.PhysicalKeyboardKey_786891 = new A.PhysicalKeyboardKey(786891);
    B.PhysicalKeyboardKey_786945 = new A.PhysicalKeyboardKey(786945);
    B.PhysicalKeyboardKey_786947 = new A.PhysicalKeyboardKey(786947);
    B.PhysicalKeyboardKey_786951 = new A.PhysicalKeyboardKey(786951);
    B.PhysicalKeyboardKey_786952 = new A.PhysicalKeyboardKey(786952);
    B.PhysicalKeyboardKey_786977 = new A.PhysicalKeyboardKey(786977);
    B.PhysicalKeyboardKey_786979 = new A.PhysicalKeyboardKey(786979);
    B.PhysicalKeyboardKey_786980 = new A.PhysicalKeyboardKey(786980);
    B.PhysicalKeyboardKey_786981 = new A.PhysicalKeyboardKey(786981);
    B.PhysicalKeyboardKey_786982 = new A.PhysicalKeyboardKey(786982);
    B.PhysicalKeyboardKey_786983 = new A.PhysicalKeyboardKey(786983);
    B.PhysicalKeyboardKey_786986 = new A.PhysicalKeyboardKey(786986);
    B.PhysicalKeyboardKey_786989 = new A.PhysicalKeyboardKey(786989);
    B.PhysicalKeyboardKey_786990 = new A.PhysicalKeyboardKey(786990);
    B.PhysicalKeyboardKey_786994 = new A.PhysicalKeyboardKey(786994);
    B.PhysicalKeyboardKey_787065 = new A.PhysicalKeyboardKey(787065);
    B.PhysicalKeyboardKey_787081 = new A.PhysicalKeyboardKey(787081);
    B.PhysicalKeyboardKey_787083 = new A.PhysicalKeyboardKey(787083);
    B.PhysicalKeyboardKey_787084 = new A.PhysicalKeyboardKey(787084);
    B.PhysicalKeyboardKey_787101 = new A.PhysicalKeyboardKey(787101);
    B.PhysicalKeyboardKey_787103 = new A.PhysicalKeyboardKey(787103);
    B.Map_arCny = new A.GeneralConstantMap([16, B.PhysicalKeyboardKey_16, 17, B.PhysicalKeyboardKey_17, 18, B.PhysicalKeyboardKey_18, 19, B.PhysicalKeyboardKey_19, 20, B.PhysicalKeyboardKey_20, 21, B.PhysicalKeyboardKey_21, 22, B.PhysicalKeyboardKey_22, 23, B.PhysicalKeyboardKey_23, 24, B.PhysicalKeyboardKey_24, 65666, B.PhysicalKeyboardKey_65666, 65667, B.PhysicalKeyboardKey_65667, 65717, B.PhysicalKeyboardKey_65717, 392961, B.PhysicalKeyboardKey_392961, 392962, B.PhysicalKeyboardKey_392962, 392963, B.PhysicalKeyboardKey_392963, 392964, B.PhysicalKeyboardKey_392964, 392965, B.PhysicalKeyboardKey_392965, 392966, B.PhysicalKeyboardKey_392966, 392967, B.PhysicalKeyboardKey_392967, 392968, B.PhysicalKeyboardKey_392968, 392969, B.PhysicalKeyboardKey_392969, 392970, B.PhysicalKeyboardKey_392970, 392971, B.PhysicalKeyboardKey_392971, 392972, B.PhysicalKeyboardKey_392972, 392973, B.PhysicalKeyboardKey_392973, 392974, B.PhysicalKeyboardKey_392974, 392975, B.PhysicalKeyboardKey_392975, 392976, B.PhysicalKeyboardKey_392976, 392977, B.PhysicalKeyboardKey_392977, 392978, B.PhysicalKeyboardKey_392978, 392979, B.PhysicalKeyboardKey_392979, 392980, B.PhysicalKeyboardKey_392980, 392981, B.PhysicalKeyboardKey_392981, 392982, B.PhysicalKeyboardKey_392982, 392983, B.PhysicalKeyboardKey_392983, 392984, B.PhysicalKeyboardKey_392984, 392985, B.PhysicalKeyboardKey_392985, 392986, B.PhysicalKeyboardKey_392986, 392987, B.PhysicalKeyboardKey_392987, 392988, B.PhysicalKeyboardKey_392988, 392989, B.PhysicalKeyboardKey_392989, 392990, B.PhysicalKeyboardKey_392990, 392991, B.PhysicalKeyboardKey_392991, 458752, B.PhysicalKeyboardKey_458752, 458753, B.PhysicalKeyboardKey_458753, 458754, B.PhysicalKeyboardKey_458754, 458755, B.PhysicalKeyboardKey_458755, 458756, B.PhysicalKeyboardKey_458756, 458757, B.PhysicalKeyboardKey_458757, 458758, B.PhysicalKeyboardKey_458758, 458759, B.PhysicalKeyboardKey_458759, 458760, B.PhysicalKeyboardKey_458760, 458761, B.PhysicalKeyboardKey_458761, 458762, B.PhysicalKeyboardKey_458762, 458763, B.PhysicalKeyboardKey_458763, 458764, B.PhysicalKeyboardKey_458764, 458765, B.PhysicalKeyboardKey_458765, 458766, B.PhysicalKeyboardKey_458766, 458767, B.PhysicalKeyboardKey_458767, 458768, B.PhysicalKeyboardKey_458768, 458769, B.PhysicalKeyboardKey_458769, 458770, B.PhysicalKeyboardKey_458770, 458771, B.PhysicalKeyboardKey_458771, 458772, B.PhysicalKeyboardKey_458772, 458773, B.PhysicalKeyboardKey_458773, 458774, B.PhysicalKeyboardKey_458774, 458775, B.PhysicalKeyboardKey_458775, 458776, B.PhysicalKeyboardKey_458776, 458777, B.PhysicalKeyboardKey_458777, 458778, B.PhysicalKeyboardKey_458778, 458779, B.PhysicalKeyboardKey_458779, 458780, B.PhysicalKeyboardKey_458780, 458781, B.PhysicalKeyboardKey_458781, 458782, B.PhysicalKeyboardKey_458782, 458783, B.PhysicalKeyboardKey_458783, 458784, B.PhysicalKeyboardKey_458784, 458785, B.PhysicalKeyboardKey_458785, 458786, B.PhysicalKeyboardKey_458786, 458787, B.PhysicalKeyboardKey_458787, 458788, B.PhysicalKeyboardKey_458788, 458789, B.PhysicalKeyboardKey_458789, 458790, B.PhysicalKeyboardKey_458790, 458791, B.PhysicalKeyboardKey_458791, 458792, B.PhysicalKeyboardKey_458792, 458793, B.PhysicalKeyboardKey_458793, 458794, B.PhysicalKeyboardKey_458794, 458795, B.PhysicalKeyboardKey_458795, 458796, B.PhysicalKeyboardKey_458796, 458797, B.PhysicalKeyboardKey_458797, 458798, B.PhysicalKeyboardKey_458798, 458799, B.PhysicalKeyboardKey_458799, 458800, B.PhysicalKeyboardKey_458800, 458801, B.PhysicalKeyboardKey_458801, 458803, B.PhysicalKeyboardKey_458803, 458804, B.PhysicalKeyboardKey_458804, 458805, B.PhysicalKeyboardKey_458805, 458806, B.PhysicalKeyboardKey_458806, 458807, B.PhysicalKeyboardKey_458807, 458808, B.PhysicalKeyboardKey_458808, 458809, B.PhysicalKeyboardKey_458809, 458810, B.PhysicalKeyboardKey_458810, 458811, B.PhysicalKeyboardKey_458811, 458812, B.PhysicalKeyboardKey_458812, 458813, B.PhysicalKeyboardKey_458813, 458814, B.PhysicalKeyboardKey_458814, 458815, B.PhysicalKeyboardKey_458815, 458816, B.PhysicalKeyboardKey_458816, 458817, B.PhysicalKeyboardKey_458817, 458818, B.PhysicalKeyboardKey_458818, 458819, B.PhysicalKeyboardKey_458819, 458820, B.PhysicalKeyboardKey_458820, 458821, B.PhysicalKeyboardKey_458821, 458822, B.PhysicalKeyboardKey_458822, 458823, B.PhysicalKeyboardKey_458823, 458824, B.PhysicalKeyboardKey_458824, 458825, B.PhysicalKeyboardKey_458825, 458826, B.PhysicalKeyboardKey_458826, 458827, B.PhysicalKeyboardKey_458827, 458828, B.PhysicalKeyboardKey_458828, 458829, B.PhysicalKeyboardKey_458829, 458830, B.PhysicalKeyboardKey_458830, 458831, B.PhysicalKeyboardKey_458831, 458832, B.PhysicalKeyboardKey_458832, 458833, B.PhysicalKeyboardKey_458833, 458834, B.PhysicalKeyboardKey_458834, 458835, B.PhysicalKeyboardKey_458835, 458836, B.PhysicalKeyboardKey_458836, 458837, B.PhysicalKeyboardKey_458837, 458838, B.PhysicalKeyboardKey_458838, 458839, B.PhysicalKeyboardKey_458839, 458840, B.PhysicalKeyboardKey_458840, 458841, B.PhysicalKeyboardKey_458841, 458842, B.PhysicalKeyboardKey_458842, 458843, B.PhysicalKeyboardKey_458843, 458844, B.PhysicalKeyboardKey_458844, 458845, B.PhysicalKeyboardKey_458845, 458846, B.PhysicalKeyboardKey_458846, 458847, B.PhysicalKeyboardKey_458847, 458848, B.PhysicalKeyboardKey_458848, 458849, B.PhysicalKeyboardKey_458849, 458850, B.PhysicalKeyboardKey_458850, 458851, B.PhysicalKeyboardKey_458851, 458852, B.PhysicalKeyboardKey_458852, 458853, B.PhysicalKeyboardKey_458853, 458854, B.PhysicalKeyboardKey_458854, 458855, B.PhysicalKeyboardKey_458855, 458856, B.PhysicalKeyboardKey_458856, 458857, B.PhysicalKeyboardKey_458857, 458858, B.PhysicalKeyboardKey_458858, 458859, B.PhysicalKeyboardKey_458859, 458860, B.PhysicalKeyboardKey_458860, 458861, B.PhysicalKeyboardKey_458861, 458862, B.PhysicalKeyboardKey_458862, 458863, B.PhysicalKeyboardKey_458863, 458864, B.PhysicalKeyboardKey_458864, 458865, B.PhysicalKeyboardKey_458865, 458866, B.PhysicalKeyboardKey_458866, 458867, B.PhysicalKeyboardKey_458867, 458868, B.PhysicalKeyboardKey_458868, 458869, B.PhysicalKeyboardKey_458869, 458871, B.PhysicalKeyboardKey_458871, 458873, B.PhysicalKeyboardKey_458873, 458874, B.PhysicalKeyboardKey_458874, 458875, B.PhysicalKeyboardKey_458875, 458876, B.PhysicalKeyboardKey_458876, 458877, B.PhysicalKeyboardKey_458877, 458878, B.PhysicalKeyboardKey_458878, 458879, B.PhysicalKeyboardKey_458879, 458880, B.PhysicalKeyboardKey_458880, 458881, B.PhysicalKeyboardKey_458881, 458885, B.PhysicalKeyboardKey_458885, 458887, B.PhysicalKeyboardKey_458887, 458888, B.PhysicalKeyboardKey_458888, 458889, B.PhysicalKeyboardKey_458889, 458890, B.PhysicalKeyboardKey_458890, 458891, B.PhysicalKeyboardKey_458891, 458896, B.PhysicalKeyboardKey_458896, 458897, B.PhysicalKeyboardKey_458897, 458898, B.PhysicalKeyboardKey_458898, 458899, B.PhysicalKeyboardKey_458899, 458900, B.PhysicalKeyboardKey_458900, 458907, B.PhysicalKeyboardKey_458907, 458915, B.PhysicalKeyboardKey_458915, 458934, B.PhysicalKeyboardKey_458934, 458935, B.PhysicalKeyboardKey_458935, 458939, B.PhysicalKeyboardKey_458939, 458960, B.PhysicalKeyboardKey_458960, 458961, B.PhysicalKeyboardKey_458961, 458962, B.PhysicalKeyboardKey_458962, 458963, B.PhysicalKeyboardKey_458963, 458964, B.PhysicalKeyboardKey_458964, 458967, B.PhysicalKeyboardKey_458967, 458968, B.PhysicalKeyboardKey_458968, 458969, B.PhysicalKeyboardKey_458969, 458976, B.PhysicalKeyboardKey_458976, 458977, B.PhysicalKeyboardKey_458977, 458978, B.PhysicalKeyboardKey_458978, 458979, B.PhysicalKeyboardKey_458979, 458980, B.PhysicalKeyboardKey_458980, 458981, B.PhysicalKeyboardKey_458981, 458982, B.PhysicalKeyboardKey_458982, 458983, B.PhysicalKeyboardKey_458983, 786528, B.PhysicalKeyboardKey_786528, 786529, B.PhysicalKeyboardKey_786529, 786543, B.PhysicalKeyboardKey_786543, 786544, B.PhysicalKeyboardKey_786544, 786546, B.PhysicalKeyboardKey_786546, 786547, B.PhysicalKeyboardKey_786547, 786548, B.PhysicalKeyboardKey_786548, 786549, B.PhysicalKeyboardKey_786549, 786553, B.PhysicalKeyboardKey_786553, 786554, B.PhysicalKeyboardKey_786554, 786563, B.PhysicalKeyboardKey_786563, 786572, B.PhysicalKeyboardKey_786572, 786573, B.PhysicalKeyboardKey_786573, 786580, B.PhysicalKeyboardKey_786580, 786588, B.PhysicalKeyboardKey_786588, 786589, B.PhysicalKeyboardKey_786589, 786608, B.PhysicalKeyboardKey_786608, 786609, B.PhysicalKeyboardKey_786609, 786610, B.PhysicalKeyboardKey_786610, 786611, B.PhysicalKeyboardKey_786611, 786612, B.PhysicalKeyboardKey_786612, 786613, B.PhysicalKeyboardKey_786613, 786614, B.PhysicalKeyboardKey_786614, 786615, B.PhysicalKeyboardKey_786615, 786616, B.PhysicalKeyboardKey_786616, 786637, B.PhysicalKeyboardKey_786637, 786639, B.PhysicalKeyboardKey_786639, 786661, B.PhysicalKeyboardKey_786661, 786819, B.PhysicalKeyboardKey_786819, 786820, B.PhysicalKeyboardKey_786820, 786822, B.PhysicalKeyboardKey_786822, 786826, B.PhysicalKeyboardKey_786826, 786829, B.PhysicalKeyboardKey_786829, 786830, B.PhysicalKeyboardKey_786830, 786834, B.PhysicalKeyboardKey_786834, 786836, B.PhysicalKeyboardKey_786836, 786838, B.PhysicalKeyboardKey_786838, 786844, B.PhysicalKeyboardKey_786844, 786846, B.PhysicalKeyboardKey_786846, 786847, B.PhysicalKeyboardKey_786847, 786850, B.PhysicalKeyboardKey_786850, 786855, B.PhysicalKeyboardKey_786855, 786859, B.PhysicalKeyboardKey_786859, 786862, B.PhysicalKeyboardKey_786862, 786865, B.PhysicalKeyboardKey_786865, 786871, B.PhysicalKeyboardKey_786871, 786891, B.PhysicalKeyboardKey_786891, 786945, B.PhysicalKeyboardKey_786945, 786947, B.PhysicalKeyboardKey_786947, 786951, B.PhysicalKeyboardKey_786951, 786952, B.PhysicalKeyboardKey_786952, 786977, B.PhysicalKeyboardKey_786977, 786979, B.PhysicalKeyboardKey_786979, 786980, B.PhysicalKeyboardKey_786980, 786981, B.PhysicalKeyboardKey_786981, 786982, B.PhysicalKeyboardKey_786982, 786983, B.PhysicalKeyboardKey_786983, 786986, B.PhysicalKeyboardKey_786986, 786989, B.PhysicalKeyboardKey_786989, 786990, B.PhysicalKeyboardKey_786990, 786994, B.PhysicalKeyboardKey_786994, 787065, B.PhysicalKeyboardKey_787065, 787081, B.PhysicalKeyboardKey_787081, 787083, B.PhysicalKeyboardKey_787083, 787084, B.PhysicalKeyboardKey_787084, 787101, B.PhysicalKeyboardKey_787101, 787103, B.PhysicalKeyboardKey_787103], A.findType("GeneralConstantMap<int,PhysicalKeyboardKey>"));
    B.Object_empty = {};
    B.Map_empty = new A.ConstantStringMap(B.Object_empty, [], A.findType("ConstantStringMap<String,List<String>>"));
    B.Object_iRg = {BU: 0, DD: 1, FX: 2, TP: 3, YD: 4, ZR: 5};
    B.Map_jnSVN = new A.ConstantStringMap(B.Object_iRg, ["MM", "DE", "FR", "TL", "YE", "CD"], type$.ConstantStringMap_String_String);
    B.Object_2Px = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Esc: 49, Escape: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    B.Map_ntMYA = new A.ConstantStringMap(B.Object_2Px, [458907, 458873, 458978, 458982, 458833, 458832, 458831, 458834, 458881, 458879, 458880, 458805, 458801, 458794, 458799, 458800, 786544, 786543, 786980, 786986, 786981, 786979, 786983, 786977, 786982, 458809, 458806, 458853, 458976, 458980, 458890, 458876, 458875, 458828, 458791, 458782, 458783, 458784, 458785, 458786, 458787, 458788, 458789, 458790, 65717, 786616, 458829, 458792, 458798, 458793, 458793, 458810, 458819, 458820, 458821, 458856, 458857, 458858, 458859, 458860, 458861, 458862, 458811, 458863, 458864, 458865, 458866, 458867, 458812, 458813, 458814, 458815, 458816, 458817, 458818, 458878, 18, 19, 392961, 392970, 392971, 392972, 392973, 392974, 392975, 392976, 392962, 392963, 392964, 392965, 392966, 392967, 392968, 392969, 392977, 392978, 392979, 392980, 392981, 392982, 392983, 392984, 392985, 392986, 392987, 392988, 392989, 392990, 392991, 458869, 458826, 16, 458825, 458852, 458887, 458889, 458888, 458756, 458757, 458758, 458759, 458760, 458761, 458762, 458763, 458764, 458765, 458766, 458767, 458768, 458769, 458770, 458771, 458772, 458773, 458774, 458775, 458776, 458777, 458778, 458779, 458780, 458781, 787101, 458896, 458897, 458898, 458899, 458900, 786836, 786834, 786891, 786847, 786826, 786865, 787083, 787081, 787084, 786611, 786609, 786608, 786637, 786610, 786612, 786819, 786615, 786613, 786614, 458979, 458983, 24, 458797, 458891, 458835, 458850, 458841, 458842, 458843, 458844, 458845, 458846, 458847, 458848, 458849, 458839, 458939, 458968, 458969, 458885, 458851, 458836, 458840, 458855, 458963, 458962, 458961, 458960, 458964, 458837, 458934, 458935, 458838, 458868, 458830, 458827, 458877, 458824, 458807, 458854, 458822, 23, 458915, 458804, 21, 458823, 458871, 786850, 458803, 458977, 458981, 787103, 458808, 65666, 458796, 17, 20, 458795, 22, 458874, 65667, 786994], type$.ConstantStringMap_String_int);
    B.Object_4AN = {AVRInput: 0, AVRPower: 1, Accel: 2, Accept: 3, Again: 4, AllCandidates: 5, Alphanumeric: 6, AltGraph: 7, AppSwitch: 8, ArrowDown: 9, ArrowLeft: 10, ArrowRight: 11, ArrowUp: 12, Attn: 13, AudioBalanceLeft: 14, AudioBalanceRight: 15, AudioBassBoostDown: 16, AudioBassBoostToggle: 17, AudioBassBoostUp: 18, AudioFaderFront: 19, AudioFaderRear: 20, AudioSurroundModeNext: 21, AudioTrebleDown: 22, AudioTrebleUp: 23, AudioVolumeDown: 24, AudioVolumeMute: 25, AudioVolumeUp: 26, Backspace: 27, BrightnessDown: 28, BrightnessUp: 29, BrowserBack: 30, BrowserFavorites: 31, BrowserForward: 32, BrowserHome: 33, BrowserRefresh: 34, BrowserSearch: 35, BrowserStop: 36, Call: 37, Camera: 38, CameraFocus: 39, Cancel: 40, CapsLock: 41, ChannelDown: 42, ChannelUp: 43, Clear: 44, Close: 45, ClosedCaptionToggle: 46, CodeInput: 47, ColorF0Red: 48, ColorF1Green: 49, ColorF2Yellow: 50, ColorF3Blue: 51, ColorF4Grey: 52, ColorF5Brown: 53, Compose: 54, ContextMenu: 55, Convert: 56, Copy: 57, CrSel: 58, Cut: 59, DVR: 60, Delete: 61, Dimmer: 62, DisplaySwap: 63, Eisu: 64, Eject: 65, End: 66, EndCall: 67, Enter: 68, EraseEof: 69, Esc: 70, Escape: 71, ExSel: 72, Execute: 73, Exit: 74, F1: 75, F10: 76, F11: 77, F12: 78, F13: 79, F14: 80, F15: 81, F16: 82, F17: 83, F18: 84, F19: 85, F2: 86, F20: 87, F21: 88, F22: 89, F23: 90, F24: 91, F3: 92, F4: 93, F5: 94, F6: 95, F7: 96, F8: 97, F9: 98, FavoriteClear0: 99, FavoriteClear1: 100, FavoriteClear2: 101, FavoriteClear3: 102, FavoriteRecall0: 103, FavoriteRecall1: 104, FavoriteRecall2: 105, FavoriteRecall3: 106, FavoriteStore0: 107, FavoriteStore1: 108, FavoriteStore2: 109, FavoriteStore3: 110, FinalMode: 111, Find: 112, Fn: 113, FnLock: 114, GoBack: 115, GoHome: 116, GroupFirst: 117, GroupLast: 118, GroupNext: 119, GroupPrevious: 120, Guide: 121, GuideNextDay: 122, GuidePreviousDay: 123, HangulMode: 124, HanjaMode: 125, Hankaku: 126, HeadsetHook: 127, Help: 128, Hibernate: 129, Hiragana: 130, HiraganaKatakana: 131, Home: 132, Hyper: 133, Info: 134, Insert: 135, InstantReplay: 136, JunjaMode: 137, KanaMode: 138, KanjiMode: 139, Katakana: 140, Key11: 141, Key12: 142, LastNumberRedial: 143, LaunchApplication1: 144, LaunchApplication2: 145, LaunchAssistant: 146, LaunchCalendar: 147, LaunchContacts: 148, LaunchControlPanel: 149, LaunchMail: 150, LaunchMediaPlayer: 151, LaunchMusicPlayer: 152, LaunchPhone: 153, LaunchScreenSaver: 154, LaunchSpreadsheet: 155, LaunchWebBrowser: 156, LaunchWebCam: 157, LaunchWordProcessor: 158, Link: 159, ListProgram: 160, LiveContent: 161, Lock: 162, LogOff: 163, MailForward: 164, MailReply: 165, MailSend: 166, MannerMode: 167, MediaApps: 168, MediaAudioTrack: 169, MediaClose: 170, MediaFastForward: 171, MediaLast: 172, MediaPause: 173, MediaPlay: 174, MediaPlayPause: 175, MediaRecord: 176, MediaRewind: 177, MediaSkip: 178, MediaSkipBackward: 179, MediaSkipForward: 180, MediaStepBackward: 181, MediaStepForward: 182, MediaStop: 183, MediaTopMenu: 184, MediaTrackNext: 185, MediaTrackPrevious: 186, MicrophoneToggle: 187, MicrophoneVolumeDown: 188, MicrophoneVolumeMute: 189, MicrophoneVolumeUp: 190, ModeChange: 191, NavigateIn: 192, NavigateNext: 193, NavigateOut: 194, NavigatePrevious: 195, New: 196, NextCandidate: 197, NextFavoriteChannel: 198, NextUserProfile: 199, NonConvert: 200, Notification: 201, NumLock: 202, OnDemand: 203, Open: 204, PageDown: 205, PageUp: 206, Pairing: 207, Paste: 208, Pause: 209, PinPDown: 210, PinPMove: 211, PinPToggle: 212, PinPUp: 213, Play: 214, PlaySpeedDown: 215, PlaySpeedReset: 216, PlaySpeedUp: 217, Power: 218, PowerOff: 219, PreviousCandidate: 220, Print: 221, PrintScreen: 222, Process: 223, Props: 224, RandomToggle: 225, RcLowBattery: 226, RecordSpeedNext: 227, Redo: 228, RfBypass: 229, Romaji: 230, STBInput: 231, STBPower: 232, Save: 233, ScanChannelsToggle: 234, ScreenModeNext: 235, ScrollLock: 236, Select: 237, Settings: 238, ShiftLevel5: 239, SingleCandidate: 240, Soft1: 241, Soft2: 242, Soft3: 243, Soft4: 244, Soft5: 245, Soft6: 246, Soft7: 247, Soft8: 248, SpeechCorrectionList: 249, SpeechInputToggle: 250, SpellCheck: 251, SplitScreenToggle: 252, Standby: 253, Subtitle: 254, Super: 255, Symbol: 256, SymbolLock: 257, TV: 258, TV3DMode: 259, TVAntennaCable: 260, TVAudioDescription: 261, TVAudioDescriptionMixDown: 262, TVAudioDescriptionMixUp: 263, TVContentsMenu: 264, TVDataService: 265, TVInput: 266, TVInputComponent1: 267, TVInputComponent2: 268, TVInputComposite1: 269, TVInputComposite2: 270, TVInputHDMI1: 271, TVInputHDMI2: 272, TVInputHDMI3: 273, TVInputHDMI4: 274, TVInputVGA1: 275, TVMediaContext: 276, TVNetwork: 277, TVNumberEntry: 278, TVPower: 279, TVRadioService: 280, TVSatellite: 281, TVSatelliteBS: 282, TVSatelliteCS: 283, TVSatelliteToggle: 284, TVTerrestrialAnalog: 285, TVTerrestrialDigital: 286, TVTimer: 287, Tab: 288, Teletext: 289, Undo: 290, Unidentified: 291, VideoModeNext: 292, VoiceDial: 293, WakeUp: 294, Wink: 295, Zenkaku: 296, ZenkakuHankaku: 297, ZoomIn: 298, ZoomOut: 299, ZoomToggle: 300};
    B.Map_o06v8 = new A.ConstantStringMap(B.Object_4AN, [4294970632, 4294970633, 4294967553, 4294968577, 4294968578, 4294969089, 4294969090, 4294967555, 4294971393, 4294968065, 4294968066, 4294968067, 4294968068, 4294968579, 4294970625, 4294970626, 4294970627, 4294970882, 4294970628, 4294970629, 4294970630, 4294970631, 4294970884, 4294970885, 4294969871, 4294969873, 4294969872, 4294967304, 4294968833, 4294968834, 4294970369, 4294970370, 4294970371, 4294970372, 4294970373, 4294970374, 4294970375, 4294971394, 4294968835, 4294971395, 4294968580, 4294967556, 4294970634, 4294970635, 4294968321, 4294969857, 4294970642, 4294969091, 4294970636, 4294970637, 4294970638, 4294970639, 4294970640, 4294970641, 4294969092, 4294968581, 4294969093, 4294968322, 4294968323, 4294968324, 4294970703, 4294967423, 4294970643, 4294970644, 4294969108, 4294968836, 4294968069, 4294971396, 4294967309, 4294968325, 4294967323, 4294967323, 4294968326, 4294968582, 4294970645, 4294969345, 4294969354, 4294969355, 4294969356, 4294969357, 4294969358, 4294969359, 4294969360, 4294969361, 4294969362, 4294969363, 4294969346, 4294969364, 4294969365, 4294969366, 4294969367, 4294969368, 4294969347, 4294969348, 4294969349, 4294969350, 4294969351, 4294969352, 4294969353, 4294970646, 4294970647, 4294970648, 4294970649, 4294970650, 4294970651, 4294970652, 4294970653, 4294970654, 4294970655, 4294970656, 4294970657, 4294969094, 4294968583, 4294967558, 4294967559, 4294971397, 4294971398, 4294969095, 4294969096, 4294969097, 4294969098, 4294970658, 4294970659, 4294970660, 4294969105, 4294969106, 4294969109, 4294971399, 4294968584, 4294968841, 4294969110, 4294969111, 4294968070, 4294967560, 4294970661, 4294968327, 4294970662, 4294969107, 4294969112, 4294969113, 4294969114, 4294971905, 4294971906, 4294971400, 4294970118, 4294970113, 4294970126, 4294970114, 4294970124, 4294970127, 4294970115, 4294970116, 4294970117, 4294970125, 4294970119, 4294970120, 4294970121, 4294970122, 4294970123, 4294970663, 4294970664, 4294970665, 4294970666, 4294968837, 4294969858, 4294969859, 4294969860, 4294971402, 4294970667, 4294970704, 4294970715, 4294970668, 4294970669, 4294970670, 4294970671, 4294969861, 4294970672, 4294970673, 4294970674, 4294970705, 4294970706, 4294970707, 4294970708, 4294969863, 4294970709, 4294969864, 4294969865, 4294970886, 4294970887, 4294970889, 4294970888, 4294969099, 4294970710, 4294970711, 4294970712, 4294970713, 4294969866, 4294969100, 4294970675, 4294970676, 4294969101, 4294971401, 4294967562, 4294970677, 4294969867, 4294968071, 4294968072, 4294970714, 4294968328, 4294968585, 4294970678, 4294970679, 4294970680, 4294970681, 4294968586, 4294970682, 4294970683, 4294970684, 4294968838, 4294968839, 4294969102, 4294969868, 4294968840, 4294969103, 4294968587, 4294970685, 4294970686, 4294970687, 4294968329, 4294970688, 4294969115, 4294970693, 4294970694, 4294969869, 4294970689, 4294970690, 4294967564, 4294968588, 4294970691, 4294967569, 4294969104, 4294969601, 4294969602, 4294969603, 4294969604, 4294969605, 4294969606, 4294969607, 4294969608, 4294971137, 4294971138, 4294969870, 4294970692, 4294968842, 4294970695, 4294967566, 4294967567, 4294967568, 4294970697, 4294971649, 4294971650, 4294971651, 4294971652, 4294971653, 4294971654, 4294971655, 4294970698, 4294971656, 4294971657, 4294971658, 4294971659, 4294971660, 4294971661, 4294971662, 4294971663, 4294971664, 4294971665, 4294971666, 4294971667, 4294970699, 4294971668, 4294971669, 4294971670, 4294971671, 4294971672, 4294971673, 4294971674, 4294971675, 4294967305, 4294970696, 4294968330, 4294967297, 4294970700, 4294971403, 4294968843, 4294970701, 4294969116, 4294969117, 4294968589, 4294968590, 4294970702], type$.ConstantStringMap_String_int);
    B.Map_o0QDz = new A.ConstantStringMap(B.Object_4AN, [B.LogicalKeyboardKey_4294970632, B.LogicalKeyboardKey_4294970633, B.LogicalKeyboardKey_4294967553, B.LogicalKeyboardKey_4294968577, B.LogicalKeyboardKey_4294968578, B.LogicalKeyboardKey_4294969089, B.LogicalKeyboardKey_4294969090, B.LogicalKeyboardKey_4294967555, B.LogicalKeyboardKey_4294971393, B.LogicalKeyboardKey_4294968065, B.LogicalKeyboardKey_4294968066, B.LogicalKeyboardKey_4294968067, B.LogicalKeyboardKey_4294968068, B.LogicalKeyboardKey_4294968579, B.LogicalKeyboardKey_4294970625, B.LogicalKeyboardKey_4294970626, B.LogicalKeyboardKey_4294970627, B.LogicalKeyboardKey_4294970882, B.LogicalKeyboardKey_4294970628, B.LogicalKeyboardKey_4294970629, B.LogicalKeyboardKey_4294970630, B.LogicalKeyboardKey_4294970631, B.LogicalKeyboardKey_4294970884, B.LogicalKeyboardKey_4294970885, B.LogicalKeyboardKey_4294969871, B.LogicalKeyboardKey_4294969873, B.LogicalKeyboardKey_4294969872, B.LogicalKeyboardKey_4294967304, B.LogicalKeyboardKey_4294968833, B.LogicalKeyboardKey_4294968834, B.LogicalKeyboardKey_4294970369, B.LogicalKeyboardKey_4294970370, B.LogicalKeyboardKey_4294970371, B.LogicalKeyboardKey_4294970372, B.LogicalKeyboardKey_4294970373, B.LogicalKeyboardKey_4294970374, B.LogicalKeyboardKey_4294970375, B.LogicalKeyboardKey_4294971394, B.LogicalKeyboardKey_4294968835, B.LogicalKeyboardKey_4294971395, B.LogicalKeyboardKey_4294968580, B.LogicalKeyboardKey_4294967556, B.LogicalKeyboardKey_4294970634, B.LogicalKeyboardKey_4294970635, B.LogicalKeyboardKey_4294968321, B.LogicalKeyboardKey_4294969857, B.LogicalKeyboardKey_4294970642, B.LogicalKeyboardKey_4294969091, B.LogicalKeyboardKey_4294970636, B.LogicalKeyboardKey_4294970637, B.LogicalKeyboardKey_4294970638, B.LogicalKeyboardKey_4294970639, B.LogicalKeyboardKey_4294970640, B.LogicalKeyboardKey_4294970641, B.LogicalKeyboardKey_4294969092, B.LogicalKeyboardKey_4294968581, B.LogicalKeyboardKey_4294969093, B.LogicalKeyboardKey_4294968322, B.LogicalKeyboardKey_4294968323, B.LogicalKeyboardKey_4294968324, B.LogicalKeyboardKey_4294970703, B.LogicalKeyboardKey_4294967423, B.LogicalKeyboardKey_4294970643, B.LogicalKeyboardKey_4294970644, B.LogicalKeyboardKey_4294969108, B.LogicalKeyboardKey_4294968836, B.LogicalKeyboardKey_4294968069, B.LogicalKeyboardKey_4294971396, B.LogicalKeyboardKey_4294967309, B.LogicalKeyboardKey_4294968325, B.LogicalKeyboardKey_4294967323, B.LogicalKeyboardKey_4294967323, B.LogicalKeyboardKey_4294968326, B.LogicalKeyboardKey_4294968582, B.LogicalKeyboardKey_4294970645, B.LogicalKeyboardKey_4294969345, B.LogicalKeyboardKey_4294969354, B.LogicalKeyboardKey_4294969355, B.LogicalKeyboardKey_4294969356, B.LogicalKeyboardKey_4294969357, B.LogicalKeyboardKey_4294969358, B.LogicalKeyboardKey_4294969359, B.LogicalKeyboardKey_4294969360, B.LogicalKeyboardKey_4294969361, B.LogicalKeyboardKey_4294969362, B.LogicalKeyboardKey_4294969363, B.LogicalKeyboardKey_4294969346, B.LogicalKeyboardKey_4294969364, B.LogicalKeyboardKey_4294969365, B.LogicalKeyboardKey_4294969366, B.LogicalKeyboardKey_4294969367, B.LogicalKeyboardKey_4294969368, B.LogicalKeyboardKey_4294969347, B.LogicalKeyboardKey_4294969348, B.LogicalKeyboardKey_4294969349, B.LogicalKeyboardKey_4294969350, B.LogicalKeyboardKey_4294969351, B.LogicalKeyboardKey_4294969352, B.LogicalKeyboardKey_4294969353, B.LogicalKeyboardKey_4294970646, B.LogicalKeyboardKey_4294970647, B.LogicalKeyboardKey_4294970648, B.LogicalKeyboardKey_4294970649, B.LogicalKeyboardKey_4294970650, B.LogicalKeyboardKey_4294970651, B.LogicalKeyboardKey_4294970652, B.LogicalKeyboardKey_4294970653, B.LogicalKeyboardKey_4294970654, B.LogicalKeyboardKey_4294970655, B.LogicalKeyboardKey_4294970656, B.LogicalKeyboardKey_4294970657, B.LogicalKeyboardKey_4294969094, B.LogicalKeyboardKey_4294968583, B.LogicalKeyboardKey_4294967558, B.LogicalKeyboardKey_4294967559, B.LogicalKeyboardKey_4294971397, B.LogicalKeyboardKey_4294971398, B.LogicalKeyboardKey_4294969095, B.LogicalKeyboardKey_4294969096, B.LogicalKeyboardKey_4294969097, B.LogicalKeyboardKey_4294969098, B.LogicalKeyboardKey_4294970658, B.LogicalKeyboardKey_4294970659, B.LogicalKeyboardKey_4294970660, B.LogicalKeyboardKey_4294969105, B.LogicalKeyboardKey_4294969106, B.LogicalKeyboardKey_4294969109, B.LogicalKeyboardKey_4294971399, B.LogicalKeyboardKey_4294968584, B.LogicalKeyboardKey_4294968841, B.LogicalKeyboardKey_4294969110, B.LogicalKeyboardKey_4294969111, B.LogicalKeyboardKey_4294968070, B.LogicalKeyboardKey_4294967560, B.LogicalKeyboardKey_4294970661, B.LogicalKeyboardKey_4294968327, B.LogicalKeyboardKey_4294970662, B.LogicalKeyboardKey_4294969107, B.LogicalKeyboardKey_4294969112, B.LogicalKeyboardKey_4294969113, B.LogicalKeyboardKey_4294969114, B.LogicalKeyboardKey_4294971905, B.LogicalKeyboardKey_4294971906, B.LogicalKeyboardKey_4294971400, B.LogicalKeyboardKey_4294970118, B.LogicalKeyboardKey_4294970113, B.LogicalKeyboardKey_4294970126, B.LogicalKeyboardKey_4294970114, B.LogicalKeyboardKey_4294970124, B.LogicalKeyboardKey_4294970127, B.LogicalKeyboardKey_4294970115, B.LogicalKeyboardKey_4294970116, B.LogicalKeyboardKey_4294970117, B.LogicalKeyboardKey_4294970125, B.LogicalKeyboardKey_4294970119, B.LogicalKeyboardKey_4294970120, B.LogicalKeyboardKey_4294970121, B.LogicalKeyboardKey_4294970122, B.LogicalKeyboardKey_4294970123, B.LogicalKeyboardKey_4294970663, B.LogicalKeyboardKey_4294970664, B.LogicalKeyboardKey_4294970665, B.LogicalKeyboardKey_4294970666, B.LogicalKeyboardKey_4294968837, B.LogicalKeyboardKey_4294969858, B.LogicalKeyboardKey_4294969859, B.LogicalKeyboardKey_4294969860, B.LogicalKeyboardKey_4294971402, B.LogicalKeyboardKey_4294970667, B.LogicalKeyboardKey_4294970704, B.LogicalKeyboardKey_4294970715, B.LogicalKeyboardKey_4294970668, B.LogicalKeyboardKey_4294970669, B.LogicalKeyboardKey_4294970670, B.LogicalKeyboardKey_4294970671, B.LogicalKeyboardKey_4294969861, B.LogicalKeyboardKey_4294970672, B.LogicalKeyboardKey_4294970673, B.LogicalKeyboardKey_4294970674, B.LogicalKeyboardKey_4294970705, B.LogicalKeyboardKey_4294970706, B.LogicalKeyboardKey_4294970707, B.LogicalKeyboardKey_4294970708, B.LogicalKeyboardKey_4294969863, B.LogicalKeyboardKey_4294970709, B.LogicalKeyboardKey_4294969864, B.LogicalKeyboardKey_4294969865, B.LogicalKeyboardKey_4294970886, B.LogicalKeyboardKey_4294970887, B.LogicalKeyboardKey_4294970889, B.LogicalKeyboardKey_4294970888, B.LogicalKeyboardKey_4294969099, B.LogicalKeyboardKey_4294970710, B.LogicalKeyboardKey_4294970711, B.LogicalKeyboardKey_4294970712, B.LogicalKeyboardKey_4294970713, B.LogicalKeyboardKey_4294969866, B.LogicalKeyboardKey_4294969100, B.LogicalKeyboardKey_4294970675, B.LogicalKeyboardKey_4294970676, B.LogicalKeyboardKey_4294969101, B.LogicalKeyboardKey_4294971401, B.LogicalKeyboardKey_4294967562, B.LogicalKeyboardKey_4294970677, B.LogicalKeyboardKey_4294969867, B.LogicalKeyboardKey_4294968071, B.LogicalKeyboardKey_4294968072, B.LogicalKeyboardKey_4294970714, B.LogicalKeyboardKey_4294968328, B.LogicalKeyboardKey_4294968585, B.LogicalKeyboardKey_4294970678, B.LogicalKeyboardKey_4294970679, B.LogicalKeyboardKey_4294970680, B.LogicalKeyboardKey_4294970681, B.LogicalKeyboardKey_4294968586, B.LogicalKeyboardKey_4294970682, B.LogicalKeyboardKey_4294970683, B.LogicalKeyboardKey_4294970684, B.LogicalKeyboardKey_4294968838, B.LogicalKeyboardKey_4294968839, B.LogicalKeyboardKey_4294969102, B.LogicalKeyboardKey_4294969868, B.LogicalKeyboardKey_4294968840, B.LogicalKeyboardKey_4294969103, B.LogicalKeyboardKey_4294968587, B.LogicalKeyboardKey_4294970685, B.LogicalKeyboardKey_4294970686, B.LogicalKeyboardKey_4294970687, B.LogicalKeyboardKey_4294968329, B.LogicalKeyboardKey_4294970688, B.LogicalKeyboardKey_4294969115, B.LogicalKeyboardKey_4294970693, B.LogicalKeyboardKey_4294970694, B.LogicalKeyboardKey_4294969869, B.LogicalKeyboardKey_4294970689, B.LogicalKeyboardKey_4294970690, B.LogicalKeyboardKey_4294967564, B.LogicalKeyboardKey_4294968588, B.LogicalKeyboardKey_4294970691, B.LogicalKeyboardKey_4294967569, B.LogicalKeyboardKey_4294969104, B.LogicalKeyboardKey_4294969601, B.LogicalKeyboardKey_4294969602, B.LogicalKeyboardKey_4294969603, B.LogicalKeyboardKey_4294969604, B.LogicalKeyboardKey_4294969605, B.LogicalKeyboardKey_4294969606, B.LogicalKeyboardKey_4294969607, B.LogicalKeyboardKey_4294969608, B.LogicalKeyboardKey_4294971137, B.LogicalKeyboardKey_4294971138, B.LogicalKeyboardKey_4294969870, B.LogicalKeyboardKey_4294970692, B.LogicalKeyboardKey_4294968842, B.LogicalKeyboardKey_4294970695, B.LogicalKeyboardKey_4294967566, B.LogicalKeyboardKey_4294967567, B.LogicalKeyboardKey_4294967568, B.LogicalKeyboardKey_4294970697, B.LogicalKeyboardKey_4294971649, B.LogicalKeyboardKey_4294971650, B.LogicalKeyboardKey_4294971651, B.LogicalKeyboardKey_4294971652, B.LogicalKeyboardKey_4294971653, B.LogicalKeyboardKey_4294971654, B.LogicalKeyboardKey_4294971655, B.LogicalKeyboardKey_4294970698, B.LogicalKeyboardKey_4294971656, B.LogicalKeyboardKey_4294971657, B.LogicalKeyboardKey_4294971658, B.LogicalKeyboardKey_4294971659, B.LogicalKeyboardKey_4294971660, B.LogicalKeyboardKey_4294971661, B.LogicalKeyboardKey_4294971662, B.LogicalKeyboardKey_4294971663, B.LogicalKeyboardKey_4294971664, B.LogicalKeyboardKey_4294971665, B.LogicalKeyboardKey_4294971666, B.LogicalKeyboardKey_4294971667, B.LogicalKeyboardKey_4294970699, B.LogicalKeyboardKey_4294971668, B.LogicalKeyboardKey_4294971669, B.LogicalKeyboardKey_4294971670, B.LogicalKeyboardKey_4294971671, B.LogicalKeyboardKey_4294971672, B.LogicalKeyboardKey_4294971673, B.LogicalKeyboardKey_4294971674, B.LogicalKeyboardKey_4294971675, B.LogicalKeyboardKey_4294967305, B.LogicalKeyboardKey_4294970696, B.LogicalKeyboardKey_4294968330, B.LogicalKeyboardKey_4294967297, B.LogicalKeyboardKey_4294970700, B.LogicalKeyboardKey_4294971403, B.LogicalKeyboardKey_4294968843, B.LogicalKeyboardKey_4294970701, B.LogicalKeyboardKey_4294969116, B.LogicalKeyboardKey_4294969117, B.LogicalKeyboardKey_4294968589, B.LogicalKeyboardKey_4294968590, B.LogicalKeyboardKey_4294970702], A.findType("ConstantStringMap<String,LogicalKeyboardKey>"));
    B.Object_type_0 = {type: 0};
    B.Map_wEY7l = new A.ConstantStringMap(B.Object_type_0, ["line"], type$.ConstantStringMap_String_String);
    B.Object_e3c = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Escape: 49, Esc: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    B.Map_xwOPX = new A.ConstantStringMap(B.Object_e3c, [B.PhysicalKeyboardKey_458907, B.PhysicalKeyboardKey_458873, B.PhysicalKeyboardKey_458978, B.PhysicalKeyboardKey_458982, B.PhysicalKeyboardKey_458833, B.PhysicalKeyboardKey_458832, B.PhysicalKeyboardKey_458831, B.PhysicalKeyboardKey_458834, B.PhysicalKeyboardKey_458881, B.PhysicalKeyboardKey_458879, B.PhysicalKeyboardKey_458880, B.PhysicalKeyboardKey_458805, B.PhysicalKeyboardKey_458801, B.PhysicalKeyboardKey_458794, B.PhysicalKeyboardKey_458799, B.PhysicalKeyboardKey_458800, B.PhysicalKeyboardKey_786544, B.PhysicalKeyboardKey_786543, B.PhysicalKeyboardKey_786980, B.PhysicalKeyboardKey_786986, B.PhysicalKeyboardKey_786981, B.PhysicalKeyboardKey_786979, B.PhysicalKeyboardKey_786983, B.PhysicalKeyboardKey_786977, B.PhysicalKeyboardKey_786982, B.PhysicalKeyboardKey_458809, B.PhysicalKeyboardKey_458806, B.PhysicalKeyboardKey_458853, B.PhysicalKeyboardKey_458976, B.PhysicalKeyboardKey_458980, B.PhysicalKeyboardKey_458890, B.PhysicalKeyboardKey_458876, B.PhysicalKeyboardKey_458875, B.PhysicalKeyboardKey_458828, B.PhysicalKeyboardKey_458791, B.PhysicalKeyboardKey_458782, B.PhysicalKeyboardKey_458783, B.PhysicalKeyboardKey_458784, B.PhysicalKeyboardKey_458785, B.PhysicalKeyboardKey_458786, B.PhysicalKeyboardKey_458787, B.PhysicalKeyboardKey_458788, B.PhysicalKeyboardKey_458789, B.PhysicalKeyboardKey_458790, B.PhysicalKeyboardKey_65717, B.PhysicalKeyboardKey_786616, B.PhysicalKeyboardKey_458829, B.PhysicalKeyboardKey_458792, B.PhysicalKeyboardKey_458798, B.PhysicalKeyboardKey_458793, B.PhysicalKeyboardKey_458793, B.PhysicalKeyboardKey_458810, B.PhysicalKeyboardKey_458819, B.PhysicalKeyboardKey_458820, B.PhysicalKeyboardKey_458821, B.PhysicalKeyboardKey_458856, B.PhysicalKeyboardKey_458857, B.PhysicalKeyboardKey_458858, B.PhysicalKeyboardKey_458859, B.PhysicalKeyboardKey_458860, B.PhysicalKeyboardKey_458861, B.PhysicalKeyboardKey_458862, B.PhysicalKeyboardKey_458811, B.PhysicalKeyboardKey_458863, B.PhysicalKeyboardKey_458864, B.PhysicalKeyboardKey_458865, B.PhysicalKeyboardKey_458866, B.PhysicalKeyboardKey_458867, B.PhysicalKeyboardKey_458812, B.PhysicalKeyboardKey_458813, B.PhysicalKeyboardKey_458814, B.PhysicalKeyboardKey_458815, B.PhysicalKeyboardKey_458816, B.PhysicalKeyboardKey_458817, B.PhysicalKeyboardKey_458818, B.PhysicalKeyboardKey_458878, B.PhysicalKeyboardKey_18, B.PhysicalKeyboardKey_19, B.PhysicalKeyboardKey_392961, B.PhysicalKeyboardKey_392970, B.PhysicalKeyboardKey_392971, B.PhysicalKeyboardKey_392972, B.PhysicalKeyboardKey_392973, B.PhysicalKeyboardKey_392974, B.PhysicalKeyboardKey_392975, B.PhysicalKeyboardKey_392976, B.PhysicalKeyboardKey_392962, B.PhysicalKeyboardKey_392963, B.PhysicalKeyboardKey_392964, B.PhysicalKeyboardKey_392965, B.PhysicalKeyboardKey_392966, B.PhysicalKeyboardKey_392967, B.PhysicalKeyboardKey_392968, B.PhysicalKeyboardKey_392969, B.PhysicalKeyboardKey_392977, B.PhysicalKeyboardKey_392978, B.PhysicalKeyboardKey_392979, B.PhysicalKeyboardKey_392980, B.PhysicalKeyboardKey_392981, B.PhysicalKeyboardKey_392982, B.PhysicalKeyboardKey_392983, B.PhysicalKeyboardKey_392984, B.PhysicalKeyboardKey_392985, B.PhysicalKeyboardKey_392986, B.PhysicalKeyboardKey_392987, B.PhysicalKeyboardKey_392988, B.PhysicalKeyboardKey_392989, B.PhysicalKeyboardKey_392990, B.PhysicalKeyboardKey_392991, B.PhysicalKeyboardKey_458869, B.PhysicalKeyboardKey_458826, B.PhysicalKeyboardKey_16, B.PhysicalKeyboardKey_458825, B.PhysicalKeyboardKey_458852, B.PhysicalKeyboardKey_458887, B.PhysicalKeyboardKey_458889, B.PhysicalKeyboardKey_458888, B.PhysicalKeyboardKey_458756, B.PhysicalKeyboardKey_458757, B.PhysicalKeyboardKey_458758, B.PhysicalKeyboardKey_458759, B.PhysicalKeyboardKey_458760, B.PhysicalKeyboardKey_458761, B.PhysicalKeyboardKey_458762, B.PhysicalKeyboardKey_458763, B.PhysicalKeyboardKey_458764, B.PhysicalKeyboardKey_458765, B.PhysicalKeyboardKey_458766, B.PhysicalKeyboardKey_458767, B.PhysicalKeyboardKey_458768, B.PhysicalKeyboardKey_458769, B.PhysicalKeyboardKey_458770, B.PhysicalKeyboardKey_458771, B.PhysicalKeyboardKey_458772, B.PhysicalKeyboardKey_458773, B.PhysicalKeyboardKey_458774, B.PhysicalKeyboardKey_458775, B.PhysicalKeyboardKey_458776, B.PhysicalKeyboardKey_458777, B.PhysicalKeyboardKey_458778, B.PhysicalKeyboardKey_458779, B.PhysicalKeyboardKey_458780, B.PhysicalKeyboardKey_458781, B.PhysicalKeyboardKey_787101, B.PhysicalKeyboardKey_458896, B.PhysicalKeyboardKey_458897, B.PhysicalKeyboardKey_458898, B.PhysicalKeyboardKey_458899, B.PhysicalKeyboardKey_458900, B.PhysicalKeyboardKey_786836, B.PhysicalKeyboardKey_786834, B.PhysicalKeyboardKey_786891, B.PhysicalKeyboardKey_786847, B.PhysicalKeyboardKey_786826, B.PhysicalKeyboardKey_786865, B.PhysicalKeyboardKey_787083, B.PhysicalKeyboardKey_787081, B.PhysicalKeyboardKey_787084, B.PhysicalKeyboardKey_786611, B.PhysicalKeyboardKey_786609, B.PhysicalKeyboardKey_786608, B.PhysicalKeyboardKey_786637, B.PhysicalKeyboardKey_786610, B.PhysicalKeyboardKey_786612, B.PhysicalKeyboardKey_786819, B.PhysicalKeyboardKey_786615, B.PhysicalKeyboardKey_786613, B.PhysicalKeyboardKey_786614, B.PhysicalKeyboardKey_458979, B.PhysicalKeyboardKey_458983, B.PhysicalKeyboardKey_24, B.PhysicalKeyboardKey_458797, B.PhysicalKeyboardKey_458891, B.PhysicalKeyboardKey_458835, B.PhysicalKeyboardKey_458850, B.PhysicalKeyboardKey_458841, B.PhysicalKeyboardKey_458842, B.PhysicalKeyboardKey_458843, B.PhysicalKeyboardKey_458844, B.PhysicalKeyboardKey_458845, B.PhysicalKeyboardKey_458846, B.PhysicalKeyboardKey_458847, B.PhysicalKeyboardKey_458848, B.PhysicalKeyboardKey_458849, B.PhysicalKeyboardKey_458839, B.PhysicalKeyboardKey_458939, B.PhysicalKeyboardKey_458968, B.PhysicalKeyboardKey_458969, B.PhysicalKeyboardKey_458885, B.PhysicalKeyboardKey_458851, B.PhysicalKeyboardKey_458836, B.PhysicalKeyboardKey_458840, B.PhysicalKeyboardKey_458855, B.PhysicalKeyboardKey_458963, B.PhysicalKeyboardKey_458962, B.PhysicalKeyboardKey_458961, B.PhysicalKeyboardKey_458960, B.PhysicalKeyboardKey_458964, B.PhysicalKeyboardKey_458837, B.PhysicalKeyboardKey_458934, B.PhysicalKeyboardKey_458935, B.PhysicalKeyboardKey_458838, B.PhysicalKeyboardKey_458868, B.PhysicalKeyboardKey_458830, B.PhysicalKeyboardKey_458827, B.PhysicalKeyboardKey_458877, B.PhysicalKeyboardKey_458824, B.PhysicalKeyboardKey_458807, B.PhysicalKeyboardKey_458854, B.PhysicalKeyboardKey_458822, B.PhysicalKeyboardKey_23, B.PhysicalKeyboardKey_458915, B.PhysicalKeyboardKey_458804, B.PhysicalKeyboardKey_21, B.PhysicalKeyboardKey_458823, B.PhysicalKeyboardKey_458871, B.PhysicalKeyboardKey_786850, B.PhysicalKeyboardKey_458803, B.PhysicalKeyboardKey_458977, B.PhysicalKeyboardKey_458981, B.PhysicalKeyboardKey_787103, B.PhysicalKeyboardKey_458808, B.PhysicalKeyboardKey_65666, B.PhysicalKeyboardKey_458796, B.PhysicalKeyboardKey_17, B.PhysicalKeyboardKey_20, B.PhysicalKeyboardKey_458795, B.PhysicalKeyboardKey_22, B.PhysicalKeyboardKey_458874, B.PhysicalKeyboardKey_65667, B.PhysicalKeyboardKey_786994], A.findType("ConstantStringMap<String,PhysicalKeyboardKey>"));
    B.MethodCall_popRoute_null = new A.MethodCall0("popRoute", null);
    B.MethodChannel_gD3 = new A.MethodChannel("flutter/service_worker", B.C_StandardMethodCodec0, null);
    B.MethodChannel_wHc = new A.MethodChannel("dev.steenbakker.mobile_scanner/scanner/method", B.C_StandardMethodCodec0, null);
    B.Offset_0_1 = new A.Offset(0, 1);
    B.Offset_1_0 = new A.Offset(1, 0);
    B.Offset_y9W = new A.Offset(1 / 0, 0);
    B.OperatingSystem_0 = new A.OperatingSystem(0, "iOs");
    B.OperatingSystem_1 = new A.OperatingSystem(1, "android");
    B.OperatingSystem_2 = new A.OperatingSystem(2, "linux");
    B.OperatingSystem_3 = new A.OperatingSystem(3, "windows");
    B.OperatingSystem_4 = new A.OperatingSystem(4, "macOs");
    B.OperatingSystem_5 = new A.OperatingSystem(5, "unknown");
    B.OptionalMethodChannel_1R8 = new A.OptionalMethodChannel("flutter/menu", B.C_StandardMethodCodec0, null);
    B.OptionalMethodChannel_2Kx = new A.OptionalMethodChannel("flutter/restoration", B.C_StandardMethodCodec0, null);
    B.OptionalMethodChannel_A0x = new A.OptionalMethodChannel("flutter/mousecursor", B.C_StandardMethodCodec0, null);
    B.OptionalMethodChannel_Cp5 = new A.OptionalMethodChannel("flutter/keyboard", B.C_StandardMethodCodec0, null);
    B.OptionalMethodChannel_HJf = new A.OptionalMethodChannel("flutter/backgesture", B.C_StandardMethodCodec0, null);
    B.C_JSONMethodCodec0 = new A.JSONMethodCodec0();
    B.OptionalMethodChannel_dsH = new A.OptionalMethodChannel("flutter/textinput", B.C_JSONMethodCodec0, null);
    B.OptionalMethodChannel_jjv = new A.OptionalMethodChannel("flutter/navigation", B.C_JSONMethodCodec0, null);
    B.OptionalMethodChannel_kW8 = new A.OptionalMethodChannel("flutter/platform", B.C_JSONMethodCodec0, null);
    B.PaintingStyle_0 = new A.PaintingStyle(0, "fill");
    B.ParagraphConstraints_XfG = new A.ParagraphConstraints(1 / 0);
    B.PlaceholderAlignment_4 = new A.PlaceholderAlignment(4, "bottom");
    B.PointerChange_0 = new A.PointerChange(0, "cancel");
    B.PointerChange_1 = new A.PointerChange(1, "add");
    B.PointerChange_2 = new A.PointerChange(2, "remove");
    B.PointerChange_3 = new A.PointerChange(3, "hover");
    B.PointerChange_4 = new A.PointerChange(4, "down");
    B.PointerChange_5 = new A.PointerChange(5, "move");
    B.PointerChange_6 = new A.PointerChange(6, "up");
    B.PointerDeviceKind_0 = new A.PointerDeviceKind(0, "touch");
    B.PointerDeviceKind_1 = new A.PointerDeviceKind(1, "mouse");
    B.PointerDeviceKind_2 = new A.PointerDeviceKind(2, "stylus");
    B.PointerDeviceKind_4 = new A.PointerDeviceKind(4, "trackpad");
    B.PointerDeviceKind_5 = new A.PointerDeviceKind(5, "unknown");
    B.PointerSignalKind_0 = new A.PointerSignalKind(0, "none");
    B.PointerSignalKind_1 = new A.PointerSignalKind(1, "scroll");
    B.PointerSignalKind_3 = new A.PointerSignalKind(3, "scale");
    B.PointerSignalKind_4 = new A.PointerSignalKind(4, "unknown");
    B.Record2_0_true = new A._Record_2(0, true);
    B.Rect_tsf = new A.Rect(-1000000000, -1000000000, 1000000000, 1000000000);
    B.SchedulerPhase_0 = new A.SchedulerPhase(0, "idle");
    B.SchedulerPhase_1 = new A.SchedulerPhase(1, "transientCallbacks");
    B.SchedulerPhase_2 = new A.SchedulerPhase(2, "midFrameMicrotasks");
    B.SchedulerPhase_3 = new A.SchedulerPhase(3, "persistentCallbacks");
    B.SchedulerPhase_4 = new A.SchedulerPhase(4, "postFrameCallbacks");
    B.ScrollPositionAlignmentPolicy_0 = new A.ScrollPositionAlignmentPolicy(0, "explicit");
    B.ScrollPositionAlignmentPolicy_1 = new A.ScrollPositionAlignmentPolicy(1, "keepVisibleAtEnd");
    B.ScrollPositionAlignmentPolicy_2 = new A.ScrollPositionAlignmentPolicy(2, "keepVisibleAtStart");
    B.SelectionChangedCause_0 = new A.SelectionChangedCause(0, "tap");
    B.SelectionChangedCause_1 = new A.SelectionChangedCause(1, "doubleTap");
    B.SelectionChangedCause_2 = new A.SelectionChangedCause(2, "longPress");
    B.SelectionChangedCause_3 = new A.SelectionChangedCause(3, "forcePress");
    B.SelectionChangedCause_4 = new A.SelectionChangedCause(4, "keyboard");
    B.SelectionChangedCause_5 = new A.SelectionChangedCause(5, "toolbar");
    B.SelectionChangedCause_6 = new A.SelectionChangedCause(6, "drag");
    B.SelectionChangedCause_7 = new A.SelectionChangedCause(7, "scribble");
    B.SemanticsAction_256_showOnScreen = new A.SemanticsAction(256, "showOnScreen");
    B.Set_2h4Ve = new A.GeneralConstantSet([B.OperatingSystem_4, B.OperatingSystem_2, B.OperatingSystem_3], A.findType("GeneralConstantSet<OperatingSystem>"));
    B.Object_F2x = {click: 0, keyup: 1, keydown: 2, mouseup: 3, mousedown: 4, pointerdown: 5, pointerup: 6};
    B.Set_2nPij = new A.ConstantStringSet(B.Object_F2x, 7, type$.ConstantStringSet_String);
    B.Object_2tv = {click: 0, touchstart: 1, touchend: 2, pointerdown: 3, pointermove: 4, pointerup: 5};
    B.Set_3bBbi = new A.ConstantStringSet(B.Object_2tv, 6, type$.ConstantStringSet_String);
    B.Set_GJovi = new A.GeneralConstantSet([32, 8203], type$.GeneralConstantSet_int);
    B.Object_8aB = {serif: 0, "sans-serif": 1, monospace: 2, cursive: 3, fantasy: 4, "system-ui": 5, math: 6, emoji: 7, fangsong: 8};
    B.Set_GbU0l = new A.ConstantStringSet(B.Object_8aB, 9, type$.ConstantStringSet_String);
    B.Object_V1p = {"canvaskit.js": 0};
    B.Set_OhoY3 = new A.ConstantStringSet(B.Object_V1p, 1, type$.ConstantStringSet_String);
    B.Set_k2M5 = new A.GeneralConstantSet([10, 11, 12, 13, 133, 8232, 8233], type$.GeneralConstantSet_int);
    B.Size_0_0 = new A.Size(0, 0);
    B.SizedBox_0_0_null_null = new A.SizedBox(0, 0, null, null);
    B.StackFrame_DV7 = new A.StackFrame("<asynchronous suspension>", -1, "", "", "", -1, -1, "", "asynchronous suspension");
    B.StackFrame_cg9 = new A.StackFrame("...", -1, "", "", "", -1, -1, "", "...");
    B.StringCharacters_E8w = new A.StringCharacters("");
    B.StrokeCap_0 = new A.StrokeCap(0, "butt");
    B.StrokeJoin_0 = new A.StrokeJoin(0, "miter");
    B.SystemMouseCursor_basic = new A.SystemMouseCursor("basic");
    B.TargetPlatform_0 = new A.TargetPlatform(0, "android");
    B.TargetPlatform_2 = new A.TargetPlatform(2, "iOS");
    B.TargetPlatform_3 = new A.TargetPlatform(3, "linux");
    B.TargetPlatform_4 = new A.TargetPlatform(4, "macOS");
    B.TargetPlatform_5 = new A.TargetPlatform(5, "windows");
    B.TextCapitalization_3 = new A.TextCapitalization(3, "none");
    B.TextCapitalizationConfig_TextCapitalization_3 = new A.TextCapitalizationConfig(B.TextCapitalization_3);
    B.TextCapitalization_0 = new A.TextCapitalization(0, "words");
    B.TextCapitalization_1 = new A.TextCapitalization(1, "sentences");
    B.TextCapitalization_2 = new A.TextCapitalization(2, "characters");
    B.TextInputAction_0 = new A.TextInputAction(0, "none");
    B.TextInputAction_1 = new A.TextInputAction(1, "unspecified");
    B.TextInputAction_10 = new A.TextInputAction(10, "route");
    B.TextInputAction_11 = new A.TextInputAction(11, "emergencyCall");
    B.TextInputAction_12 = new A.TextInputAction(12, "newline");
    B.TextInputAction_2 = new A.TextInputAction(2, "done");
    B.TextInputAction_3 = new A.TextInputAction(3, "go");
    B.TextInputAction_4 = new A.TextInputAction(4, "search");
    B.TextInputAction_5 = new A.TextInputAction(5, "send");
    B.TextInputAction_6 = new A.TextInputAction(6, "next");
    B.TextInputAction_7 = new A.TextInputAction(7, "previous");
    B.TextInputAction_8 = new A.TextInputAction(8, "continueAction");
    B.TextInputAction_9 = new A.TextInputAction(9, "join");
    B.TextInputType_10_null_null = new A.TextInputType(10, null, null);
    B.TextInputType_1_null_null = new A.TextInputType(1, null, null);
    B.TextLeadingDistribution_0 = new A.TextLeadingDistribution(0, "proportional");
    B.TextLeadingDistribution_1 = new A.TextLeadingDistribution(1, "even");
    B.TextRange_m1_m1 = new A.TextRange(-1, -1);
    B.TextSelectionHandleType_0 = new A.TextSelectionHandleType(0, "left");
    B.TextSelectionHandleType_1 = new A.TextSelectionHandleType(1, "right");
    B.TextSelectionHandleType_2 = new A.TextSelectionHandleType(2, "collapsed");
    B.TextDecoration_1 = new A.TextDecoration(1);
    B.TextStyle_QOg = new A.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, B.TextDecoration_1, null, null, null, null, null, null, null, null);
    B.TextStyle_aF8 = new A.TextStyle(true, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
    B.Tolerance_RoN = new A.Tolerance(0.001, 0.001);
    B.TransformKind_0 = new A.TransformKind(0, "identity");
    B.TransformKind_1 = new A.TransformKind(1, "transform2d");
    B.TransformKind_2 = new A.TransformKind(2, "complex");
    B.TraversalEdgeBehavior_0 = new A.TraversalEdgeBehavior(0, "closedLoop");
    B.Type_ByteBuffer_EOZ = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_mF8 = A.typeLiteral("ByteData");
    B.Type_EditableText_NMc = A.typeLiteral("EditableText");
    B.Type_FirebaseAppPlatform_Tis = A.typeLiteral("FirebaseAppPlatform");
    B.Type_FirebaseApp_IQI = A.typeLiteral("FirebaseApp");
    B.Type_Float32List_Ymk = A.typeLiteral("Float32List");
    B.Type_Float64List_Ymk = A.typeLiteral("Float64List");
    B.Type_Int16List_cot = A.typeLiteral("Int16List");
    B.Type_Int32List_m1p = A.typeLiteral("Int32List");
    B.Type_Int8List_woc = A.typeLiteral("Int8List");
    B.Type_JSObject_0ua = A.typeLiteral("JSObject");
    B.Type_LabeledGlobalKey_E4y = A.typeLiteral("LabeledGlobalKey<State<StatefulWidget>>");
    B.Type_LookupBoundary_ATp = A.typeLiteral("LookupBoundary");
    B.Type_Object_QJv = A.typeLiteral("Object");
    B.Type_RenderingPlatformView_IIV = A.typeLiteral("RenderingPlatformView");
    B.Type_RenderingRenderCanvas_gsm = A.typeLiteral("RenderingRenderCanvas");
    B.Type_Uint16List_2mh = A.typeLiteral("Uint16List");
    B.Type_Uint32List_2mh = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_9Bb = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_CSc = A.typeLiteral("Uint8List");
    B.Type_dynamic_PLF = A.typeLiteral("@");
    B.UnfocusDisposition_0 = new A.UnfocusDisposition(0, "scope");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B.Utf8Decoder_true = new A.Utf8Decoder(true);
    B.ViewFocusDirection_1 = new A.ViewFocusDirection(1, "forward");
    B.ViewFocusDirection_2 = new A.ViewFocusDirection(2, "backward");
    B.ViewFocusState_1 = new A.ViewFocusState(1, "focused");
    B._AnimationDirection_0 = new A._AnimationDirection(0, "forward");
    B._AnimationDirection_1 = new A._AnimationDirection(1, "reverse");
    B._ElementLifecycle_0 = new A._ElementLifecycle(0, "initial");
    B._ElementLifecycle_1 = new A._ElementLifecycle(1, "active");
    B._ElementLifecycle_3 = new A._ElementLifecycle(3, "defunct");
    B._LinearTextScaler_1 = new A._LinearTextScaler(1);
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_0);
    B.KeyboardSide_1 = new A.KeyboardSide(1, "left");
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_1);
    B.KeyboardSide_2 = new A.KeyboardSide(2, "right");
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_0_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_0, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_1_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_1, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_2_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_2, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_0 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_0);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_1 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_1);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_2 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_2);
    B._ModifierSidePair_ModifierKey_3_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_3, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_4_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_4, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_5_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_5, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_6_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_6, B.KeyboardSide_3);
    B._ModifierSidePair_ModifierKey_7_KeyboardSide_3 = new A._ModifierSidePair(B.ModifierKey_7, B.KeyboardSide_3);
    B._ScribblePlaceholder_NcA = new A._ScribblePlaceholder(B.Size_0_0, B.SizedBox_0_0_null_null, B.PlaceholderAlignment_4, null, null);
    B.Size_100_0 = new A.Size(100, 0);
    B._ScribblePlaceholder_NcA0 = new A._ScribblePlaceholder(B.Size_100_0, B.SizedBox_0_0_null_null, B.PlaceholderAlignment_4, null, null);
    B._WordWrapParseMode_0 = new A._WordWrapParseMode(0, "inSpace");
    B._WordWrapParseMode_1 = new A._WordWrapParseMode(1, "inWord");
    B._WordWrapParseMode_2 = new A._WordWrapParseMode(2, "atBreak");
  })();
  (function staticFields() {
    $._cachedIsChrome110OrOlder = null;
    $._cachedWebGLVersion = null;
    $.__canvasKit = A._Cell$named("canvasKit");
    $.CanvasKitRenderer____instance = A._Cell$named("_instance");
    $.CanvasKitRenderer__programs = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("Future<FragmentProgram>"));
    $.Surface__didWarnAboutWebGlInitializationFailure = false;
    $._configuration = null;
    $.debugCanvasCount = 0;
    $._fontChangeScheduled = false;
    $.FrameTimingRecorder__frameTimings = A._setArrayType([], type$.JSArray_FrameTiming);
    $.FrameTimingRecorder__currentFrameVsyncStart = 0;
    $.FrameTimingRecorder__currentFrameBuildStart = 0;
    $.ResourceManager__instance = null;
    $._hotRestartListeners = A._setArrayType([], type$.JSArray_of_void_Function);
    $._initializationState = B.DebugEngineInitializationState_0;
    $._assetManager = null;
    $.KeyboardBinding__instance = null;
    $.NotoFont__index = 0;
    $.scheduleFrameCallback = null;
    $.pluginMessageCallHandler = null;
    $._WheelEventListenerMixin__defaultScrollLineHeight = null;
    $._PointerDeviceState__pointerCount = 0;
    $.RawKeyboard__instance = null;
    $.EngineSemantics__instance = null;
    $.SemanticsTextEditingStrategy__instance = null;
    $.formsOnTheDom = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject);
    $._nextViewId = 1;
    $._window = null;
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], type$.JSArray_Object);
    $.Primitives__identityHashCodeProperty = null;
    $.Primitives_timerFrequency = 0;
    $.Primitives_timerTicks = A._js_helper_Primitives_dateNow$closure();
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._extensions = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
    $._taskId = 1;
    $._eventNameToCount = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int);
    $._FakeUserTag__instances = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_FakeUserTag"));
    $.Timeline__stack = A._setArrayType([], A.findType("JSArray<_SyncBlock?>"));
    $._popStateListenersCache = A.LinkedHashMap_LinkedHashMap$_empty(type$.dynamic_Function_Object, type$.JavaScriptObject);
    $.FilePicker____instance = A._Cell$named("_instance");
    $.Firebase_delegatePackingProperty = null;
    $.MethodChannelFirebase_appInstances = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("MethodChannelFirebaseApp"));
    $.MethodChannelFirebase_isCoreInitialized = false;
    $.FirebasePluginPlatform__constantsForPluginApps = function() {
      var t1 = type$.dynamic;
      return A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    }();
    $.FlutterError_onError = A.assertions_FlutterError_dumpErrorToConsole$closure();
    $.FlutterError__errorCount = 0;
    $.FlutterError__stackFilters = A._setArrayType([], A.findType("JSArray<StackFilter>"));
    $.activeDevToolsServerAddress = null;
    $.connectedVmServiceUri = null;
    $.LicenseRegistry__collectors = null;
    $._debugPrintedCharacters = 0;
    $._debugPrintCompleter = null;
    $._debugPrintScheduled = false;
    $.GestureBinding__instance = null;
    $.PaintingBinding__instance = null;
    $.RendererBinding__instance = null;
    $.debugProfileLayoutsEnabled = false;
    $.debugProfilePaintsEnabled = false;
    $._timeDilation = 1;
    $.SchedulerBinding__instance = null;
    $.SemanticsBinding__instance = null;
    $.CustomSemanticsAction__actions = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("CustomSemanticsAction"));
    $.ServicesBinding__instance = null;
    $.debugProfilePlatformChannels = false;
    $._profilePlatformChannelsIsRunning = false;
    $._profilePlatformChannelsStats = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_PlatformChannelStats"));
    $.SystemChrome__pendingStyle = null;
    $.SystemChrome__latestStyle = null;
    $.TextInputConnection__nextId = 1;
    $.WidgetsBinding__instance = null;
    $.ContextMenuController__shownInstance = null;
    $.ContextMenuController__menuOverlayEntry = null;
    $.debugProfileBuildsEnabled = false;
    $.debugProfileBuildsEnabledUserWidgets = false;
    $.FlutterNativeSplash__widgetsBinding = null;
    $.LinkViewController__instances = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("LinkViewController"));
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal,
      _lazy = hunkHelpers.lazy;
    _lazyFinal($, "_skFontWeights", "$get$_skFontWeights", () => {
      var _s10_ = "FontWeight";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s10_), "Thin"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "ExtraLight"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "Light"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "Normal"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "Medium"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "SemiBold"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "Bold"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "ExtraBold"), A.getProperty(A.getProperty(A.canvasKit(), _s10_), "ExtraBlack")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextDirections", "$get$_skTextDirections", () => {
      var _s13_ = "TextDirection";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s13_), "RTL"), A.getProperty(A.getProperty(A.canvasKit(), _s13_), "LTR")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextAligns", "$get$_skTextAligns", () => {
      var _s9_ = "TextAlign";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s9_), "Left"), A.getProperty(A.getProperty(A.canvasKit(), _s9_), "Right"), A.getProperty(A.getProperty(A.canvasKit(), _s9_), "Center"), A.getProperty(A.getProperty(A.canvasKit(), _s9_), "Justify"), A.getProperty(A.getProperty(A.canvasKit(), _s9_), "Start"), A.getProperty(A.getProperty(A.canvasKit(), _s9_), "End")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextHeightBehaviors", "$get$_skTextHeightBehaviors", () => {
      var _s18_ = "TextHeightBehavior";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s18_), "All"), A.getProperty(A.getProperty(A.canvasKit(), _s18_), "DisableFirstAscent"), A.getProperty(A.getProperty(A.canvasKit(), _s18_), "DisableLastDescent"), A.getProperty(A.getProperty(A.canvasKit(), _s18_), "DisableAll")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skRectHeightStyles", "$get$_skRectHeightStyles", () => {
      var _s15_ = "RectHeightStyle";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Tight"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Max"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "IncludeLineSpacingMiddle"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "IncludeLineSpacingTop"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "IncludeLineSpacingBottom"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Strut")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skRectWidthStyles", "$get$_skRectWidthStyles", () => {
      var _s14_ = "RectWidthStyle";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s14_), "Tight"), A.getProperty(A.getProperty(A.canvasKit(), _s14_), "Max")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_sharedSkColor1", "$get$_sharedSkColor1", () => A.mallocFloat32List(4));
    _lazyFinal($, "_skTextDecorationStyles", "$get$_skTextDecorationStyles", () => {
      var _s15_ = "DecorationStyle";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Solid"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Double"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Dotted"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Dashed"), A.getProperty(A.getProperty(A.canvasKit(), _s15_), "Wavy")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skTextBaselines", "$get$_skTextBaselines", () => {
      var _s12_ = "TextBaseline";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s12_), "Alphabetic"), A.getProperty(A.getProperty(A.canvasKit(), _s12_), "Ideographic")], type$.JSArray_JavaScriptObject);
    });
    _lazyFinal($, "_skPlaceholderAlignments", "$get$_skPlaceholderAlignments", () => {
      var _s20_ = "PlaceholderAlignment";
      return A._setArrayType([A.getProperty(A.getProperty(A.canvasKit(), _s20_), "Baseline"), A.getProperty(A.getProperty(A.canvasKit(), _s20_), "AboveBaseline"), A.getProperty(A.getProperty(A.canvasKit(), _s20_), "BelowBaseline"), A.getProperty(A.getProperty(A.canvasKit(), _s20_), "Top"), A.getProperty(A.getProperty(A.canvasKit(), _s20_), "Bottom"), A.getProperty(A.getProperty(A.canvasKit(), _s20_), "Middle")], type$.JSArray_JavaScriptObject);
    });
    _lazy($, "_robotoUrl", "$get$_robotoUrl", () => A.configuration().get$fontFallbackBaseUrl() + "roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf");
    _lazy($, "_finalizationRegistry", "$get$_finalizationRegistry", () => A._callConstructorUnchecked1(A._getPropertyTrustType(A._getPropertyTrustType(A.staticInteropGlobalContext(), "window"), "FinalizationRegistry"), A._functionToJS1(new A._finalizationRegistry_closure())));
    _lazy($, "nativeMemoryFinalizationRegistry", "$get$nativeMemoryFinalizationRegistry", () => new A.NativeMemoryFinalizationRegistry());
    _lazyFinal($, "_ckRequiresClientICU", "$get$_ckRequiresClientICU", () => A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(A.getProperty(A.canvasKit(), "ParagraphBuilder")));
    _lazyFinal($, "CkParagraphBuilder__defaultTextForeground", "$get$CkParagraphBuilder__defaultTextForeground", () => A._callConstructorUnchecked0(A._getPropertyTrustType(A._getPropertyTrustType(A._getPropertyTrustType(A.staticInteropGlobalContext(), "window"), "flutterCanvasKit"), "Paint")));
    _lazyFinal($, "CkParagraphBuilder__defaultTextBackground", "$get$CkParagraphBuilder__defaultTextBackground", () => {
      var t1 = A._callConstructorUnchecked0(A._getPropertyTrustType(A._getPropertyTrustType(A._getPropertyTrustType(A.staticInteropGlobalContext(), "window"), "flutterCanvasKit"), "Paint"));
      A.SkPaintExtension_setColorInt(t1, 0);
      return t1;
    });
    _lazyFinal($, "segmentationCache", "$get$segmentationCache", () => {
      var t1 = type$.String,
        t2 = A.findType("+breaks,graphemes,words(Uint32List,Uint32List,Uint32List)"),
        t3 = A.LruCache$(100000, t1, t2),
        t4 = A.LruCache$(10000, t1, t2);
      return new A._Record_3_large_medium_small(A.LruCache$(20, t1, t2), t4, t3);
    });
    _lazyFinal($, "_intlSegmenters", "$get$_intlSegmenters", () => A.LinkedHashMap_LinkedHashMap$_literal([B.IntlSegmenterGranularity_0, A.createIntlSegmenter("grapheme"), B.IntlSegmenterGranularity_1, A.createIntlSegmenter("word")], A.findType("IntlSegmenterGranularity"), type$.JavaScriptObject));
    _lazyFinal($, "_v8LineBreaker", "$get$_v8LineBreaker", () => A.createV8BreakIterator());
    _lazyFinal($, "EngineFlutterDisplay__instance", "$get$EngineFlutterDisplay__instance", () => {
      var t2,
        t1 = A.getProperty(self.window, "screen");
      t1 = t1 == null ? null : A.getProperty(t1, "width");
      if (t1 == null)
        t1 = 0;
      t2 = A.getProperty(self.window, "screen");
      t2 = t2 == null ? null : A.getProperty(t2, "height");
      return new A.EngineFlutterDisplay(A.Size$(t1, t2 == null ? 0 : t2));
    });
    _lazyFinal($, "_ttPolicy", "$get$_ttPolicy", () => {
      var t1 = A.getProperty(self.window, "trustedTypes");
      t1.toString;
      return A._callMethodUnchecked2(t1, "createPolicy", "flutter-engine", type$.JavaScriptObject._as({createScriptURL: A._functionToJS1(new A._ttPolicy_closure())}));
    });
    _lazy($, "browserSupportsFinalizationRegistry", "$get$browserSupportsFinalizationRegistry", () => self.window.FinalizationRegistry != null);
    _lazy($, "browserSupportsOffscreenCanvas", "$get$browserSupportsOffscreenCanvas", () => self.window.OffscreenCanvas != null);
    _lazyFinal($, "_fontChangeMessage", "$get$_fontChangeMessage", () => B.C_JSONMessageCodec.encodeMessage$1(A.LinkedHashMap_LinkedHashMap$_literal(["type", "fontsChange"], type$.String, type$.dynamic)));
    _lazy($, "FrameTimingRecorder__frameTimingsLastSubmitTime", "$get$FrameTimingRecorder__frameTimingsLastSubmitTime", () => A.FrameTimingRecorder__nowMicros());
    _lazyFinal($, "_kLogicalAltLeft", "$get$_kLogicalAltLeft", () => 8589934852);
    _lazyFinal($, "_kLogicalAltRight", "$get$_kLogicalAltRight", () => 8589934853);
    _lazyFinal($, "_kLogicalControlLeft", "$get$_kLogicalControlLeft", () => 8589934848);
    _lazyFinal($, "_kLogicalControlRight", "$get$_kLogicalControlRight", () => 8589934849);
    _lazyFinal($, "_kLogicalShiftLeft", "$get$_kLogicalShiftLeft", () => 8589934850);
    _lazyFinal($, "_kLogicalShiftRight", "$get$_kLogicalShiftRight", () => 8589934851);
    _lazyFinal($, "_kLogicalMetaLeft", "$get$_kLogicalMetaLeft", () => 8589934854);
    _lazyFinal($, "_kLogicalMetaRight", "$get$_kLogicalMetaRight", () => 8589934855);
    _lazyFinal($, "_kPhysicalAltLeft", "$get$_kPhysicalAltLeft", () => 458978);
    _lazyFinal($, "_kPhysicalAltRight", "$get$_kPhysicalAltRight", () => 458982);
    _lazyFinal($, "kPhysicalControlLeft", "$get$kPhysicalControlLeft", () => 458976);
    _lazyFinal($, "kPhysicalControlRight", "$get$kPhysicalControlRight", () => 458980);
    _lazyFinal($, "_kPhysicalShiftLeft", "$get$_kPhysicalShiftLeft", () => 458977);
    _lazyFinal($, "_kPhysicalShiftRight", "$get$_kPhysicalShiftRight", () => 458981);
    _lazyFinal($, "_kPhysicalMetaLeft", "$get$_kPhysicalMetaLeft", () => 458979);
    _lazyFinal($, "_kPhysicalMetaRight", "$get$_kPhysicalMetaRight", () => 458983);
    _lazyFinal($, "_kLogicalKeyToModifierGetter", "$get$_kLogicalKeyToModifierGetter", () => A.LinkedHashMap_LinkedHashMap$_literal([$.$get$_kLogicalAltLeft(), new A._kLogicalKeyToModifierGetter_closure(), $.$get$_kLogicalAltRight(), new A._kLogicalKeyToModifierGetter_closure0(), $.$get$_kLogicalControlLeft(), new A._kLogicalKeyToModifierGetter_closure1(), $.$get$_kLogicalControlRight(), new A._kLogicalKeyToModifierGetter_closure2(), $.$get$_kLogicalShiftLeft(), new A._kLogicalKeyToModifierGetter_closure3(), $.$get$_kLogicalShiftRight(), new A._kLogicalKeyToModifierGetter_closure4(), $.$get$_kLogicalMetaLeft(), new A._kLogicalKeyToModifierGetter_closure5(), $.$get$_kLogicalMetaRight(), new A._kLogicalKeyToModifierGetter_closure6()], type$.int, A.findType("bool(FlutterHtmlKeyboardEvent)")));
    _lazyFinal($, "preventDefaultListener", "$get$preventDefaultListener", () => A.createDomEventListener(new A.preventDefaultListener_closure()));
    _lazy($, "HighContrastSupport_instance", "$get$HighContrastSupport_instance", () => new A.HighContrastSupport(A._setArrayType([], A.findType("JSArray<~(bool)>")), A.DomWindowExtension_matchMedia(self.window, "(forced-colors: active)")));
    _lazyFinal($, "EnginePlatformDispatcher__instance", "$get$EnginePlatformDispatcher__instance", () => A.EnginePlatformDispatcher$());
    _lazy($, "PlatformViewManager_instance", "$get$PlatformViewManager_instance", () => {
      var t1 = type$.String,
        t2 = type$.int;
      t1 = new A.PlatformViewManager(A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Function), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.JavaScriptObject), A.LinkedHashSet_LinkedHashSet$_empty(t1), A.LinkedHashMap_LinkedHashMap$_empty(t2, t1));
      t1.registerFactory$2("_default_document_create_element_visible", A._engine___defaultFactory$closure());
      t1.registerFactory$3$isVisible("_default_document_create_element_invisible", A._engine___defaultFactory$closure(), false);
      return t1;
    });
    _lazy($, "PlatformViewMessageHandler_instance", "$get$PlatformViewMessageHandler_instance", () => new A.PlatformViewMessageHandler($.$get$PlatformViewManager_instance()));
    _lazyFinal($, "PointerBinding__defaultSafariWorkaround", "$get$PointerBinding__defaultSafariWorkaround", () => new A.SafariPointerEventWorkaround());
    _lazyFinal($, "PointerBinding_clickDebouncer", "$get$PointerBinding_clickDebouncer", () => new A.ClickDebouncer());
    _lazyFinal($, "PointerDataConverter_globalPointerState", "$get$PointerDataConverter_globalPointerState", () => new A._GlobalPointerState(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("_PointerDeviceState"))));
    _lazyFinal($, "_renderer", "$get$_renderer", () => {
      var t1 = A.CanvasKitRenderer__createRasterizer(),
        t2 = A.Surface$(false);
      return new A.CanvasKitRenderer(t1, t2, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("ViewRasterizer")));
    });
    _lazyFinal($, "BrowserAutofillHints__singletonInstance", "$get$BrowserAutofillHints__singletonInstance", () => {
      var t1 = type$.String;
      return new A.BrowserAutofillHints(A.LinkedHashMap_LinkedHashMap$_literal(["birthday", "bday", "birthdayDay", "bday-day", "birthdayMonth", "bday-month", "birthdayYear", "bday-year", "countryCode", "country", "countryName", "country-name", "creditCardExpirationDate", "cc-exp", "creditCardExpirationMonth", "cc-exp-month", "creditCardExpirationYear", "cc-exp-year", "creditCardFamilyName", "cc-family-name", "creditCardGivenName", "cc-given-name", "creditCardMiddleName", "cc-additional-name", "creditCardName", "cc-name", "creditCardNumber", "cc-number", "creditCardSecurityCode", "cc-csc", "creditCardType", "cc-type", "email", "email", "familyName", "family-name", "fullStreetAddress", "street-address", "gender", "sex", "givenName", "given-name", "impp", "impp", "jobTitle", "organization-title", "language", "language", "middleName", "additional-name", "name", "name", "namePrefix", "honorific-prefix", "nameSuffix", "honorific-suffix", "newPassword", "new-password", "nickname", "nickname", "oneTimeCode", "one-time-code", "organizationName", "organization", "password", "current-password", "photo", "photo", "postalCode", "postal-code", "streetAddressLevel1", "address-level1", "streetAddressLevel2", "address-level2", "streetAddressLevel3", "address-level3", "streetAddressLevel4", "address-level4", "streetAddressLine1", "address-line1", "streetAddressLine2", "address-line2", "streetAddressLine3", "address-line3", "telephoneNumber", "tel", "telephoneNumberAreaCode", "tel-area-code", "telephoneNumberCountryCode", "tel-country-code", "telephoneNumberExtension", "tel-extension", "telephoneNumberLocal", "tel-local", "telephoneNumberLocalPrefix", "tel-local-prefix", "telephoneNumberLocalSuffix", "tel-local-suffix", "telephoneNumberNational", "tel-national", "transactionAmount", "transaction-amount", "transactionCurrency", "transaction-currency", "url", "url", "username", "username"], t1, t1));
    });
    _lazyFinal($, "textEditing", "$get$textEditing", () => new A.HybridTextEditing());
    _lazyFinal($, "_tempRectData", "$get$_tempRectData", () => A.NativeFloat32List_NativeFloat32List(4));
    _lazyFinal($, "_tempPointData", "$get$_tempPointData", () => A.NativeFloat32List_NativeFloat32List(16));
    _lazyFinal($, "_tempPointMatrix", "$get$_tempPointMatrix", () => A.Matrix4$fromFloat32List($.$get$_tempPointData()));
    _lazy($, "printWarning", "$get$printWarning", () => A.DomConsoleExtension_get_warn(A.getProperty(self.window, "console")));
    _lazy($, "DisplayDprStream_instance", "$get$DisplayDprStream_instance", () => {
      var t1 = $.$get$EngineFlutterDisplay__instance(),
        t2 = A.StreamController_StreamController$broadcast(null, null, false, type$.double);
      t2 = new A.DisplayDprStream(t1, t1.get$devicePixelRatio(0), t2);
      t2._subscribeToMediaQuery$0();
      return t2;
    });
    _lazyFinal($, "_hotRestartCache", "$get$_hotRestartCache", () => new A._hotRestartCache_closure().call$0());
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1(new A.nullFuture_closure()));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_kUseDead", "$get$_kUseDead", () => A.String_String$fromCharCode(254));
    _lazyFinal($, "_kLowerA", "$get$_kLowerA", () => 97);
    _lazyFinal($, "_kUpperA", "$get$_kUpperA", () => 65);
    _lazyFinal($, "_kLowerZ", "$get$_kLowerZ", () => 122);
    _lazyFinal($, "_kUpperZ", "$get$_kUpperZ", () => 90);
    _lazyFinal($, "_kMarshallIntBase", "$get$_kMarshallIntBase", () => 48);
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => A.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true, false));
    _lazyFinal($, "_Uri__useURLSearchParams", "$get$_Uri__useURLSearchParams", () => typeof URLSearchParams == "function");
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_QJv));
    _lazyFinal($, "Stopwatch__frequency", "$get$Stopwatch__frequency", () => {
      A.Primitives_initTicker();
      return $.Primitives_timerFrequency;
    });
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazy($, "_performance", "$get$_performance", () => new A._performance_closure().call$0());
    _lazy($, "_json", "$get$_json", () => new A._json_closure().call$0());
    _lazyFinal($, "_FakeUserTag__defaultTag", "$get$_FakeUserTag__defaultTag", () => A._FakeUserTag__FakeUserTag("Default"));
    _lazy($, "_currentTag", "$get$_currentTag", () => $.$get$_FakeUserTag__defaultTag());
    _lazyFinal($, "Random__secureRandom", "$get$Random__secureRandom", () => {
      var t1 = new A._JSSecureRandom(A.NativeByteData_NativeByteData(8));
      t1._JSSecureRandom$0();
      return t1;
    });
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => A.ByteData_ByteData$view(A.NativeUint16List_NativeUint16List$fromList(A._setArrayType([1], type$.JSArray_int)).buffer, 0, null).getInt8(0) === 1 ? B.C_Endian : B.C_Endian0);
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", () => new A.ChannelBuffers(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_Channel"))));
    _lazyFinal($, "BrowserDetection_instance", "$get$BrowserDetection_instance", () => new A.BrowserDetection());
    _lazy($, "browser", "$get$browser", () => $.$get$BrowserDetection_instance());
    _lazy($, "_realDefaultUrlStrategy", "$get$_realDefaultUrlStrategy", () => B.C_HashUrlStrategy);
    _lazyFinal($, "platformViewRegistry", "$get$platformViewRegistry", () => new A.PlatformViewRegistry());
    _lazyFinal($, "FilePicker__token", "$get$FilePicker__token", () => new A.Object());
    _lazyFinal($, "FirebaseAnalyticsPlatform__token", "$get$FirebaseAnalyticsPlatform__token", () => new A.Object());
    _lazy($, "MethodChannelFirebase_api", "$get$MethodChannelFirebase_api", () => new A.FirebaseCoreHostApi());
    _lazyFinal($, "FirebasePlatform__token", "$get$FirebasePlatform__token", () => new A.Object());
    _lazy($, "FirebasePlatform__instance", "$get$FirebasePlatform__instance", () => {
      var t1 = new A.MethodChannelFirebase();
      t1.PlatformInterface$1$token($.$get$FirebasePlatform__token());
      return t1;
    });
    _lazyFinal($, "FirebaseAppPlatform__token", "$get$FirebaseAppPlatform__token", () => new A.Object());
    _lazy($, "FirebaseCoreWeb__services", "$get$FirebaseCoreWeb__services", () => A.LinkedHashMap_LinkedHashMap$_literal(["core", A.FirebaseWebService$_("app", null, "core")], type$.String, A.findType("FirebaseWebService")));
    _lazyFinal($, "App__expando", "$get$App__expando", () => A.Expando$(A.findType("App")));
    _lazyFinal($, "_browserPlatform", "$get$_browserPlatform", () => A._operatingSystemToTargetPlatform($.$get$browser().get$operatingSystem()));
    _lazyFinal($, "ChangeNotifier__emptyListeners", "$get$ChangeNotifier__emptyListeners", () => A.List_List$filled(0, null, false, type$.nullable_void_Function));
    _lazyFinal($, "sparseTextConfiguration", "$get$sparseTextConfiguration", () => A.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u2502", "", "\u2514\u2500", "\u251c\u2500", " ", " ", "\u2502 ", "  ", "", true, ""));
    _lazyFinal($, "dashedTextConfiguration", "$get$dashedTextConfiguration", () => A.TextTreeConfiguration$(true, "", ":", "", "", "", "", "", true, false, "\n", true, "\u254e", "", "\u2514\u254c", "\u254e\u254c", " ", " ", "\u2502 ", "  ", "", true, ""));
    _lazyFinal($, "denseTextConfiguration", "$get$denseTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", false, false, "\n", false, "\u2502", "", "\u2514", "\u251c", "", "", "\u2502", " ", ", ", true, ""));
    _lazyFinal($, "transitionTextConfiguration", "$get$transitionTextConfiguration", () => A.TextTreeConfiguration$(false, ":", " \u2550\u2550\u2550", "", "", "", "  ", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, true, "\n", true, "\u2502", "", "\u2558\u2550\u2566\u2550\u2550 ", "\u255e\u2550\u2566\u2550\u2550 ", " \u2551 ", "", "", "", "", true, ""));
    _lazyFinal($, "errorTextConfiguration", "$get$errorTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", "", "\u2550\u2550\u2561 ", "", "", " \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550", false, false, "\n", true, "\u2502", "\u2550\u2550\u2550\u2550\u2550", "\u2558\u2550\u2566", "\u255e\u2550\u2566", " \u2551 ", "", "", "", "", true, " \u255e\u2550\u2550"));
    _lazyFinal($, "whitespaceTextConfiguration", "$get$whitespaceTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", true, ""));
    _lazyFinal($, "flatTextConfiguration", "$get$flatTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, "", "", "", "", "", "", "", "", "", true, ""));
    _lazyFinal($, "singleLineTextConfiguration", "$get$singleLineTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, false, "", false, "", "", "", "", "", "", "  ", "  ", ", ", false, ""));
    _lazyFinal($, "errorPropertyTextConfiguration", "$get$errorPropertyTextConfiguration", () => A.TextTreeConfiguration$(false, "", ":", ")", "", "(", "", "", true, true, "\n", false, "", "", "", "", "", "", "  ", "  ", ", ", false, ""));
    _lazyFinal($, "shallowTextConfiguration", "$get$shallowTextConfiguration", () => A.TextTreeConfiguration$(false, ":", ":", "", "", "", "", "", false, false, "\n", true, " ", "", "", "", " ", "  ", "", "", "", false, ""));
    _lazyFinal($, "_debugPrintBuffer", "$get$_debugPrintBuffer", () => A.ListQueue$(null, type$.String));
    _lazyFinal($, "_debugPrintStopwatch", "$get$_debugPrintStopwatch", () => A.Stopwatch$());
    _lazyFinal($, "WriteBuffer__zeroBuffer", "$get$WriteBuffer__zeroBuffer", () => A.NativeUint8List_NativeUint8List(8));
    _lazyFinal($, "StackFrame__webNonDebugFramePattern", "$get$StackFrame__webNonDebugFramePattern", () => A.RegExp_RegExp("^\\s*at ([^\\s]+).*$", true, false));
    _lazyFinal($, "MatrixUtils__minMax", "$get$MatrixUtils__minMax", () => A.NativeFloat64List_NativeFloat64List(4));
    _lazyFinal($, "rootBundle", "$get$rootBundle", () => {
      var t1 = type$.String,
        t2 = type$.Future_dynamic;
      return new A.PlatformAssetBundle(A.LinkedHashMap_LinkedHashMap$_empty(t1, A.findType("Future<String>")), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2));
    });
    _lazyFinal($, "BrowserContextMenu__instance", "$get$BrowserContextMenu__instance", () => new A.BrowserContextMenu());
    _lazyFinal($, "KeyboardLockMode__knownLockModes", "$get$KeyboardLockMode__knownLockModes", () => A.LinkedHashMap_LinkedHashMap$_literal([4294967562, B.KeyboardLockMode_YYi, 4294967564, B.KeyboardLockMode_Y98, 4294967556, B.KeyboardLockMode_kyW], type$.int, type$.KeyboardLockMode));
    _lazyFinal($, "_profiledBinaryMessengers", "$get$_profiledBinaryMessengers", () => A.Expando$(A.findType("BinaryMessenger")));
    _lazyFinal($, "RawKeyboard_instance", "$get$RawKeyboard_instance", () => new A.RawKeyboard0(A._setArrayType([], A.findType("JSArray<~(RawKeyEvent)>")), A.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey)));
    _lazyFinal($, "RawKeyboard__modifierKeyMap", "$get$RawKeyboard__modifierKeyMap", () => {
      var t1 = type$.PhysicalKeyboardKey;
      return A.LinkedHashMap_LinkedHashMap$_literal([B._ModifierSidePair_ModifierKey_2_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458982], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978, B.PhysicalKeyboardKey_458982], t1), B._ModifierSidePair_ModifierKey_2_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458978], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458981], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977, B.PhysicalKeyboardKey_458981], t1), B._ModifierSidePair_ModifierKey_1_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458977], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458980], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976, B.PhysicalKeyboardKey_458980], t1), B._ModifierSidePair_ModifierKey_0_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458976], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_1, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_2, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458983], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979, B.PhysicalKeyboardKey_458983], t1), B._ModifierSidePair_ModifierKey_3_KeyboardSide_0, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458979], t1), B._ModifierSidePair_ModifierKey_4_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458809], t1), B._ModifierSidePair_ModifierKey_5_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458835], t1), B._ModifierSidePair_ModifierKey_6_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_458823], t1), B._ModifierSidePair_ModifierKey_7_KeyboardSide_3, A.LinkedHashSet_LinkedHashSet$_literal([B.PhysicalKeyboardKey_18], t1)], A.findType("_ModifierSidePair"), A.findType("Set<PhysicalKeyboardKey>"));
    });
    _lazyFinal($, "RawKeyboard__allModifiersExceptFn", "$get$RawKeyboard__allModifiersExceptFn", () => A.LinkedHashMap_LinkedHashMap$_literal([B.PhysicalKeyboardKey_458978, B.LogicalKeyboardKey_8589934852, B.PhysicalKeyboardKey_458982, B.LogicalKeyboardKey_8589934853, B.PhysicalKeyboardKey_458977, B.LogicalKeyboardKey_8589934850, B.PhysicalKeyboardKey_458981, B.LogicalKeyboardKey_8589934851, B.PhysicalKeyboardKey_458976, B.LogicalKeyboardKey_8589934848, B.PhysicalKeyboardKey_458980, B.LogicalKeyboardKey_8589934849, B.PhysicalKeyboardKey_458979, B.LogicalKeyboardKey_8589934854, B.PhysicalKeyboardKey_458983, B.LogicalKeyboardKey_8589934855, B.PhysicalKeyboardKey_458809, B.LogicalKeyboardKey_4294967556, B.PhysicalKeyboardKey_458835, B.LogicalKeyboardKey_4294967562, B.PhysicalKeyboardKey_458823, B.LogicalKeyboardKey_4294967564], type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey));
    _lazyFinal($, "RawKeyboard__allModifiers", "$get$RawKeyboard__allModifiers", () => {
      var t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.PhysicalKeyboardKey, type$.LogicalKeyboardKey);
      t1.$indexSet(0, B.PhysicalKeyboardKey_18, B.LogicalKeyboardKey_4294967558);
      t1.addAll$1(0, $.$get$RawKeyboard__allModifiersExceptFn());
      return t1;
    });
    _lazyFinal($, "TextInput__instance", "$get$TextInput__instance", () => {
      var t1 = $.$get$_PlatformTextInputControl_instance();
      t1 = new A.TextInput(t1, A.LinkedHashSet_LinkedHashSet$_literal([t1], A.findType("TextInputControl")), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("ScribbleClient")));
      t1.__TextInput__channel_A = B.OptionalMethodChannel_dsH;
      t1.get$_channel().setMethodCallHandler$1(t1.get$_loudlyHandleTextInputInvocation());
      return t1;
    });
    _lazyFinal($, "_PlatformTextInputControl_instance", "$get$_PlatformTextInputControl_instance", () => new A._PlatformTextInputControl());
    _lazyFinal($, "webPluginRegistrar", "$get$webPluginRegistrar", () => new A.PluginRegistry(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("Future<ByteData?>?(ByteData?)"))));
    _lazyFinal($, "Hive", "$get$Hive", () => {
      var _null = null,
        t1 = type$.String;
      t1 = new A.HiveImpl(A.HashMap_HashMap(_null, _null, _null, t1, A.findType("BoxBaseImpl<@>")), A.HashMap_HashMap(_null, _null, _null, t1, type$.Future_dynamic), A.Random_Random$secure(), A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("ResolvedAdapter<@>")));
      t1.registerAdapter$1$2$internal(new A.DateTimeWithTimezoneAdapter(), true, A.findType("DateTime"));
      t1.registerAdapter$1$2$internal(new A.DateTimeAdapter(A.findType("DateTimeAdapter<DateTimeWithoutTZ>")), true, A.findType("DateTimeWithoutTZ"));
      t1.registerAdapter$1$2$internal(new A.BigIntAdapter(), true, A.findType("BigInt"));
      return t1;
    });
    _lazyFinal($, "MobileScannerPlatform__token", "$get$MobileScannerPlatform__token", () => new A.Object());
    _lazy($, "MobileScannerPlatform__instance", "$get$MobileScannerPlatform__instance", () => {
      var t1 = new A.MethodChannelMobileScanner();
      t1.PlatformInterface$1$token($.$get$MobileScannerPlatform__token());
      return t1;
    });
    _lazyFinal($, "PlatformInterface__instanceTokens", "$get$PlatformInterface__instanceTokens", () => A.Expando$(type$.Object));
    _lazyFinal($, "SharePlatform__token", "$get$SharePlatform__token", () => new A.Object());
    _lazy($, "SharePlatform__instance", "$get$SharePlatform__instance", () => {
      var t1 = new A.MethodChannelShare();
      t1.PlatformInterface$1$token($.$get$SharePlatform__token());
      return t1;
    });
    _lazyFinal($, "SharedPreferencesStorePlatform__token", "$get$SharedPreferencesStorePlatform__token", () => new A.Object());
    _lazy($, "SharedPreferencesStorePlatform__instance", "$get$SharedPreferencesStorePlatform__instance", () => {
      var t1 = new A.MethodChannelSharedPreferencesStore();
      t1.PlatformInterface$1$token($.$get$SharedPreferencesStorePlatform__token());
      return t1;
    });
    _lazyFinal($, "UrlLauncherPlatform__token", "$get$UrlLauncherPlatform__token", () => new A.Object());
    _lazy($, "UrlLauncherPlatform__instance", "$get$UrlLauncherPlatform__instance", () => {
      var t1 = new A.MethodChannelUrlLauncher();
      t1.PlatformInterface$1$token($.$get$UrlLauncherPlatform__token());
      return t1;
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({WebGL: J.Interceptor, AbortPaymentEvent: J.JavaScriptObject, AnimationEffectReadOnly: J.JavaScriptObject, AnimationEffectTiming: J.JavaScriptObject, AnimationEffectTimingReadOnly: J.JavaScriptObject, AnimationEvent: J.JavaScriptObject, AnimationPlaybackEvent: J.JavaScriptObject, AnimationTimeline: J.JavaScriptObject, AnimationWorkletGlobalScope: J.JavaScriptObject, ApplicationCacheErrorEvent: J.JavaScriptObject, AuthenticatorAssertionResponse: J.JavaScriptObject, AuthenticatorAttestationResponse: J.JavaScriptObject, AuthenticatorResponse: J.JavaScriptObject, BackgroundFetchClickEvent: J.JavaScriptObject, BackgroundFetchEvent: J.JavaScriptObject, BackgroundFetchFailEvent: J.JavaScriptObject, BackgroundFetchFetch: J.JavaScriptObject, BackgroundFetchManager: J.JavaScriptObject, BackgroundFetchSettledFetch: J.JavaScriptObject, BackgroundFetchedEvent: J.JavaScriptObject, BarProp: J.JavaScriptObject, BarcodeDetector: J.JavaScriptObject, BeforeInstallPromptEvent: J.JavaScriptObject, BeforeUnloadEvent: J.JavaScriptObject, BlobEvent: J.JavaScriptObject, BluetoothRemoteGATTDescriptor: J.JavaScriptObject, Body: J.JavaScriptObject, BudgetState: J.JavaScriptObject, CacheStorage: J.JavaScriptObject, CanMakePaymentEvent: J.JavaScriptObject, CanvasGradient: J.JavaScriptObject, CanvasPattern: J.JavaScriptObject, CanvasRenderingContext2D: J.JavaScriptObject, Client: J.JavaScriptObject, Clients: J.JavaScriptObject, ClipboardEvent: J.JavaScriptObject, CloseEvent: J.JavaScriptObject, CompositionEvent: J.JavaScriptObject, CookieStore: J.JavaScriptObject, Coordinates: J.JavaScriptObject, Credential: J.JavaScriptObject, CredentialUserData: J.JavaScriptObject, CredentialsContainer: J.JavaScriptObject, Crypto: J.JavaScriptObject, CryptoKey: J.JavaScriptObject, CSS: J.JavaScriptObject, CSSVariableReferenceValue: J.JavaScriptObject, CustomElementRegistry: J.JavaScriptObject, CustomEvent: J.JavaScriptObject, DataTransfer: J.JavaScriptObject, DataTransferItem: J.JavaScriptObject, DeprecatedStorageInfo: J.JavaScriptObject, DeprecatedStorageQuota: J.JavaScriptObject, DeprecationReport: J.JavaScriptObject, DetectedBarcode: J.JavaScriptObject, DetectedFace: J.JavaScriptObject, DetectedText: J.JavaScriptObject, DeviceAcceleration: J.JavaScriptObject, DeviceMotionEvent: J.JavaScriptObject, DeviceOrientationEvent: J.JavaScriptObject, DeviceRotationRate: J.JavaScriptObject, DirectoryEntry: J.JavaScriptObject, webkitFileSystemDirectoryEntry: J.JavaScriptObject, FileSystemDirectoryEntry: J.JavaScriptObject, DirectoryReader: J.JavaScriptObject, WebKitDirectoryReader: J.JavaScriptObject, webkitFileSystemDirectoryReader: J.JavaScriptObject, FileSystemDirectoryReader: J.JavaScriptObject, DocumentOrShadowRoot: J.JavaScriptObject, DocumentTimeline: J.JavaScriptObject, DOMError: J.JavaScriptObject, DOMImplementation: J.JavaScriptObject, Iterator: J.JavaScriptObject, DOMMatrix: J.JavaScriptObject, DOMMatrixReadOnly: J.JavaScriptObject, DOMParser: J.JavaScriptObject, DOMPoint: J.JavaScriptObject, DOMPointReadOnly: J.JavaScriptObject, DOMQuad: J.JavaScriptObject, DOMStringMap: J.JavaScriptObject, Entry: J.JavaScriptObject, webkitFileSystemEntry: J.JavaScriptObject, FileSystemEntry: J.JavaScriptObject, ErrorEvent: J.JavaScriptObject, Event: J.JavaScriptObject, InputEvent: J.JavaScriptObject, SubmitEvent: J.JavaScriptObject, ExtendableEvent: J.JavaScriptObject, ExtendableMessageEvent: J.JavaScriptObject, External: J.JavaScriptObject, FaceDetector: J.JavaScriptObject, FederatedCredential: J.JavaScriptObject, FetchEvent: J.JavaScriptObject, FileEntry: J.JavaScriptObject, webkitFileSystemFileEntry: J.JavaScriptObject, FileSystemFileEntry: J.JavaScriptObject, DOMFileSystem: J.JavaScriptObject, WebKitFileSystem: J.JavaScriptObject, webkitFileSystem: J.JavaScriptObject, FileSystem: J.JavaScriptObject, FocusEvent: J.JavaScriptObject, FontFace: J.JavaScriptObject, FontFaceSetLoadEvent: J.JavaScriptObject, FontFaceSource: J.JavaScriptObject, ForeignFetchEvent: J.JavaScriptObject, FormData: J.JavaScriptObject, GamepadButton: J.JavaScriptObject, GamepadEvent: J.JavaScriptObject, GamepadPose: J.JavaScriptObject, Geolocation: J.JavaScriptObject, Position: J.JavaScriptObject, GeolocationPosition: J.JavaScriptObject, HashChangeEvent: J.JavaScriptObject, Headers: J.JavaScriptObject, HTMLHyperlinkElementUtils: J.JavaScriptObject, IdleDeadline: J.JavaScriptObject, ImageBitmap: J.JavaScriptObject, ImageBitmapRenderingContext: J.JavaScriptObject, ImageCapture: J.JavaScriptObject, ImageData: J.JavaScriptObject, InputDeviceCapabilities: J.JavaScriptObject, InstallEvent: J.JavaScriptObject, IntersectionObserver: J.JavaScriptObject, IntersectionObserverEntry: J.JavaScriptObject, InterventionReport: J.JavaScriptObject, KeyboardEvent: J.JavaScriptObject, KeyframeEffect: J.JavaScriptObject, KeyframeEffectReadOnly: J.JavaScriptObject, MediaCapabilities: J.JavaScriptObject, MediaCapabilitiesInfo: J.JavaScriptObject, MediaDeviceInfo: J.JavaScriptObject, MediaEncryptedEvent: J.JavaScriptObject, MediaError: J.JavaScriptObject, MediaKeyMessageEvent: J.JavaScriptObject, MediaKeyStatusMap: J.JavaScriptObject, MediaKeySystemAccess: J.JavaScriptObject, MediaKeys: J.JavaScriptObject, MediaKeysPolicy: J.JavaScriptObject, MediaMetadata: J.JavaScriptObject, MediaQueryListEvent: J.JavaScriptObject, MediaSession: J.JavaScriptObject, MediaSettingsRange: J.JavaScriptObject, MediaStreamEvent: J.JavaScriptObject, MediaStreamTrackEvent: J.JavaScriptObject, MemoryInfo: J.JavaScriptObject, MessageChannel: J.JavaScriptObject, MessageEvent: J.JavaScriptObject, Metadata: J.JavaScriptObject, MIDIConnectionEvent: J.JavaScriptObject, MIDIMessageEvent: J.JavaScriptObject, MouseEvent: J.JavaScriptObject, DragEvent: J.JavaScriptObject, MutationEvent: J.JavaScriptObject, MutationObserver: J.JavaScriptObject, WebKitMutationObserver: J.JavaScriptObject, MutationRecord: J.JavaScriptObject, NavigationPreloadManager: J.JavaScriptObject, Navigator: J.JavaScriptObject, NavigatorAutomationInformation: J.JavaScriptObject, NavigatorConcurrentHardware: J.JavaScriptObject, NavigatorCookies: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, NodeFilter: J.JavaScriptObject, NodeIterator: J.JavaScriptObject, NonDocumentTypeChildNode: J.JavaScriptObject, NonElementParentNode: J.JavaScriptObject, NoncedElement: J.JavaScriptObject, NotificationEvent: J.JavaScriptObject, OffscreenCanvasRenderingContext2D: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PageTransitionEvent: J.JavaScriptObject, PaintRenderingContext2D: J.JavaScriptObject, PaintSize: J.JavaScriptObject, PaintWorkletGlobalScope: J.JavaScriptObject, PasswordCredential: J.JavaScriptObject, Path2D: J.JavaScriptObject, PaymentAddress: J.JavaScriptObject, PaymentInstruments: J.JavaScriptObject, PaymentManager: J.JavaScriptObject, PaymentRequestEvent: J.JavaScriptObject, PaymentRequestUpdateEvent: J.JavaScriptObject, PaymentResponse: J.JavaScriptObject, PerformanceEntry: J.JavaScriptObject, PerformanceLongTaskTiming: J.JavaScriptObject, PerformanceMark: J.JavaScriptObject, PerformanceMeasure: J.JavaScriptObject, PerformanceNavigation: J.JavaScriptObject, PerformanceNavigationTiming: J.JavaScriptObject, PerformanceObserver: J.JavaScriptObject, PerformanceObserverEntryList: J.JavaScriptObject, PerformancePaintTiming: J.JavaScriptObject, PerformanceResourceTiming: J.JavaScriptObject, PerformanceServerTiming: J.JavaScriptObject, PerformanceTiming: J.JavaScriptObject, Permissions: J.JavaScriptObject, PhotoCapabilities: J.JavaScriptObject, PointerEvent: J.JavaScriptObject, PopStateEvent: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, Presentation: J.JavaScriptObject, PresentationConnectionAvailableEvent: J.JavaScriptObject, PresentationConnectionCloseEvent: J.JavaScriptObject, PresentationReceiver: J.JavaScriptObject, ProgressEvent: J.JavaScriptObject, PromiseRejectionEvent: J.JavaScriptObject, PublicKeyCredential: J.JavaScriptObject, PushEvent: J.JavaScriptObject, PushManager: J.JavaScriptObject, PushMessageData: J.JavaScriptObject, PushSubscription: J.JavaScriptObject, PushSubscriptionOptions: J.JavaScriptObject, Range: J.JavaScriptObject, RelatedApplication: J.JavaScriptObject, ReportBody: J.JavaScriptObject, ReportingObserver: J.JavaScriptObject, ResizeObserver: J.JavaScriptObject, ResizeObserverEntry: J.JavaScriptObject, RTCCertificate: J.JavaScriptObject, RTCDataChannelEvent: J.JavaScriptObject, RTCDTMFToneChangeEvent: J.JavaScriptObject, RTCIceCandidate: J.JavaScriptObject, mozRTCIceCandidate: J.JavaScriptObject, RTCLegacyStatsReport: J.JavaScriptObject, RTCPeerConnectionIceEvent: J.JavaScriptObject, RTCRtpContributingSource: J.JavaScriptObject, RTCRtpReceiver: J.JavaScriptObject, RTCRtpSender: J.JavaScriptObject, RTCSessionDescription: J.JavaScriptObject, mozRTCSessionDescription: J.JavaScriptObject, RTCStatsResponse: J.JavaScriptObject, RTCTrackEvent: J.JavaScriptObject, Screen: J.JavaScriptObject, ScrollState: J.JavaScriptObject, ScrollTimeline: J.JavaScriptObject, SecurityPolicyViolationEvent: J.JavaScriptObject, Selection: J.JavaScriptObject, SensorErrorEvent: J.JavaScriptObject, SharedArrayBuffer: J.JavaScriptObject, SpeechRecognitionAlternative: J.JavaScriptObject, SpeechRecognitionError: J.JavaScriptObject, SpeechRecognitionEvent: J.JavaScriptObject, SpeechSynthesisEvent: J.JavaScriptObject, SpeechSynthesisVoice: J.JavaScriptObject, StaticRange: J.JavaScriptObject, StorageEvent: J.JavaScriptObject, StorageManager: J.JavaScriptObject, StyleMedia: J.JavaScriptObject, StylePropertyMap: J.JavaScriptObject, StylePropertyMapReadonly: J.JavaScriptObject, SyncEvent: J.JavaScriptObject, SyncManager: J.JavaScriptObject, TaskAttributionTiming: J.JavaScriptObject, TextDetector: J.JavaScriptObject, TextEvent: J.JavaScriptObject, TextMetrics: J.JavaScriptObject, TouchEvent: J.JavaScriptObject, TrackDefault: J.JavaScriptObject, TrackEvent: J.JavaScriptObject, TransitionEvent: J.JavaScriptObject, WebKitTransitionEvent: J.JavaScriptObject, TreeWalker: J.JavaScriptObject, TrustedHTML: J.JavaScriptObject, TrustedScriptURL: J.JavaScriptObject, TrustedURL: J.JavaScriptObject, UIEvent: J.JavaScriptObject, UnderlyingSourceBase: J.JavaScriptObject, URLSearchParams: J.JavaScriptObject, VRCoordinateSystem: J.JavaScriptObject, VRDeviceEvent: J.JavaScriptObject, VRDisplayCapabilities: J.JavaScriptObject, VRDisplayEvent: J.JavaScriptObject, VREyeParameters: J.JavaScriptObject, VRFrameData: J.JavaScriptObject, VRFrameOfReference: J.JavaScriptObject, VRPose: J.JavaScriptObject, VRSessionEvent: J.JavaScriptObject, VRStageBounds: J.JavaScriptObject, VRStageBoundsPoint: J.JavaScriptObject, VRStageParameters: J.JavaScriptObject, ValidityState: J.JavaScriptObject, VideoPlaybackQuality: J.JavaScriptObject, VideoTrack: J.JavaScriptObject, VTTRegion: J.JavaScriptObject, WheelEvent: J.JavaScriptObject, WindowClient: J.JavaScriptObject, WorkletAnimation: J.JavaScriptObject, WorkletGlobalScope: J.JavaScriptObject, XPathEvaluator: J.JavaScriptObject, XPathExpression: J.JavaScriptObject, XPathNSResolver: J.JavaScriptObject, XPathResult: J.JavaScriptObject, XMLSerializer: J.JavaScriptObject, XSLTProcessor: J.JavaScriptObject, Bluetooth: J.JavaScriptObject, BluetoothCharacteristicProperties: J.JavaScriptObject, BluetoothRemoteGATTServer: J.JavaScriptObject, BluetoothRemoteGATTService: J.JavaScriptObject, BluetoothUUID: J.JavaScriptObject, BudgetService: J.JavaScriptObject, Cache: J.JavaScriptObject, DOMFileSystemSync: J.JavaScriptObject, DirectoryEntrySync: J.JavaScriptObject, DirectoryReaderSync: J.JavaScriptObject, EntrySync: J.JavaScriptObject, FileEntrySync: J.JavaScriptObject, FileReaderSync: J.JavaScriptObject, FileWriterSync: J.JavaScriptObject, HTMLAllCollection: J.JavaScriptObject, Mojo: J.JavaScriptObject, MojoHandle: J.JavaScriptObject, MojoInterfaceRequestEvent: J.JavaScriptObject, MojoWatcher: J.JavaScriptObject, NFC: J.JavaScriptObject, PagePopupController: J.JavaScriptObject, Report: J.JavaScriptObject, Request: J.JavaScriptObject, ResourceProgressEvent: J.JavaScriptObject, Response: J.JavaScriptObject, SubtleCrypto: J.JavaScriptObject, USBAlternateInterface: J.JavaScriptObject, USBConfiguration: J.JavaScriptObject, USBConnectionEvent: J.JavaScriptObject, USBDevice: J.JavaScriptObject, USBEndpoint: J.JavaScriptObject, USBInTransferResult: J.JavaScriptObject, USBInterface: J.JavaScriptObject, USBIsochronousInTransferPacket: J.JavaScriptObject, USBIsochronousInTransferResult: J.JavaScriptObject, USBIsochronousOutTransferPacket: J.JavaScriptObject, USBIsochronousOutTransferResult: J.JavaScriptObject, USBOutTransferResult: J.JavaScriptObject, WorkerLocation: J.JavaScriptObject, WorkerNavigator: J.JavaScriptObject, Worklet: J.JavaScriptObject, IDBCursor: J.JavaScriptObject, IDBCursorWithValue: J.JavaScriptObject, IDBFactory: J.JavaScriptObject, IDBIndex: J.JavaScriptObject, IDBKeyRange: J.JavaScriptObject, IDBObjectStore: J.JavaScriptObject, IDBObservation: J.JavaScriptObject, IDBObserver: J.JavaScriptObject, IDBObserverChanges: J.JavaScriptObject, IDBVersionChangeEvent: J.JavaScriptObject, SVGAngle: J.JavaScriptObject, SVGAnimatedAngle: J.JavaScriptObject, SVGAnimatedBoolean: J.JavaScriptObject, SVGAnimatedEnumeration: J.JavaScriptObject, SVGAnimatedInteger: J.JavaScriptObject, SVGAnimatedLength: J.JavaScriptObject, SVGAnimatedLengthList: J.JavaScriptObject, SVGAnimatedNumber: J.JavaScriptObject, SVGAnimatedNumberList: J.JavaScriptObject, SVGAnimatedPreserveAspectRatio: J.JavaScriptObject, SVGAnimatedRect: J.JavaScriptObject, SVGAnimatedString: J.JavaScriptObject, SVGAnimatedTransformList: J.JavaScriptObject, SVGMatrix: J.JavaScriptObject, SVGPoint: J.JavaScriptObject, SVGPreserveAspectRatio: J.JavaScriptObject, SVGRect: J.JavaScriptObject, SVGUnitTypes: J.JavaScriptObject, AudioListener: J.JavaScriptObject, AudioParam: J.JavaScriptObject, AudioProcessingEvent: J.JavaScriptObject, AudioTrack: J.JavaScriptObject, AudioWorkletGlobalScope: J.JavaScriptObject, AudioWorkletProcessor: J.JavaScriptObject, OfflineAudioCompletionEvent: J.JavaScriptObject, PeriodicWave: J.JavaScriptObject, WebGLActiveInfo: J.JavaScriptObject, ANGLEInstancedArrays: J.JavaScriptObject, ANGLE_instanced_arrays: J.JavaScriptObject, WebGLBuffer: J.JavaScriptObject, WebGLCanvas: J.JavaScriptObject, WebGLColorBufferFloat: J.JavaScriptObject, WebGLCompressedTextureASTC: J.JavaScriptObject, WebGLCompressedTextureATC: J.JavaScriptObject, WEBGL_compressed_texture_atc: J.JavaScriptObject, WebGLCompressedTextureETC1: J.JavaScriptObject, WEBGL_compressed_texture_etc1: J.JavaScriptObject, WebGLCompressedTextureETC: J.JavaScriptObject, WebGLCompressedTexturePVRTC: J.JavaScriptObject, WEBGL_compressed_texture_pvrtc: J.JavaScriptObject, WebGLCompressedTextureS3TC: J.JavaScriptObject, WEBGL_compressed_texture_s3tc: J.JavaScriptObject, WebGLCompressedTextureS3TCsRGB: J.JavaScriptObject, WebGLContextEvent: J.JavaScriptObject, WebGLDebugRendererInfo: J.JavaScriptObject, WEBGL_debug_renderer_info: J.JavaScriptObject, WebGLDebugShaders: J.JavaScriptObject, WEBGL_debug_shaders: J.JavaScriptObject, WebGLDepthTexture: J.JavaScriptObject, WEBGL_depth_texture: J.JavaScriptObject, WebGLDrawBuffers: J.JavaScriptObject, WEBGL_draw_buffers: J.JavaScriptObject, EXTsRGB: J.JavaScriptObject, EXT_sRGB: J.JavaScriptObject, EXTBlendMinMax: J.JavaScriptObject, EXT_blend_minmax: J.JavaScriptObject, EXTColorBufferFloat: J.JavaScriptObject, EXTColorBufferHalfFloat: J.JavaScriptObject, EXTDisjointTimerQuery: J.JavaScriptObject, EXTDisjointTimerQueryWebGL2: J.JavaScriptObject, EXTFragDepth: J.JavaScriptObject, EXT_frag_depth: J.JavaScriptObject, EXTShaderTextureLOD: J.JavaScriptObject, EXT_shader_texture_lod: J.JavaScriptObject, EXTTextureFilterAnisotropic: J.JavaScriptObject, EXT_texture_filter_anisotropic: J.JavaScriptObject, WebGLFramebuffer: J.JavaScriptObject, WebGLGetBufferSubDataAsync: J.JavaScriptObject, WebGLLoseContext: J.JavaScriptObject, WebGLExtensionLoseContext: J.JavaScriptObject, WEBGL_lose_context: J.JavaScriptObject, OESElementIndexUint: J.JavaScriptObject, OES_element_index_uint: J.JavaScriptObject, OESStandardDerivatives: J.JavaScriptObject, OES_standard_derivatives: J.JavaScriptObject, OESTextureFloat: J.JavaScriptObject, OES_texture_float: J.JavaScriptObject, OESTextureFloatLinear: J.JavaScriptObject, OES_texture_float_linear: J.JavaScriptObject, OESTextureHalfFloat: J.JavaScriptObject, OES_texture_half_float: J.JavaScriptObject, OESTextureHalfFloatLinear: J.JavaScriptObject, OES_texture_half_float_linear: J.JavaScriptObject, OESVertexArrayObject: J.JavaScriptObject, OES_vertex_array_object: J.JavaScriptObject, WebGLProgram: J.JavaScriptObject, WebGLQuery: J.JavaScriptObject, WebGLRenderbuffer: J.JavaScriptObject, WebGLRenderingContext: J.JavaScriptObject, WebGL2RenderingContext: J.JavaScriptObject, WebGLSampler: J.JavaScriptObject, WebGLShader: J.JavaScriptObject, WebGLShaderPrecisionFormat: J.JavaScriptObject, WebGLSync: J.JavaScriptObject, WebGLTexture: J.JavaScriptObject, WebGLTimerQueryEXT: J.JavaScriptObject, WebGLTransformFeedback: J.JavaScriptObject, WebGLUniformLocation: J.JavaScriptObject, WebGLVertexArrayObject: J.JavaScriptObject, WebGLVertexArrayObjectOES: J.JavaScriptObject, WebGL2RenderingContextBase: J.JavaScriptObject, ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List, HTMLAudioElement: A.HtmlElement, HTMLBRElement: A.HtmlElement, HTMLBaseElement: A.HtmlElement, HTMLBodyElement: A.HtmlElement, HTMLButtonElement: A.HtmlElement, HTMLCanvasElement: A.HtmlElement, HTMLContentElement: A.HtmlElement, HTMLDListElement: A.HtmlElement, HTMLDataElement: A.HtmlElement, HTMLDataListElement: A.HtmlElement, HTMLDetailsElement: A.HtmlElement, HTMLDialogElement: A.HtmlElement, HTMLDivElement: A.HtmlElement, HTMLEmbedElement: A.HtmlElement, HTMLFieldSetElement: A.HtmlElement, HTMLHRElement: A.HtmlElement, HTMLHeadElement: A.HtmlElement, HTMLHeadingElement: A.HtmlElement, HTMLHtmlElement: A.HtmlElement, HTMLIFrameElement: A.HtmlElement, HTMLImageElement: A.HtmlElement, HTMLInputElement: A.HtmlElement, HTMLLIElement: A.HtmlElement, HTMLLabelElement: A.HtmlElement, HTMLLegendElement: A.HtmlElement, HTMLLinkElement: A.HtmlElement, HTMLMapElement: A.HtmlElement, HTMLMediaElement: A.HtmlElement, HTMLMenuElement: A.HtmlElement, HTMLMetaElement: A.HtmlElement, HTMLMeterElement: A.HtmlElement, HTMLModElement: A.HtmlElement, HTMLOListElement: A.HtmlElement, HTMLObjectElement: A.HtmlElement, HTMLOptGroupElement: A.HtmlElement, HTMLOptionElement: A.HtmlElement, HTMLOutputElement: A.HtmlElement, HTMLParagraphElement: A.HtmlElement, HTMLParamElement: A.HtmlElement, HTMLPictureElement: A.HtmlElement, HTMLPreElement: A.HtmlElement, HTMLProgressElement: A.HtmlElement, HTMLQuoteElement: A.HtmlElement, HTMLScriptElement: A.HtmlElement, HTMLShadowElement: A.HtmlElement, HTMLSlotElement: A.HtmlElement, HTMLSourceElement: A.HtmlElement, HTMLSpanElement: A.HtmlElement, HTMLStyleElement: A.HtmlElement, HTMLTableCaptionElement: A.HtmlElement, HTMLTableCellElement: A.HtmlElement, HTMLTableDataCellElement: A.HtmlElement, HTMLTableHeaderCellElement: A.HtmlElement, HTMLTableColElement: A.HtmlElement, HTMLTableElement: A.HtmlElement, HTMLTableRowElement: A.HtmlElement, HTMLTableSectionElement: A.HtmlElement, HTMLTemplateElement: A.HtmlElement, HTMLTextAreaElement: A.HtmlElement, HTMLTimeElement: A.HtmlElement, HTMLTitleElement: A.HtmlElement, HTMLTrackElement: A.HtmlElement, HTMLUListElement: A.HtmlElement, HTMLUnknownElement: A.HtmlElement, HTMLVideoElement: A.HtmlElement, HTMLDirectoryElement: A.HtmlElement, HTMLFontElement: A.HtmlElement, HTMLFrameElement: A.HtmlElement, HTMLFrameSetElement: A.HtmlElement, HTMLMarqueeElement: A.HtmlElement, HTMLElement: A.HtmlElement, AccessibleNodeList: A.AccessibleNodeList, HTMLAnchorElement: A.AnchorElement, HTMLAreaElement: A.AreaElement, Blob: A.Blob, CDATASection: A.CharacterData, CharacterData: A.CharacterData, Comment: A.CharacterData, ProcessingInstruction: A.CharacterData, Text: A.CharacterData, CSSPerspective: A.CssPerspective, CSSCharsetRule: A.CssRule, CSSConditionRule: A.CssRule, CSSFontFaceRule: A.CssRule, CSSGroupingRule: A.CssRule, CSSImportRule: A.CssRule, CSSKeyframeRule: A.CssRule, MozCSSKeyframeRule: A.CssRule, WebKitCSSKeyframeRule: A.CssRule, CSSKeyframesRule: A.CssRule, MozCSSKeyframesRule: A.CssRule, WebKitCSSKeyframesRule: A.CssRule, CSSMediaRule: A.CssRule, CSSNamespaceRule: A.CssRule, CSSPageRule: A.CssRule, CSSRule: A.CssRule, CSSStyleRule: A.CssRule, CSSSupportsRule: A.CssRule, CSSViewportRule: A.CssRule, CSSStyleDeclaration: A.CssStyleDeclaration, MSStyleCSSProperties: A.CssStyleDeclaration, CSS2Properties: A.CssStyleDeclaration, CSSImageValue: A.CssStyleValue, CSSKeywordValue: A.CssStyleValue, CSSNumericValue: A.CssStyleValue, CSSPositionValue: A.CssStyleValue, CSSResourceValue: A.CssStyleValue, CSSUnitValue: A.CssStyleValue, CSSURLImageValue: A.CssStyleValue, CSSStyleValue: A.CssStyleValue, CSSMatrixComponent: A.CssTransformComponent, CSSRotation: A.CssTransformComponent, CSSScale: A.CssTransformComponent, CSSSkew: A.CssTransformComponent, CSSTranslation: A.CssTransformComponent, CSSTransformComponent: A.CssTransformComponent, CSSTransformValue: A.CssTransformValue, CSSUnparsedValue: A.CssUnparsedValue, DataTransferItemList: A.DataTransferItemList, DOMException: A.DomException0, ClientRectList: A.DomRectList, DOMRectList: A.DomRectList, DOMRectReadOnly: A.DomRectReadOnly0, DOMStringList: A.DomStringList, DOMTokenList: A.DomTokenList0, MathMLElement: A.Element, SVGAElement: A.Element, SVGAnimateElement: A.Element, SVGAnimateMotionElement: A.Element, SVGAnimateTransformElement: A.Element, SVGAnimationElement: A.Element, SVGCircleElement: A.Element, SVGClipPathElement: A.Element, SVGDefsElement: A.Element, SVGDescElement: A.Element, SVGDiscardElement: A.Element, SVGEllipseElement: A.Element, SVGFEBlendElement: A.Element, SVGFEColorMatrixElement: A.Element, SVGFEComponentTransferElement: A.Element, SVGFECompositeElement: A.Element, SVGFEConvolveMatrixElement: A.Element, SVGFEDiffuseLightingElement: A.Element, SVGFEDisplacementMapElement: A.Element, SVGFEDistantLightElement: A.Element, SVGFEFloodElement: A.Element, SVGFEFuncAElement: A.Element, SVGFEFuncBElement: A.Element, SVGFEFuncGElement: A.Element, SVGFEFuncRElement: A.Element, SVGFEGaussianBlurElement: A.Element, SVGFEImageElement: A.Element, SVGFEMergeElement: A.Element, SVGFEMergeNodeElement: A.Element, SVGFEMorphologyElement: A.Element, SVGFEOffsetElement: A.Element, SVGFEPointLightElement: A.Element, SVGFESpecularLightingElement: A.Element, SVGFESpotLightElement: A.Element, SVGFETileElement: A.Element, SVGFETurbulenceElement: A.Element, SVGFilterElement: A.Element, SVGForeignObjectElement: A.Element, SVGGElement: A.Element, SVGGeometryElement: A.Element, SVGGraphicsElement: A.Element, SVGImageElement: A.Element, SVGLineElement: A.Element, SVGLinearGradientElement: A.Element, SVGMarkerElement: A.Element, SVGMaskElement: A.Element, SVGMetadataElement: A.Element, SVGPathElement: A.Element, SVGPatternElement: A.Element, SVGPolygonElement: A.Element, SVGPolylineElement: A.Element, SVGRadialGradientElement: A.Element, SVGRectElement: A.Element, SVGScriptElement: A.Element, SVGSetElement: A.Element, SVGStopElement: A.Element, SVGStyleElement: A.Element, SVGElement: A.Element, SVGSVGElement: A.Element, SVGSwitchElement: A.Element, SVGSymbolElement: A.Element, SVGTSpanElement: A.Element, SVGTextContentElement: A.Element, SVGTextElement: A.Element, SVGTextPathElement: A.Element, SVGTextPositioningElement: A.Element, SVGTitleElement: A.Element, SVGUseElement: A.Element, SVGViewElement: A.Element, SVGGradientElement: A.Element, SVGComponentTransferFunctionElement: A.Element, SVGFEDropShadowElement: A.Element, SVGMPathElement: A.Element, Element: A.Element, AbsoluteOrientationSensor: A.EventTarget, Accelerometer: A.EventTarget, AccessibleNode: A.EventTarget, AmbientLightSensor: A.EventTarget, Animation: A.EventTarget, ApplicationCache: A.EventTarget, DOMApplicationCache: A.EventTarget, OfflineResourceList: A.EventTarget, BackgroundFetchRegistration: A.EventTarget, BatteryManager: A.EventTarget, BroadcastChannel: A.EventTarget, CanvasCaptureMediaStreamTrack: A.EventTarget, DedicatedWorkerGlobalScope: A.EventTarget, EventSource: A.EventTarget, FileReader: A.EventTarget, FontFaceSet: A.EventTarget, Gyroscope: A.EventTarget, XMLHttpRequest: A.EventTarget, XMLHttpRequestEventTarget: A.EventTarget, XMLHttpRequestUpload: A.EventTarget, LinearAccelerationSensor: A.EventTarget, Magnetometer: A.EventTarget, MediaDevices: A.EventTarget, MediaKeySession: A.EventTarget, MediaQueryList: A.EventTarget, MediaRecorder: A.EventTarget, MediaSource: A.EventTarget, MediaStream: A.EventTarget, MediaStreamTrack: A.EventTarget, MessagePort: A.EventTarget, MIDIAccess: A.EventTarget, MIDIInput: A.EventTarget, MIDIOutput: A.EventTarget, MIDIPort: A.EventTarget, NetworkInformation: A.EventTarget, Notification: A.EventTarget, OffscreenCanvas: A.EventTarget, OrientationSensor: A.EventTarget, PaymentRequest: A.EventTarget, Performance: A.EventTarget, PermissionStatus: A.EventTarget, PresentationAvailability: A.EventTarget, PresentationConnection: A.EventTarget, PresentationConnectionList: A.EventTarget, PresentationRequest: A.EventTarget, RelativeOrientationSensor: A.EventTarget, RemotePlayback: A.EventTarget, RTCDataChannel: A.EventTarget, DataChannel: A.EventTarget, RTCDTMFSender: A.EventTarget, RTCPeerConnection: A.EventTarget, webkitRTCPeerConnection: A.EventTarget, mozRTCPeerConnection: A.EventTarget, ScreenOrientation: A.EventTarget, Sensor: A.EventTarget, ServiceWorker: A.EventTarget, ServiceWorkerContainer: A.EventTarget, ServiceWorkerGlobalScope: A.EventTarget, ServiceWorkerRegistration: A.EventTarget, SharedWorker: A.EventTarget, SharedWorkerGlobalScope: A.EventTarget, SpeechRecognition: A.EventTarget, webkitSpeechRecognition: A.EventTarget, SpeechSynthesis: A.EventTarget, SpeechSynthesisUtterance: A.EventTarget, VR: A.EventTarget, VRDevice: A.EventTarget, VRDisplay: A.EventTarget, VRSession: A.EventTarget, VisualViewport: A.EventTarget, WebSocket: A.EventTarget, Window: A.EventTarget, DOMWindow: A.EventTarget, Worker: A.EventTarget, WorkerGlobalScope: A.EventTarget, WorkerPerformance: A.EventTarget, BluetoothDevice: A.EventTarget, BluetoothRemoteGATTCharacteristic: A.EventTarget, Clipboard: A.EventTarget, MojoInterfaceInterceptor: A.EventTarget, USB: A.EventTarget, IDBDatabase: A.EventTarget, IDBOpenDBRequest: A.EventTarget, IDBVersionChangeRequest: A.EventTarget, IDBRequest: A.EventTarget, IDBTransaction: A.EventTarget, AnalyserNode: A.EventTarget, RealtimeAnalyserNode: A.EventTarget, AudioBufferSourceNode: A.EventTarget, AudioDestinationNode: A.EventTarget, AudioNode: A.EventTarget, AudioScheduledSourceNode: A.EventTarget, AudioWorkletNode: A.EventTarget, BiquadFilterNode: A.EventTarget, ChannelMergerNode: A.EventTarget, AudioChannelMerger: A.EventTarget, ChannelSplitterNode: A.EventTarget, AudioChannelSplitter: A.EventTarget, ConstantSourceNode: A.EventTarget, ConvolverNode: A.EventTarget, DelayNode: A.EventTarget, DynamicsCompressorNode: A.EventTarget, GainNode: A.EventTarget, AudioGainNode: A.EventTarget, IIRFilterNode: A.EventTarget, MediaElementAudioSourceNode: A.EventTarget, MediaStreamAudioDestinationNode: A.EventTarget, MediaStreamAudioSourceNode: A.EventTarget, OscillatorNode: A.EventTarget, Oscillator: A.EventTarget, PannerNode: A.EventTarget, AudioPannerNode: A.EventTarget, webkitAudioPannerNode: A.EventTarget, ScriptProcessorNode: A.EventTarget, JavaScriptAudioNode: A.EventTarget, StereoPannerNode: A.EventTarget, WaveShaperNode: A.EventTarget, EventTarget: A.EventTarget, File: A.File, FileList: A.FileList, FileWriter: A.FileWriter, HTMLFormElement: A.FormElement, Gamepad: A.Gamepad, History: A.History, HTMLCollection: A.HtmlCollection, HTMLFormControlsCollection: A.HtmlCollection, HTMLOptionsCollection: A.HtmlCollection, Location: A.Location, MediaList: A.MediaList, MIDIInputMap: A.MidiInputMap, MIDIOutputMap: A.MidiOutputMap, MimeType: A.MimeType, MimeTypeArray: A.MimeTypeArray, Document: A.Node, DocumentFragment: A.Node, HTMLDocument: A.Node, ShadowRoot: A.Node, XMLDocument: A.Node, Attr: A.Node, DocumentType: A.Node, Node: A.Node, NodeList: A.NodeList, RadioNodeList: A.NodeList, Plugin: A.Plugin, PluginArray: A.PluginArray, RTCStatsReport: A.RtcStatsReport, HTMLSelectElement: A.SelectElement, SourceBuffer: A.SourceBuffer, SourceBufferList: A.SourceBufferList, SpeechGrammar: A.SpeechGrammar, SpeechGrammarList: A.SpeechGrammarList, SpeechRecognitionResult: A.SpeechRecognitionResult, Storage: A.Storage, CSSStyleSheet: A.StyleSheet, StyleSheet: A.StyleSheet, TextTrack: A.TextTrack, TextTrackCue: A.TextTrackCue, VTTCue: A.TextTrackCue, TextTrackCueList: A.TextTrackCueList, TextTrackList: A.TextTrackList, TimeRanges: A.TimeRanges, Touch: A.Touch, TouchList: A.TouchList, TrackDefaultList: A.TrackDefaultList, URL: A.Url, VideoTrackList: A.VideoTrackList, CSSRuleList: A._CssRuleList, ClientRect: A._DomRect, DOMRect: A._DomRect, GamepadList: A._GamepadList, NamedNodeMap: A._NamedNodeMap, MozNamedAttrMap: A._NamedNodeMap, SpeechRecognitionResultList: A._SpeechRecognitionResultList, StyleSheetList: A._StyleSheetList, SVGLength: A.Length, SVGLengthList: A.LengthList, SVGNumber: A.Number, SVGNumberList: A.NumberList, SVGPointList: A.PointList, SVGStringList: A.StringList, SVGTransform: A.Transform, SVGTransformList: A.TransformList, AudioBuffer: A.AudioBuffer, AudioParamMap: A.AudioParamMap, AudioTrackList: A.AudioTrackList, AudioContext: A.BaseAudioContext, webkitAudioContext: A.BaseAudioContext, BaseAudioContext: A.BaseAudioContext, OfflineAudioContext: A.OfflineAudioContext});
    hunkHelpers.setOrUpdateLeafTags({WebGL: true, AbortPaymentEvent: true, AnimationEffectReadOnly: true, AnimationEffectTiming: true, AnimationEffectTimingReadOnly: true, AnimationEvent: true, AnimationPlaybackEvent: true, AnimationTimeline: true, AnimationWorkletGlobalScope: true, ApplicationCacheErrorEvent: true, AuthenticatorAssertionResponse: true, AuthenticatorAttestationResponse: true, AuthenticatorResponse: true, BackgroundFetchClickEvent: true, BackgroundFetchEvent: true, BackgroundFetchFailEvent: true, BackgroundFetchFetch: true, BackgroundFetchManager: true, BackgroundFetchSettledFetch: true, BackgroundFetchedEvent: true, BarProp: true, BarcodeDetector: true, BeforeInstallPromptEvent: true, BeforeUnloadEvent: true, BlobEvent: true, BluetoothRemoteGATTDescriptor: true, Body: true, BudgetState: true, CacheStorage: true, CanMakePaymentEvent: true, CanvasGradient: true, CanvasPattern: true, CanvasRenderingContext2D: true, Client: true, Clients: true, ClipboardEvent: true, CloseEvent: true, CompositionEvent: true, CookieStore: true, Coordinates: true, Credential: true, CredentialUserData: true, CredentialsContainer: true, Crypto: true, CryptoKey: true, CSS: true, CSSVariableReferenceValue: true, CustomElementRegistry: true, CustomEvent: true, DataTransfer: true, DataTransferItem: true, DeprecatedStorageInfo: true, DeprecatedStorageQuota: true, DeprecationReport: true, DetectedBarcode: true, DetectedFace: true, DetectedText: true, DeviceAcceleration: true, DeviceMotionEvent: true, DeviceOrientationEvent: true, DeviceRotationRate: true, DirectoryEntry: true, webkitFileSystemDirectoryEntry: true, FileSystemDirectoryEntry: true, DirectoryReader: true, WebKitDirectoryReader: true, webkitFileSystemDirectoryReader: true, FileSystemDirectoryReader: true, DocumentOrShadowRoot: true, DocumentTimeline: true, DOMError: true, DOMImplementation: true, Iterator: true, DOMMatrix: true, DOMMatrixReadOnly: true, DOMParser: true, DOMPoint: true, DOMPointReadOnly: true, DOMQuad: true, DOMStringMap: true, Entry: true, webkitFileSystemEntry: true, FileSystemEntry: true, ErrorEvent: true, Event: true, InputEvent: true, SubmitEvent: true, ExtendableEvent: true, ExtendableMessageEvent: true, External: true, FaceDetector: true, FederatedCredential: true, FetchEvent: true, FileEntry: true, webkitFileSystemFileEntry: true, FileSystemFileEntry: true, DOMFileSystem: true, WebKitFileSystem: true, webkitFileSystem: true, FileSystem: true, FocusEvent: true, FontFace: true, FontFaceSetLoadEvent: true, FontFaceSource: true, ForeignFetchEvent: true, FormData: true, GamepadButton: true, GamepadEvent: true, GamepadPose: true, Geolocation: true, Position: true, GeolocationPosition: true, HashChangeEvent: true, Headers: true, HTMLHyperlinkElementUtils: true, IdleDeadline: true, ImageBitmap: true, ImageBitmapRenderingContext: true, ImageCapture: true, ImageData: true, InputDeviceCapabilities: true, InstallEvent: true, IntersectionObserver: true, IntersectionObserverEntry: true, InterventionReport: true, KeyboardEvent: true, KeyframeEffect: true, KeyframeEffectReadOnly: true, MediaCapabilities: true, MediaCapabilitiesInfo: true, MediaDeviceInfo: true, MediaEncryptedEvent: true, MediaError: true, MediaKeyMessageEvent: true, MediaKeyStatusMap: true, MediaKeySystemAccess: true, MediaKeys: true, MediaKeysPolicy: true, MediaMetadata: true, MediaQueryListEvent: true, MediaSession: true, MediaSettingsRange: true, MediaStreamEvent: true, MediaStreamTrackEvent: true, MemoryInfo: true, MessageChannel: true, MessageEvent: true, Metadata: true, MIDIConnectionEvent: true, MIDIMessageEvent: true, MouseEvent: true, DragEvent: true, MutationEvent: true, MutationObserver: true, WebKitMutationObserver: true, MutationRecord: true, NavigationPreloadManager: true, Navigator: true, NavigatorAutomationInformation: true, NavigatorConcurrentHardware: true, NavigatorCookies: true, NavigatorUserMediaError: true, NodeFilter: true, NodeIterator: true, NonDocumentTypeChildNode: true, NonElementParentNode: true, NoncedElement: true, NotificationEvent: true, OffscreenCanvasRenderingContext2D: true, OverconstrainedError: true, PageTransitionEvent: true, PaintRenderingContext2D: true, PaintSize: true, PaintWorkletGlobalScope: true, PasswordCredential: true, Path2D: true, PaymentAddress: true, PaymentInstruments: true, PaymentManager: true, PaymentRequestEvent: true, PaymentRequestUpdateEvent: true, PaymentResponse: true, PerformanceEntry: true, PerformanceLongTaskTiming: true, PerformanceMark: true, PerformanceMeasure: true, PerformanceNavigation: true, PerformanceNavigationTiming: true, PerformanceObserver: true, PerformanceObserverEntryList: true, PerformancePaintTiming: true, PerformanceResourceTiming: true, PerformanceServerTiming: true, PerformanceTiming: true, Permissions: true, PhotoCapabilities: true, PointerEvent: true, PopStateEvent: true, PositionError: true, GeolocationPositionError: true, Presentation: true, PresentationConnectionAvailableEvent: true, PresentationConnectionCloseEvent: true, PresentationReceiver: true, ProgressEvent: true, PromiseRejectionEvent: true, PublicKeyCredential: true, PushEvent: true, PushManager: true, PushMessageData: true, PushSubscription: true, PushSubscriptionOptions: true, Range: true, RelatedApplication: true, ReportBody: true, ReportingObserver: true, ResizeObserver: true, ResizeObserverEntry: true, RTCCertificate: true, RTCDataChannelEvent: true, RTCDTMFToneChangeEvent: true, RTCIceCandidate: true, mozRTCIceCandidate: true, RTCLegacyStatsReport: true, RTCPeerConnectionIceEvent: true, RTCRtpContributingSource: true, RTCRtpReceiver: true, RTCRtpSender: true, RTCSessionDescription: true, mozRTCSessionDescription: true, RTCStatsResponse: true, RTCTrackEvent: true, Screen: true, ScrollState: true, ScrollTimeline: true, SecurityPolicyViolationEvent: true, Selection: true, SensorErrorEvent: true, SharedArrayBuffer: true, SpeechRecognitionAlternative: true, SpeechRecognitionError: true, SpeechRecognitionEvent: true, SpeechSynthesisEvent: true, SpeechSynthesisVoice: true, StaticRange: true, StorageEvent: true, StorageManager: true, StyleMedia: true, StylePropertyMap: true, StylePropertyMapReadonly: true, SyncEvent: true, SyncManager: true, TaskAttributionTiming: true, TextDetector: true, TextEvent: true, TextMetrics: true, TouchEvent: true, TrackDefault: true, TrackEvent: true, TransitionEvent: true, WebKitTransitionEvent: true, TreeWalker: true, TrustedHTML: true, TrustedScriptURL: true, TrustedURL: true, UIEvent: true, UnderlyingSourceBase: true, URLSearchParams: true, VRCoordinateSystem: true, VRDeviceEvent: true, VRDisplayCapabilities: true, VRDisplayEvent: true, VREyeParameters: true, VRFrameData: true, VRFrameOfReference: true, VRPose: true, VRSessionEvent: true, VRStageBounds: true, VRStageBoundsPoint: true, VRStageParameters: true, ValidityState: true, VideoPlaybackQuality: true, VideoTrack: true, VTTRegion: true, WheelEvent: true, WindowClient: true, WorkletAnimation: true, WorkletGlobalScope: true, XPathEvaluator: true, XPathExpression: true, XPathNSResolver: true, XPathResult: true, XMLSerializer: true, XSLTProcessor: true, Bluetooth: true, BluetoothCharacteristicProperties: true, BluetoothRemoteGATTServer: true, BluetoothRemoteGATTService: true, BluetoothUUID: true, BudgetService: true, Cache: true, DOMFileSystemSync: true, DirectoryEntrySync: true, DirectoryReaderSync: true, EntrySync: true, FileEntrySync: true, FileReaderSync: true, FileWriterSync: true, HTMLAllCollection: true, Mojo: true, MojoHandle: true, MojoInterfaceRequestEvent: true, MojoWatcher: true, NFC: true, PagePopupController: true, Report: true, Request: true, ResourceProgressEvent: true, Response: true, SubtleCrypto: true, USBAlternateInterface: true, USBConfiguration: true, USBConnectionEvent: true, USBDevice: true, USBEndpoint: true, USBInTransferResult: true, USBInterface: true, USBIsochronousInTransferPacket: true, USBIsochronousInTransferResult: true, USBIsochronousOutTransferPacket: true, USBIsochronousOutTransferResult: true, USBOutTransferResult: true, WorkerLocation: true, WorkerNavigator: true, Worklet: true, IDBCursor: true, IDBCursorWithValue: true, IDBFactory: true, IDBIndex: true, IDBKeyRange: true, IDBObjectStore: true, IDBObservation: true, IDBObserver: true, IDBObserverChanges: true, IDBVersionChangeEvent: true, SVGAngle: true, SVGAnimatedAngle: true, SVGAnimatedBoolean: true, SVGAnimatedEnumeration: true, SVGAnimatedInteger: true, SVGAnimatedLength: true, SVGAnimatedLengthList: true, SVGAnimatedNumber: true, SVGAnimatedNumberList: true, SVGAnimatedPreserveAspectRatio: true, SVGAnimatedRect: true, SVGAnimatedString: true, SVGAnimatedTransformList: true, SVGMatrix: true, SVGPoint: true, SVGPreserveAspectRatio: true, SVGRect: true, SVGUnitTypes: true, AudioListener: true, AudioParam: true, AudioProcessingEvent: true, AudioTrack: true, AudioWorkletGlobalScope: true, AudioWorkletProcessor: true, OfflineAudioCompletionEvent: true, PeriodicWave: true, WebGLActiveInfo: true, ANGLEInstancedArrays: true, ANGLE_instanced_arrays: true, WebGLBuffer: true, WebGLCanvas: true, WebGLColorBufferFloat: true, WebGLCompressedTextureASTC: true, WebGLCompressedTextureATC: true, WEBGL_compressed_texture_atc: true, WebGLCompressedTextureETC1: true, WEBGL_compressed_texture_etc1: true, WebGLCompressedTextureETC: true, WebGLCompressedTexturePVRTC: true, WEBGL_compressed_texture_pvrtc: true, WebGLCompressedTextureS3TC: true, WEBGL_compressed_texture_s3tc: true, WebGLCompressedTextureS3TCsRGB: true, WebGLContextEvent: true, WebGLDebugRendererInfo: true, WEBGL_debug_renderer_info: true, WebGLDebugShaders: true, WEBGL_debug_shaders: true, WebGLDepthTexture: true, WEBGL_depth_texture: true, WebGLDrawBuffers: true, WEBGL_draw_buffers: true, EXTsRGB: true, EXT_sRGB: true, EXTBlendMinMax: true, EXT_blend_minmax: true, EXTColorBufferFloat: true, EXTColorBufferHalfFloat: true, EXTDisjointTimerQuery: true, EXTDisjointTimerQueryWebGL2: true, EXTFragDepth: true, EXT_frag_depth: true, EXTShaderTextureLOD: true, EXT_shader_texture_lod: true, EXTTextureFilterAnisotropic: true, EXT_texture_filter_anisotropic: true, WebGLFramebuffer: true, WebGLGetBufferSubDataAsync: true, WebGLLoseContext: true, WebGLExtensionLoseContext: true, WEBGL_lose_context: true, OESElementIndexUint: true, OES_element_index_uint: true, OESStandardDerivatives: true, OES_standard_derivatives: true, OESTextureFloat: true, OES_texture_float: true, OESTextureFloatLinear: true, OES_texture_float_linear: true, OESTextureHalfFloat: true, OES_texture_half_float: true, OESTextureHalfFloatLinear: true, OES_texture_half_float_linear: true, OESVertexArrayObject: true, OES_vertex_array_object: true, WebGLProgram: true, WebGLQuery: true, WebGLRenderbuffer: true, WebGLRenderingContext: true, WebGL2RenderingContext: true, WebGLSampler: true, WebGLShader: true, WebGLShaderPrecisionFormat: true, WebGLSync: true, WebGLTexture: true, WebGLTimerQueryEXT: true, WebGLTransformFeedback: true, WebGLUniformLocation: true, WebGLVertexArrayObject: true, WebGLVertexArrayObjectOES: true, WebGL2RenderingContextBase: true, ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false, HTMLAudioElement: true, HTMLBRElement: true, HTMLBaseElement: true, HTMLBodyElement: true, HTMLButtonElement: true, HTMLCanvasElement: true, HTMLContentElement: true, HTMLDListElement: true, HTMLDataElement: true, HTMLDataListElement: true, HTMLDetailsElement: true, HTMLDialogElement: true, HTMLDivElement: true, HTMLEmbedElement: true, HTMLFieldSetElement: true, HTMLHRElement: true, HTMLHeadElement: true, HTMLHeadingElement: true, HTMLHtmlElement: true, HTMLIFrameElement: true, HTMLImageElement: true, HTMLInputElement: true, HTMLLIElement: true, HTMLLabelElement: true, HTMLLegendElement: true, HTMLLinkElement: true, HTMLMapElement: true, HTMLMediaElement: true, HTMLMenuElement: true, HTMLMetaElement: true, HTMLMeterElement: true, HTMLModElement: true, HTMLOListElement: true, HTMLObjectElement: true, HTMLOptGroupElement: true, HTMLOptionElement: true, HTMLOutputElement: true, HTMLParagraphElement: true, HTMLParamElement: true, HTMLPictureElement: true, HTMLPreElement: true, HTMLProgressElement: true, HTMLQuoteElement: true, HTMLScriptElement: true, HTMLShadowElement: true, HTMLSlotElement: true, HTMLSourceElement: true, HTMLSpanElement: true, HTMLStyleElement: true, HTMLTableCaptionElement: true, HTMLTableCellElement: true, HTMLTableDataCellElement: true, HTMLTableHeaderCellElement: true, HTMLTableColElement: true, HTMLTableElement: true, HTMLTableRowElement: true, HTMLTableSectionElement: true, HTMLTemplateElement: true, HTMLTextAreaElement: true, HTMLTimeElement: true, HTMLTitleElement: true, HTMLTrackElement: true, HTMLUListElement: true, HTMLUnknownElement: true, HTMLVideoElement: true, HTMLDirectoryElement: true, HTMLFontElement: true, HTMLFrameElement: true, HTMLFrameSetElement: true, HTMLMarqueeElement: true, HTMLElement: false, AccessibleNodeList: true, HTMLAnchorElement: true, HTMLAreaElement: true, Blob: false, CDATASection: true, CharacterData: true, Comment: true, ProcessingInstruction: true, Text: true, CSSPerspective: true, CSSCharsetRule: true, CSSConditionRule: true, CSSFontFaceRule: true, CSSGroupingRule: true, CSSImportRule: true, CSSKeyframeRule: true, MozCSSKeyframeRule: true, WebKitCSSKeyframeRule: true, CSSKeyframesRule: true, MozCSSKeyframesRule: true, WebKitCSSKeyframesRule: true, CSSMediaRule: true, CSSNamespaceRule: true, CSSPageRule: true, CSSRule: true, CSSStyleRule: true, CSSSupportsRule: true, CSSViewportRule: true, CSSStyleDeclaration: true, MSStyleCSSProperties: true, CSS2Properties: true, CSSImageValue: true, CSSKeywordValue: true, CSSNumericValue: true, CSSPositionValue: true, CSSResourceValue: true, CSSUnitValue: true, CSSURLImageValue: true, CSSStyleValue: false, CSSMatrixComponent: true, CSSRotation: true, CSSScale: true, CSSSkew: true, CSSTranslation: true, CSSTransformComponent: false, CSSTransformValue: true, CSSUnparsedValue: true, DataTransferItemList: true, DOMException: true, ClientRectList: true, DOMRectList: true, DOMRectReadOnly: false, DOMStringList: true, DOMTokenList: true, MathMLElement: true, SVGAElement: true, SVGAnimateElement: true, SVGAnimateMotionElement: true, SVGAnimateTransformElement: true, SVGAnimationElement: true, SVGCircleElement: true, SVGClipPathElement: true, SVGDefsElement: true, SVGDescElement: true, SVGDiscardElement: true, SVGEllipseElement: true, SVGFEBlendElement: true, SVGFEColorMatrixElement: true, SVGFEComponentTransferElement: true, SVGFECompositeElement: true, SVGFEConvolveMatrixElement: true, SVGFEDiffuseLightingElement: true, SVGFEDisplacementMapElement: true, SVGFEDistantLightElement: true, SVGFEFloodElement: true, SVGFEFuncAElement: true, SVGFEFuncBElement: true, SVGFEFuncGElement: true, SVGFEFuncRElement: true, SVGFEGaussianBlurElement: true, SVGFEImageElement: true, SVGFEMergeElement: true, SVGFEMergeNodeElement: true, SVGFEMorphologyElement: true, SVGFEOffsetElement: true, SVGFEPointLightElement: true, SVGFESpecularLightingElement: true, SVGFESpotLightElement: true, SVGFETileElement: true, SVGFETurbulenceElement: true, SVGFilterElement: true, SVGForeignObjectElement: true, SVGGElement: true, SVGGeometryElement: true, SVGGraphicsElement: true, SVGImageElement: true, SVGLineElement: true, SVGLinearGradientElement: true, SVGMarkerElement: true, SVGMaskElement: true, SVGMetadataElement: true, SVGPathElement: true, SVGPatternElement: true, SVGPolygonElement: true, SVGPolylineElement: true, SVGRadialGradientElement: true, SVGRectElement: true, SVGScriptElement: true, SVGSetElement: true, SVGStopElement: true, SVGStyleElement: true, SVGElement: true, SVGSVGElement: true, SVGSwitchElement: true, SVGSymbolElement: true, SVGTSpanElement: true, SVGTextContentElement: true, SVGTextElement: true, SVGTextPathElement: true, SVGTextPositioningElement: true, SVGTitleElement: true, SVGUseElement: true, SVGViewElement: true, SVGGradientElement: true, SVGComponentTransferFunctionElement: true, SVGFEDropShadowElement: true, SVGMPathElement: true, Element: false, AbsoluteOrientationSensor: true, Accelerometer: true, AccessibleNode: true, AmbientLightSensor: true, Animation: true, ApplicationCache: true, DOMApplicationCache: true, OfflineResourceList: true, BackgroundFetchRegistration: true, BatteryManager: true, BroadcastChannel: true, CanvasCaptureMediaStreamTrack: true, DedicatedWorkerGlobalScope: true, EventSource: true, FileReader: true, FontFaceSet: true, Gyroscope: true, XMLHttpRequest: true, XMLHttpRequestEventTarget: true, XMLHttpRequestUpload: true, LinearAccelerationSensor: true, Magnetometer: true, MediaDevices: true, MediaKeySession: true, MediaQueryList: true, MediaRecorder: true, MediaSource: true, MediaStream: true, MediaStreamTrack: true, MessagePort: true, MIDIAccess: true, MIDIInput: true, MIDIOutput: true, MIDIPort: true, NetworkInformation: true, Notification: true, OffscreenCanvas: true, OrientationSensor: true, PaymentRequest: true, Performance: true, PermissionStatus: true, PresentationAvailability: true, PresentationConnection: true, PresentationConnectionList: true, PresentationRequest: true, RelativeOrientationSensor: true, RemotePlayback: true, RTCDataChannel: true, DataChannel: true, RTCDTMFSender: true, RTCPeerConnection: true, webkitRTCPeerConnection: true, mozRTCPeerConnection: true, ScreenOrientation: true, Sensor: true, ServiceWorker: true, ServiceWorkerContainer: true, ServiceWorkerGlobalScope: true, ServiceWorkerRegistration: true, SharedWorker: true, SharedWorkerGlobalScope: true, SpeechRecognition: true, webkitSpeechRecognition: true, SpeechSynthesis: true, SpeechSynthesisUtterance: true, VR: true, VRDevice: true, VRDisplay: true, VRSession: true, VisualViewport: true, WebSocket: true, Window: true, DOMWindow: true, Worker: true, WorkerGlobalScope: true, WorkerPerformance: true, BluetoothDevice: true, BluetoothRemoteGATTCharacteristic: true, Clipboard: true, MojoInterfaceInterceptor: true, USB: true, IDBDatabase: true, IDBOpenDBRequest: true, IDBVersionChangeRequest: true, IDBRequest: true, IDBTransaction: true, AnalyserNode: true, RealtimeAnalyserNode: true, AudioBufferSourceNode: true, AudioDestinationNode: true, AudioNode: true, AudioScheduledSourceNode: true, AudioWorkletNode: true, BiquadFilterNode: true, ChannelMergerNode: true, AudioChannelMerger: true, ChannelSplitterNode: true, AudioChannelSplitter: true, ConstantSourceNode: true, ConvolverNode: true, DelayNode: true, DynamicsCompressorNode: true, GainNode: true, AudioGainNode: true, IIRFilterNode: true, MediaElementAudioSourceNode: true, MediaStreamAudioDestinationNode: true, MediaStreamAudioSourceNode: true, OscillatorNode: true, Oscillator: true, PannerNode: true, AudioPannerNode: true, webkitAudioPannerNode: true, ScriptProcessorNode: true, JavaScriptAudioNode: true, StereoPannerNode: true, WaveShaperNode: true, EventTarget: false, File: true, FileList: true, FileWriter: true, HTMLFormElement: true, Gamepad: true, History: true, HTMLCollection: true, HTMLFormControlsCollection: true, HTMLOptionsCollection: true, Location: true, MediaList: true, MIDIInputMap: true, MIDIOutputMap: true, MimeType: true, MimeTypeArray: true, Document: true, DocumentFragment: true, HTMLDocument: true, ShadowRoot: true, XMLDocument: true, Attr: true, DocumentType: true, Node: false, NodeList: true, RadioNodeList: true, Plugin: true, PluginArray: true, RTCStatsReport: true, HTMLSelectElement: true, SourceBuffer: true, SourceBufferList: true, SpeechGrammar: true, SpeechGrammarList: true, SpeechRecognitionResult: true, Storage: true, CSSStyleSheet: true, StyleSheet: true, TextTrack: true, TextTrackCue: true, VTTCue: true, TextTrackCueList: true, TextTrackList: true, TimeRanges: true, Touch: true, TouchList: true, TrackDefaultList: true, URL: true, VideoTrackList: true, CSSRuleList: true, ClientRect: true, DOMRect: true, GamepadList: true, NamedNodeMap: true, MozNamedAttrMap: true, SpeechRecognitionResultList: true, StyleSheetList: true, SVGLength: true, SVGLengthList: true, SVGNumber: true, SVGNumberList: true, SVGPointList: true, SVGStringList: true, SVGTransform: true, SVGTransformList: true, AudioBuffer: true, AudioParamMap: true, AudioTrackList: true, AudioContext: true, webkitAudioContext: true, BaseAudioContext: false, OfflineAudioContext: true});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
    A._SourceBufferList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._SourceBufferList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin.$nativeSuperclassTag = "EventTarget";
    A._TextTrackList_EventTarget_ListMixin_ImmutableListMixin.$nativeSuperclassTag = "EventTarget";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2$0 = function() {
    return this();
  };
  Function.prototype.call$1$0 = function() {
    return this();
  };
  Function.prototype.call$2$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$1$2 = function(a, b) {
    return this(a, b);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();
